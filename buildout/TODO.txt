 - global build requirement checker
   - needs recipe
   - needs per profile dependency declaration
 - implement declared parts (*/buildout.cfg empty)
 - merge from:
  - https://svn.erp5.org/repos/public/experimental/erp5.buildout-zope-2.12/
 - use more of buildout automatic dependency resolution
 - software-profiles/python-2.4.cfg:
   - celementtree (https://svn.erp5.org/repos/public/spec/mandriva/python2.4-celementtree/)
   - mechanize (https://svn.erp5.org/repos/public/spec/mandriva/python2.4-mechanize/)
   - numeric (https://svn.erp5.org/repos/public/spec/mandriva/python2.4-numeric/)
   - paramiko (https://svn.erp5.org/repos/public/spec/mandriva/python2.4-paramiko/)
   - ply (https://svn.erp5.org/repos/public/spec/mandriva/python2.4-ply/)
   - pyxml (https://svn.erp5.org/repos/public/spec/mandriva/python2.4-pyxml/)
   - socksipy (http://socksipy.sourceforge.net/)
   - make bin/python2.4 using all available eggs
 - software-profiles/openoffice-bin.cfg:
   - consider using own recipe or zorg.recipe.openoffice, which would be
     closer to buildout usage (internal cache, etc)
 - add bin/ and var/bin/ to path
 - if software do not provide instance, put its binaries to bin/
 - use declarative way of selecting in-buildout dependencies
     For example mysql-python egg is build against locally built mysql, but
     version of mysql is hardcoded in mysql-python egg part.
 - have all eggs available as software, but use them selectively in instances
 - convert all ERP5 products into eggs, but allow in development profile to
   have them locally editable and commitable (develop)
 - binaries generated by software buildout shall have precedence in PATH in
   software *and* instance buildouts
 - make eggs defined with standalone instance recipe inside instance instead
   of globally for buildout
 - create software-profiles/apache-ssl.cfg to build ssl setup into apache.
