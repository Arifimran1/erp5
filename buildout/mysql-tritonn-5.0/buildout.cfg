# This is software part of buildout for mysql with senna
# Originally made by Leonardo Rochael Almeida <leorochael@gmail.com> (thanks!)
# Original place: https://svn.erp5.org/repos/public/experimental/mysqlsenna.buildout/

[buildout]
parts =
    mysql-tritonn-5.0

[senna]
recipe = hexagonit.recipe.cmmi
url = http://sourceforge.jp/frs/redir.php?m=jaist&f=%2Fsenna%2F33763%2Fsenna-1.1.4.tar.gz
configure-options = --without-mecab --enable-nfkc=no

[tritonn-patch]
recipe = hexagonit.recipe.download
patch = tritonn-1.0.12-mysql-5.0.87.diff
url = http://dl.sourceforge.jp/tritonn/44472/${:patch}
download-only = true

[mysql-tritonn-5.0]
recipe = hexagonit.recipe.cmmi
url = http://downloads.mysql.com/archives/mysql-5.0/mysql-5.0.87.tar.gz
pre-configure-hook = ${buildout:directory}/mysql-tritonn-5.0/src/mysql_hooks.py:pre_configure_hook
post-make-hook = ${buildout:directory}/mysql-tritonn-5.0/src/mysql_hooks.py:post_make_hook
# configure: how to avoid searching for my.cnf? 
configure-options =
  --with-senna
  --without-mecab
  --enable-thread-safe-client
  --with-charset=utf8
  --with-collation=utf8_unicode_ci
  --with-server-suffix=mysql-tritonn-5.0

patch-options = -p1
patches = ${tritonn-patch:location}/${tritonn-patch:patch}
environment =
    PATH =${senna:location}/bin:%(PATH)s
    CFLAGS =-I${senna:location}/include
    CXXFLAGS =-I${senna:location}/include
    LDLAGS =-L${senna:location}/lib

[mysql-binaries]
# another approach - software buildout provides easily accessible binaries
recipe = plone.recipe.command
command =
  ln -sf ${software_definition:mysql_software}/bin/mysql ${buildout:directory}/bin/mysql
  ln -sf ${software_definition:mysql_software}/bin/mysqladmin ${buildout:directory}/bin/mysqladmin
  ln -sf ${software_definition:mysql_software}/bin/mysqld_safe ${buildout:directory}/bin/mysqld_safe

[requirements]
binary = flex bison patch gcc g++
development = /usr/include/termcap.h /usr/include/curses.h
