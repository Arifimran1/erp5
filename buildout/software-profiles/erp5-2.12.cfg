# XXX refactor parts shared with erp5.cfg into a common file
[buildout]
extends =
  mysql-tritonn-5.0.cfg
  python-2.6.cfg

parts =
  itools-build
  mysql-python
  products-other
  products-deps
  products-erp5

develop +=
	${:software_home}/local-eggs/Products.DCWorkflow
# The patched Acquisition
	${:software_home}/local-eggs/Acquisition

# ugly itools building sections until itools and setuptools learn to get
# along:

[itools]
# This part should not contain contain dependencies to other parts and should
# contain only paths relative to software_home as it will be used directly by
# instances. It should probably be moved to a .cfg file inside
# "instance-profiles"
pkgname = itools-0.50.8
location = ${buildout:software_home}/parts/itools
lib = ${:location}/lib
source = ${:location}/src

[itools-download]
recipe = hexagonit.recipe.download
strip-top-level-dir = true
url = http://download.hforge.org/itools/0.50/${itools:pkgname}.tar.gz
md5sum = 12704cc354e2201e0921a832bf6b1556
destination = ${itools:source}

[itools-build]
recipe = collective.recipe.cmd
on_install = True
on_update = True
# reference itools-download:destination instead of itools:source to trigger its
# execution
cmds =
    cd ${itools-download:destination}
    env CFLAGS="$(pkg-config glib-2.0 --cflags-only-I)" ${python2.6:executable} setup.py install_lib -d ${itools:lib}

uninstall_cmds =
    cd ${itools-download:destination}
    ${python2.6:executable} setup.py clean
    rm -rf ${itools:lib}

[mysql-python-env]
PATH =${software_definition:mysql_software}/bin:%(PATH)s

[mysql-python]
recipe = zc.recipe.egg:custom
egg = MySQL-python
environment = mysql-python-env
rpath =${software_definition:mysql_software}/lib/mysql/

[products-deps]
recipe = minitage.recipe.fetch
urls =
	git://git.hforge.org/Localizer.git|git|| Localizer
    https://svn.plone.org/svn/collective/ExtFile/trunk|svn|| ExtFile

[products]
recipe = plone.recipe.command
paths =
	${products-deps:location}
command =
  echo "Product folders: ${:paths}"
update-command = ${:command}

[eggs]
recipe = zc.recipe.egg
eggs =
  ${mysql-python:egg}
  PyXML
  SOAPpy
  cElementTree
  elementtree
  erp5diff
  ipdb
  lxml
  xml_marshaller
  xupdate_processor
  mechanize
  numpy
  paramiko
  ply
  pysvn
  python-ldap
  python-memcached
  pytz
  simplejson
  threadframe
  timerserver
  uuid

# Zope 2.12 with patched acquisition
  Zope2
  Acquisition

# Other Zope 2 packages
  Products.PluggableAuthService
  Products.PluginRegistry

# CMF 2.2
  Products.CMFActionIcons
  Products.CMFCalendar
  Products.CMFCore
  Products.CMFDefault
  Products.CMFTopic
  Products.CMFUid
  Products.DCWorkflow
  Products.GenericSetup
  five.localsitemanager

# Other products
    Products.DCWorkflowGraph
    Products.MimetypesRegistry
    Products.ExternalEditor
    Products.Zelenium

# Currently forked in our repository
#    Products.PortalTransforms
# Dependency for our fork of PortalTransforms
    StructuredText

extra-paths =
  ${itools:lib}

dependent-scripts = true
# XXX getting python from [buildout] for the benefit of instance recipes
# which should not attempt to compile python again
#python = python2.6

# parameterizing the version of the generated python interpreter name by the
# python section version causes dependency between this egg section and the
# installation of python, which we don't want on an instance
interpreter = python2.6
scripts =
	python=${:interpreter}
	ipython=i${:interpreter}

[precache-eggs]
# recipe to populate the egg cache during software-home build, so instances can
# run in offline mode. Hence, no scripts
recipe = zc.recipe.egg
scripts =
eggs =
  collective.recipe.supervisor
  collective.recipe.template
  plone.recipe.command
  plone.recipe.zope2instance
  erp5.recipe.testrunner
  supervisor

[omelette]
# XXX don't use this part until this omelette bug is fixed:
# https://bugs.launchpad.net/collective.buildout/+bug/553005
recipe = collective.recipe.omelette
eggs = ${eggs:eggs}
packages =
      ${itools:lib} .
products =
    ${products:paths}

[business-templates]
recipe = plone.recipe.command
# comma separated list for the benefit of [runUnitTest]
paths = ${bt5-erp5-core:location},${bt5-erp5:location},${bt5-erp5-extra:location},${bt5-erp5-test:location}
command =
  echo "Business Template Paths: ${:paths}"
update-command = ${:command}
