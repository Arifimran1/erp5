#!/usr/bin/python

import smtplib
import re
from datetime import date
from email.MIMEText import MIMEText
from email.MIMEBase import MIMEBase

# Here are the email pacakge modules we'll need
from email.MIMEImage import MIMEImage
from email.MIMEMultipart import MIMEMultipart


COMMASPACE    = ', '
USER          = 'seb'
ZOPE_INSTANCE = '/home/%s/zope' % USER

subject   = 'ERP5 Unit Test'
from_mail = 'seb@nexedi.com'
to_mail   = [ 'erp5-report@nexedi.com'
            # , 'seb@nexedi.com'
            ,
            ]


test_msg = file("%s/Products/test_output" % (ZOPE_INSTANCE),'r').read()
test_msg = "Date : %s\n\n" % date.today().isoformat() + test_msg

# minimal parsing 
revision_re = re.compile('Revision: (?P<revision>\d+)')
ran_test_re = re.compile('Ran (?P<tests>\d+) tests')
errors_re = re.compile('FAILED \((failures=(?P<failures>\d+))*[, ]*'\
                       '(errors=(?P<errors>\d+))*\)')
svn_revision = "?"
test_runs = 0
errors = 0
failures = 0
for test_line in test_msg.splitlines():
  revision = revision_re.match(test_line)
  if revision:
    svn_revision = revision.groupdict()['revision']
  ran = ran_test_re.match(test_line)
  if ran:
    test_runs += int(ran.groupdict()['tests'])
  errors_or_failures = errors_re.match(test_line)
  if errors_or_failures:
    failures += int(errors_or_failures.groupdict()['failures'] or 0)
    errors += int(errors_or_failures.groupdict()['errors'] or 0)

subject = "ERP5 r%s: %s Tests, %s Errors, %s Failures" % (
                                  svn_revision, test_runs, errors, failures)

msg = MIMEMultipart()
msg['Subject'] = subject
msg['From']    = from_mail
msg['To']      = COMMASPACE.join(to_mail)

# Guarantees the message ends in a newline
msg.preamble = subject
msg.epilogue = ''
file_content = file("%s/Products/test_full_output" %
                    (ZOPE_INSTANCE),'r').read()

mime_text = MIMEText(test_msg)
mime_text.add_header('Content-Disposition', 'attachment',
                     filename='test_output')
msg.attach(mime_text)
mime_text = MIMEText(file_content)
mime_text.add_header('Content-Disposition', 'attachment',
                     filename='test_full_output')
msg.attach(mime_text)

# Send the email via our own SMTP server.
s = smtplib.SMTP()
s.connect()
s.sendmail(from_mail, to_mail, msg.as_string())
s.close()
