<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<tal:block xmlns:tal="http://xml.zope.org/namespaces/tal"\n
           xmlns:metal="http://xml.zope.org/namespaces/metal"\n
           xmlns:i18n="http://xml.zope.org/namespaces/i18n">\n
  <tal:block tal:define="title string:${template/title_or_id} - ${here/Title}">\n
    <tal:block  metal:use-macro="here/view_main/macros/master">\n
      <tal:block metal:fill-slot="main">\n
        <tal:block metal:use-macro="here/form_render/macros/master" />\n
        <tal:block tal:define="portal_object here/getPortalObject;\n
                               report_item_list python:[]">\n
          <tal:block tal:condition="python: form.meta_type == \'ERP5 Report\'">\n
            <tal:block tal:define="dummy python: report_item_list.extend(report_method())" />\n
          </tal:block>\n
          <tal:block tal:condition="python: form.meta_type == \'ERP5 Form\'">\n
            <tal:block tal:repeat="reportbox python: [field for field in form.get_fields()\n
                                                      if field.getRecursiveTemplateField().meta_type == \'ReportBox\']">\n
              <tal:block tal:define="dummy python: report_item_list.extend(reportbox.render())" />\n
            </tal:block>\n
          </tal:block>\n
          <tal:block tal:repeat="report_item report_item_list">\n
            <tal:block tal:define="here python: report_item.getObject(portal_object);\n
                                   render_prefix python: \'x%s\' % (repeat[\'report_item\'].index, );\n
                                   dummy python: report_item.pushReport(portal_object, render_prefix=render_prefix)">\n
              <span tal:condition="report_item/getTitle"\n
                    tal:content="report_item/getTitle"\n
                    tal:attributes="class string:report_title_level_${report_item/getLevel}" />\n
              <tal:block tal:condition="report_item/getFormId">\n
                <tal:block tal:define="form python:getattr(here,report_item.getFormId())" >\n
                  <tal:block metal:use-macro="here/form_render/macros/master" />\n
                </tal:block>\n
              </tal:block>\n
              <tal:block tal:define="dummy python:report_item.popReport(portal_object, render_prefix=render_prefix)" />\n
            </tal:block>\n
          </tal:block>\n
        </tal:block>\n
      </tal:block>\n
    </tal:block>\n
  </tal:block>\n
</tal:block>\n


]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>report_view</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>utf-8</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <unicode></unicode> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
