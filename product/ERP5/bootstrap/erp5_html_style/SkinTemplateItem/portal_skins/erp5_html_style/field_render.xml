<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PageTemplates.ZopePageTemplate</string>
          <string>ZopePageTemplate</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<tal:block metal:define-macro="field_render">\n
  <tal:block tal:define="value python:request.get(field.id, None)">\n
    <tal:block tal:define="html_render python: field.render_htmlgrid(value, request)">\n
      <tal:block tal:condition="python:field.meta_type != \'HiddenStringField\'">\n
        <tal:repeat repeat="html_tuple html_render">\n
          <tr tal:attributes="title python: context.Localizer.translate(\'erp5_ui\', context.Base_getFieldDescription(field))">\n
            <td tal:content="structure python: html_tuple[0]"\n
                tal:attributes="class python: \n
                             {0: {0: None, 1: \'required\'},\n
                              1: {0: \'error\', 1: \'reqerror\'}}[field_errors.has_key(field.id)][field.is_required()]"\n
                i18n:translate="" i18n:domain="ui" />\n
            <td>\n
              <tal:block metal:use-macro="context/form_developper_buttons/macros/field"/>\n
            </td>\n
            <td>\n
              <tal:block tal:replace="structure python: html_tuple[1]" />\n
            </td>\n
          </tr>\n
        </tal:repeat>\n
      </tal:block>\n
      <tr tal:condition="python: field_errors.has_key(field.id)">\n
        <td />\n
        <td tal:content="python:field_errors[field.id].error_text"\n
            i18n:translate="" i18n:domain="ui"\n
            class="error" />\n
      </tr>\n
    </tal:block>\n
  </tal:block>\n
</tal:block>

]]></string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>field_render</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
