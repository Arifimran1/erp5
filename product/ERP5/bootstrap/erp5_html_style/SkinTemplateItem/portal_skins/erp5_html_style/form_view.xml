<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PageTemplates.ZopePageTemplate</string>
          <string>ZopePageTemplate</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<!--\n
Copyright (c) 2002 Nexedi SARL and Contributors. All Rights Reserved.\n
                   Thierry Faucher     <tf@nexedi.com>\n
\n
This program is Free Software; you can redistribute it and/or\n
modify it under the terms of the GNU General Public License\n
as published by the Free Software Foundation; either version 2\n
of the License, or (at your option) any later version.\n
\n
This program is distributed in the hope that it will be useful,\n
but WITHOUT ANY WARRANTY; without even the implied warranty of\n
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n
GNU General Public License for more details.\n
\n
You should have received a copy of the GNU General Public License\n
along with this program; if not, write to the Free Software\n
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n
-->\n
<tal:block tal:define="layout_form_id here/getApplicableLayout | nothing;\n
                       ignore_layout request/ignore_layout | nothing;\n
                       editable_mode request/editable_mode | nothing;\n
                       global layout_form python:(not layout_form_id or ignore_layout) or getattr(here, layout_form_id, None);\n
                       default_layout string:view_master;\n
                       layout_id layout_form/pt | default_layout;">\n
<tal:block metal:use-macro="python:getattr(here,layout_id).macros[\'master\']">\n
  <tal:block metal:fill-slot="main">\n
    <tal:block metal:define-macro="form_render">\n
      <tal:block tal:define="field_errors python: request.get(\'field_errors\',{});\n
                             dummy python: request.set(\'here\',here)"\n
                 tal:condition="python: layout_form_id and not ignore_layout">\n
        <tal:block tal:condition="not: editable_mode" tal:repeat="group python: form.get_groups()">\n
          <div tal:attributes="class group/lower" tal:condition="python: group.find(\'content\') >= 0">\n
            <tal:block tal:condition="python: \'hidden\' not in group.lower()" tal:repeat="field python:form.get_fields_in_group(group)">\n
              <tal:block tal:replace="structure python: field.render(None, request)"/>\n
            </tal:block>\n
          </div>\n
        </tal:block>\n
        <tal:block tal:condition="editable_mode" tal:repeat="group python: form.get_groups()">\n
          <fieldset tal:condition="python: \'hidden\' not in group.lower()">\n
            <legend tal:content="group"></legend>\n
            <table tal:condition="python: \'content\' not in group.lower() and \'bottom\' not in group.lower()">\n
              <tal:block tal:repeat="field python:form.get_fields_in_group(group)">\n
                <tal:block metal:use-macro="here/field_render/macros/field_render"/>\n
              </tal:block>\n
            </table>\n
            <tal:block tal:condition="python: \'content\' in group.lower() or \'bottom\' in group.lower()"\n
              tal:repeat="field python:form.get_fields_in_group(group)">\n
              <tal:block tal:define="value python:request.get(field.id, None)"\n
               tal:replace="structure python:field.render(value, request)" />\n
            </tal:block>\n
          </fieldset>\n
        </tal:block>\n
      </tal:block>\n
      <tal:block tal:condition="python: not layout_form_id or ignore_layout">\n
        <tal:block metal:define-macro="form_layout">\n
          <div class="Main" tal:define="field_errors python: request.get(\'field_errors\',{});\n
                                        dummy python: request.set(\'here\',here)">\n
            <tal:block tal:define="groups python: form.get_groups();\n
                                    rows python:[];">\n
              <tal:block tal:repeat="group groups">\n
                <tal:block tal:condition="python: not (\'right\' in group.lower()) or\n
                                                  len(rows)==0">\n
                  <tal:block tal:define="dummy python: rows.append([])"/>\n
                </tal:block>\n
                <tal:block tal:condition="python: len(rows[-1])>1">\n
                  <tal:block tal:define="dummy python: rows.append([])"/>\n
                </tal:block>\n
                <tal:block tal:condition="python: \'hidden\' not in group.lower()">\n
                  <tal:block tal:define="dummy python: rows[-1].append(repeat[\'group\'].index)"/>\n
                </tal:block>\n
              </tal:block>\n
              <tal:block tal:repeat="row rows">\n
                <tal:block tal:condition="python: len(row)>0">\n
                  <tal:block tal:condition="python: \'bottom\' not in groups[row[0]].lower()">\n
                    <table width="100%" class="Border">\n
                      <tr>\n
                        <td tal:repeat="cell row" valign="top">\n
                          <table width="100%">\n
                            <tal:block tal:repeat="field python:form.get_fields_in_group(groups[cell])">\n
                              <tal:block metal:use-macro="here/field_render/macros/field_render"/>\n
                            </tal:block>\n
                          </table>\n
                        </td>\n
                      </tr>\n
                    </table>\n
                  </tal:block>\n
                  <tal:block tal:condition="python: \'bottom\' in groups[row[0]].lower()">\n
                    <tal:block tal:repeat="cell row">\n
                      <tal:block tal:repeat="field python:form.get_fields_in_group(groups[cell])">\n
                        <tal:block tal:define="value python:request.get(field.id, None)"\n
                         tal:replace="structure python:field.render(value, request)" />\n
                      </tal:block>\n
                    </tal:block>\n
                  </tal:block>\n
                </tal:block>\n
              </tal:block>\n
            </tal:block>\n
          </div>\n
        </tal:block>\n
      </tal:block>\n
    </tal:block>\n
  </tal:block>\n
</tal:block>\n
</tal:block>

]]></string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>form_view</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
