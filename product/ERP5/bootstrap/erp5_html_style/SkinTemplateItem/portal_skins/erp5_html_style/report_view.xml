<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PageTemplates.ZopePageTemplate</string>
          <string>ZopePageTemplate</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "DTD/xhtml1-strict.dtd">\n
<tal:block tal:replace="nothing">\n
<!--\n
Copyright (c) 2002 Nexedi SARL and Contributors. All Rights Reserved.\n
                   Jean-Paul Smets     <jp@nexedi.com>\n
                   Thierry Faucher     <tf@nexedi.com>\n
\n
This program is Free Software; you can redistribute it and/or\n
modify it under the terms of the GNU General Public License\n
as published by the Free Software Foundation; either version 2\n
of the License, or (at your option) any later version.\n
\n
This program is distributed in the hope that it will be useful,\n
but WITHOUT ANY WARRANTY; without even the implied warranty of\n
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n
GNU General Public License for more details.\n
\n
You should have received a copy of the GNU General Public License\n
along with this program; if not, write to the Free Software\n
Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n
-->\n
</tal:block>\n
\n
<tal:block tal:define="layout_form_id here/getApplicableLayout | nothing;\n
                       ignore_layout  request/ignore_layout | nothing;\n
                       editable_mode  request/editable_mode | nothing;\n
                       global         layout_form python:(not layout_form_id or ignore_layout) or getattr(here, layout_form_id, None);\n
                       default_layout string:view_master;\n
                       layout_id      layout_form/pt | default_layout;">\n
\n
<tal:block metal:use-macro="python: getattr(here,layout_id).macros[\'master\']">\n
  <tal:block metal:fill-slot="main">\n
    <div tal:attributes="class python: editable_mode and \'fieldgroup\' or \'Main\'">\n
      <tal:block tal:define="groups       python: form.get_groups(include_empty=1);\n
                             field_errors python: request.get(\'field_errors\',{});\n
                             dummy        python: request.set(\'here\',here)">\n
        <table class="Border" width="100%" tal:condition="python: len(form.get_fields_in_group(groups[0])) > 0\n
                                                          or len(form.get_fields_in_group(groups[1])) > 0">\n
          <tr>\n
            <td valign="top">\n
              <table>\n
                <tal:block tal:repeat="field python:form.get_fields_in_group(groups[0])">\n
                  <tr tal:condition="python:field.meta_type != \'HiddenStringField\'">\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: field_errors.has_key(field.id)\n
                                       and not field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="error"/>\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: (not field_errors.has_key(field.id))\n
                                       and not field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"/>\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: field_errors.has_key(field.id)\n
                                       and field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="reqerror"/>\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: (not field_errors.has_key(field.id))\n
                                       and field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="required"/>\n
                    <td tal:define="value python:request.get(field.id,None)"\n
                        tal:content="structure python:field.render(value,request)"/>\n
                  </tr>\n
                  <tr tal:condition="python: field_errors.has_key(field.id)">\n
                    <td></td>\n
                    <td tal:content="python:field_errors[field.id].error_text"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="error"/>\n
                  </tr>\n
                </tal:block>\n
              </table>\n
            </td>\n
            <td valign="top" tal:condition="python: len(groups)>1">\n
              <table>\n
                <tal:block tal:repeat="field python:form.get_fields_in_group(groups[1])">\n
                  <tr tal:condition="python:field.meta_type != \'HiddenStringField\'">\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: field_errors.has_key(field.id)\n
                                and not field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="error"/>\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: (not field_errors.has_key(field.id))\n
                                and not field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"/>\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: field_errors.has_key(field.id)\n
                                and field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="reqerror"/>\n
                    <td tal:content="structure field/title"\n
                        tal:condition="python: (not field_errors.has_key(field.id))\n
                                and field.is_required()"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="required"/>\n
                    <td tal:define="value python:request.get(field.id,None)"\n
                        tal:content="structure python:field.render(value,request)"/>\n
                  </tr>\n
                  <tr tal:condition="python: field_errors.has_key(field.id)">\n
                    <td>\n
                    </td>\n
                    <td tal:content="python: field_errors[field.id].error_text"\n
                        i18n:translate="" i18n:domain="ui"\n
                        class="error"/>\n
                  </tr>\n
                </tal:block>\n
              </table>\n
            </td>\n
          </tr>\n
        </table>\n
\n
        <table class="Border" tal:condition="python: len(groups) > 2 and len(form.get_fields_in_group(groups[2])) > 0">\n
          <tal:block tal:repeat="field python:form.get_fields_in_group(groups[2])">\n
            <tr tal:condition="python:field.meta_type != \'HiddenStringField\'">\n
              <td tal:content="structure field/title"\n
                  tal:condition="python: field_errors.has_key(field.id)\n
                                         and not field.is_required()"\n
                  i18n:translate="" i18n:domain="ui"\n
                  class="error"/>\n
              <td tal:content="structure field/title"\n
                  tal:condition="python: (not field_errors.has_key(field.id))\n
                                         and not field.is_required()"\n
                  i18n:translate="" i18n:domain="ui"/>\n
              <td tal:content="structure field/title"\n
                  tal:condition="python: field_errors.has_key(field.id)\n
                                         and field.is_required()"\n
                  i18n:translate="" i18n:domain="ui"\n
                  class="reqerror"/>\n
              <td tal:content="structure field/title"\n
                  tal:condition="python: (not field_errors.has_key(field.id))\n
                                and field.is_required()"\n
                  i18n:translate="" i18n:domain="ui"\n
                  class="required"/>\n
              <td tal:define="value python:request.get(field.id,None)"\n
                  tal:content="structure python:field.render(value,request)"/>\n
            </tr>\n
            <tr tal:condition="python: field_errors.has_key(field.id)">\n
              <td tal:content="python: field_errors[field.id].error_text"\n
                  i18n:translate="" i18n:domain="ui"\n
                  class="error"/>\n
            </tr>\n
          </tal:block>\n
        </table>\n
\n
        <tal:block tal:condition="python: len(groups) > 3"\n
                   tal:repeat="field python: form.get_fields_in_group(groups[3])">\n
          <tal:block tal:replace="structure python: field.render(request.get(field.id, None), request)"/>\n
        </tal:block>\n
\n
      </tal:block>\n
\n
      <tal:block tal:define="portal_object here/portal_url/getPortalObject"\n
                 tal:repeat="report_item python:report_method()">\n
        <tal:block tal:define="here  python:report_item.getObject(portal_object);\n
                               dummy python:report_item.pushReport(portal_object)">\n
          <tal:block tal:condition="report_item/getFormId"\n
                     tal:define="form python:getattr(here,report_item.getFormId())">\n
            <tal:block tal:condition="python:form.pt == \'form_view\'">\n
              <tal:block metal:use-macro="form/form_view/macros/form_layout"/>\n
            </tal:block>\n
            <tal:block tal:condition="python:form.pt == \'form_list\'">\n
              <tal:block metal:use-macro="form/form_list/macros/form_layout"/>\n
            </tal:block>\n
          </tal:block>\n
          <tal:block tal:define="dummy python:report_item.popReport(portal_object)"/>\n
        </tal:block>\n
      </tal:block>\n
\n
    </div>\n
  </tal:block>\n
</tal:block>\n
</tal:block>

]]></string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>report_view</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
