<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

from Products.Formulator.Errors import ValidationError, FormValidationError\n
from ZTUtils import make_query\n
\n
request=context.REQUEST\n
\n
# We stop doing this\n
#base_category = context.getBaseCategoryId()\n
base_category = None\n
\n
o = context.portal_catalog.getObject(object_uid)\n
redirect_url = None\n
\n
if o is None:\n
  # we first try to reindex the object, thanks to the object_path\n
  o = context.restrictedTraverse(object_path)\n
  if o is not None:\n
    o.immediateReindexObject()\n
  else:\n
    return ValueError, "Sorrry, Error, the calling object was not catalogued. Do not know how to do ?"\n
\n
def checkSameKeys(a , b):\n
  """\n
    Checks if the two lists contain\n
    the same values\n
  """\n
  same = 1\n
  for ka in a:\n
    if not ka in b:\n
      same = 0\n
  for kb in b:\n
    if not kb in a:\n
      same = 0\n
  return same\n
\n
def getOrderedUids(uids, values, catalog_index):\n
  value_to_uid = {}\n
  for uid in uids:\n
    key = context.portal_catalog(uid=uid)[0].getObject().getProperty(catalog_index)\n
    value_to_uid[key] = uid\n
  uids = []\n
  for value in values:\n
    uids.append(value_to_uid[value])\n
  return uids\n
\n
  field.get_value(\'base_category\')\n
\n
try:\n
  # Validate the form\n
  form = getattr(context,form_id)\n
  form.validate_all_to_request(request)\n
  my_field = None\n
  # XXXXXXXXXXXXXXXXX\n
  # we should update data here if we want to be clever\n
  # Find out which field defines the relation\n
  for f in form.get_fields():\n
    if f.has_value( \'base_category\'):\n
        #if f.get_value(\'base_category\') == base_category:\n
        k = f.id\n
        v = getattr(request,k,None)\n
        if v in (None, \'\', \'None\', [], ()) and context.getProperty(k[3:]) in (None, \'\', \'None\', [], ()):\n
          # The old value is None and the new value is not significant\n
          # This bug fix is probably temporary since \'\' means None\n
          pass\n
        elif v != context.getProperty(k[3:]):\n
          old_value = context.getProperty(k[3:])\n
          my_field = f\n
          new_value = v\n
          base_category = f.get_value( \'base_category\')\n
  if my_field and base_category is not None:\n
    empty_list = 0\n
    if new_value == \'\':\n
      new_value = []\n
    if same_type(new_value,\'a\'):\n
      new_value = [new_value]\n
    same_keys = 0\n
    if my_field.meta_type == \'MultiRelationStringField\':\n
      # The checkProperty sometimes does not provide an\n
      # acceptable value - XXXX - see vetement_id in Modele View\n
      if old_value is \'\' or old_value is None:\n
        old_value = []\n
      try:\n
        old_value = list(old_value)\n
      except TypeError:\n
        old_value = [old_value]\n
      #return str((context.getProperty(\'vetement_id_list\'),my_field.id, new_value, old_value))\n
      if checkSameKeys(new_value, old_value):\n
        # Reorder keys\n
        same_keys = 1\n
    portal_type = map(lambda x:x[0],my_field.get_value(\'portal_type\'))\n
    # We work with strings - ie. single values\n
    kw ={}\n
    kw[my_field.get_value(\'catalog_index\')] = new_value\n
    context.portal_selections.setSelectionParamsFor(\'Base_viewRelatedObjectList\', kw.copy())\n
    kw[\'base_category\'] = base_category\n
    kw[\'portal_type\'] = portal_type\n
    request.set(\'base_category\', base_category)\n
    request.set(\'portal_type\', portal_type)\n
    request.set(my_field.get_value(\'catalog_index\'), new_value)\n
    request.set(\'field_id\', my_field.id)\n
    previous_uids = o.getValueUids(base_category, portal_type=portal_type)\n
    relation_list = context.portal_catalog(**kw)\n
    relation_uid_list = map(lambda x: x.uid, relation_list)\n
    uids = []\n
    for uid in previous_uids:\n
      if uid in relation_uid_list:\n
        uids.append(uid)\n
    context.portal_selections.setSelectionCheckedUidsFor(\'Base_viewRelatedObjectList\', uids)\n
    if len(new_value) == 0:\n
      # Clear the relation\n
      o.setValueUids(base_category,  (), portal_type=portal_type)\n
    elif same_keys:\n
      uids = getOrderedUids(uids, new_value, my_field.get_value(\'catalog_index\'))\n
      return o.Base_editRelation( form_id,\n
                                my_field.id,\n
                                selection_index,\n
                                selection_name,\n
                                uids,\n
                                object_uid,\n
                                listbox_uid=None)\n
    elif len(relation_list) > 0:\n
      # If we have only one in the list, we don\'t want to lose our time by\n
      # selecting it. So we directly do the update\n
      if len(relation_list) == 1:\n
          selection_index=None\n
          uids = [relation_list[0].uid]\n
          return o.Base_editRelation( form_id = form_id,\n
                                    field_id = my_field.id,\n
                                    selection_index = selection_index,\n
                                    selection_name = selection_name,\n
                                    uids = uids,\n
                                    object_uid = object_uid,\n
                                    listbox_uid=None)\n
      # This is just added when we want to just remove\n
      # one item inside a multiRelationField\n
      else:\n
        if len(relation_uid_list) == len(new_value):\n
          complete_value_list = []\n
          # We have to find the full value, for example instead of\n
          # /foo/ba% we should have /foo/bar\n
          for value in new_value:\n
            catalog_index = my_field.get_value(\'catalog_index\')\n
            kw[catalog_index] = value\n
            complete_value = context.portal_catalog(**kw)[0].getObject().getProperty(catalog_index)\n
            complete_value_list.append(complete_value)\n
          new_value = complete_value_list\n
          uids = getOrderedUids(relation_uid_list, new_value, my_field.get_value(\'catalog_index\'))\n
          selection_index=None\n
          return o.Base_editRelation( form_id = form_id,\n
                                    field_id = my_field.id,\n
                                    selection_index = selection_index,\n
                                    selection_name = selection_name,\n
                                    uids = uids,\n
                                    object_uid = object_uid,\n
                                    listbox_uid=None)\n
\n
      kw = {}\n
      kw[\'form_id\'] = \'Base_viewRelatedObjectList\'\n
      kw[\'selection_index\'] = selection_index\n
      kw[\'object_uid\'] = object_uid\n
      kw[\'field_id\'] = my_field.id\n
      kw[\'portal_type\'] = portal_type\n
      kw[\'base_category\'] = base_category\n
      kw[\'selection_name\'] = \'Base_viewRelatedObjectList\'\n
      kw[\'cancel_url\'] = request.get(\'HTTP_REFERER\')\n
      kw[\'previous_form_id\'] = form_id\n
      redirect_url = \'%s/%s?%s\' % ( o.absolute_url()\n
                                , \'Base_viewRelatedObjectList\'\n
                                , make_query(kw)\n
                                )\n
    else:\n
      request.set(\'catalog_index\', my_field.get_value(\'catalog_index\'))\n
      if my_field.meta_type == \'MultiRelationStringField\':\n
        request.set(\'relation_values\', request.get( my_field.id, None))\n
      else:\n
        request.set(\'relation_values\', [request.get( my_field.id, None)])\n
      request.set(\'default_module\', my_field.get_value(\'default_module\'))\n
      request.set(\'portal_type\', portal_type[0])\n
      return o.Base_viewCreateRelationDialog( REQUEST=request )\n
except FormValidationError, validation_errors:\n
  # Pack errors into the request\n
  field_errors = form.ErrorFields(validation_errors)\n
  request.set(\'field_errors\', field_errors)\n
  return form(request)\n
else:\n
  message = \'Relation+Unchanged.\'\n
\n
if redirect_url is None:\n
  if not selection_index:\n
    redirect_url = \'%s/%s?%s\' % ( o.absolute_url()\n
                              , form_id\n
                              , \'portal_status_message=%s\' % message\n
                              )\n
  else:\n
    redirect_url = \'%s/%s?selection_index=%s&selection_name=%s&%s\' % ( o.absolute_url()\n
                              , form_id\n
                              , selection_index\n
                              , selection_name\n
                              , \'portal_status_message=%s\' % message\n
                              )\n
\n
request[ \'RESPONSE\' ].redirect( redirect_url )\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value> <string encoding="base64">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
AGQsADx8AQB0JAB8JQCDAQBkLQA8fAMAdCQAfCUAgwEAZDAAPHQFAHwWAGQPAIMCAHQkAHwlAIMB
AGQjADx8JAB0JAB8JQCDAQBkHAA8fA4AdCQAfCUAgwEAZA4APGQgAHQkAHwlAIMBAGQuADx0BQB8
DABkMQCDAgBkMgCDAQB0JAB8JQCDAQBkMwA8fAAAdCQAfCUAgwEAZDQAPGQ1AHQFAHwPAGQ2AIMC
AIMAAGQgAHwJAHwlAIMBAGYDABZ9EABxqQgBdAUAfAwAZCIAgwIAZB0AdAUAfBYAZBUAgwIAZB0A
gwEAgwIAAXQFAHwWAGQYAIMCAGQZAGoCAG81AAF0BQB8DABkIgCDAgBkNwB0BQB8DABkMQCDAgB0
BQB8FgBkDwCDAgB0CACDAgCDAgABbjUAAXQFAHwMAGQiAIMCAGQ3AHQFAHwMAGQxAIMCAHQFAHwW
AGQPAIMCAHQIAIMCAGcBAIMCAAF0BQB8DABkIgCDAgBkOAB0BQB8FgBkFQCDAgBkOACDAQCDAgAB
dAUAfAwAZCIAgwIAZBwAdBkAfCQAZBYAgwIAgwIAAXQFAHwPAGQ5AIMCAGQDAHwMAIMAAVNuAQAB
V25KAAR8BwBqCgBvPgABAX0yAAF0BQB8FQBkOgCDAgB8MgCDAQB9MwB0BQB8DABkIgCDAgBkOwB8
MwCDAgABfBUAfAwAgwEAU24IAAFYZDwAfTQAfBAAdAgAaggAb1wAAXwBAAxvJwABZDUAdAUAfA8A
ZDYAgwIAgwAAfAAAZD0AfDQAFmYDABZ9EABxZgkBZD4AdAUAfA8AZDYAgwIAgwAAfAAAfAEAfAIA
ZD0AfDQAFmYFABZ9EABuAQABdAUAdBkAfAwAZD8AgwIAZEAAgwIAfBAAgwEAAWQUAFMoQQAAAHM7
AAAACiAgICBDaGVja3MgaWYgdGhlIHR3byBsaXN0cyBjb250YWluCiAgICB0aGUgc2FtZSB2YWx1
ZXMKICAoAgAAAHMPAAAAVmFsaWRhdGlvbkVycm9ycxMAAABGb3JtVmFsaWRhdGlvbkVycm9yKAEA
AABzCgAAAG1ha2VfcXVlcnlzBwAAAFJFUVVFU1RzDgAAAHBvcnRhbF9jYXRhbG9ncwkAAABnZXRP
YmplY3RzEgAAAHJlc3RyaWN0ZWRUcmF2ZXJzZXMWAAAAaW1tZWRpYXRlUmVpbmRleE9iamVjdHNN
AAAAU29ycnJ5LCBFcnJvciwgdGhlIGNhbGxpbmcgb2JqZWN0IHdhcyBub3QgY2F0YWxvZ3VlZC4g
RG8gbm90IGtub3cgaG93IHRvIGRvID9jAgAAAAYAAAAGAAAAQwAAAHNsAAAAZAEAfQIAeCwAdAEA
fAAAgwEARF0eAH0EAHwEAHwBAGoGAAxvCgABZAIAfQIAcRMAAXETAFd4LAB0AQB8AQCDAQBEXR4A
fQUAfAUAfAAAagYADG8KAAFkAgB9AgBxQgABcUIAV3wCAFNkAwBTKAQAAABzOwAAAAogICAgQ2hl
Y2tzIGlmIHRoZSB0d28gbGlzdHMgY29udGFpbgogICAgdGhlIHNhbWUgdmFsdWVzCiAgaQEAAABp
AAAAAE4oBgAAAHMEAAAAc2FtZXMJAAAAX2dldGl0ZXJfcwEAAABhcwIAAABrYXMBAAAAYnMCAAAA
a2IoBgAAAHMBAAAAYXMBAAAAYnMEAAAAc2FtZXMJAAAAX2dldGl0ZXJfcwIAAABrYXMCAAAAa2Io
AAAAACgAAAAAcw8AAABTY3JpcHQgKFB5dGhvbilzDQAAAGNoZWNrU2FtZUtleXMVAAAAcxQAAAAA
BQYBDQAGAQ4BDgENAAYBDgEOAWMDAAAADQAAAAgAAABDAAAAc70AAABoAAB9AwB4YAB0AQB8AACD
AQBEXVIAfQUAdAQAdAQAdAUAdAQAdAYAZAEAgwIAZAIAfAUAgwABZAMAgwIAZAQAgwIAgwAAZAUA
gwIAfAIAgwEAfQkAfAUAdAkAfAMAgwEAfAkAPHETAFdnAAB9AAB4MAB0AQB8AQCDAQBEXSIAfQsA
dAQAfAAAZAYAgwIAdAUAfAMAfAsAgwIAgwEAAXF8AFd8AABTdAQAdAwAZAcAgwIAZAgAgwEAAWQA
AFMoCQAAAE5zDgAAAHBvcnRhbF9jYXRhbG9ncwMAAAB1aWRpAAAAAHMJAAAAZ2V0T2JqZWN0cwsA
AABnZXRQcm9wZXJ0eXMGAAAAYXBwZW5kcwkAAABnZXRfdmFsdWVzDQAAAGJhc2VfY2F0ZWdvcnko
DQAAAHMMAAAAdmFsdWVfdG9fdWlkcwkAAABfZ2V0aXRlcl9zBAAAAHVpZHNzAwAAAHVpZHMJAAAA
X2dldGF0dHJfcwkAAABfZ2V0aXRlbV9zBwAAAGNvbnRleHRzDQAAAGNhdGFsb2dfaW5kZXhzAwAA
AGtleXMHAAAAX3dyaXRlX3MGAAAAdmFsdWVzcwUAAAB2YWx1ZXMFAAAAZmllbGQoDQAAAHMEAAAA
dWlkc3MGAAAAdmFsdWVzcw0AAABjYXRhbG9nX2luZGV4cwwAAAB2YWx1ZV90b191aWRzCQAAAF9n
ZXRpdGVyX3MDAAAAdWlkcwkAAABfZ2V0YXR0cl9zCQAAAF9nZXRpdGVtX3MHAAAAY29udGV4dHMD
AAAAa2V5cwcAAABfd3JpdGVfcwUAAAB2YWx1ZXMFAAAAZmllbGQoAAAAACgAAAAAcw8AAABTY3Jp
cHQgKFB5dGhvbilzDgAAAGdldE9yZGVyZWRVaWRzIwAAAHMWAAAAAAEGAQ0ABgE8ARQBBgENAAkB
HQEHAnMXAAAAdmFsaWRhdGVfYWxsX3RvX3JlcXVlc3RzCgAAAGdldF9maWVsZHNzCQAAAGhhc192
YWx1ZXMNAAAAYmFzZV9jYXRlZ29yeXMCAAAAaWRzAAAAAHMEAAAATm9uZXMLAAAAZ2V0UHJvcGVy
dHlpAwAAAE5zCQAAAGdldF92YWx1ZWkAAAAAcwEAAABhcwkAAABtZXRhX3R5cGVzGAAAAE11bHRp
UmVsYXRpb25TdHJpbmdGaWVsZGkBAAAAYwEAAAACAAAAAwAAAEMAAABzDQAAAHQAAHwAAGQBAIMC
AFMoAgAAAE5pAAAAACgCAAAAcwkAAABfZ2V0aXRlbV9zAQAAAHgoAgAAAHMBAAAAeHMJAAAAX2dl
dGl0ZW1fKAAAAAAoAAAAAHMPAAAAU2NyaXB0IChQeXRob24pcwoAAAA8bGFtYmRhLjI+WQAAAHMA
AAAAcwsAAABwb3J0YWxfdHlwZXMNAAAAY2F0YWxvZ19pbmRleHMRAAAAcG9ydGFsX3NlbGVjdGlv
bnNzFQAAAHNldFNlbGVjdGlvblBhcmFtc0ZvcnMaAAAAQmFzZV92aWV3UmVsYXRlZE9iamVjdExp
c3RzBAAAAGNvcHlzAwAAAHNldHMIAAAAZmllbGRfaWRzDAAAAGdldFZhbHVlVWlkc2MBAAAAAgAA
AAMAAABDAAAAcw0AAAB0AAB8AABkAQCDAgBTKAIAAABOcwMAAAB1aWQoAgAAAHMJAAAAX2dldGF0
dHJfcwEAAAB4KAIAAABzAQAAAHhzCQAAAF9nZXRhdHRyXygAAAAAKAAAAABzDwAAAFNjcmlwdCAo
UHl0aG9uKXMKAAAAPGxhbWJkYS4zPmYAAABzAAAAAHMGAAAAYXBwZW5kcxoAAABzZXRTZWxlY3Rp
b25DaGVja2VkVWlkc0ZvcnMMAAAAc2V0VmFsdWVVaWRzcxEAAABCYXNlX2VkaXRSZWxhdGlvbnML
AAAAbGlzdGJveF91aWRzAwAAAHVpZHMHAAAAZm9ybV9pZHMPAAAAc2VsZWN0aW9uX2luZGV4cw4A
AABzZWxlY3Rpb25fbmFtZXMEAAAAdWlkc3MKAAAAb2JqZWN0X3VpZHMDAAAAZ2V0cwwAAABIVFRQ
X1JFRkVSRVJzCgAAAGNhbmNlbF91cmxzEAAAAHByZXZpb3VzX2Zvcm1faWRzCAAAACVzLyVzPyVz
cwwAAABhYnNvbHV0ZV91cmxzDwAAAHJlbGF0aW9uX3ZhbHVlc3MOAAAAZGVmYXVsdF9tb2R1bGVz
HQAAAEJhc2Vfdmlld0NyZWF0ZVJlbGF0aW9uRGlhbG9ncwsAAABFcnJvckZpZWxkc3MMAAAAZmll
bGRfZXJyb3JzcxMAAABSZWxhdGlvbitVbmNoYW5nZWQucxgAAABwb3J0YWxfc3RhdHVzX21lc3Nh
Z2U9JXNzLQAAACVzLyVzP3NlbGVjdGlvbl9pbmRleD0lcyZzZWxlY3Rpb25fbmFtZT0lcyYlc3MI
AAAAUkVTUE9OU0VzCAAAAHJlZGlyZWN0KDUAAABzGgAAAFByb2R1Y3RzLkZvcm11bGF0b3IuRXJy
b3Jzcw8AAABWYWxpZGF0aW9uRXJyb3JzEwAAAEZvcm1WYWxpZGF0aW9uRXJyb3JzBwAAAFpUVXRp
bHNzCgAAAG1ha2VfcXVlcnlzCQAAAF9nZXRhdHRyX3MHAAAAY29udGV4dHMHAAAAcmVxdWVzdHME
AAAATm9uZXMNAAAAYmFzZV9jYXRlZ29yeXMKAAAAb2JqZWN0X3VpZHMBAAAAb3MMAAAAcmVkaXJl
Y3RfdXJscwsAAABvYmplY3RfcGF0aHMKAAAAVmFsdWVFcnJvcnMNAAAAY2hlY2tTYW1lS2V5c3MO
AAAAZ2V0T3JkZXJlZFVpZHNzBwAAAGdldGF0dHJzBwAAAGZvcm1faWRzBAAAAGZvcm1zCAAAAG15
X2ZpZWxkcwkAAABfZ2V0aXRlcl9zAQAAAGZzAQAAAGtzAQAAAHZzCQAAAF9nZXRpdGVtX3MJAAAA
b2xkX3ZhbHVlcwkAAABuZXdfdmFsdWVzCgAAAGVtcHR5X2xpc3RzCQAAAHNhbWVfdHlwZXMJAAAA
c2FtZV9rZXlzcwQAAABsaXN0cwkAAABUeXBlRXJyb3JzAwAAAG1hcHMLAAAAcG9ydGFsX3R5cGVz
AgAAAGt3cwcAAABfd3JpdGVfcw0AAABwcmV2aW91c191aWRzcwcAAABfYXBwbHlfcw0AAAByZWxh
dGlvbl9saXN0cxEAAAByZWxhdGlvbl91aWRfbGlzdHMEAAAAdWlkc3MDAAAAdWlkcwMAAABsZW5z
DwAAAHNlbGVjdGlvbl9pbmRleHMOAAAAc2VsZWN0aW9uX25hbWVzEwAAAGNvbXBsZXRlX3ZhbHVl
X2xpc3RzBQAAAHZhbHVlcw0AAABjYXRhbG9nX2luZGV4cw4AAABjb21wbGV0ZV92YWx1ZXMRAAAA
dmFsaWRhdGlvbl9lcnJvcnNzDAAAAGZpZWxkX2Vycm9yc3MHAAAAbWVzc2FnZSg1AAAAcwcAAABm
b3JtX2lkcw8AAABzZWxlY3Rpb25faW5kZXhzDgAAAHNlbGVjdGlvbl9uYW1lcwoAAABvYmplY3Rf
dWlkcwsAAABvYmplY3RfcGF0aHMaAAAAUHJvZHVjdHMuRm9ybXVsYXRvci5FcnJvcnNzDwAAAFZh
bGlkYXRpb25FcnJvcnMTAAAARm9ybVZhbGlkYXRpb25FcnJvcnMHAAAAWlRVdGlsc3MKAAAAbWFr
ZV9xdWVyeXMJAAAAX2dldGF0dHJfcwcAAABjb250ZXh0cwcAAAByZXF1ZXN0cwQAAABOb25lcw0A
AABiYXNlX2NhdGVnb3J5cwEAAABvcwwAAAByZWRpcmVjdF91cmxzCgAAAFZhbHVlRXJyb3JzDQAA
AGNoZWNrU2FtZUtleXNzDgAAAGdldE9yZGVyZWRVaWRzcwcAAABnZXRhdHRycwQAAABmb3JtcwgA
AABteV9maWVsZHMJAAAAX2dldGl0ZXJfcwEAAABmcwEAAABrcwEAAAB2cwkAAABfZ2V0aXRlbV9z
CQAAAG9sZF92YWx1ZXMJAAAAbmV3X3ZhbHVlcwoAAABlbXB0eV9saXN0cwkAAABzYW1lX3R5cGVz
CQAAAHNhbWVfa2V5c3MEAAAAbGlzdHMJAAAAVHlwZUVycm9ycwMAAABtYXBzCwAAAHBvcnRhbF90
eXBlcwIAAABrd3MHAAAAX3dyaXRlX3MNAAAAcHJldmlvdXNfdWlkc3MHAAAAX2FwcGx5X3MNAAAA
cmVsYXRpb25fbGlzdHMRAAAAcmVsYXRpb25fdWlkX2xpc3RzBAAAAHVpZHNzAwAAAHVpZHMDAAAA
bGVucxMAAABjb21wbGV0ZV92YWx1ZV9saXN0cwUAAAB2YWx1ZXMNAAAAY2F0YWxvZ19pbmRleHMO
AAAAY29tcGxldGVfdmFsdWVzEQAAAHZhbGlkYXRpb25fZXJyb3JzcwwAAABmaWVsZF9lcnJvcnNz
BwAAAG1lc3NhZ2UoAAAAACgAAAAAcw8AAABTY3JpcHQgKFB5dGhvbilzFQAAAEJhc2VfdmFsaWRh
dGVSZWxhdGlvbgEAAABzFAEAABMBDQIPBAYCHgEGAg0CFQEQARECDgIJDgkMAwISARABBgQZAAkB
EwIPARIBVgMEASsBJAEGAQYBIQEUAQYBDQEKARABDQEGARYDGgEKAQMBEAEOAQ4CEAIOASECBgEl
ASUBEAETARYBFgElARwBGwEYARIBBgENAAYBEAEeARkBFgIdAQcBIQESAQkBAwEDAQMBBgELARMD
EwEGARsBGAEMAQYBBgEGAQYBCwQZAQYDDQAGARUBEAE/ARQBBgEhAQYBGAEMAQYBBgEGAQYBCwIG
ARABEAEQARkBEAEQARABHwEQARUCFwMiARkBNQI0ASUBHAEeARACGAETAQ8CBgINAQgBEgEGAQ8D
EgEDAQMBBgEVAygBAAAAcxUAAABCYXNlX3ZhbGlkYXRlUmVsYXRpb24oAQAAAHMVAAAAQmFzZV92
YWxpZGF0ZVJlbGF0aW9uKAAAAAAoAAAAAHMPAAAAU2NyaXB0IChQeXRob24pcwgAAAA8bW9kdWxl
PgEAAABzAAAAAA==</string> </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/nexedi/portal_skins/erp5_core/Base_validateRelation</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>form_id, selection_index, selection_name, object_uid, object_path</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>5</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>form_id</string>
                            <string>selection_index</string>
                            <string>selection_name</string>
                            <string>object_uid</string>
                            <string>object_path</string>
                            <string>Products.Formulator.Errors</string>
                            <string>ValidationError</string>
                            <string>FormValidationError</string>
                            <string>ZTUtils</string>
                            <string>make_query</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>request</string>
                            <string>None</string>
                            <string>base_category</string>
                            <string>o</string>
                            <string>redirect_url</string>
                            <string>ValueError</string>
                            <string>checkSameKeys</string>
                            <string>getOrderedUids</string>
                            <string>getattr</string>
                            <string>form</string>
                            <string>my_field</string>
                            <string>_getiter_</string>
                            <string>f</string>
                            <string>k</string>
                            <string>v</string>
                            <string>_getitem_</string>
                            <string>old_value</string>
                            <string>new_value</string>
                            <string>empty_list</string>
                            <string>same_type</string>
                            <string>same_keys</string>
                            <string>list</string>
                            <string>TypeError</string>
                            <string>map</string>
                            <string>portal_type</string>
                            <string>kw</string>
                            <string>_write_</string>
                            <string>previous_uids</string>
                            <string>_apply_</string>
                            <string>relation_list</string>
                            <string>relation_uid_list</string>
                            <string>uids</string>
                            <string>uid</string>
                            <string>len</string>
                            <string>complete_value_list</string>
                            <string>value</string>
                            <string>catalog_index</string>
                            <string>complete_value</string>
                            <string>validation_errors</string>
                            <string>field_errors</string>
                            <string>message</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Base_validateRelation</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
