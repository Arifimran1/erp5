<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>traverse = context.getPortalObject().portal_categories.restrictedTraverse\n
\n
cell_range = []\n
base_category_list = context.getVariationBaseCategoryList()\n
\n
\n
def getRangeBaseCategoryFromBudgetLineVariation(budget_line):\n
  # Returns the base category to use for cell (XXX ?) if we use nodes member of\n
  # the budget line variation category\n
  budget_line_variation = context.getBudgetLineVariation()\n
  if budget_line_variation == \'budget_variation/node_category_budget_section\':\n
    return \'budget_section\'\n
  elif budget_line_variation == \'budget_variation/node_category_financial_section\':\n
    return \'financial_section\'\n
  elif budget_line_variation == \'budget_variation/budget_line_type\':\n
    pass\n
  else:\n
    raise ValueError(\'Unknown budget line variation: %s\' %\n
                           budget_line_variation)\n
\n
def getTitle(obj):\n
  if obj.getPortalType() == \'Account\':\n
    return obj.Account_getFormattedTitle()\n
  return obj.getTranslatedTitle()\n
\n
for base_category in base_category_list:\n
  url_list = context.getVariationCategoryList(base_category_list=(base_category,))\n
  if base_category == \'resource\':\n
    # we usually ignore resource\n
    continue\n
  if base_category == \'destination\':\n
    # this means we use nodes from category defined in budget line variation\n
    budget_line_category = getRangeBaseCategoryFromBudgetLineVariation(context)\n
    account_url_list = []\n
    for category in context.getVariationCategoryList(\n
                              base_category_list=(budget_line_category,)):\n
      # XXX is it always account portal type ?\n
      for account in traverse(category).getRelatedValueList(\n
                                            id=budget_line_category,\n
                                            portal_type=\'Account\',\n
                                            checked_permission=\'View\'):\n
        account_url_list.append(\'destination/%s\' % account.getRelativeUrl())\n
    url_list = account_url_list\n
    # TODO: this can be organisations from current group or something else\n
\n
  if matrixbox:\n
    cell_range.append([(url, getTitle(traverse(url))) for url in url_list])\n
  else:\n
    cell_range.append(url_list)\n
\n
return [x for x in cell_range if x != []]\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>matrixbox=0, **kw</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Author</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>matrixbox</string>
                            <string>kw</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>traverse</string>
                            <string>cell_range</string>
                            <string>base_category_list</string>
                            <string>getRangeBaseCategoryFromBudgetLineVariation</string>
                            <string>getTitle</string>
                            <string>_getiter_</string>
                            <string>base_category</string>
                            <string>url_list</string>
                            <string>budget_line_category</string>
                            <string>account_url_list</string>
                            <string>category</string>
                            <string>account</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>url</string>
                            <string>x</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <int>0</int>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>BudgetLine_asCellRange</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
