<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

from Products.DCWorkflow.DCWorkflow import ValidationFailed\n
\n
error_message = \'\'\n
transaction = state_change.object\n
\n
# first of all, validate the transaction it self\n
container.validateTransaction(state_change)\n
\n
# Get sections.\n
source_section = transaction.getSourceSection()\n
destination_section = transaction.getDestinationSection()\n
\n
# Check transaction lines.\n
if transaction.getPortalType() not in (\'Balance Transaction\',) : \n
  accountingTransactionLineList = transaction.contentValues(\n
                    filter={\'portal_type\': (\'Accounting Transaction Line\', \n
                                            \'Sale Invoice Transaction Line\', \n
                                            \'Pay Sheet Transaction Line\',\n
                                            \'Purchase Invoice Transaction Line\' )})\n
  sum = 0\n
  for transaction_line in accountingTransactionLineList:\n
    if source_section != destination_section :\n
      quantity = transaction_line.getQuantity() or 0.0\n
    else : \n
      quantity = transaction_line.getSourceDebit() - transaction_line.getSourceCredit() + \\\n
                 transaction_line.getDestinationDebit() - transaction_line.getDestinationCredit() \n
    sum += int(round(quantity * 100))\n
    if transaction_line.getSourceValue() is None : continue\n
    if transaction_line.getSourceValue().getAccountTypeId() in ("receivable", "payable") \\\n
          and transaction_line.getSourceSection() in (None, "") :\n
       raise ValidationFailed, \'Action impossible : no source section defined for line %s where account type is "%s"\'%\\\n
                                (transaction_line.getId(), transaction_line.getSource().getAccountTypeId())\n
   \n
    if transaction_line.getSourceValue().getAccountTypeId() == "cash" \\\n
          and transaction_line.getSourcePayment() in (None, "") :\n
       raise ValidationFailed, \'Action impossible : no source payment defined for line %s where account type is "cash"\'%transaction_line.getId()\n
\n
  if sum > 0:\n
    raise ValidationFailed, \'Action impossible : credit is greater than debit\' #: sum = %.2f\' % (sum/100.0)\n
  elif sum < 0:\n
    raise ValidationFailed, \'Action impossible : credit is smaller than debit\' #: sum = %.2f\' % (sum/100.0)\n
\n
\n
# checks if there is enough budget before validating this transaction\n
AccountingTransaction_viewAccountingTransactionLineList = transaction.contentValues(\n
                    filter={\'portal_type\': (\'Accounting Transaction Line\', \n
                                            \'Sale Invoice Transaction Line\', \n
                                            \'Pay Sheet Transaction Line\',\n
                                            \'Purchase Invoice Transaction Line\' )})\n
# delete all objects wich are mapped values (predicates) in the budget module\n
id_list = []\n
for objects in transaction.getObject().getPortalObject().budget_module.objectValues():\n
  if objects.getPortalType() == \'Mapped Value\':\n
    id_list.append(objects.getId())\n
context.budget_module.manage_delObjects(id_list)\n
# Create predicates (mapped values) from budget cells\n
for objects in transaction.getObject().getPortalObject().budget_module.objectValues():\n
  if objects.getPortalType() == \'Budget\':\n
    for obj_line in objects.objectValues():\n
      if obj_line.getPortalType() == \'Budget Line\':\n
        for obj in obj_line.objectValues():\n
          financial_section = obj.getMembershipCriterionCategoryList()[0]\n
          function = obj.getMembershipCriterionCategoryList()[1]\n
          group = obj.getMembershipCriterionCategoryList()[2]\n
          budget = obj.getQuantity() + obj.getCurrentInventory() - obj.getConsumedBudget()\n
          budget_module = obj.getPortalObject().budget_module\n
          predicate = budget_module.newContent(portal_type=\'Mapped Value\')\n
          predicate.setMembershipCriterionBaseCategoryList([\'financial_section\',\'function\',\'group\'])\n
          predicate.setMembershipCriterionCategoryList([financial_section,function,group])\n
          predicate.setCriterionPropertyList([\'quantity\',\'stop_date\'])\n
          predicate.setCriterion(\'quantity\',max=budget)\n
          predicate.setCriterion(\'stop_date\',min=obj.getStartDate(),max=obj.getStopDate())\n
          predicate.immediateReindexObject()\n
\n
for line in AccountingTransaction_viewAccountingTransactionLineList:\n
  if line.getSource() and line.getSourceDebit()>0 and line.getPortalType() != "Sale Invoice Transaction Line":\n
    new_id = \'atl\' + str(line.getId())\n
    financial_section = line.getSourceValue().getFinancialSectionValue().getCategoryRelativeUrl(base=0)\n
    function_category = line.getParent().getSourceFunction()\n
    function = context.portal_categories.getCategoryValue(function_category).getCategoryRelativeUrl(base=0)\n
    group = line.getParent().getSourceSectionValue().getGroup() \n
    quantity = -line.getQuantity()\n
    #raise \'yoooooo\', repr((line.getId(), line.getSource(),financial_section, function, group))\n
    temp_obj = line.asContext(\n
                id                    = new_id\n
               , title                = line.getTitle()\n
               , start_date           = line.getStartDate()\n
               , stop_date            = line.getStopDate()\n
               , quantity             = quantity\n
               , financial_section    = financial_section\n
               , function             = function\n
               , group                = group\n
               )\n
\n
    temp_obj.setFinancialSection(financial_section)\n
    temp_obj.setFunction(function)\n
    temp_obj.setGroup(group)\n
    temp_obj.setQuantity(quantity)\n
    #raise \'mayoro\', ((temp_obj.getFunction(),temp_obj.getGroup(),temp_obj.getFinancialSection())) \n
    #raise \'yooo\', temp_obj.Base_viewDict()\n
    enough_budget = 0\n
    for objects in context.getPortalObject().budget_module.objectValues():\n
      if objects.getPortalType() == \'Mapped Value\': \n
         #raise \'yoooo\', objects.Base_viewDict()\n
         res = objects.test(temp_obj)\n
         if res: \n
            enough_budget = 1   \n
    if enough_budget == 0:\n
      error_message = \'Budget insuffisant ou budget ind\xc3\xa9finit pour la ou les comptes sources de la transaction\'\n
      raise ValidationFailed, \'Impossible Action: \'+error_message\n
\n
\n
\n
\n
\n
# delete empty transaction lines.\n
DISABLED = 1\n
if not DISABLED and not transaction.isSimulated() \\\n
   and transaction.getSimulationState() in ("stopped", ) : \n
  transaction.AccountingTransaction_deleteEmptyLines(redirect=0)\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value> <string encoding="base64">YwAAAAAAAAAAAQAAAEAAAABzDQAAAGQBAIQAAFoAAGQAAFMoAgAAAE5jAQAAACYAAAAtAAAAQwAA
AHNnCAAAZAEAawAAbAEAfQIAAWQCAH0DAHQDAHwAAGQDAIMCAH0FAHQDAHQGAGQEAIMCAHwAAIMB
AAF0AwB8BQBkBQCDAgCDAAB9BwB0AwB8BQBkBgCDAgCDAAB9CAB0AwB8BQBkBwCDAgCDAABkCABm
AQBqBwBvDgIBdAMAfAUAZAkAgwIAZAoAaAAABGQLAGQMAGQNAGQOAGQPAGYEAAM8gwABfQkAZBAA
fQoAeKABdAsAfAkAgwEARF2SAX0MAHwHAHwIAGoDAG8dAAF0AwB8DABkEQCDAgCDAABwBAABZBIA
fQ0AbkMAAXQDAHwMAGQTAIMCAIMAAHQDAHwMAGQUAIMCAIMAABh0AwB8DABkFQCDAgCDAAAXdAMA
fAwAZBYAgwIAgwAAGH0NAHwKAHQOAHQPAHwNAGQXABSDAQCDAQA3fQoAdAMAfAwAZBgAgwIAgwAA
dBAAaggAbwcAAXG1AG4BAAF0AwB0AwB8DABkGACDAgCDAABkGQCDAgCDAABkGgBkGwBmAgBqBgBv
HAABdAMAfAwAZAUAgwIAgwAAdBAAZAIAZgIAagYAbzsAAXwCAGQcAHQDAHwMAGQdAIMCAIMAAHQD
AHQDAHwMAGQeAIMCAIMAAGQZAIMCAIMAAGYCABaCAgBuAQABdAMAdAMAfAwAZBgAgwIAgwAAZBkA
gwIAgwAAZB8AagIAbxwAAXQDAHwMAGQgAIMCAIMAAHQQAGQCAGYCAGoGAG8dAAF8AgBkIQB0AwB8
DABkHQCDAgCDAAAWggIAcbUAAXG1AFd8CgBkEABqBABvDQABfAIAZCIAggIAcYMCAXwKAGQQAGoA
AG8NAAF8AgBkIwCCAgBxgwIBbgEAAXQDAHwFAGQJAIMCAGQKAGgAAARkCwBkDABkDQBkDgBkDwBm
BAADPIMAAX0RAGcAAH0SAHh9AHQLAHQDAHQDAHQDAHQDAHwFAGQkAIMCAIMAAGQlAIMCAIMAAGQm
AIMCAGQnAIMCAIMAAIMBAERdQgB9EwB0AwB8EwBkBwCDAgCDAABkKABqAgBvIwABdAMAfBIAZCkA
gwIAdAMAfBMAZB0AgwIAgwAAgwEAAXHwAgFx8AJXdAMAdAMAdBQAZCYAgwIAZCoAgwIAfBIAgwEA
AXgoAnQLAHQDAHQDAHQDAHQDAHwFAGQkAIMCAIMAAGQlAIMCAIMAAGQmAIMCAGQnAIMCAIMAAIMB
AERd7QF9EwB0AwB8EwBkBwCDAgCDAABkKwBqAgBvzgEBeMsBdAsAdAMAfBMAZCcAgwIAgwAAgwEA
RF2tAX0VAHQDAHwVAGQHAIMCAIMAAGQsAGoCAG+OAQF4iwF0CwB0AwB8FQBkJwCDAgCDAACDAQBE
XW0BfRYAdBcAdAMAfBYAZC0AgwIAgwAAZBAAgwIAfRgAdBcAdAMAfBYAZC0AgwIAgwAAZC4AgwIA
fRkAdBcAdAMAfBYAZC0AgwIAgwAAZC8AgwIAfRoAdAMAfBYAZBEAgwIAgwAAdAMAfBYAZDAAgwIA
gwAAF3QDAHwWAGQxAIMCAIMAABh9GwB0AwB0AwB8FgBkJQCDAgCDAABkJgCDAgB9HAB0AwB8HABk
MgCDAgBkCwBkKACDAAF9HQB0AwB8HQBkMwCDAgBkNABkNQBkNgBnAwCDAQABdAMAfB0AZDcAgwIA
fBgAfBkAfBoAZwMAgwEAAXQDAHwdAGQ4AIMCAGQ5AGQ6AGcCAIMBAAF0AwB8HQBkOwCDAgBkOQBk
PAB8GwCDAQEBdAMAfB0AZDsAgwIAZDoAZD0AdAMAfBYAZD4AgwIAgwAAZDwAdAMAfBYAZD8AgwIA
gwAAgwECAXQDAHwdAGRAAIMCAIMAAAFx/ANXccQDAXHEA1dxjAMBcYwDV3iLAnQLAHwRAIMBAERd
fQJ9HgB0AwB8HgBkHgCDAgCDAABvLwABdAMAfB4AZBMAgwIAgwAAZBAAagQAbxYAAXQDAHweAGQH
AIMCAIMAAGQNAGoDAG8yAgFkQQB0HwB0AwB8HgBkHQCDAgCDAACDAQAXfSAAdAMAdAMAdAMAfB4A
ZBgAgwIAgwAAZEIAgwIAgwAAZEMAgwIAZEQAZBAAgwABfRgAdAMAdAMAfB4AZEUAgwIAgwAAZEYA
gwIAgwAAfSEAdAMAdAMAdAMAdBQAZEcAgwIAZEgAgwIAfCEAgwEAZEMAgwIAZEQAZBAAgwABfRkA
dAMAdAMAdAMAfB4AZEUAgwIAgwAAZEkAgwIAgwAAZEoAgwIAgwAAfRoAdAMAfB4AZBEAgwIAgwAA
C30NAHQDAHweAGRLAIMCAGRMAHwgAGRNAHQDAHweAGROAIMCAIMAAGRPAHQDAHweAGQ+AIMCAIMA
AGQ6AHQDAHweAGQ/AIMCAIMAAGQ5AHwNAGQ0AHwYAGQ1AHwZAGQ2AHwaAIMACH0iAHQDAHwiAGRQ
AIMCAHwYAIMBAAF0AwB8IgBkUQCDAgB8GQCDAQABdAMAfCIAZFIAgwIAfBoAgwEAAXQDAHwiAGRT
AIMCAHwNAIMBAAFkEAB9IwB4eAB0CwB0AwB0AwB0AwB0FABkJQCDAgCDAABkJgCDAgBkJwCDAgCD
AACDAQBEXUkAfRMAdAMAfBMAZAcAgwIAgwAAZCgAagIAbyoAAXQDAHwTAGRUAIMCAHwiAIMBAH0k
AHwkAG8KAAFkLgB9IwBx2wcBcZIHAXGSB1d8IwBkEABqAgBvFwABZFUAfQMAfAIAZFYAfAMAF4IC
AHEHCAFxigUBcYoFV2QuAH0lAHwlAAxvLQABdAMAfAUAZFcAgwIAgwAADG8ZAAF0AwB8BQBkWACD
AgCDAABkWQBmAQBqBgBvGgABdAMAfAUAZFoAgwIAZFsAZBAAgwABAW4BAAFkAABTKFwAAABOKAEA
AABzEAAAAFZhbGlkYXRpb25GYWlsZWRzAAAAAHMGAAAAb2JqZWN0cxMAAAB2YWxpZGF0ZVRyYW5z
YWN0aW9ucxAAAABnZXRTb3VyY2VTZWN0aW9ucxUAAABnZXREZXN0aW5hdGlvblNlY3Rpb25zDQAA
AGdldFBvcnRhbFR5cGVzEwAAAEJhbGFuY2UgVHJhbnNhY3Rpb25zDQAAAGNvbnRlbnRWYWx1ZXNz
BgAAAGZpbHRlcnMLAAAAcG9ydGFsX3R5cGVzGwAAAEFjY291bnRpbmcgVHJhbnNhY3Rpb24gTGlu
ZXMdAAAAU2FsZSBJbnZvaWNlIFRyYW5zYWN0aW9uIExpbmVzGgAAAFBheSBTaGVldCBUcmFuc2Fj
dGlvbiBMaW5lcyEAAABQdXJjaGFzZSBJbnZvaWNlIFRyYW5zYWN0aW9uIExpbmVpAAAAAHMLAAAA
Z2V0UXVhbnRpdHlmAzAuMHMOAAAAZ2V0U291cmNlRGViaXRzDwAAAGdldFNvdXJjZUNyZWRpdHMT
AAAAZ2V0RGVzdGluYXRpb25EZWJpdHMUAAAAZ2V0RGVzdGluYXRpb25DcmVkaXRpZAAAAHMOAAAA
Z2V0U291cmNlVmFsdWVzEAAAAGdldEFjY291bnRUeXBlSWRzCgAAAHJlY2VpdmFibGVzBwAAAHBh
eWFibGVzVAAAAEFjdGlvbiBpbXBvc3NpYmxlIDogbm8gc291cmNlIHNlY3Rpb24gZGVmaW5lZCBm
b3IgbGluZSAlcyB3aGVyZSBhY2NvdW50IHR5cGUgaXMgIiVzInMFAAAAZ2V0SWRzCQAAAGdldFNv
dXJjZXMEAAAAY2FzaHMQAAAAZ2V0U291cmNlUGF5bWVudHNWAAAAQWN0aW9uIGltcG9zc2libGUg
OiBubyBzb3VyY2UgcGF5bWVudCBkZWZpbmVkIGZvciBsaW5lICVzIHdoZXJlIGFjY291bnQgdHlw
ZSBpcyAiY2FzaCJzMAAAAEFjdGlvbiBpbXBvc3NpYmxlIDogY3JlZGl0IGlzIGdyZWF0ZXIgdGhh
biBkZWJpdHMwAAAAQWN0aW9uIGltcG9zc2libGUgOiBjcmVkaXQgaXMgc21hbGxlciB0aGFuIGRl
Yml0cwkAAABnZXRPYmplY3RzDwAAAGdldFBvcnRhbE9iamVjdHMNAAAAYnVkZ2V0X21vZHVsZXMM
AAAAb2JqZWN0VmFsdWVzcwwAAABNYXBwZWQgVmFsdWVzBgAAAGFwcGVuZHMRAAAAbWFuYWdlX2Rl
bE9iamVjdHNzBgAAAEJ1ZGdldHMLAAAAQnVkZ2V0IExpbmVzIgAAAGdldE1lbWJlcnNoaXBDcml0
ZXJpb25DYXRlZ29yeUxpc3RpAQAAAGkCAAAAcxMAAABnZXRDdXJyZW50SW52ZW50b3J5cxEAAABn
ZXRDb25zdW1lZEJ1ZGdldHMKAAAAbmV3Q29udGVudHMmAAAAc2V0TWVtYmVyc2hpcENyaXRlcmlv
bkJhc2VDYXRlZ29yeUxpc3RzEQAAAGZpbmFuY2lhbF9zZWN0aW9ucwgAAABmdW5jdGlvbnMFAAAA
Z3JvdXBzIgAAAHNldE1lbWJlcnNoaXBDcml0ZXJpb25DYXRlZ29yeUxpc3RzGAAAAHNldENyaXRl
cmlvblByb3BlcnR5TGlzdHMIAAAAcXVhbnRpdHlzCQAAAHN0b3BfZGF0ZXMMAAAAc2V0Q3JpdGVy
aW9ucwMAAABtYXhzAwAAAG1pbnMMAAAAZ2V0U3RhcnREYXRlcwsAAABnZXRTdG9wRGF0ZXMWAAAA
aW1tZWRpYXRlUmVpbmRleE9iamVjdHMDAAAAYXRscxgAAABnZXRGaW5hbmNpYWxTZWN0aW9uVmFs
dWVzFgAAAGdldENhdGVnb3J5UmVsYXRpdmVVcmxzBAAAAGJhc2VzCQAAAGdldFBhcmVudHMRAAAA
Z2V0U291cmNlRnVuY3Rpb25zEQAAAHBvcnRhbF9jYXRlZ29yaWVzcxAAAABnZXRDYXRlZ29yeVZh
bHVlcxUAAABnZXRTb3VyY2VTZWN0aW9uVmFsdWVzCAAAAGdldEdyb3VwcwkAAABhc0NvbnRleHRz
AgAAAGlkcwUAAAB0aXRsZXMIAAAAZ2V0VGl0bGVzCgAAAHN0YXJ0X2RhdGVzEwAAAHNldEZpbmFu
Y2lhbFNlY3Rpb25zCwAAAHNldEZ1bmN0aW9ucwgAAABzZXRHcm91cHMLAAAAc2V0UXVhbnRpdHlz
BAAAAHRlc3RzWAAAAEJ1ZGdldCBpbnN1ZmZpc2FudCBvdSBidWRnZXQgaW5kw6lmaW5pdCBwb3Vy
IGxhIG91IGxlcyBjb21wdGVzIHNvdXJjZXMgZGUgbGEgdHJhbnNhY3Rpb25zEwAAAEltcG9zc2li
bGUgQWN0aW9uOiBzCwAAAGlzU2ltdWxhdGVkcxIAAABnZXRTaW11bGF0aW9uU3RhdGVzBwAAAHN0
b3BwZWRzJgAAAEFjY291bnRpbmdUcmFuc2FjdGlvbl9kZWxldGVFbXB0eUxpbmVzcwgAAAByZWRp
cmVjdCgmAAAAcx4AAABQcm9kdWN0cy5EQ1dvcmtmbG93LkRDV29ya2Zsb3dzEAAAAFZhbGlkYXRp
b25GYWlsZWRzDQAAAGVycm9yX21lc3NhZ2VzCQAAAF9nZXRhdHRyX3MMAAAAc3RhdGVfY2hhbmdl
cwsAAAB0cmFuc2FjdGlvbnMJAAAAY29udGFpbmVycw4AAABzb3VyY2Vfc2VjdGlvbnMTAAAAZGVz
dGluYXRpb25fc2VjdGlvbnMdAAAAYWNjb3VudGluZ1RyYW5zYWN0aW9uTGluZUxpc3RzAwAAAHN1
bXMJAAAAX2dldGl0ZXJfcxAAAAB0cmFuc2FjdGlvbl9saW5lcwgAAABxdWFudGl0eXMDAAAAaW50
cwUAAAByb3VuZHMEAAAATm9uZXM3AAAAQWNjb3VudGluZ1RyYW5zYWN0aW9uX3ZpZXdBY2NvdW50
aW5nVHJhbnNhY3Rpb25MaW5lTGlzdHMHAAAAaWRfbGlzdHMHAAAAb2JqZWN0c3MHAAAAY29udGV4
dHMIAAAAb2JqX2xpbmVzAwAAAG9ianMJAAAAX2dldGl0ZW1fcxEAAABmaW5hbmNpYWxfc2VjdGlv
bnMIAAAAZnVuY3Rpb25zBQAAAGdyb3VwcwYAAABidWRnZXRzDQAAAGJ1ZGdldF9tb2R1bGVzCQAA
AHByZWRpY2F0ZXMEAAAAbGluZXMDAAAAc3RycwYAAABuZXdfaWRzEQAAAGZ1bmN0aW9uX2NhdGVn
b3J5cwgAAAB0ZW1wX29ianMNAAAAZW5vdWdoX2J1ZGdldHMDAAAAcmVzcwgAAABESVNBQkxFRCgm
AAAAcwwAAABzdGF0ZV9jaGFuZ2VzHgAAAFByb2R1Y3RzLkRDV29ya2Zsb3cuRENXb3JrZmxvd3MQ
AAAAVmFsaWRhdGlvbkZhaWxlZHMNAAAAZXJyb3JfbWVzc2FnZXMJAAAAX2dldGF0dHJfcwsAAAB0
cmFuc2FjdGlvbnMJAAAAY29udGFpbmVycw4AAABzb3VyY2Vfc2VjdGlvbnMTAAAAZGVzdGluYXRp
b25fc2VjdGlvbnMdAAAAYWNjb3VudGluZ1RyYW5zYWN0aW9uTGluZUxpc3RzAwAAAHN1bXMJAAAA
X2dldGl0ZXJfcxAAAAB0cmFuc2FjdGlvbl9saW5lcwgAAABxdWFudGl0eXMDAAAAaW50cwUAAABy
b3VuZHMEAAAATm9uZXM3AAAAQWNjb3VudGluZ1RyYW5zYWN0aW9uX3ZpZXdBY2NvdW50aW5nVHJh
bnNhY3Rpb25MaW5lTGlzdHMHAAAAaWRfbGlzdHMHAAAAb2JqZWN0c3MHAAAAY29udGV4dHMIAAAA
b2JqX2xpbmVzAwAAAG9ianMJAAAAX2dldGl0ZW1fcxEAAABmaW5hbmNpYWxfc2VjdGlvbnMIAAAA
ZnVuY3Rpb25zBQAAAGdyb3VwcwYAAABidWRnZXRzDQAAAGJ1ZGdldF9tb2R1bGVzCQAAAHByZWRp
Y2F0ZXMEAAAAbGluZXMDAAAAc3RycwYAAABuZXdfaWRzEQAAAGZ1bmN0aW9uX2NhdGVnb3J5cwgA
AAB0ZW1wX29ianMNAAAAZW5vdWdoX2J1ZGdldHMDAAAAcmVzcwgAAABESVNBQkxFRCgAAAAAKAAA
AABzDwAAAFNjcmlwdCAoUHl0aG9uKXMYAAAAdmFsaWRhdGVUcmFuc2FjdGlvbkxpbmVzAQAAAHO4
AAAADQIGARIDEAMSARIDHAEPAR4EBgENAAYBDQEdAiIBIAEaASYBKAEcAQYBOwIiARwBIQINAQ0B
DQERBA8BHgUGAToABgEcASoBFgI6AAYBGQEZAAYBGQEZAAYBGwEbARsBMgEbARsBHAEcARkBGQE3
ASECDQAJAUIBHAEwAR4BMAEqARMCDwEJARIBEgEPAQYBBgEGAQwDEwETARMBEAMGAS4ABgEZAhUB
BwESAQ0BBgEZBwYBHwEcASgBAAAAcxgAAAB2YWxpZGF0ZVRyYW5zYWN0aW9uTGluZXMoAQAAAHMY
AAAAdmFsaWRhdGVUcmFuc2FjdGlvbkxpbmVzKAAAAAAoAAAAAHMPAAAAU2NyaXB0IChQeXRob24p
cwgAAAA8bW9kdWxlPgEAAABzAAAAAA==</string> </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/erp5/portal_workflow/accounting_workflow/scripts/validateTransactionLines</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>state_change</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>state_change</string>
                            <string>Products.DCWorkflow.DCWorkflow</string>
                            <string>ValidationFailed</string>
                            <string>error_message</string>
                            <string>_getattr_</string>
                            <string>transaction</string>
                            <string>container</string>
                            <string>source_section</string>
                            <string>destination_section</string>
                            <string>accountingTransactionLineList</string>
                            <string>sum</string>
                            <string>_getiter_</string>
                            <string>transaction_line</string>
                            <string>quantity</string>
                            <string>int</string>
                            <string>round</string>
                            <string>None</string>
                            <string>AccountingTransaction_viewAccountingTransactionLineList</string>
                            <string>id_list</string>
                            <string>objects</string>
                            <string>context</string>
                            <string>obj_line</string>
                            <string>obj</string>
                            <string>_getitem_</string>
                            <string>financial_section</string>
                            <string>function</string>
                            <string>group</string>
                            <string>budget</string>
                            <string>budget_module</string>
                            <string>predicate</string>
                            <string>line</string>
                            <string>str</string>
                            <string>new_id</string>
                            <string>function_category</string>
                            <string>temp_obj</string>
                            <string>enough_budget</string>
                            <string>res</string>
                            <string>DISABLED</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>validateTransactionLines</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
