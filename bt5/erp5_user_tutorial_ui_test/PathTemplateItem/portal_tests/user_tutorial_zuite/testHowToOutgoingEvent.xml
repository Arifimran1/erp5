<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<html xmlns:tal="http://xml.zope.org/namespaces/tal"\n
      xmlns:metal="http://xml.zope.org/namespaces/metal">\n
<head>\n
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n
<title>How-To Request to post an outgoing event</title>\n
</head>\n
<body>\n
<table cellpadding="1" cellspacing="1" border="1">\n
<thead>\n
<tr><td rowspan="1" colspan="3">How-To Request to post an outgoing event</td></tr>\n
</thead><tbody>\n
\n
<span metal:use-macro="container/Zuite_viewTestMacroLibrary/macros/init_test_environment">init</span>\n
\n
<span metal:use-macro="container/Zuite_viewTestMacroLibrary/macros/login_as_functional_test_user">Login As Functional Test User</span>\n
\n
<tr>\n
  <td>openAndWait</td>\n
  <td>${base_url}/Zuite_setUpOutgoingEventTest</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>verifyTextPresent</td>\n
  <td>Init Ok</td>\n
  <td></td>\n
</tr>\n
\n
<span metal:use-macro="container/Zuite_viewTestMacroLibrary/macros/wait_for_activities"> Wait for activities</span>\n
\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/view</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>selectAndWait</td>\n
  <td>//select[@name="select_module"]</td>\n
  <td>Campaigns</td>\n
</tr>\n
\n
<tal:block tal:content="structure python: here.Zuite_generateListboxBrowsing(listbox_selection=([\'title\', here.Zuite_getHowToInfo()[\'outgoing_event_howto_campaign_title\']],), enter_object=True)"/>\n
<tr>\n
  <td>verifyText</td>\n
  <td>//div[@id="breadcrumb"]/a[3]</td>\n
  <td tal:content="python: here.Zuite_getHowToInfo()[\'outgoing_event_howto_campaign_title\']"></td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td tal:content="python: \'link=%s\' % here.Zuite_getHowToInfo()[\'outgoing_event_howto_event_title\']"></td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>verifyText</td>\n
  <td>//label[normalize-space(text())=\'State\']/../div</td>\n
  <td>Planned</td>\n
</tr>\n
<tr>\n
  <td>selectAndWait</td>\n
  <td>//select[@name="select_action"]</td>\n
  <td>Confirm</td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>//button[@id="dialog_submit_button"]</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>//input[@name="field_my_default_follow_up_title"]/../a</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>verifyText</td>\n
  <td>//tr[@class=\'listbox-data-line-0 DataA\']/td[7]/</td>\n
  <td>Confirmed</td>\n
</tr>\n
<span metal:use-macro="container/Zuite_viewTestMacroLibrary/macros/wait_for_activities"> Wait for activities</span>\n
<tr>\n
  <td>openAndWait</td>\n
  <td>${base_url}/Base_clearCache</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Cleared.</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>openAndWait</td>\n
  <td>${base_url}/view</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>selectAndWait</td>\n
  <td>//select[@name="select_module"]</td>\n
  <td>Events</td>\n
</tr>\n
<tr>\n
  <td>verifyText</td>\n
  <td>//div[@id="breadcrumb"]/a[2]</td>\n
  <td>Events</td>\n
</tr>\n
<!--\n
<tr>\n
  <td>verifyText</td>\n
  <td>//span[@class="listbox-current-page-total-number"]</td>\n
  <td>1 records</td>\n
</tr>\n
-->\n
<tal:block tal:content="structure python: here.Zuite_generateListboxBrowsing(listbox_selection=([\'title\', here.Zuite_getHowToInfo()[\'outgoing_event_howto_event_title\']],), enter_object=True)"/>\n
<tr>\n
  <td>selectAndWait</td>\n
  <td>//select[@name="select_action"]</td>\n
  <td>Send</td>\n
</tr>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>//button[@id="dialog_submit_button"]</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>verifyText</td>\n
  <td>//label[normalize-space(text())=\'State\']/../div</td>\n
  <td>Sent</td>\n
</tr>\n
<span metal:use-macro="container/Zuite_viewTestMacroLibrary/macros/wait_for_activities"> Wait for activities</span>\n
<tr>\n
  <td>openAndWait</td>\n
  <td>${base_url}/Base_clearCache</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Cleared.</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>openAndWait</td>\n
  <td>${base_url}/event_module?simulation_state=ordered</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>verifyText</td>\n
  <td>//span[@class="listbox-current-page-total-number"]</td>\n
  <td>0 records</td>\n
</tr>\n
\n
<span metal:use-macro="container/Zuite_viewTestMacroLibrary/macros/login_as_manager">Login As Manager</span>\n
\n
<tr>\n
  <td>openAndWait</td>\n
  <td>${base_url}/Zuite_tearDownOutgoingEventTest</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>verifyTextPresent</td>\n
  <td>Clean Ok</td>\n
  <td></td>\n
</tr>\n
\n
<span metal:use-macro="container/Zuite_viewTestMacroLibrary/macros/wait_for_activities"> Wait for activities </span>\n
\n
</tbody>\n
</table>\n
</body>\n
</html>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>testHowToOutgoingEvent</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>utf-8</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <unicode></unicode> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
