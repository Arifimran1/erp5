<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_erp5_jio.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>rjs_gadget_erp5_jio_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global window, rJS, RSVP, UriTemplate, URI, Query, SimpleQuery, ComplexQuery, jIO */\n
/*jslint indent: 2, maxerr: 3, nomen: true */\n
(function (window, rJS, RSVP, UriTemplate, URI, Query, SimpleQuery, ComplexQuery, jIO) {\n
  "use strict";\n
\n
  function wrapJioCall(gadget, method_name, argument_list) {\n
    var storage = gadget.state_parameter_dict.jio_storage,\n
      regexp = /^X-Delegate uri="(http[s]*:\\/\\/[\\/\\-\\[\\]{}()*+:?.,\\\\\\^$|#\\s\\w%]+)"$/,\n
      login_page;\n
\n
    return storage[method_name].apply(storage, argument_list)\n
      .push(undefined, function (error) {\n
        if ((error.target !== undefined) && (error.target.status === 401)) {\n
          login_page = error.target.getResponseHeader(\'WWW-Authenticate\');\n
          // Only connect to https to login\n
          if (regexp.test(login_page)) {\n
            return gadget.getUrlFor({\n
              command: \'login\',\n
              absolute_url: true\n
            })\n
              .push(function (came_from) {\n
                return gadget.redirect({\n
                  command: \'raw\',\n
                  options: {\n
                    url: UriTemplate.parse(regexp.exec(login_page)[1]).expand({came_from: came_from})\n
                  }\n
                });\n
              });\n
            /*\n
            window.location = UriTemplate.parse(\n
              regexp.exec(login_page)[1]\n
            ).expand({came_from: window.location.href + "{&me}"});\n
            return RSVP.timeout(5000);\n
            */\n
          // Redirect to the login view\n
          }\n
          // return gadget.redirect({command: \'display\', options: {page: \'login\'}});\n
        }\n
        throw error;\n
      });\n
  }\n
\n
  function isSingleLocalRoles(parsed_query) {\n
    if ((parsed_query instanceof SimpleQuery) &&\n
        (parsed_query.key === \'local_roles\')) {\n
      // local_roles:"Assignee"\n
      return parsed_query.value;\n
    }\n
  }\n
\n
  function isMultipleLocalRoles(parsed_query) {\n
    var i,\n
      sub_query,\n
      is_multiple = true,\n
      local_role_list = [];\n
    if ((parsed_query instanceof ComplexQuery) &&\n
        (parsed_query.operator === \'OR\')) {\n
\n
      for (i = 0; i < parsed_query.query_list.length; i += 1) {\n
        sub_query = parsed_query.query_list[i];\n
        if ((sub_query instanceof SimpleQuery) &&\n
            (sub_query.key === \'local_roles\')) {\n
          local_role_list.push(sub_query.value);\n
        } else {\n
          is_multiple = false;\n
        }\n
      }\n
      if (is_multiple) {\n
        // local_roles:"Assignee" OR local_roles:"Assignor"\n
        return local_role_list;\n
      }\n
    }\n
  }\n
\n
  rJS(window)\n
\n
    .ready(function (gadget) {\n
      return gadget.getDeclaredGadget(\'jio\')\n
        .push(function (jio_gadget) {\n
          // Initialize the gadget local parameters\n
          gadget.state_parameter_dict = {jio_storage: jio_gadget};\n
        });\n
    })\n
\n
    .declareAcquiredMethod(\'getSetting\', \'getSetting\')\n
    .declareAcquiredMethod(\'redirect\', \'redirect\')\n
    .declareAcquiredMethod(\'getUrlFor\', \'getUrlFor\')\n
\n
    .declareMethod(\'createJio\', function () {\n
      var gadget = this;\n
      return new RSVP.Queue()\n
        .push(function () {\n
          return RSVP.all([\n
            gadget.getSetting(\'hateoas_url\'),\n
            gadget.getSetting(\'default_view_reference\')\n
          ]);\n
        })\n
        .push(function (setting_list) {\n
          return gadget.state_parameter_dict.jio_storage.createJio({\n
            type: "erp5",\n
            url: setting_list[0],\n
            default_view_reference: setting_list[1]\n
          });\n
        });\n
    })\n
\n
    .declareMethod(\'allDocs\', function (option_dict) {\n
      // throw new Error(\'do not use all docs\');\n
\n
      if (option_dict.list_method_template === undefined) {\n
        return wrapJioCall(this, \'allDocs\', arguments);\n
      }\n
\n
      var query = option_dict.query,\n
        i,\n
        parsed_query,\n
        sub_query,\n
        result_list,\n
        local_roles;\n
      if (option_dict.query) {\n
        parsed_query = jIO.QueryFactory.create(option_dict.query);\n
\n
        result_list = isSingleLocalRoles(parsed_query);\n
        if (result_list) {\n
          query = undefined;\n
          local_roles = result_list;\n
        } else {\n
\n
          result_list = isMultipleLocalRoles(parsed_query);\n
          if (result_list) {\n
            query = undefined;\n
            local_roles = result_list;\n
          } else if ((parsed_query instanceof ComplexQuery) &&\n
                     (parsed_query.operator === \'AND\')) {\n
\n
            // portal_type:"Person" AND local_roles:"Assignee"\n
            for (i = 0; i < parsed_query.query_list.length; i += 1) {\n
              sub_query = parsed_query.query_list[i];\n
\n
              result_list = isSingleLocalRoles(sub_query);\n
              if (result_list) {\n
                local_roles = result_list;\n
                parsed_query.query_list.splice(i, 1);\n
                query = Query.objectToSearchText(parsed_query);\n
                i = parsed_query.query_list.length;\n
              } else {\n
                result_list = isMultipleLocalRoles(sub_query);\n
                if (result_list) {\n
                  local_roles = result_list;\n
                  parsed_query.query_list.splice(i, 1);\n
                  query = Query.objectToSearchText(parsed_query);\n
                  i = parsed_query.query_list.length;\n
                }\n
              }\n
            }\n
          }\n
\n
        }\n
        option_dict.query = query;\n
        option_dict.local_roles = local_roles;\n
      }\n
\n
      return wrapJioCall(\n
        this,\n
        \'getAttachment\',\n
        [\n
          // XXX Ugly hardcoded meaningless id...\n
          "erp5",\n
          new UriTemplate.parse(option_dict.list_method_template)\n
                         .expand(option_dict),\n
          {format: "json"}\n
        ]\n
      )\n
        .push(function (catalog_json) {\n
          var data = catalog_json._embedded.contents,\n
            count = data.length,\n
            k,\n
            uri,\n
            item,\n
            result = [];\n
          for (k = 0; k < count; k += 1) {\n
            item = data[k];\n
            uri = new URI(item._links.self.href);\n
            delete item._links;\n
            result.push({\n
              id: uri.segment(2),\n
              doc: {},\n
              value: item\n
            });\n
          }\n
          return {\n
            data: {\n
              rows: result,\n
              total_rows: result.length\n
            }\n
          };\n
        });\n
    })\n
    .declareMethod(\'getAttachment\', function (id, name) {\n
      return wrapJioCall(this, \'getAttachment\', [id, name, {format: "json"}]);\n
    })\n
    .declareMethod(\'putAttachment\', function (id, name, json) {\n
      return wrapJioCall(this, \'putAttachment\', [id, name, JSON.stringify(json)]);\n
    });\n
\n
}(window, rJS, RSVP, UriTemplate, URI, Query, SimpleQuery, ComplexQuery, jIO));

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Jio Gadget JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish_alive</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>romain</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1442234815.56</float>
                        <string>GMT</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published_alive</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>947.45414.13002.10052</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1449753994.81</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>detect_converted_file</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>romain</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>converted</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1442234436.93</float>
                        <string>GMT</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
