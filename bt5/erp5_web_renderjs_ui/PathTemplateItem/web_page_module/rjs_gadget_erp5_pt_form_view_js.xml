<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_erp5_pt_form_view.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>rjs_gadget_erp5_pt_form_view_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global rJS, RSVP, jQuery, Handlebars,\n
  promiseEventListener, console */\n
/*jslint nomen: true */\n
/*global window, rJS, RSVP, StatelessJS, alert, FormData, document, console */\n
/*jslint maxlen:200, nomen: true */\n
(function (window, rJS, RSVP) {\n
  "use strict";\n
\n
  /////////////////////////////////////////////////////////////////\n
  // Handlebars\n
  /////////////////////////////////////////////////////////////////\n
  // Precompile the templates while loading the first gadget instance\n
  var gadget_klass = rJS(window),\n
    workflow_template = Handlebars.compile(\n
      gadget_klass.__template_element\n
                         .getElementById("workflow-template")\n
                         .innerHTML\n
    );\n
\n
  gadget_klass\n
    /////////////////////////////////////////////////////////////////\n
    // ready\n
    /////////////////////////////////////////////////////////////////\n
    // Init local properties\n
    .ready(function (g) {\n
      g.props = {};\n
    })\n
    /////////////////////////////////////////////////////////////////\n
    // ready\n
    /////////////////////////////////////////////////////////////////\n
    // Init local properties\n
    .ready(function (g) {\n
      g.props = {};\n
    })\n
\n
    // Assign the element to a variable\n
    .ready(function (g) {\n
      return g.getElement()\n
        .push(function (element) {\n
          g.props.element = element;\n
        });\n
    })\n
\n
   .declareAcquiredMethod("aq_put", "jio_put")\n
   .declareAcquiredMethod("whoWantToDisplayThisPage", "whoWantToDisplayThisPage")\n
    /////////////////////////////////////////////////////////////////\n
    // declared methods\n
    /////////////////////////////////////////////////////////////////\n
    .declareMethod(\'render\', function (options) {\n
      var erp5_document = options.erp5_document,\n
        action_list = erp5_document._links.action_workflow || [],\n
        form_gadget = this,\n
        i,\n
        promise_list = [];\n
\n
      for (i = 0; i < action_list.length; i += 1) {\n
        promise_list.push(this.whoWantToDisplayThisPage({\n
          name: action_list[i].name\n
        }));\n
      }\n
\n
      form_gadget.props.id = erp5_document._id;\n
      form_gadget.props.view = options.view;\n
\n
      return new RSVP.Queue()\n
        .push(function () {\n
          return RSVP.all([\n
            form_gadget.getDeclaredGadget("erp5_form"),\n
            form_gadget.getDeclaredGadget("erp5_tab"),\n
            RSVP.all(promise_list)\n
          ]);\n
        })\n
        .push(function (all_gadget) {\n
          var form_options = options.erp5_form || {},\n
            tab_options = options.erp5_tag || {},\n
            all_result = all_gadget[2],\n
            actionlist = [],\n
            class_list,\n
            i;\n
\n
          form_options.erp5_document = options.erp5_document;\n
          form_options.form_definition = options.form_definition;\n
          form_options.view = options.view;\n
\n
          tab_options.erp5_document = options.erp5_document;\n
          tab_options.form_definition = options.form_definition;\n
          tab_options.view = options.view;\n
\n
          for (i = 0; i < all_result.length; i += 1) {\n
            switch (i) {\n
              case 0:\n
                class_list = "ui-btn ui-first-child";\n
                break;\n
              case (all_result.length - 1):\n
                class_list = "ui-btn ui-last-child";\n
                break;\n
              default:\n
                class_list = "ui-btn";\n
                break;\n
            }\n
            actionlist.push({\n
              class: class_list,\n
              title: action_list[i].title,\n
              link: all_result[i],\n
            });\n
          }\n
          form_gadget.__element.querySelector("div.ui-controlgroup-controls")\n
            .innerHTML = workflow_template({actionlist: actionlist});\n
\n
\n
          return RSVP.all([\n
            all_gadget[1].render(form_options),\n
            all_gadget[0].render(tab_options),\n
          ]);\n
        });\n
\n
    })\n
\n
\n
    .declareService(function () {\n
      var form_gadget = this;\n
\n
      function formSubmit() {\n
        return form_gadget.getDeclaredGadget("erp5_form")\n
          .push(function (erp5_form) {\n
            return erp5_form.getContent();\n
          })\n
          .push(function (data) {\n
            data["_id"] = form_gadget.props.id;\n
            return form_gadget.aq_put(data, {"_view": form_gadget.props.view});\n
          })\n
      }\n
\n
      // Listen to form submit\n
      return loopEventListener(\n
        form_gadget.props.element.querySelector(\'form\'),\n
        \'submit\',\n
        false,\n
        formSubmit\n
      );\n
  });\n
\n
}(window, rJS, RSVP));

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Gadget ERP5 Form View JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
