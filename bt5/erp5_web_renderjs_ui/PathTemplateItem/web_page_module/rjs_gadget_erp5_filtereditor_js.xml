<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>gadget_erp5_filter_editor.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>rjs_gadget_erp5_filtereditor_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*jslint nomen: true, indent: 2, maxerr: 3 */\n
/*global window, rJS, Handlebars, jQuery, RSVP, loopEventListener, document, QueryFactory,\n
  SimpleQuery, ComplexQuery, Query*/\n
(function (window, rJS, Handlebars, $, RSVP, loopEventListener) {\n
  "use strict";\n
  /////////////////////////////////////////////////////////////////\n
  // templates\n
  /////////////////////////////////////////////////////////////////\n
  // Precompile templates while loading the first gadget instance\n
  var gadget_klass = rJS(window),\n
    option_source = gadget_klass.__template_element\n
                      .getElementById("option-template")\n
                      .innerHTML,\n
    option_template = Handlebars.compile(option_source),\n
\n
    selected_option_source = gadget_klass.__template_element\n
                      .getElementById("selected-option-template")\n
                      .innerHTML,\n
    selected_option_template = Handlebars.compile(selected_option_source),\n
\n
    filter_source = gadget_klass.__template_element\n
                         .getElementById("filter-template")\n
                         .innerHTML,\n
    filter_template = Handlebars.compile(filter_source);\n
\n
\n
\n
  function submitFilterQuery(gadget) {\n
    var i,\n
      query = "",\n
      value,\n
      simple_operator = "",\n
      key,\n
      simple_query_list = [],\n
      complex_query,\n
      select,\n
      domain_tree_query = "",\n
      domain_tree_query_list = [],\n
      options = gadget.props.options,\n
      date_float_value = ["", ">", "<", "<=", ">="],\n
      filterforms = gadget.props.element.querySelectorAll(".filterForm"),\n
      and = gadget.props.element.querySelector(".and");\n
    //when OR is selected, since OR with Related Query is not supported,\n
    // see https://git.erp5.org/gitweb/erp5.git/blob/HEAD:/product/ZSQLCatalog/Query/ComplexQuery.py?js=1#l113\n
    //convert OR to NOT with AND\n
    //a + b = NOT ( NOT (a) AND NOT (b)) \n
    //build simple&complex query\n
    for (i = 0; i < filterforms.length; i += 1) {\n
      value = filterforms[i][2].value;\n
      if (value !== "") {\n
        select = filterforms[i][1][filterforms[i][1].selectedIndex].value;\n
        if (select === "keyword") {\n
          value = "%" + value + "%";\n
        } else if (date_float_value.indexOf(select) !== -1) {\n
          simple_operator = select;\n
        }\n
        if (filterforms[i][0][filterforms[i][0].selectedIndex].value === "Searchable Text") {\n
          key = "";\n
        } else {\n
          key = filterforms[i][0][filterforms[i][0].selectedIndex].value;\n
        }\n
        if (and.checked || filterforms.length === 1) {\n
          simple_query_list.push(new SimpleQuery(\n
            {\n
              key: key,\n
              operator: simple_operator,\n
              type: "simple",\n
              value: value\n
            }\n
          ));\n
        } else {\n
          simple_query_list.push(new ComplexQuery(\n
            {\n
              operator: "NOT",\n
              query_list: [new SimpleQuery(\n
                {\n
                  key: key,\n
                  operator: simple_operator,\n
                  type: "simple",\n
                  value: value\n
                }\n
              )],\n
              type: "complex"\n
            }\n
          ));\n
        }\n
      }\n
    }\n
\n
\n
\n
\n
    if (gadget.props.tree_path[0] !== "--") {\n
      for (i = 0; i < gadget.props.tree_path.length; i += 1) {\n
        if (gadget.props.tree_path[i] !== "--") {\n
          if (i === 0) {\n
            domain_tree_query_list.push(new SimpleQuery(\n
              {\n
                key: "category.base_category_uid",\n
                type: "simple",\n
                value: gadget.props.tree_path[i]\n
              }\n
            ));\n
          } else {\n
            domain_tree_query_list.push(new SimpleQuery(\n
              {\n
                key: "category.category_uid",\n
                type: "simple",\n
                value: gadget.props.tree_path[i]\n
              }\n
            ));\n
          }\n
        }\n
      }\n
    }\n
\n
    if (simple_query_list.length > 0) {\n
      complex_query = new ComplexQuery({\n
        operator: "AND",\n
        query_list: simple_query_list,\n
        type: "complex"\n
      });\n
      if (!and.checked && filterforms.length > 1) {\n
        complex_query = new ComplexQuery({\n
          operator: "NOT",\n
          query_list: [complex_query],\n
          type: "complex"\n
        });\n
      }\n
      query = complex_query.toString();\n
    }\n
\n
    if (domain_tree_query_list.length > 0) {\n
      domain_tree_query = new ComplexQuery({\n
        operator: "AND",\n
        query_list: domain_tree_query_list,\n
        type: "complex"\n
      });\n
      domain_tree_query = Query.objectToSearchText(domain_tree_query);\n
    }\n
\n
    gadget.props.jelement.panel("toggle");\n
\n
    return gadget.redirect({jio_key: options.jio_key,\n
              "extended_search": query, "domain_tree": domain_tree_query,\n
              "sort_list": options.form_definition.sort_list || "",\n
              "hide_item": options.form_definition.hide_item || ""});\n
\n
  }\n
\n
\n
  function createDomainTree(gadget, options_tree_map, selected_value) {\n
    var select = document.createElement("select"),\n
      div_container = document.createElement("div"),\n
      domain_tree_map = gadget.props.domain_tree_map,\n
      domain_tree_container = gadget.props.element.querySelector(".domain_tree_container"),\n
      tmp = "",\n
      key,\n
      i;\n
    if (selected_value === undefined) {\n
      selected_value = "--";\n
    }\n
    if (options_tree_map) {\n
      domain_tree_map = options_tree_map;\n
    }\n
\n
    function updateDomainTree(gadget, event) {\n
      var domain_tree_list = domain_tree_container.querySelectorAll(\'.domain_tree\'),\n
        update_domain_tree_map = gadget.props.domain_tree_map;\n
      for (i = domain_tree_list.length - 1; i > 0; i -= 1) {\n
        if (domain_tree_list[i] !== event.target.parentElement.parentElement.parentElement) {\n
          gadget.props.tree_path.pop();\n
          domain_tree_list[i].parentElement.removeChild(domain_tree_list[i]);\n
        } else {\n
          break;\n
        }\n
      }\n
      gadget.props.tree_path[gadget.props.tree_path.length - 1] = event.target.value;\n
      if (event.target.value !== \'--\') {\n
        for (i = 0; i < gadget.props.tree_path.length; i += 1) {\n
          update_domain_tree_map = update_domain_tree_map[gadget.props.tree_path[i]];\n
          update_domain_tree_map = update_domain_tree_map.sub_categories;\n
        }\n
        if (Object.keys(update_domain_tree_map).length !== 0) {\n
          createDomainTree(gadget, update_domain_tree_map);\n
        }\n
      }\n
    }\n
\n
\n
    tmp += option_template({\n
      value: "--",\n
      text: "--"\n
    });\n
    for (key in domain_tree_map) {\n
      if (domain_tree_map.hasOwnProperty(key)) {\n
        if (key === selected_value) {\n
          tmp += selected_option_template({\n
            value: key,\n
            text: domain_tree_map[key].title\n
          });\n
        } else {\n
          tmp += option_template({\n
            value: key,\n
            text: domain_tree_map[key].title\n
          });\n
        }\n
      }\n
    }\n
    gadget.props.tree_path.push(selected_value);\n
    select.setAttribute("class", "domain_tree_select");\n
    select.innerHTML = tmp;\n
    div_container.setAttribute("class", "domain_tree");\n
    loopEventListener(\n
      select,\n
      "change",\n
      false,\n
      function (event) {\n
        updateDomainTree(gadget, event);\n
      }\n
    );\n
    div_container.appendChild(select);\n
    domain_tree_container.appendChild(div_container);\n
    $(select).selectmenu();\n
  }\n
\n
\n
  function createFilterItem(gadget, simple_query) {\n
    var div = document.createElement("div"),\n
      container = document.createElement("form"),\n
      minus_button = document.createElement("span"),\n
      div_text = document.createElement("div"),\n
      select_reference = document.createElement("select"),\n
      i,\n
      tmp = "",\n
      default_select = "Searchable Text",\n
      select_options,\n
      select_options_value,\n
      options_map = {\n
        "date_float": ["Equals To", "Greater Than", "Less Than", "Not Greater Than", "Not Less Than"],\n
        "date_float_value": ["", ">", "<", "<=", ">="],\n
        "searchable_text": ["Contain"],\n
        "searchable_text_value": [""],\n
        "other": ["Exact Match", "keyword"],\n
        "other_value": ["", "keyword"]\n
      },\n
\n
      text = document.createElement("input"),\n
      select_operator = document.createElement("select");\n
\n
    if (simple_query === undefined) {\n
      simple_query = {};\n
    }\n
\n
    minus_button.setAttribute("class", "ui-icon ui-icon-delete ui-icon-shadow");\n
    div_text.setAttribute("class", "ui-input-text ui-body-inherit ui-corner-all ui-shadow-inset");\n
    container.appendChild(select_reference);\n
    container.appendChild(select_operator);\n
    div_text.appendChild(text);\n
    container.appendChild(div_text);\n
    container.appendChild(minus_button);\n
    container.setAttribute("class", "filterForm");\n
    div.appendChild(container);\n
    function createSelectOperator(event) {\n
      var html = "",\n
        j;\n
      if (event.target.value.indexOf(\'date\') !== -1) {\n
        text.setAttribute("type", "date");\n
        simple_query.value = simple_query.value ? simple_query.value.replace(/\\//g, "-") : "";\n
      } else {\n
        text.setAttribute("type", "text");\n
      }\n
      text.setAttribute("value", simple_query.value || "");\n
      if (event.target.value.indexOf(\'date\') !== -1 ||\n
          event.target.value.indexOf(\'quantity\') !== -1 ||\n
          event.target.value.indexOf(\'price\') !== -1) {\n
        select_options = options_map.date_float;\n
        select_options_value = options_map.date_float_value;\n
      } else if (event.target.value === "Searchable Text") {\n
        select_options = options_map.searchable_text;\n
        select_options_value = options_map.searchable_text_value;\n
      } else {\n
        select_options = options_map.other;\n
        select_options_value = options_map.other_value;\n
      }\n
\n
      for (j = 0; j < select_options.length; j += 1) {\n
        if (simple_query.operator === select_options_value[j]) {\n
          html += selected_option_template({\n
            value: select_options_value[j],\n
            text: select_options[j]\n
          });\n
        } else {\n
          html += option_template({\n
            value: select_options_value[j],\n
            text: select_options[j]\n
          });\n
        }\n
      }\n
      select_operator.innerHTML = html;\n
      $(select_operator).selectmenu();\n
      $(select_operator).selectmenu(\'refresh\');\n
    }\n
\n
\n
    tmp = "";\n
    tmp += option_template({\n
      value: "Searchable Text",\n
      text: "Searchable Text"\n
    });\n
    for (i = 0; i < gadget.props.column_list.length; i += 1) {\n
      if (simple_query.key === gadget.props.column_list[i][0]) {\n
        default_select = gadget.props.column_list[i][0];\n
        tmp += selected_option_template({\n
          value: gadget.props.column_list[i][0],\n
          text: gadget.props.column_list[i][1]\n
        });\n
      } else {\n
        tmp += option_template({\n
          value: gadget.props.column_list[i][0],\n
          text: gadget.props.column_list[i][1]\n
        });\n
      }\n
    }\n
\n
    select_reference.innerHTML = tmp;\n
    createSelectOperator({"target": {"value": default_select}});\n
\n
    $(select_reference).selectmenu();\n
    loopEventListener(\n
      minus_button,\n
      "click",\n
      false,\n
      function () {\n
        div.parentElement.removeChild(div);\n
      }\n
    );\n
    loopEventListener(\n
      select_reference,\n
      "change",\n
      false,\n
      createSelectOperator\n
    );\n
    loopEventListener(\n
      container,\n
      "submit",\n
      false,\n
      function () {\n
        return submitFilterQuery(gadget);\n
      }\n
    );\n
    return div;\n
  }\n
\n
\n
  gadget_klass\n
    /////////////////////////////////////////////////////////////////\n
    // ready\n
    /////////////////////////////////////////////////////////////////\n
    // Init local properties\n
    .ready(function (g) {\n
      g.props = {};\n
      g.props.tree_path = [];\n
    })\n
\n
    //////////////////////////////////////////////\n
    // acquired method\n
    //////////////////////////////////////////////\n
    .declareAcquiredMethod("translateHtml", "translateHtml")\n
    .declareAcquiredMethod("redirect", "redirect")\n
    .declareAcquiredMethod("jio_getAttachment", "jio_getAttachment")\n
    // Assign the element to a variable\n
    .ready(function (g) {\n
      return g.getElement()\n
        .push(function (element) {\n
          g.props.element = element;\n
          g.props.jelement = $(element.querySelector("div"));\n
        });\n
    })\n
\n
    .ready(function (g) {\n
      g.props.jelement.panel({\n
        display: "overlay",\n
        position: "right",\n
        theme: "c"\n
      });\n
    })\n
\n
    .ready(function (g) {\n
      return new RSVP.Queue()\n
        .push(function () {\n
          var tmp = filter_template();\n
          return g.translateHtml(tmp);\n
        })\n
        .push(function (translated_html) {\n
          g.props.jelement.html(translated_html);\n
          g.props.jelement.trigger("create");\n
        });\n
    })\n
\n
    /////////////////////////////////////////////////////////////////\n
    // declared methods\n
    /////////////////////////////////////////////////////////////////\n
    .declareMethod(\'toggle\', function () {\n
      this.props.jelement.panel("toggle");\n
    })\n
\n
    .declareMethod(\'render\', function (options) {\n
      var container = this.props.element.querySelector(".filter_item_container"),\n
        i,\n
        gadget = this,\n
        domain_tree,\n
        item,\n
        and = gadget.props.element.querySelector(".and"),\n
        or = gadget.props.element.querySelector(".or"),\n
        query = "";\n
\n
\n
      this.props.options = options;\n
      gadget.props.tree_path = [];\n
      query = options.form_definition.extended_search || "";\n
      domain_tree = options.form_definition.domain_tree || "";\n
      return new RSVP.Queue()\n
        .push(function () {\n
          return gadget.jio_getAttachment(options.jio_key, options.view);\n
        })\n
        .push(function (result) {\n
          var query_list,\n
            query_item_list,\n
            domain_tree_map = result._embedded._view.listbox.domain_tree_map,\n
            domain_tree_query_list;\n
          gadget.props.column_list = result._embedded._view.listbox.column_list;\n
          gadget.props.domain_tree_map = result._embedded._view.listbox.domain_tree_map;\n
          if (query !== "") {\n
            query_list = QueryFactory.create(query);\n
            if (query_list.operator === "OR" || query_list.operator === "NOT") {\n
              or.checked = true;\n
              or.parentElement.children[0].setAttribute("class", "ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left  ui-radio-on");\n
            } else {\n
              and.checked = true;\n
              and.parentElement.children[0].setAttribute("class", "ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left  ui-radio-on");\n
            }\n
            //OR built by itself\n
            if (or.checked && query_list.operator === "NOT") {\n
                query_item_list = query_list.query_list[0].query_list || [];\n
            } else {\n
              query_item_list = query_list.query_list || [query_list];\n
            }\n
            for (i = 0; i < query_item_list.length; i += 1) {\n
              if (or.checked && query_list.operator === "NOT") {\n
                item = createFilterItem(gadget, query_item_list[i].query_list[0]);\n
              } else {\n
                item = createFilterItem(gadget, query_item_list[i]);\n
              }\n
              container.insertBefore(item, container.lastChild);\n
            }\n
          } else {\n
            and.checked = true;\n
            and.parentElement.children[0].setAttribute("class", "ui-btn ui-corner-all ui-btn-inherit ui-btn-icon-left  ui-radio-on");\n
            container.insertBefore(createFilterItem(gadget), container.lastChild);\n
          }\n
\n
          if (domain_tree !== "") {\n
            domain_tree_query_list = QueryFactory.create(domain_tree);\n
            domain_tree_query_list = domain_tree_query_list.query_list || [domain_tree_query_list];\n
            for (i = 0; i < domain_tree_query_list.length; i += 1) {\n
              if (Object.keys(domain_tree_map).length !== 0) {\n
                createDomainTree(gadget, domain_tree_map, domain_tree_query_list[i].value);\n
              }\n
              domain_tree_map = domain_tree_map[domain_tree_query_list[i].value].sub_categories;\n
            }\n
            if (Object.keys(domain_tree_map).length !== 0) {\n
              createDomainTree(gadget, domain_tree_map, "--");\n
            }\n
          } else {\n
            createDomainTree(gadget);\n
          }\n
        });\n
    })\n
\n
    /////////////////////////////////////////////////////////////////\n
    // declared services\n
    /////////////////////////////////////////////////////////////////\n
    .declareService(function () {\n
      var gadget = this,\n
        item;\n
      function closeFilterEditor() {\n
        gadget.props.jelement.panel("toggle");\n
      }\n
\n
\n
      loopEventListener(\n
        gadget.props.element.querySelector(".plus"),\n
        "submit",\n
        false,\n
        function () {\n
          var container = gadget.props.element.querySelector(".filter_item_container");\n
          item = createFilterItem(gadget);\n
          container.insertBefore(item, container.lastChild);\n
        }\n
      );\n
      loopEventListener(\n
        gadget.props.element.querySelector(".delete"),\n
        "submit",\n
        false,\n
        closeFilterEditor\n
      );\n
      loopEventListener(\n
        gadget.props.element.querySelector(".submit"),\n
        "submit",\n
        false,\n
        function () {\n
          return submitFilterQuery(gadget);\n
        }\n
      );\n
    });\n
\n
}(window, rJS, Handlebars, jQuery, RSVP, loopEventListener));

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Gadget Erp5 Filter Editor JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish_alive</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1439819594.24</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published_alive</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>946.4378.65397.6826</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1443533150.45</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>empty</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1439819567.59</float>
                        <string>UTC</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
