<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>from DateTime import DateTime\n
if context.getPortalType() != \'Bearer Token Module\':\n
  raise TypeError(\'Call me on module\')\n
\n
person = context.getPortalObject().portal_catalog.getResultValue(portal_type=\'Person\', reference=destination_reference)\n
\n
if person is None:\n
  raise ValueError(\'Cannot find Person with reference %r\' % destination_reference)\n
\n
key = person.getBearerTokenKey()\n
if not key:\n
  key = context.Person_resetBearerTokenKey()\n
\n
token = context.newContent(portal_type=\'Bearer Token\',\n
  destination_reference=destination_reference,\n
  expiration_date=DateTime() + (1./24) # 1 hour of validity\n
)\n
\n
hmac = None\n
for i in range(10):\n
  fuzzy = context.Base_generateRandomString()\n
  possible_hmac = token.BearerToken_getHMAC(key, fuzzy)\n
  if len(context.searchFolder(portal_type=\'Bearer Token\', reference=possible_hmac)) == 0 \\\n
    and context.getPortalObject().portal_activities.countMessageWithTag(possible_hmac) == 0:\n
    hmac = possible_hmac\n
    break\n
\n
if hmac is None:\n
  raise ValueError(\'It was not possible to generate valid hmac\')\n
\n
token.edit(\n
  source_reference=fuzzy,\n
  reference=hmac\n
)\n
token.validate()\n
token.reindexObject(activate_kw={\'tag\': hmac})\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>destination_reference</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>BearerTokenModule_addNewToken</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
