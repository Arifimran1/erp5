<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

"""\n
Journal entries, for use with AccountingTransactionModule_viewJournal\n
\n
return a list of dictionnaries like that : \n
  \n
{\n
  \'date\' : Date\n
  \'description\' : String\n
  \'currency\' : String\n
  \'lines\' : {\n
     \'debtor\' : Bool, \n
     \'account_gap_id\' : String\n
     \'account_name\' : String # with extra-description (ie. bank name if a bank, organisation name if an other party)\n
     \'amount\' : Float\n
     }\n
}\n
"""\n
\n
request = context.REQUEST\n
at_date = request[\'at_date\']\n
transaction_section_category = request[\'transaction_section_category\']\n
transaction_simulation_state = request[\'transaction_simulation_state\']\n
transaction_portal_type = request[\'transaction_portal_type\']\n
from_date = request.get(\'from_date\', None)\n
\n
params = {\n
  \'sort_on\' : \'delivery.start_date\',\n
  \'at_date\' : at_date,\n
  \'simulation_state\': transaction_simulation_state,\n
  \'section_category\' : transaction_section_category,\n
  \'portal_type\': transaction_portal_type,\n
}\n
if from_date:\n
  params[\'from_date\'] = from_date\n
\n
result=[]\n
journal_total_debit = 0\n
journal_total_credit = 0\n
for transaction in context\\\n
        .AccountingTransactionModule_zGetAccountingTransactionList(\n
        selection_params = params, selection=None, **params):\n
    transaction = transaction.getObject()\n
    lines = []\n
    transaction_dict={\'date\'        : context.Base_FormatDate(transaction.getStartDate()),\n
                      \'description\' : context.Base_TranslateString(\n
                                       "${transaction_title} (Transaction Reference = ${transaction_source_reference},\\n Creation Date = ${creation_date} \\n Currency = ${currency_title})" ,\n
                                       mapping = { "transaction_title": unicode(transaction.getTitle() or \'\', \'utf8\'),\n
                                                   "transaction_source_reference": unicode(transaction.getSourceReference() or \'\', \'utf8\'),\n
                                                   "creation_date" : context.Base_FormatDate(transaction.getCreationDate()),\n
                                                   "currency_title" : transaction.getResourceTitle() or \'\'}),\n
                      \'lines\'       : lines, }\n
\n
    result.append(transaction_dict)\n
    transaction_lines = transaction.contentValues(\n
      filter = {\'portal_type\' : context.getPortalAccountingMovementTypeList()})\n
\n
    transaction_lines.sort(lambda x,y: cmp(y.getObject().getSourceDebit(),\n
                                           x.getObject().getSourceDebit()))\n
    for line in transaction_lines :\n
       line = line.getObject()\n
       debtor = (line.getSourceDebit() > line.getSourceCredit())\n
       account = line.getSourceValue()\n
       if account is None: continue\n
       if account.getAccountType() in (\'asset/bank\', \'asset/bank/cash\') :\n
          account_description = "%s (%s)"%(\n
                                      line.getSourceTitle(),\n
                                      line.getSourcePaymentTitle())\n
       elif account.getAccountType() in (\n
                                    \'asset/receivable\',\n
                                    \'liability/payable\'):\n
          account_description = "%s (%s)"%(\n
                                      line.getSourceTitle(),\n
                                      line.getDestinationSectionTitle())\n
       else :\n
          account_description = line.getSourceTitle()\n
       lines.append({\n
          \'debtor\' : debtor,\n
          \'account_gap_id\' : account.getGapId(),\n
          \'account_name\' : account_description,\n
          \'amount\' : debtor  and (line.getSourceDebit() \\\n
                                    - line.getSourceCredit()) \\\n
                              or (line.getSourceCredit() \\\n
                                    - line.getSourceDebit())\n
       })\n
       if debtor :\n
         journal_total_debit += line.getSourceDebit()\n
       else:\n
         journal_total_credit += line.getSourceCredit()\n
       \n
       # internal mouvements, ie when we are destination and source\n
       if line.getDestinationSection() == line.getSourceSection() :\n
         debtor = (line.getDestinationDebit() > line.getDestinationCredit())\n
         account = line.getDestinationValue()\n
         if account is None : continue\n
         if account.getAccountType() == \'asset/cash\' :\n
            account_description = "%s (%s)"%(\n
                                      line.getDestinationTitle(),\n
                                      line.getDestinationPaymentTitle())\n
         elif account.getAccountType() in (\n
                                  \'asset/receivable\',\n
                                  \'liability/payable\'):\n
            account_description = "%s (%s)"%(\n
                                      line.getDestinationTitle(),\n
                                      line.getSourceSectionTitle())\n
         else :\n
            account_description = line.getDestinationTitle()\n
         lines.append({\n
            \'debtor\' : debtor,\n
            \'account_gap_id\' : account.getGapId(),\n
            \'account_name\' : account_description,\n
            \'amount\' : debtor  and (line.getDestinationDebit() \\\n
                                        - line.getDestinationCredit()) \\\n
                                or (line.getDestinationCredit() \\\n
                                        - line.getDestinationDebit())\n
            })\n
         if debtor :\n
           journal_total_debit += line.getSourceDebit()\n
         else:\n
           journal_total_credit += line.getSourceCredit()\n
         \n
return result + [{"journal_total_debit": journal_total_debit, "journal_total_credit": journal_total_credit}]\n
# vim: syntax=python\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value> <string encoding="base64">YwAAAAAAAAAAAQAAAEAAAABzDQAAAGQBAIQAAFoAAGQAAFMoAgAAAE5jAAAAABoAAABKAAAAQwAA
AHMSBgAAdAAAdAEAZAEAgwIAfQIAdAMAfAIAZAIAgwIAfQQAdAMAfAIAZAMAgwIAfQUAdAMAfAIA
ZAQAgwIAfQYAdAMAfAIAZAUAgwIAfQcAdAAAfAIAZAYAgwIAZAcAdAgAgwIAfQkAaAAABGQIAGQJ
AAM8BGQCAHwEAAM8BGQKAHwGAAM8BGQLAHwFAAM8BGQMAHwHAAM8fQoAfAkAbxQAAXwJAHQLAHwK
AIMBAGQHADxuAQABZwAAfQwAZA0AfQ0AZA0AfQ4AeCsFdA8AdBAAdAAAdAEAZA4AgwIAZA8AfAoA
ZBAAdAgAfAoAjQECgwEARF3/BH0RAHQAAHwRAGQRAIMCAIMAAH0RAGcAAH0SAGgAAARkEgB0AAB0
AQBkEwCDAgB0AAB8EQBkFACDAgCDAACDAQADPARkFQB0AAB0AQBkFgCDAgBkFwBkGABoAAAEZBkA
dBMAdAAAfBEAZBoAgwIAgwAAcAQAAWQbAGQcAIMCAAM8BGQdAHQTAHQAAHwRAGQeAIMCAIMAAHAE
AAFkGwBkHACDAgADPARkHwB0AAB0AQBkEwCDAgB0AAB8EQBkIACDAgCDAACDAQADPARkIQB0AAB8
EQBkIgCDAgCDAABwBAABZBsAAzyDAQEDPARkIwB8EgADPH0UAHQAAHwMAGQkAIMCAHwUAIMBAAF0
AAB8EQBkJQCDAgBkJgBoAAAEZAwAdAAAdAEAZCcAgwIAgwAAAzyDAAF9FQB0AAB8FQBkKACDAgBk
KQCEAACDAQABeK0DdA8AfBUAgwEARF2fA30WAHQAAHwWAGQRAIMCAIMAAH0WAHQAAHwWAGQqAIMC
AIMAAHQAAHwWAGQrAIMCAIMAAGoEAH0XAHQAAHwWAGQsAIMCAIMAAH0YAHwYAHQIAGoIAG8HAAFx
SgJuAQABdAAAfBgAZC0AgwIAgwAAZC4AZC8AZgIAagYAbywAAWQwAHQAAHwWAGQxAIMCAIMAAHQA
AHwWAGQyAIMCAIMAAGYCABZ9GQBuXgABdAAAfBgAZC0AgwIAgwAAZDMAZDQAZgIAagYAbywAAWQw
AHQAAHwWAGQxAIMCAIMAAHQAAHwWAGQ1AIMCAIMAAGYCABZ9GQBuEwABdAAAfBYAZDEAgwIAgwAA
fRkAdAAAfBIAZCQAgwIAaAAABGQ2AHwXAAM8BGQ3AHQAAHwYAGQ4AIMCAIMAAAM8BGQ5AHwZAAM8
BGQ6AHwXAG8gAAF0AAB8FgBkKgCDAgCDAAB0AAB8FgBkKwCDAgCDAAAYcCAAAXQAAHwWAGQrAIMC
AIMAAHQAAHwWAGQqAIMCAIMAABgDPIMBAAF8FwBvGgABfA0AdAAAfBYAZCoAgwIAgwAAN30NAG4X
AAF8DgB0AAB8FgBkKwCDAgCDAAA3fQ4AdAAAfBYAZDsAgwIAgwAAdAAAfBYAZDwAgwIAgwAAagIA
b7ABAXQAAHwWAGQ9AIMCAIMAAHQAAHwWAGQ+AIMCAIMAAGoEAH0XAHQAAHwWAGQ/AIMCAIMAAH0Y
AHwYAHQIAGoIAG8HAAFxSgJuAQABdAAAfBgAZC0AgwIAgwAAZEAAagIAbywAAWQwAHQAAHwWAGRB
AIMCAIMAAHQAAHwWAGRCAIMCAIMAAGYCABZ9GQBuXgABdAAAfBgAZC0AgwIAgwAAZDMAZDQAZgIA
agYAbywAAWQwAHQAAHwWAGRBAIMCAIMAAHQAAHwWAGRDAIMCAIMAAGYCABZ9GQBuEwABdAAAfBYA
ZEEAgwIAgwAAfRkAdAAAfBIAZCQAgwIAaAAABGQ2AHwXAAM8BGQ3AHQAAHwYAGQ4AIMCAIMAAAM8
BGQ5AHwZAAM8BGQ6AHwXAG8gAAF0AAB8FgBkPQCDAgCDAAB0AAB8FgBkPgCDAgCDAAAYcCAAAXQA
AHwWAGQ+AIMCAIMAAHQAAHwWAGQ9AIMCAIMAABgDPIMBAAF8FwBvGgABfA0AdAAAfBYAZCoAgwIA
gwAAN30NAHHpBQF8DgB0AAB8FgBkKwCDAgCDAAA3fQ4AcUoCAXFKAldx7gBXfAwAaAAABGREAHwN
AAM8BGRFAHwOAAM8ZwEAF1NkAABTKEYAAABOcwcAAABSRVFVRVNUcwcAAABhdF9kYXRlcxwAAAB0
cmFuc2FjdGlvbl9zZWN0aW9uX2NhdGVnb3J5cxwAAAB0cmFuc2FjdGlvbl9zaW11bGF0aW9uX3N0
YXRlcxcAAAB0cmFuc2FjdGlvbl9wb3J0YWxfdHlwZXMDAAAAZ2V0cwkAAABmcm9tX2RhdGVzBwAA
AHNvcnRfb25zEwAAAGRlbGl2ZXJ5LnN0YXJ0X2RhdGVzEAAAAHNpbXVsYXRpb25fc3RhdGVzEAAA
AHNlY3Rpb25fY2F0ZWdvcnlzCwAAAHBvcnRhbF90eXBlaQAAAABzOQAAAEFjY291bnRpbmdUcmFu
c2FjdGlvbk1vZHVsZV96R2V0QWNjb3VudGluZ1RyYW5zYWN0aW9uTGlzdHMQAAAAc2VsZWN0aW9u
X3BhcmFtc3MJAAAAc2VsZWN0aW9ucwkAAABnZXRPYmplY3RzBAAAAGRhdGVzDwAAAEJhc2VfRm9y
bWF0RGF0ZXMMAAAAZ2V0U3RhcnREYXRlcwsAAABkZXNjcmlwdGlvbnMUAAAAQmFzZV9UcmFuc2xh
dGVTdHJpbmdzkAAAACR7dHJhbnNhY3Rpb25fdGl0bGV9IChUcmFuc2FjdGlvbiBSZWZlcmVuY2Ug
PSAke3RyYW5zYWN0aW9uX3NvdXJjZV9yZWZlcmVuY2V9LAogQ3JlYXRpb24gRGF0ZSA9ICR7Y3Jl
YXRpb25fZGF0ZX0gCiBDdXJyZW5jeSA9ICR7Y3VycmVuY3lfdGl0bGV9KXMHAAAAbWFwcGluZ3MR
AAAAdHJhbnNhY3Rpb25fdGl0bGVzCAAAAGdldFRpdGxlcwAAAABzBAAAAHV0ZjhzHAAAAHRyYW5z
YWN0aW9uX3NvdXJjZV9yZWZlcmVuY2VzEgAAAGdldFNvdXJjZVJlZmVyZW5jZXMNAAAAY3JlYXRp
b25fZGF0ZXMPAAAAZ2V0Q3JlYXRpb25EYXRlcw4AAABjdXJyZW5jeV90aXRsZXMQAAAAZ2V0UmVz
b3VyY2VUaXRsZXMFAAAAbGluZXNzBgAAAGFwcGVuZHMNAAAAY29udGVudFZhbHVlc3MGAAAAZmls
dGVycyMAAABnZXRQb3J0YWxBY2NvdW50aW5nTW92ZW1lbnRUeXBlTGlzdHMEAAAAc29ydGMCAAAA
BAAAAAYAAABDAAAAcz0AAAB0AAB0AQB0AQB8AQBkAQCDAgCDAABkAgCDAgCDAAB0AQB0AQB8AABk
AQCDAgCDAABkAgCDAgCDAACDAgBTKAMAAABOcwkAAABnZXRPYmplY3RzDgAAAGdldFNvdXJjZURl
Yml0KAQAAABzAwAAAGNtcHMJAAAAX2dldGF0dHJfcwEAAAB5cwEAAAB4KAQAAABzAQAAAHhzAQAA
AHlzAwAAAGNtcHMJAAAAX2dldGF0dHJfKAAAAAAoAAAAAHMPAAAAU2NyaXB0IChQeXRob24pcwsA
AAA8bGFtYmRhLjU1PjkAAABzAgAAACQBcw4AAABnZXRTb3VyY2VEZWJpdHMPAAAAZ2V0U291cmNl
Q3JlZGl0cw4AAABnZXRTb3VyY2VWYWx1ZXMOAAAAZ2V0QWNjb3VudFR5cGVzCgAAAGFzc2V0L2Jh
bmtzDwAAAGFzc2V0L2JhbmsvY2FzaHMHAAAAJXMgKCVzKXMOAAAAZ2V0U291cmNlVGl0bGVzFQAA
AGdldFNvdXJjZVBheW1lbnRUaXRsZXMQAAAAYXNzZXQvcmVjZWl2YWJsZXMRAAAAbGlhYmlsaXR5
L3BheWFibGVzGgAAAGdldERlc3RpbmF0aW9uU2VjdGlvblRpdGxlcwYAAABkZWJ0b3JzDgAAAGFj
Y291bnRfZ2FwX2lkcwgAAABnZXRHYXBJZHMMAAAAYWNjb3VudF9uYW1lcwYAAABhbW91bnRzFQAA
AGdldERlc3RpbmF0aW9uU2VjdGlvbnMQAAAAZ2V0U291cmNlU2VjdGlvbnMTAAAAZ2V0RGVzdGlu
YXRpb25EZWJpdHMUAAAAZ2V0RGVzdGluYXRpb25DcmVkaXRzEwAAAGdldERlc3RpbmF0aW9uVmFs
dWVzCgAAAGFzc2V0L2Nhc2hzEwAAAGdldERlc3RpbmF0aW9uVGl0bGVzGgAAAGdldERlc3RpbmF0
aW9uUGF5bWVudFRpdGxlcxUAAABnZXRTb3VyY2VTZWN0aW9uVGl0bGVzEwAAAGpvdXJuYWxfdG90
YWxfZGViaXRzFAAAAGpvdXJuYWxfdG90YWxfY3JlZGl0KBoAAABzCQAAAF9nZXRhdHRyX3MHAAAA
Y29udGV4dHMHAAAAcmVxdWVzdHMJAAAAX2dldGl0ZW1fcwcAAABhdF9kYXRlcxwAAAB0cmFuc2Fj
dGlvbl9zZWN0aW9uX2NhdGVnb3J5cxwAAAB0cmFuc2FjdGlvbl9zaW11bGF0aW9uX3N0YXRlcxcA
AAB0cmFuc2FjdGlvbl9wb3J0YWxfdHlwZXMEAAAATm9uZXMJAAAAZnJvbV9kYXRlcwYAAABwYXJh
bXNzBwAAAF93cml0ZV9zBgAAAHJlc3VsdHMTAAAAam91cm5hbF90b3RhbF9kZWJpdHMUAAAAam91
cm5hbF90b3RhbF9jcmVkaXRzCQAAAF9nZXRpdGVyX3MHAAAAX2FwcGx5X3MLAAAAdHJhbnNhY3Rp
b25zBQAAAGxpbmVzcwcAAAB1bmljb2RlcxAAAAB0cmFuc2FjdGlvbl9kaWN0cxEAAAB0cmFuc2Fj
dGlvbl9saW5lc3MEAAAAbGluZXMGAAAAZGVidG9ycwcAAABhY2NvdW50cxMAAABhY2NvdW50X2Rl
c2NyaXB0aW9uKBoAAABzCQAAAF9nZXRhdHRyX3MHAAAAY29udGV4dHMHAAAAcmVxdWVzdHMJAAAA
X2dldGl0ZW1fcwcAAABhdF9kYXRlcxwAAAB0cmFuc2FjdGlvbl9zZWN0aW9uX2NhdGVnb3J5cxwA
AAB0cmFuc2FjdGlvbl9zaW11bGF0aW9uX3N0YXRlcxcAAAB0cmFuc2FjdGlvbl9wb3J0YWxfdHlw
ZXMEAAAATm9uZXMJAAAAZnJvbV9kYXRlcwYAAABwYXJhbXNzBwAAAF93cml0ZV9zBgAAAHJlc3Vs
dHMTAAAAam91cm5hbF90b3RhbF9kZWJpdHMUAAAAam91cm5hbF90b3RhbF9jcmVkaXRzCQAAAF9n
ZXRpdGVyX3MHAAAAX2FwcGx5X3MLAAAAdHJhbnNhY3Rpb25zBQAAAGxpbmVzcwcAAAB1bmljb2Rl
cxAAAAB0cmFuc2FjdGlvbl9kaWN0cxEAAAB0cmFuc2FjdGlvbl9saW5lc3MEAAAAbGluZXMGAAAA
ZGVidG9ycwcAAABhY2NvdW50cxMAAABhY2NvdW50X2Rlc2NyaXB0aW9uKAAAAAAoAAAAAHMPAAAA
U2NyaXB0IChQeXRob24pcz8AAABBY2NvdW50aW5nVHJhbnNhY3Rpb25Nb2R1bGVfZ2V0Sm91cm5h
bEFjY291bnRpbmdUcmFuc2FjdGlvbkxpc3QBAAAAc6QAAAAAEg8BDwEPAQ8BDwEYAhACCQEJAQkB
CAIHARQCBgEGAQYBGAIZARIBBgEuAQ8CLAEoASQBHgELAhABDwEhAhMCDQAGARIBJAESARQBHwEG
AQ8BFwEfAwYBDwEXAhUBEAEMARIBCQEZARQBDwETAgcBGgIWAyUBJAESARQBGQEGAQ8BFwEfAwYB
DwEXAhUBEAEMARIBCQEZARQBDwETAgcBGgIiAigBAAAAcz8AAABBY2NvdW50aW5nVHJhbnNhY3Rp
b25Nb2R1bGVfZ2V0Sm91cm5hbEFjY291bnRpbmdUcmFuc2FjdGlvbkxpc3QoAQAAAHM/AAAAQWNj
b3VudGluZ1RyYW5zYWN0aW9uTW9kdWxlX2dldEpvdXJuYWxBY2NvdW50aW5nVHJhbnNhY3Rpb25M
aXN0KAAAAAAoAAAAAHMPAAAAU2NyaXB0IChQeXRob24pcwgAAAA8bW9kdWxlPgEAAABzAAAAAA==</string> </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/nexedi/portal_skins/erp5_accounting/AccountingTransactionModule_getJournalAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>request</string>
                            <string>_getitem_</string>
                            <string>at_date</string>
                            <string>transaction_section_category</string>
                            <string>transaction_simulation_state</string>
                            <string>transaction_portal_type</string>
                            <string>None</string>
                            <string>from_date</string>
                            <string>params</string>
                            <string>_write_</string>
                            <string>result</string>
                            <string>journal_total_debit</string>
                            <string>journal_total_credit</string>
                            <string>_getiter_</string>
                            <string>_apply_</string>
                            <string>transaction</string>
                            <string>lines</string>
                            <string>unicode</string>
                            <string>transaction_dict</string>
                            <string>transaction_lines</string>
                            <string>line</string>
                            <string>debtor</string>
                            <string>account</string>
                            <string>account_description</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>AccountingTransactionModule_getJournalAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
