<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

""" Calculates the VAT for this invoice. \n
FIXME: it should support :\n
    o multiple VAT lines (with differents ratio)\n
    o other taxes that VAT\n
"""\n
\n
vat_infos = {\n
  \'total\' : 0,\n
}\n
\n
invoice = context\n
accounting_movement_type_list =  invoice.getPortalAccountingMovementTypeList()\n
accounting_movement_list = [x.getObject() for x in invoice.searchFolder(portal_type = accounting_movement_type_list)]\n
\n
# 1) the invoice contains accounting lines.\n
if len(accounting_movement_list) :\n
  for movement in accounting_movement_list :\n
    account = movement.getSourceValue()\n
    if account is None : continue\n
    if account.getAccountTypeId() == \'collected_vat\' : \n
      #if vat_infos[\'title\'] is not None :\n
      #  assert account.getTitle() == vat_infos[\'title\'] # TODO\n
      #if vat_infos[\'ratio\'] != 0 :\n
      #  assert 1 # TODO\n
      vat_infos.setdefault(\'title\', account.getTitle())\n
      vat_infos.setdefault(\'ratio\', movement.getTotalPrice() / (float(invoice.getTotalPrice()) or 1)) # XXX this calls catalog => bad & this does not suport multiple VAT lines either\n
      vat_infos.update( { \'total\': vat_infos[\'total\'] + movement.getTotalPrice() } )\n
\n
# 2) no accounting lines => we must look in the simulation\n
if not vat_infos.has_key(\'title\') :\n
  for invoice_movement in invoice.getMovementList() :\n
    aggregated_simulation_movements = {}\n
    for simulation_movement in ( invoice_movement.getDeliveryRelatedValueList(portal_type = \'Simulation Movement\')  +\n
                                 invoice_movement.getOrderRelatedValueList(portal_type = \'Simulation Movement\') ):\n
      if aggregated_simulation_movements.has_key(simulation_movement.getPath()) : \n
        continue  \n
      aggregated_simulation_movements[simulation_movement.getPath()] = 1\n
\n
      applied_rule_list = simulation_movement.objectValues()\n
      if len (applied_rule_list) == 0 : continue\n
      applied_rule = applied_rule_list[0]\n
\n
      # inside we got accounting movements\n
      for movement in applied_rule.objectValues() :\n
        account = movement.getSourceValue()\n
        if account is None : continue\n
        if account.getAccountTypeId() == \'collected_vat\' : \n
          context.log(\'added simulation movement from\', movement.getPath())\n
          vat_infos.setdefault(\'title\', account.getTitle())\n
          vat_infos.setdefault(\'ratio\', movement.getQuantity() / (float(invoice_movement.getTotalPrice()) or 1)) # XXX this does not suport multiple VAT lines \n
          vat_infos.update( { \'total\': vat_infos[\'total\'] + movement.getQuantity() } )\n
\n
vat_infos.setdefault(\'title\', "")\n
vat_infos.setdefault(\'ratio\', 0)\n
return vat_infos\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/nexedi/erp5_accounting/SaleInvoiceTransaction_getVAT</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>vat_infos</string>
                            <string>context</string>
                            <string>invoice</string>
                            <string>_getattr_</string>
                            <string>accounting_movement_type_list</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>_getiter_</string>
                            <string>x</string>
                            <string>accounting_movement_list</string>
                            <string>len</string>
                            <string>movement</string>
                            <string>account</string>
                            <string>None</string>
                            <string>float</string>
                            <string>_getitem_</string>
                            <string>invoice_movement</string>
                            <string>aggregated_simulation_movements</string>
                            <string>simulation_movement</string>
                            <string>_write_</string>
                            <string>applied_rule_list</string>
                            <string>applied_rule</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>SaleInvoiceTransaction_getVAT</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
