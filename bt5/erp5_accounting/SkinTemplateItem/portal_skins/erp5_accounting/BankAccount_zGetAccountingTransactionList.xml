<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="SQL" module="Products.ZSQLMethods.SQL"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Use_Database_Methods_Permission</string> </key>
            <value>
              <list>
                <string>Member</string>
              </list>
            </value>
        </item>
        <item>
            <key> <string>allow_simple_one_argument_traversal</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>arguments_src</string> </key>
            <value> <string>getUid\r\n
getParentUid\r\n
query\r\n
omit_input\r\n
omit_output\r\n
resource_uid:list\r\n
from_date\r\n
at_date\r\n
to_date\r\n
simulation_state:list\r\n
node_uid:list\r\n
stat</string> </value>
        </item>
        <item>
            <key> <string>cache_time_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>class_file_</string> </key>
            <value> <string>ZSQLCatalog.zsqlbrain</string> </value>
        </item>
        <item>
            <key> <string>class_name_</string> </key>
            <value> <string>ZSQLBrain</string> </value>
        </item>
        <item>
            <key> <string>connection_hook</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>connection_id</string> </key>
            <value> <string>erp5_sql_connection</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>BankAccount_zGetAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>max_cache_</string> </key>
            <value> <int>100</int> </value>
        </item>
        <item>
            <key> <string>max_rows_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>src</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<dtml-if getParentUid>\n
SELECT\n
<dtml-if stat>\n
  SUM(stock.quantity) AS quantity\n
<dtml-else>\n
    catalog.uid\n
  , catalog.path\n
  , stock.date as date\n
  , section.title as section_title\n
  , IF(delivery.source_section_uid = stock.section_uid,\n
       catalog.source_reference,\n
       catalog.destination_reference) AS specific_reference\n
  , IFNULL(SUM(IF(stock.quantity > 0, stock.quantity, 0)), 0) AS debit\n
  , IFNULL(SUM(IF(stock.quantity < 0, - stock.quantity, 0)), 0) AS credit\n
 , - IFNULL(SUM(IF(stock.quantity < 0, - stock.quantity, 0)), 0)\n
    + IFNULL(SUM(IF(stock.quantity > 0, stock.quantity, 0)), 0) AS balance  \n
</dtml-if>\n
FROM\n
  movement\n
  , catalog AS child\n
  , catalog\n
  , catalog AS node\n
  , category AS node_category\n
  , delivery\n
  , stock\n
  LEFT JOIN catalog AS section\n
     ON stock.mirror_section_uid = section.uid\n
<dtml-if query>\n
  , category\n
</dtml-if>\n
WHERE stock.section_uid = <dtml-var getParentUid>\n
  AND stock.payment_uid = <dtml-var getUid>\n
  AND delivery.uid = catalog.uid\n
  AND child.uid = stock.uid\n
  AND child.parent_uid = catalog.uid\n
  AND movement.uid = stock.uid\n
  AND movement.is_accountable = 1\n
  AND node.uid = stock.node_uid\n
  AND node.uid = node_category.uid\n
  AND node_category.category_uid = <dtml-sqlvar\n
          "portal_categories.account_type.asset.cash.bank.getUid()"  type="int">\n
<dtml-if node_uid>\n
  AND (\n
  <dtml-in node_uid>\n
    stock.node_uid = <dtml-sqlvar sequence-item type="int">\n
      <dtml-unless sequence-end> OR </dtml-unless>\n
  </dtml-in>\n
  )\n
</dtml-if>\n
<dtml-if resource_uid>\n
  AND (\n
  <dtml-in resource_uid>\n
    movement.resource_uid = <dtml-sqlvar sequence-item type="int">\n
        <dtml-unless sequence-end> OR </dtml-unless>\n
  </dtml-in>\n
  )\n
</dtml-if>\n
<dtml-if from_date>\n
  AND stock.date >= <dtml-sqlvar from_date type="datetime">\n
</dtml-if>\n
<dtml-if at_date>\n
  AND stock.date <= <dtml-sqlvar at_date type="datetime">\n
</dtml-if>\n
<dtml-if to_date>\n
  AND stock.date < <dtml-sqlvar to_date type="datetime">\n
</dtml-if>\n
<dtml-if omit_input>\n
  AND stock.quantity > 0\n
</dtml-if>\n
<dtml-if omit_output>\n
  AND stock.quantity < 0\n
</dtml-if>\n
<dtml-if simulation_state>\n
  AND (\n
  <dtml-in simulation_state>\n
    catalog.simulation_state = <dtml-sqlvar sequence-item type="string">\n
        <dtml-unless sequence-end> OR </dtml-unless>\n
  </dtml-in>\n
  )\n
</dtml-if>\n
<dtml-if query>\n
  AND category.uid = stock.section_uid\n
  AND <dtml-var query>\n
</dtml-if>\n
<dtml-unless stat>\n
  GROUP BY catalog.uid\n
</dtml-unless>\n
  ORDER BY stock.date, movement.uid\n
</dtml-if>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
