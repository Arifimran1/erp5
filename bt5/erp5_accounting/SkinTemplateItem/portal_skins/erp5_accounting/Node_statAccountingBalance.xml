<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>portal = context.getPortalObject()\n
params = portal.ERP5Accounting_getParams(selection_name=selection_name)\n
getInventoryAssetPrice = portal.portal_simulation.getInventoryAssetPrice\n
getSelectionDomainDictFor = context.portal_selections.getSelectionDomainDictFor\n
\n
if kw.get(\'node_uid\'):\n
  params[\'node_uid\'] = kw[\'node_uid\']\n
\n
if kw.get(\'mirror_section_uid\'):\n
  params[\'mirror_section_uid\'] = kw[\'mirror_section_uid\']\n
\n
if kw.get(\'function_uid\'):\n
  params[\'function_uid\'] = kw[\'function_uid\']\n
if kw.get(\'project_uid\'):\n
  params[\'project_uid\'] = kw[\'project_uid\']\n
\n
# FIXME: bank account uses quantity, not total_price\n
if kw.get(\'payment_uid\'):\n
  params[\'payment_uid\'] = kw[\'payment_uid\']\n
if kw.get(\'node_category_strict_membership\'):\n
  params[\'node_category_strict_membership\'] = \\\n
                kw[\'node_category_strict_membership\']\n
if kw.get(\'node_category\'):\n
  params[\'node_category\'] = kw[\'node_category\']\n
\n
###\n
# Get the \'where_expression\' parameter\n
# XXX can be removed ?\n
if kw.get(\'where_expression\'):\n
  params[\'where_expression\'] = kw[\'where_expression\']\n
\n
if not \'parent_portal_type\' in params:\n
  params.setdefault(\'portal_type\', portal.getPortalAccountingMovementTypeList())\n
\n
if params.get(\'period_start_date\', 0) and params.get(\'node_uid\'):\n
  # find the node for this node_uid\n
  if context.getUid() == params[\'node_uid\']: # I bet it\'s context\n
    node = context\n
  else:\n
    node = portal.portal_catalog.getObject(params[\'node_uid\'])\n
  if node.isMemberOf(\'account_type/expense\') or\\\n
        node.isMemberOf(\'account_type/income\'):\n
    # For expense or income accounts, we only take into account transactions\n
    # from the beginning of the period.\n
    params[\'from_date\'] = params[\'period_start_date\']\n
  else:\n
    # for other account, we calculate the initial balance as the "absolute"\n
    # balance at the beginning of the period, plus debit or credit from this\n
    # beginning of period to the from_date\n
    period_start_date = params[\'period_start_date\']\n
    at_date = params.pop(\'at_date\', None)\n
    period_openning_balance = getInventoryAssetPrice(\n
              selection_domain=getSelectionDomainDictFor(selection_name),\n
              to_date=period_start_date,\n
              **params)\n
    if omit_output:\n
      return getInventoryAssetPrice(omit_output=1,\n
           from_date=period_start_date,\n
           at_date=at_date,\n
           **params) + max(period_openning_balance, 0)\n
    elif omit_input:\n
      return getInventoryAssetPrice(omit_input=1,\n
           from_date=period_start_date,\n
           at_date=at_date,\n
           **params) - max(-period_openning_balance, 0)\n
    return getInventoryAssetPrice(\n
           from_date=period_start_date,\n
           at_date=at_date,\n
           **params) - max(-period_openning_balance, 0)\n
\n
return getInventoryAssetPrice(\n
              omit_input=omit_input,\n
              omit_output=omit_output,\n
              selection_domain=getSelectionDomainDictFor(selection_name),\n
              **params)\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>selection=None, omit_input=0, omit_output=0, selection_name=None, **kw</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>4</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>selection</string>
                            <string>omit_input</string>
                            <string>omit_output</string>
                            <string>selection_name</string>
                            <string>kw</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>portal</string>
                            <string>params</string>
                            <string>getInventoryAssetPrice</string>
                            <string>getSelectionDomainDictFor</string>
                            <string>_getitem_</string>
                            <string>_write_</string>
                            <string>node</string>
                            <string>period_start_date</string>
                            <string>None</string>
                            <string>at_date</string>
                            <string>_apply_</string>
                            <string>period_openning_balance</string>
                            <string>max</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <none/>
                <int>0</int>
                <int>0</int>
                <none/>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Node_statAccountingBalance</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
