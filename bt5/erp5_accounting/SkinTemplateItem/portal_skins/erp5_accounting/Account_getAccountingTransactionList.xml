<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>LOG=lambda message: context.log("Account_getAccountingTransactionList", message)\n
\n
from Products.ERP5Type.Document import newTempAccountingTransaction\n
\n
kwd={"omit_simulation" : 1}\n
# read settings from user preference\n
preference = context.getPortalObject().portal_preferences\n
from_date = kw.get(\'from_date\', preference\\\n
                        .getPreferredAccountingTransactionFromDate())\n
if from_date :\n
  kwd[\'from_date\'] = from_date\n
at_date = kw.get(\'at_date\', preference\\\n
                        .getPreferredAccountingTransactionAtDate())\n
if at_date :\n
  kwd[\'at_date\'] = at_date\n
simulation_state = kw.get(\'simulation_state\', preference\\\n
                    .getPreferredAccountingTransactionSimulationStateList())\n
if simulation_state :\n
  kwd[\'transaction_simulation_state\'] = simulation_state\n
section_category = preference\\\n
                    .getPreferredAccountingTransactionSectionCategory()\n
if section_category :\n
  kwd[\'transaction_section_category\'] = section_category\n
  kwd[\'section_category\'] = section_category\n
\n
# Special filtering for GL\n
#  XXX this script could also be used for entity / bank account ?\n
MARKER = []\n
payment_uid = kw.get(\'source_uid\', MARKER)\n
if payment_uid is not MARKER:\n
  kwd[\'payment_uid\'] = payment_uid\n
no_payment_uid = kw.get(\'no_source_uid\', MARKER)\n
if no_payment_uid is not MARKER:\n
  kwd[\'no_payment_uid\'] = 1\n
\n
mirror_section_uid = kw.get(\'mirror_section_uid\', MARKER)\n
if mirror_section_uid is not MARKER:\n
  kwd[\'mirror_section_uid\'] = mirror_section_uid\n
no_mirror_section_uid = kw.get(\'no_mirror_section_uid\', MARKER)\n
if no_mirror_section_uid is not MARKER:\n
  kwd[\'no_mirror_section_uid\'] = 1\n
  \n
node_uid = kw.get(\'node_uid\', MARKER)\n
if node_uid is not MARKER:\n
  kwd[\'node_uid\'] = node_uid\n
  kwd[\'getUid\'] = node_uid # Account_zGetAccountingTransactionList compat\n
\n
# TODO: optimize this part\n
# ie evaluate only the displayed lines\n
\n
new_result = []\n
#LOG(\'kwd %s\' % kwd)\n
#LOG(\'SQL:\\n%s\'%context.Account_zGetAccountingTransactionList(src__=1, **kwd))\n
result = context.Account_zGetAccountingTransactionList(**kwd)\n
\n
net_balance = 0.0\n
\n
if from_date not in (None, MARKER) and kw.get(\'from_date_summary\', 0) :\n
  get_inventory_kw = {}\n
  get_inventory_kw[\'omit_simulation\'] = 1\n
  get_inventory_kw[\'section_category\'] = section_category\n
  get_inventory_kw[\'node_uid\'] = kw.get(\'node_uid\', context.getUid())\n
  if simulation_state :\n
    get_inventory_kw[\'simulation_state\'] = simulation_state\n
  if mirror_section_uid is not MARKER :\n
    get_inventory_kw[\'mirror_section_uid\'] = mirror_section_uid\n
  if payment_uid is not MARKER :\n
    get_inventory_kw[\'payment_uid\'] = payment_uid\n
\n
  getInventoryAssetPrice = context.getPortalObject()\\\n
                                .portal_simulation.getInventoryAssetPrice\n
  last_total_debit = getInventoryAssetPrice(omit_output=1,\n
                                to_date=from_date, **get_inventory_kw)\n
  last_total_credit = getInventoryAssetPrice(omit_input=1,\n
                                to_date=from_date, **get_inventory_kw)\n
  if last_total_credit != 0 :\n
    last_total_credit = - last_total_credit\n
\n
  if last_total_debit != 0 or last_total_credit  != 0 :\n
    from_date_summary = newTempAccountingTransaction(\n
          context.getPortalObject(), "temp_%s" % context.getUid())\n
    from_date_summary.setUid(\'new_000\')\n
    net_balance = last_total_debit - last_total_credit\n
    from_date_summary.edit(\n
          title = context.Base_TranslateString("Previous Balance"),\n
          translated_portal_type = "",\n
          translated_simulation_state_title = "",\n
          net_balance = net_balance,\n
          balance = net_balance,\n
          credit = last_total_credit,\n
          debit = last_total_debit,\n
          current_transaction_line_path = None,\n
          third_party = None,\n
          date = from_date,\n
    )\n
    new_result.append(from_date_summary)\n
\n
if src__:\n
  return result\n
\n
for l in result:\n
  o = l.getObject()\n
  net_balance += l.balance or 0.0\n
  if o is not None:\n
    c = o.asContext( net_balance = net_balance,\n
                     balance = l.balance,\n
                     credit = l.credit,\n
                     debit = l.debit,\n
                     date = l.date,\n
                     current_transaction_line_path =\n
                              l.current_transaction_line_path,\n
                     third_party = l.third_party,\n
                     payment = l.payment_uid,\n
                     specific_reference = l.specific_reference,\n
                  )\n
    new_result.append(c)\n
\n
return new_result\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/erp5/portal_skins/erp5_accounting/Account_getAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>src__=0, **kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>src__</string>
                            <string>kw</string>
                            <string>LOG</string>
                            <string>Products.ERP5Type.Document</string>
                            <string>newTempAccountingTransaction</string>
                            <string>kwd</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>preference</string>
                            <string>from_date</string>
                            <string>_write_</string>
                            <string>at_date</string>
                            <string>simulation_state</string>
                            <string>section_category</string>
                            <string>MARKER</string>
                            <string>payment_uid</string>
                            <string>no_payment_uid</string>
                            <string>mirror_section_uid</string>
                            <string>no_mirror_section_uid</string>
                            <string>node_uid</string>
                            <string>new_result</string>
                            <string>_apply_</string>
                            <string>result</string>
                            <string>net_balance</string>
                            <string>None</string>
                            <string>get_inventory_kw</string>
                            <string>getInventoryAssetPrice</string>
                            <string>last_total_debit</string>
                            <string>last_total_credit</string>
                            <string>from_date_summary</string>
                            <string>_getiter_</string>
                            <string>l</string>
                            <string>o</string>
                            <string>c</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <int>0</int>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Account_getAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
