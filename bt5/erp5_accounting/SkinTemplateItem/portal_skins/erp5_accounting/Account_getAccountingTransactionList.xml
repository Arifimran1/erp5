<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>LOG=lambda message: context.log("Account_getAccountingTransactionList", message)\n
\n
from Products.ERP5Type.Document import newTempAccountingTransaction\n
\n
precision = context.Base_getPreferredPrecision()\n
params = {"omit_simulation": 1}\n
pref = context.getPortalObject().portal_preferences\n
r_ = lambda x: context.Base_getRoundValue(x, precision)\n
\n
###\n
# Get the \'from_date\' parameter\n
if kw.get(\'no_from_date\', 0):\n
  from_date = None\n
else:\n
  from_date = kw.get( \'from_date\'\n
                    , pref.getPreferredAccountingTransactionFromDate()\n
                    )\n
if from_date:\n
  params[\'from_date\'] = from_date\n
\n
###\n
# Get the \'simulation_state\' parameter\n
simulation_state = kw.get( \'simulation_state\'\n
                         , pref.getPreferredAccountingTransactionSimulationStateList()\n
                         )\n
if simulation_state:\n
  params[\'transaction_simulation_state\'] = simulation_state\n
\n
###\n
# Get the \'section_category\' parameter\n
section_category = pref.getPreferredAccountingTransactionSectionCategory()\n
if section_category:\n
  params[\'transaction_section_category\'] = section_category\n
\n
###\n
# Get payment and mirror related parameters\n
# Special filtering for GL\n
#  XXX this script could also be used for entity / bank account ?\n
MARKER = []\n
no_payment_uid        = kw.get(\'no_source_uid\',         MARKER)\n
no_mirror_section_uid = kw.get(\'no_mirror_section_uid\', MARKER)\n
payment_uid           = kw.get(\'source_uid\',            MARKER)\n
mirror_section_uid    = kw.get(\'mirror_section_uid\',    MARKER)\n
if no_payment_uid        is not MARKER: params[\'no_payment_uid\']        = 1\n
if no_mirror_section_uid is not MARKER: params[\'no_mirror_section_uid\'] = 1\n
if payment_uid           is not MARKER: params[\'payment_uid\']           = payment_uid\n
if mirror_section_uid    is not MARKER: params[\'mirror_section_uid\']    = mirror_section_uid\n
\n
# Initialize the final line list and the net balance\n
new_result = []\n
net_balance = 0.0\n
\n
### Add a previous balance line\n
if from_date not in (None, MARKER) and kw.get(\'from_date_summary\', 0):\n
\n
  ## Normal use of inventory stuff\n
  get_inventory_kw = { \'omit_simulation\'         : 1\n
                     , \'section_category\'        : section_category\n
                     , \'node_uid\'                : kw.get(\'node_uid\', context.getUid())\n
                     , \'to_date\'                 : from_date\n
                     , \'section_portal_type_list\': [\'Organisation\']\n
                     }\n
  if simulation_state                : get_inventory_kw[\'simulation_state\']   = simulation_state\n
  if payment_uid is not MARKER       : get_inventory_kw[\'payment_uid\']        = payment_uid\n
  if mirror_section_uid is not MARKER: get_inventory_kw[\'mirror_section_uid\'] = mirror_section_uid\n
\n
  getInventoryAssetPrice = context.getPortalObject().portal_simulation.getInventoryAssetPrice\n
  previous_total_debit   = r_(getInventoryAssetPrice(omit_output = 1, **get_inventory_kw))\n
  previous_total_credit  = r_(getInventoryAssetPrice(omit_input  = 1, **get_inventory_kw))\n
\n
  if previous_total_credit != 0 :\n
    previous_total_credit = - previous_total_credit\n
\n
  # Add a new line at the top of the listbox called "Previous Balance"\n
  if previous_total_credit != 0 or previous_total_debit!= 0:\n
    net_balance = r_(previous_total_debit - previous_total_credit)\n
    from_date_summary = newTempAccountingTransaction( context.getPortalObject()\n
                                                    , "temp_%s" % context.getUid()\n
                                                    )\n
    from_date_summary.setUid(\'new_000\')\n
    from_date_summary.edit( \\\n
        title                             = context.Base_translateString("Previous Balance")\n
      , date                              = from_date - 1\n
      , translated_portal_type            = ""\n
      , translated_simulation_state_title = ""\n
      , net_balance                       = net_balance\n
      , balance                           = net_balance\n
      , credit                            = previous_total_credit\n
      , debit                             = previous_total_debit\n
      , current_transaction_line_path     = None\n
      , third_party                       = None\n
      )\n
    new_result.append(from_date_summary)\n
\n
\n
###\n
# Get the \'at_date\' parameter\n
at_date = kw.get( \'at_date\'\n
                , pref.getPreferredAccountingTransactionAtDate()\n
                )\n
if at_date:\n
  params[\'at_date\'] = at_date\n
\n
###\n
# Get the node UID\n
node_uid = kw.get(\'node_uid\', MARKER)\n
if node_uid is not MARKER:\n
  params[\'node_uid\'] = node_uid\n
  params[\'getUid\']   = node_uid # Account_zGetAccountingTransactionList compat\n
\n
###\n
# Get the list of lines\n
# TODO: optimize this part by giving necessary parameters to only get the displayed lines\n
# LOG(\'kwd %s\' % kwd)\n
# LOG(\'SQL:\\n%s\'%context.Account_zGetAccountingTransactionList(src__=1, **params))\n
result = context.Account_zGetAccountingTransactionList(**params)\n
\n
if src__:\n
  return result\n
\n
for l in result:\n
  o = l.getObject()\n
  net_balance = r_(net_balance) + r_(l.balance)\n
  if o is not None:\n
    c = o.asContext( net_balance                   = r_(net_balance)\n
                   , balance                       = r_(l.balance)\n
                   , credit                        = r_(l.credit)\n
                   , debit                         = r_(l.debit)\n
                   , date                          = l.date\n
                   , current_transaction_line_path = l.current_transaction_line_path\n
                   , third_party                   = l.third_party\n
                   , payment                       = l.payment_uid\n
                   , specific_reference            = l.specific_reference\n
                   )\n
    new_result.append(c)\n
\n
return new_result\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/nexedi/portal_skins/erp5_accounting/Account_getAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>src__=0, **kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>src__</string>
                            <string>kw</string>
                            <string>LOG</string>
                            <string>Products.ERP5Type.Document</string>
                            <string>newTempAccountingTransaction</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>precision</string>
                            <string>params</string>
                            <string>pref</string>
                            <string>r_</string>
                            <string>None</string>
                            <string>from_date</string>
                            <string>_write_</string>
                            <string>simulation_state</string>
                            <string>section_category</string>
                            <string>MARKER</string>
                            <string>no_payment_uid</string>
                            <string>no_mirror_section_uid</string>
                            <string>payment_uid</string>
                            <string>mirror_section_uid</string>
                            <string>new_result</string>
                            <string>net_balance</string>
                            <string>get_inventory_kw</string>
                            <string>getInventoryAssetPrice</string>
                            <string>_apply_</string>
                            <string>previous_total_debit</string>
                            <string>previous_total_credit</string>
                            <string>from_date_summary</string>
                            <string>at_date</string>
                            <string>node_uid</string>
                            <string>result</string>
                            <string>_getiter_</string>
                            <string>l</string>
                            <string>o</string>
                            <string>c</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <int>0</int>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Account_getAccountingTransactionList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
