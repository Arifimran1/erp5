<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts17681760.25</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>Input_viewDocumentManagement.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*global rJS, RSVP, jQuery,\n
 promiseEventListener, initGadgetMixin */\n
(function(window, rJS, RSVP, $, promiseEventListener, initGadgetMixin) {\n
    "use strict";\n
    function datatouri(data, mime_type) {\n
        var result = "data:";\n
        if (mime_type !== undefined) {\n
            result += mime_type;\n
        }\n
        return result + ";base64," + window.btoa(data);\n
    }\n
    function disableAllButtons(gadget) {\n
        // Prevent double click\n
        var i, button_list = gadget.props.element.getElementsByClassName("ui-btn");\n
        for (i = 0; i < button_list.length; i += 1) {\n
            button_list[i].disabled = true;\n
        }\n
    }\n
    function waitForKnowledgeExtraction(gadget) {\n
        return new RSVP.Queue().push(function() {\n
            return promiseEventListener(gadget.props.element.getElementsByClassName("knowledge_form")[0], "submit", false);\n
        }).push(function() {\n
            disableAllButtons(gadget);\n
            return gadget.aq_getAttachment({\n
                _id: gadget.props.jio_key,\n
                _attachment: "body.json"\n
            });\n
        }).push(function(body_json) {\n
            $.mobile.loading("show");\n
            // XXX Hardcoded relative URL\n
            return gadget.aq_ajax({\n
                url: "../../runKnowledgeExtraction",\n
                type: "POST",\n
                data: body_json,\n
                headers: {\n
                    "Content-Type": "application/json"\n
                }\n
            });\n
        }).push(undefined, function(error) {\n
            // Always drop the loader\n
            $.mobile.loading("hide");\n
            throw error;\n
        }).push(function(evt) {\n
            $.mobile.loading("hide");\n
            var json_data = JSON.parse(evt.target.responseText);\n
            if (json_data.success !== true) {\n
                throw new Error(json_data.error);\n
            }\n
            return gadget.aq_putAttachment({\n
                _id: gadget.props.jio_key,\n
                _attachment: "body.json",\n
                _data: JSON.stringify(json_data.data, null, 2),\n
                _mimetype: "application/json"\n
            });\n
        }).push(function() {\n
            return gadget.whoWantsToDisplayThisDocument(gadget.props.jio_key);\n
        }).push(function(url) {\n
            return gadget.pleaseRedirectMyHash(url);\n
        });\n
    }\n
    function waitForDeletion(gadget) {\n
        return new RSVP.Queue().push(function() {\n
            return promiseEventListener(gadget.props.element.getElementsByClassName("delete_form")[0], "submit", false);\n
        }).push(function() {\n
            disableAllButtons(gadget);\n
            // Delete jIO document\n
            return gadget.aq_remove({\n
                _id: gadget.props.jio_key\n
            });\n
        }).push(function() {\n
            return gadget.whoWantsToDisplayHome();\n
        }).push(function(url) {\n
            return gadget.pleaseRedirectMyHash(url);\n
        });\n
    }\n
    var gadget_klass = rJS(window);\n
    initGadgetMixin(gadget_klass);\n
    gadget_klass.declareAcquiredMethod("aq_remove", "jio_remove").declareAcquiredMethod("aq_getAttachment", "jio_getAttachment").declareAcquiredMethod("aq_putAttachment", "jio_putAttachment").declareAcquiredMethod("aq_get", "jio_get").declareAcquiredMethod("aq_ajax", "jio_ajax").declareAcquiredMethod("pleaseRedirectMyHash", "pleaseRedirectMyHash").declareAcquiredMethod("whoWantsToDisplayThisDocument", "whoWantsToDisplayThisDocument").declareAcquiredMethod("whoWantsToDisplayHome", "whoWantsToDisplayHome").declareMethod("render", function(options) {\n
        this.props.jio_key = options.id;\n
        var gadget = this;\n
        return new RSVP.Queue().push(function() {\n
            return RSVP.all([ gadget.aq_get({\n
                _id: options.id\n
            }), gadget.aq_getAttachment({\n
                _id: options.id,\n
                _attachment: "body.json"\n
            }) ]);\n
        }).push(function(result_list) {\n
            var export_link = gadget.props.element.querySelector(".export_link");\n
            export_link.download = result_list[0].data.title;\n
            export_link.href = datatouri(result_list[1], "application/json");\n
        });\n
    }).declareMethod("startService", function() {\n
        return RSVP.all([ waitForDeletion(this), waitForKnowledgeExtraction(this) ]);\n
    });\n
})(window, rJS, RSVP, jQuery, promiseEventListener, initGadgetMixin);

]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>4364</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
