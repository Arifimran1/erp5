<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>allow = False\n
\n
#context.log(\'group_list\',group_list)\n
\n
def match(criterion_list, reference_list):\n
  for criterion in criterion_list:\n
    if criterion in reference_list:\n
      return True\n
  return False\n
\n
if not allow and role_list is not None:\n
  from AccessControl import getSecurityManager\n
  roles = getSecurityManager().getUser().getRoles()\n
  #context.log(\'roles\',roles)\n
  allow = match(roles, role_list)\n
\n
if not allow and group_list is not None:\n
  user_function_list = context.Baobab_getUserAssignedFunctionList()\n
  function_list = context.Baobab_getFunctionList(group_list=group_list)\n
  #context.log(\'user_function_list\',user_function_list)\n
  #context.log(\'function_list\',function_list)\n
  allow = match(user_function_list, function_list)\n
#context.log(\'allow\',allow)\n
return allow\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>group_list=None, role_list=None</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Baobab_matchUserFunction</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
