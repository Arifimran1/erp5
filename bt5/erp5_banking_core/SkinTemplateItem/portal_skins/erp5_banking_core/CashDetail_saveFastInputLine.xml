<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

cell_base_id = \'movement\'\n
line_kwd = {\'base_id\':cell_base_id}\n
\n
variation_list       = kw[\'variation_list\']\n
emission_letter_list = kw[\'emission_letter_list\']\n
cash_status_list     = kw[\'cash_status_list\']\n
other_parameter_list = kw[\'other_parameter\']\n
operation_currency   = other_parameter_list[0]\n
line_portal_type     = other_parameter_list[1]\n
read_only            = other_parameter_list[2]\n
column_base_category = other_parameter_list[3]\n
use_inventory        = other_parameter_list[4]\n
\n
# get the column base list\n
if column_base_category == \'cash_status\':\n
  columne_base_list = cash_status_list\n
elif column_base_category == \'emission_letter\':\n
  column_base_list = emission_letter_list\n
else:\n
  column_base_list = variation_list\n
\n
base_category_list = (\'emission_letter\', \'cash_status\', \'variation\')\n
per_resource_dict = {}\n
\n
# remove previous line\n
old_line = [x.getObject() for x in context.searchFolder(portal_type=[line_portal_type,])]\n
if len(old_line)>0:\n
  for object_list in old_line:\n
    context.deleteContent(object_list.getId())\n
\n
# get the list of movement we need to create\n
for line in listbox:\n
  for counter in xrange(1, len(column_base_list)+1):\n
    quantity = line["column%s" %(str(counter),)]\n
    if quantity != 0:\n
      context.log("listboxline", line)\n
      movement = {}\n
      movement[\'quantity\'] = quantity\n
      # get variation for the cell\n
      if column_base_category == \'cash_status\':\n
        movement[\'cash_status\'] =  "cash_status/%s" %cash_status_list[counter-1]\n
        if line.has_key(\'emission_letter\'):\n
          movement[\'emission_letter\'] = "emission_letter/%s" %line[\'emission_letter\']\n
        elif len(emission_letter_list) == 1:\n
          movement[\'emission_letter\'] =  "emission_letter/%s" %(emission_letter_list[0].lower(),)\n
        else:\n
          movement[\'emission_letter\'] = "emission_letter/not_defined" %line[\'emission_letter\']\n
        if line.has_key(\'variation\'):\n
          movement[\'variation\'] = "variation/%s" %line[\'variation\']\n
        elif len(variation_list) == 1:\n
          movement[\'variation\'] = "variation/%s" %(variation_list[0],)\n
        else:\n
          movement[\'variation\'] = "variation/not_defined"\n
      elif column_base_category == \'emission_letter\':\n
        if line.has_key(\'cash_status\'):\n
          movement[\'cash_status\'] =  "cash_status/%s" %line[\'cash_status\']\n
        elif len(cash_status_list) == 1:\n
          movement[\'cash_status\'] =  "cash_status/%s" %(cash_status_list[0],)\n
        else:\n
          movement[\'cash_status\'] =  "cash_status/not_defined"\n
        movement[\'emission_letter\'] = "emission_letter/%s" %emission_letter_list[counter-1]\n
        if line.has_key(\'variation\'):\n
          movement[\'variation\'] = "variation/%s" %line[\'variation\']\n
        elif len(variation_list) == 1:\n
          movement[\'variation\'] = "variation/%s" %(variation_list[0],)\n
        else:\n
          movement[\'variation\'] = "variation/not_defined"\n
      else:\n
        if line.has_key(\'cash_status\'):\n
          movement[\'cash_status\'] =  "cash_status/%s" %line[\'cash_status\']\n
        elif len(cash_status_list) == 1:\n
          movement[\'cash_status\'] =  "cash_status/%s" %(cash_status_list[0],)\n
        else:\n
          movement[\'cash_status\'] =  "cash_status/not_defined"\n
        if line.has_key(\'emission_letter\'):\n
          movement[\'emission_letter\'] = "emission_letter/%s" %line[\'emission_letter\']\n
        elif len(emission_letter_list) == 1:\n
          movement[\'emission_letter\'] =  "emission_letter/%s" %(emission_letter_list[0].lower(),)\n
        else:\n
          movement[\'emission_letter\'] = "emission_letter/not_defined"\n
        movement[\'variation\'] = "variation/%s" %variation_list[counter-1]\n
      context.log("movement", movement)\n
      # generate a key based on variation\n
      # this will allow us to check if there is multiple line for the same resource + variation\n
      movement_key = \'%s_%s_%s\' %(movement[\'cash_status\'], movement[\'emission_letter\'], movement[\'variation\'])\n
      resource_id = line["resource_id"]\n
      if per_resource_dict.has_key(resource_id) and per_resource_dict[resource_id].has_key(movement_key):\n
        # add quantity in case af same movement\n
        per_resource_dict[resource_id][movement_key][\'quantity\'] = per_resource_dict[resource_id][movement_key][\'quantity\'] + movement[\'quantity\']\n
      elif per_resource_dict.has_key(resource_id):\n
        # add variation for this resource\n
        per_resource_dict[resource_id][movement_key] = movement\n
      else:\n
        # create a dict of variation for this resource\n
        per_resource_dict[resource_id] = {movement_key:movement,}\n
\n
# create the movement\n
variation_not_defined = 0\n
for resource_id in per_resource_dict.keys():\n
  variation_list_dict = per_resource_dict[resource_id].values()\n
  # get the resource\n
  resource_list = context.portal_catalog(portal_type = (\'Banknote\',\'Coin\'), id = resource_id)\n
  if len(resource_list) == 0:\n
    context.log(\'CashDetail_saveFastInputLine\', \'Cannot get the resource object for id = %s\' %(resource_id,))\n
    continue\n
  resource_object = resource_list[0].getObject()\n
  # get the variation\n
  emission_letter_dict = {}\n
  cash_status_dict = {}\n
  variation_dict = {}\n
  for variation in variation_list_dict:\n
    letter = variation[\'emission_letter\']\n
    status = variation[\'cash_status\']\n
    variation = variation[\'variation\']\n
    # check if variation exist for the resource\n
    if column_base_category == "variation":\n
      if variation != \'variation/not_defined\' and variation.lstrip(\'variation/\') not in resource_object.getVariationList():\n
        variation_not_defined = 1\n
        break\n
    if not emission_letter_dict.has_key(letter):\n
      emission_letter_dict[letter] = 1\n
    if not cash_status_dict.has_key(status):\n
      cash_status_dict[status] = 1\n
    if not variation_dict.has_key(variation):\n
      variation_dict[variation] = 1\n
\n
  variation_category_list = emission_letter_dict.keys() + cash_status_dict.keys() + variation_dict.keys()\n
  # create the cash line\n
  line = context.newContent(portal_type           = line_portal_type\n
                            , resource_value      = resource_object # banknote or coin\n
                            , quantity_unit_value = context.portal_categories.quantity_unit.unit\n
                            )\n
  # set base category list on line\n
  line.setVariationBaseCategoryList(base_category_list)\n
  # set category list line\n
  line.setVariationCategoryList(variation_category_list)\n
  line.updateCellRange(script_id=\'CashDetail_asCellRange\', base_id=cell_base_id)\n
  # create cell\n
  cell_range_key_list = line.getCellRangeKeyList(base_id=cell_base_id)\n
  if cell_range_key_list <> [[None, None]] :\n
    for k in cell_range_key_list:\n
      # check we don\'t create a cell for variation which is not defined\n
      key = "%s_%s_%s" %(k[2], k[0], k[1])\n
      if not per_resource_dict[resource_id].has_key(key):\n
        continue\n
      category_list = filter(lambda k_item: k_item is not None, k)\n
      c = line.newCell(*k, **line_kwd)\n
      if use_inventory == \'True\':\n
        mapped_value_list = [\'price\', \'inventory\']\n
      else:\n
        mapped_value_list = [\'price\', \'quantity\']\n
      c.edit(membership_criterion_category_list = category_list\n
             , mapped_value_property_list       = mapped_value_list\n
             , category_list                    = category_list\n
             , price                            = line.getResourceValue().getBasePrice()\n
             , force_update                     = 1\n
             )\n
  # set quantity on cell to define quantity of bank notes / coins\n
  for variation_item in variation_list_dict:\n
    variation = variation_item[column_base_category]\n
    if column_base_category == "cash_status":\n
      cell = line.getCell(variation_item["emission_letter"],\n
                          variation_item["variation"],\n
                          variation,\n
                          base_id=cell_base_id)\n
    elif column_base_category == "emission_letter":\n
      cell = line.getCell(variation,\n
                          variation_item["variation"],\n
                          variation_item["cash_status"],\n
                          base_id=cell_base_id)\n
    else:\n
      cell = line.getCell(variation_item["emission_letter"],\n
                          variation,\n
                          variation_item["cash_status"],\n
                          base_id=cell_base_id)\n
    # set quantity\n
    if cell is not None:\n
      if use_inventory == \'True\':\n
        cell.setInventory(variation_item["quantity"])\n
      else:\n
        cell.setQuantity(variation_item["quantity"])\n
\n
if variation_not_defined:\n
  old_line = [x.getObject() for x in context.Delivery_getMovementList(portal_type=[line_portal_type,])]\n
  if len(old_line)>0:\n
    for object_list in old_line:\n
      context.deleteContent(object_list.getId())\n
  request  = context.REQUEST\n
  redirect_url = \'%s/view?%s\' % ( context.absolute_url()\n
                                , "portal_status_message=%s doesn\\\'t  exist for %s" %(resource_object.getTitle(), variation)\n
                                )\n
  request[ \'RESPONSE\' ].redirect( redirect_url )\n
else:\n
  request  = context.REQUEST\n
  redirect_url = \'%s/view?%s\' % ( context.absolute_url()\n
                                  , \'portal_status_message=Lines Created\'\n
                                  )\n
  request[ \'RESPONSE\' ].redirect( redirect_url )\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/baobab/portal_skins/erp5_banking_core/CashDetail_saveFastInputLine</string> </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>listbox=None, **kw</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>listbox</string>
                            <string>kw</string>
                            <string>cell_base_id</string>
                            <string>line_kwd</string>
                            <string>_getitem_</string>
                            <string>variation_list</string>
                            <string>emission_letter_list</string>
                            <string>cash_status_list</string>
                            <string>other_parameter_list</string>
                            <string>operation_currency</string>
                            <string>line_portal_type</string>
                            <string>read_only</string>
                            <string>column_base_category</string>
                            <string>use_inventory</string>
                            <string>columne_base_list</string>
                            <string>column_base_list</string>
                            <string>base_category_list</string>
                            <string>per_resource_dict</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>_getiter_</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>x</string>
                            <string>old_line</string>
                            <string>len</string>
                            <string>object_list</string>
                            <string>line</string>
                            <string>xrange</string>
                            <string>counter</string>
                            <string>str</string>
                            <string>quantity</string>
                            <string>movement</string>
                            <string>_write_</string>
                            <string>movement_key</string>
                            <string>resource_id</string>
                            <string>variation_not_defined</string>
                            <string>variation_list_dict</string>
                            <string>resource_list</string>
                            <string>resource_object</string>
                            <string>emission_letter_dict</string>
                            <string>cash_status_dict</string>
                            <string>variation_dict</string>
                            <string>variation</string>
                            <string>letter</string>
                            <string>status</string>
                            <string>variation_category_list</string>
                            <string>cell_range_key_list</string>
                            <string>None</string>
                            <string>k</string>
                            <string>key</string>
                            <string>filter</string>
                            <string>category_list</string>
                            <string>_apply_</string>
                            <string>c</string>
                            <string>mapped_value_list</string>
                            <string>variation_item</string>
                            <string>cell</string>
                            <string>request</string>
                            <string>redirect_url</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <none/>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>CashDetail_saveFastInputLine</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
