<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">bfINCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

if listbox is None:\n
   default_cashStatus_list     = cashDetail_parameter[\'cashStatus_list\']\n
   default_emissionLetter_list = cashDetail_parameter[\'emissionLetter_list\']\n
   default_variation_list      = cashDetail_parameter[\'variation_list\']\n
   operation_currency          = cashDetail_parameter[\'operation_currency\']\n
   default_line_portalType     = cashDetail_parameter[\'line_portalType\']\n
   default_columnBase          = cashDetail_parameter[\'columnBase\']\n
   default_updatePossible      = cashDetail_parameter[\'updatePossible\']\n
   default_currencyCash_portalType =  cashDetail_parameter[\'currencyCash_portalType\']\n
\n
   if cashDetail_parameter.has_key(\'useInventory\'):\n
      default_useInventory        = cashDetail_parameter[\'useInventory\']\n
      default_useInventory        = default_useInventory or 0\n
   else:\n
      default_useInventory        = 0\n
   \n
   if  default_currencyCash_portalType is None:\n
      default_currencyCash_portalType = (\'Banknote\',\'Coin\')\n
      \n
   default_otherParameter = (operation_currency, default_line_portalType, default_updatePossible,default_columnBase,default_useInventory)\n
\n
\n
   if default_cashStatus_list is None :\n
      default_cashStatus_list = [x[1] for x in context.portal_categories.cash_status.getCategoryChildTitleItemList()[1:]] \n
   if default_emissionLetter_list is None :\n
      default_emissionLetter_list = [x[1] for x in context.portal_categories.emission_letter.getCategoryChildTitleItemList()[1:]] \n
   if default_variation_list is None :\n
      default_variation_list = [x[1] for x in context.portal_categories.variation.getCategoryChildTitleItemList()[1:]] \n
   default_emissionLetter_list.sort()\n
\n
   currency_list = [x.getObject() for x in context.portal_catalog(portal_type=default_currencyCash_portalType ) \\\n
                                   if x.getObject().getPriceCurrency() == \'currency_module/\'+operation_currency]\n
\n
   # check with variation list\n
   # do this if only one variation, if many, we display and check is done at validation of fast input\n
   context.log(\'currency list\', currency_list)\n
   old_currency_list = currency_list[:]\n
   if len(default_variation_list) == 1: # and len(default_emissionLetter_list) == 1 and len(default_cashStatus_list) == 1:\n
      for variation in default_variation_list:\n
         for currency in old_currency_list:\n
            if variation not in currency.getVariationList():\n
               currency_list.remove(currency)\n
\n
   currency_list = context.CashDetail_sortCurrency(currency_list)\n
\n
   total_price = 0\n
   listbox = []\n
   Line_number = 0\n
   for listbox_line in currency_list :\n
       if default_columnBase == \'cashStatus\':\n
          axis_list_dict = {\'column\':default_cashStatus_list,\'line1\': default_emissionLetter_list ,\'line2\': default_variation_list}\n
          axis_dict      = {\'column\':\'cash_status\',\'line1\': \'emission_letter\' ,\'line2\': \'variation\'}\n
          axis_name      = {\'column\':\'cashStatus\',\'line1\': \'emissionLetter\' ,\'line2\': \'variation\'}\n
       elif default_columnBase == \'emissionLetter\':\n
          axis_list_dict = {\'column\':default_emissionLetter_list ,\'line1\':default_cashStatus_list ,\'line2\': default_variation_list}\n
          axis_dict      = {\'column\':\'emission_letter\',\'line1\':\'cash_status\'  ,\'line2\': \'variation\'}\n
          axis_name      = {\'column\':\'emissionLetter\' ,\'line1\':\'cashStatus\', \'line2\': \'variation\'}\n
       else:\n
          axis_list_dict = {\'column\':default_variation_list,\'line1\': default_emissionLetter_list ,\'line2\': default_cashStatus_list}\n
          axis_dict      = {\'column\':\'variation\',\'line1\': \'emission_letter\' ,\'line2\':\'cash_status\' }\n
          axis_name      = {\'column\':\'variation\',\'line1\': \'emissionLetter\' ,\'line2\':\'cashStatus\' }\n
\n
       resource_created = False\n
       resource_list = context.portal_catalog(portal_type = (\'Banknote\',\'Coin\') ,id= listbox_line.getId())\n
       resource_price = resource_list[0].getObject().getBasePrice()\n
\n
       find_currencyLine = context.CashDetail_search_lineByResource(listbox_line.getId(),default_line_portalType )   # Search if current object contain line with the gived portal type#       if not find_currencyLine is None :                         # If Check Payment line is found\n
       for line1 in axis_list_dict[\'line1\'] :     \n
          for line2 in axis_list_dict[\'line2\'] :\n
              debug_kha = []    \n
              counter = 0\n
              Line_number += 1\n
 #             for y in columnBase_list:     \n
              newLine_created = False  \n
              total_quantity = 0       \n
              for col in axis_list_dict[\'column\']:\n
                  counter += 1\n
                  quantity = 0\n
                  \n
                  if find_currencyLine is not None:\n
                     if default_columnBase == \'cashStatus\':\n
                        cell = find_currencyLine.getCell(axis_dict[\'line1\']+\'/\'+line1, axis_dict[\'line2\']+\'/\'+line2  , axis_dict[\'column\']+\'/\'+col)\n
                     elif default_columnBase == \'emissionLetter\':\n
                        cell = find_currencyLine.getCell(axis_dict[\'column\']+\'/\'+col,  axis_dict[\'line2\']+\'/\'+line2 , axis_dict[\'line1\']+\'/\'+line1  )\n
                     else:\n
                        cell = find_currencyLine.getCell(axis_dict[\'line1\']+\'/\'+line1  , axis_dict[\'column\']+\'/\'+col, axis_dict[\'line2\']+\'/\'+line2)\n
\n
#                     cell = find_currencyLine.getCell(axis_dict[\'line1\']+\'/\'+line1  , axis_dict[\'line2\']+\'/\'+line2, axis_dict[\'column\']+\'/\'+col)\n
                     if cell is not None:\n
#                        debug_kha.append((axis_dict[\'line1\']+\'/\'+line1  , axis_dict[\'line2\']+\'/\'+line2, axis_dict[\'column\']+\'/\'+col))\n
                        if (default_useInventory is None) or (default_useInventory == 0):\n
                           quantity = cell.getQuantity()\n
                        else:\n
                           quantity = cell.getInventory()\n
\n
                        if not ((quantity is None) or (quantity == 0)  or ( newLine_created == True)):\n
                           newLine_created = True\n
                           resource_created = True\n
                           currency_dict = {\'resource\':listbox_line.getTranslatedTitle(),\'resourceId\':listbox_line.getId()}\n
                           currency_dict[axis_name[\'line1\']] = line1\n
                           currency_dict[axis_name[\'line2\']] = line2\n
                        if newLine_created == True:\n
                           currency_dict[\'column\'+str(counter)]= quantity                         \n
                           total_quantity += quantity \n
\n
              if newLine_created:\n
                 currency_dict[\'price\']= context.Integer_toString(int(total_quantity * resource_price))\n
                 total_price += int(total_quantity * resource_price)\n
                 listbox.append(currency_dict)\n
\n
 #             raise \'KHADIM\', repr(debug_kha)\n
       if not resource_created:\n
          currency_dict = {\'resource\':listbox_line.getTranslatedTitle(),\'resourceId\':listbox_line.getId()}\n
          currency_dict[\'emissionLetter\'] = default_emissionLetter_list[0]\n
          currency_dict[\'cashStatus\']     = default_cashStatus_list[0]\n
          currency_dict[\'variation\']      = default_variation_list[0]\n
          currency_dict[\'numberLineToAdd\']= 0 \n
          resource_price = resource_list[0].getObject().getBasePrice()\n
          currency_dict[\'price\']= context.Integer_toString(int(total_quantity * resource_price))\n
          total_price += int(total_quantity * resource_price)\n
          listbox.append(currency_dict)\n
\n
\n
   total_price = context.Integer_toString(total_price)\n
   context.Base_updateDialogForm(  listbox=listbox\n
                              , calculated_price=total_price\n
                              , otherParameter = default_otherParameter\n
                              , cashStatus_list=default_cashStatus_list\n
                              , emissionLetter_list=default_emissionLetter_list\n
                              , variation_list=default_variation_list\n
                              , line_portalType = default_line_portalType\n
                              , operation_currency = operation_currency\n
                              , empty_line_number=0)\n
\n
\n
\n
\n
   return context.asContext(  context=None\n
                         , portal_type=context.getPortalType()\n
                         , calculated_price=total_price\n
                         , otherParameter = default_otherParameter\n
                         , cashStatus_list=default_cashStatus_list\n
                         , emissionLetter_list=default_emissionLetter_list\n
                         , variation_list=default_variation_list\n
 #                        , line_portalType = default_line_portalType\n
 #                        , operation_currency = operation_currency\n
                         ,**kw\n
                        ).CashDetail_fastInputForm(**kw)\n
\n
\n
else :\n
   otherParameter_list = kw[\'otherParameter\']\n
   default_columnBase = otherParameter_list[3]\n
   default_updatePossible      = otherParameter_list[2]\n
   default_line_portalType     = otherParameter_list[1]\n
   \n
\n
   if default_updatePossible == \'False\':\n
      context.Base_updateDialogForm(listbox=listbox, empty_line_number=0)\n
      return context.asContext(  context=None, portal_type=context.getPortalType() ,**kw ).CashDetail_fastInputForm(**kw)\n
\n
   if default_columnBase == \'cashStatus\':\n
      columnBase_list = kw[\'cashStatus_list\']\n
      maxLines = len(kw[\'emissionLetter_list\']) * len(kw[\'variation_list\'])\n
   elif default_columnBase == \'emissionLetter\':\n
      columnBase_list = kw[\'emissionLetter_list\']\n
      maxLines = len(kw[\'cashStatus_list\']) * len(kw[\'variation_list\'])\n
   else:\n
      columnBase_list = kw[\'variation_list\']\n
      maxLines = len(kw[\'emissionLetter_list\']) * len(kw[\'cashStatus_list\'])\n
\n
   total_price = 0\n
   new_lineList = []\n
   counter = 0\n
\n
   preview_listbox_line = None\n
   numberLineToAdd = 0\n
   numberSameLine = 0\n
\n
   listbox_line_count = len(listbox) \n
   if listbox_line_count > 0:\n
      listbox_line_count_plus_1 = listbox_line_count+1\n
   else:\n
      listbox_line_count_plus_1 = listbox_line_count\n
\n
   last_row = False\n
\n
   last_row = False\n
#   for x in listbox :\n
   for i_listbox in range(0,listbox_line_count_plus_1) :    # Element of ListBox\n
      if i_listbox < listbox_line_count:\n
         listbox_line = listbox[i_listbox]\n
         del listbox_line[\'listbox_key\']\n
\n
\n
      else:\n
         last_row = True\n
\n
      if preview_listbox_line is None :\n
         preview_listbox_line = listbox_line.copy() \n
      elif last_row or preview_listbox_line[\'resourceId\'] <> listbox_line[\'resourceId\'] :\n
         \n
         if numberLineToAdd > (maxLines - numberSameLine) :\n
            numberLineToAdd = maxLines - numberSameLine\n
         if numberLineToAdd > 0:\n
            counter = 1\n
            preview_listbox_line[\'numberLineToAdd\'] = 0\n
            for w in columnBase_list:\n
                preview_listbox_line[\'column\'+str(counter)] = 0\n
                preview_listbox_line[\'price\'] = 0\n
                counter  += 1\n
            for z in range(0,numberLineToAdd) :\n
               new_lineList.append(preview_listbox_line) \n
#            raise \'KHA\',repr((a1,b1,c1, x[\'column4\'], preview_listbox_line[\'column4\'],montest[\'column4\']))\n
         if last_row:\n
            break\n
\n
         preview_listbox_line = listbox_line.copy() \n
         numberSameLine = 0; \n
         numberLineToAdd = 0\n
      numberSameLine +=  1\n
      if maxLines > 1:\n
         numberLineToAdd += listbox_line[\'numberLineToAdd\']\n
         listbox_line[\'numberLineToAdd\'] = 0\n
      resource_list = context.portal_catalog(portal_type = (\'Banknote\',\'Coin\') ,id = listbox_line[\'resourceId\'])\n
      resource_price = resource_list[0].getObject().getBasePrice()\n
      listbox_line[\'resource\'] = resource_list[0].getObject().getTranslatedTitle()\n
\n
      quantity = 0\n
      counter = 1\n
      for y in columnBase_list:\n
          cell_quantity = int(listbox_line[\'column\'+str(counter)] or 0)\n
          quantity = quantity + cell_quantity\n
          counter  += 1\n
      listbox_line[\'price\'] = context.Integer_toString(int(quantity * resource_price))\n
#      raise \'KHA\',repr(( x ))\n
\n
      total_price += int(quantity * resource_price)\n
      new_lineList.append(listbox_line) \n
\n
   listbox = new_lineList \n
#   raise \'KHA\',repr(( listbox ))\n
   total_price = context.Integer_toString(total_price)\n
\n
\n
\n
   context.Base_updateDialogForm(  listbox=listbox\n
                              , calculated_price=total_price\n
                              , empty_line_number=0)\n
\n
   return context.asContext(  context=None\n
                         , portal_type=context.getPortalType()\n
                         , calculated_price=total_price\n
                         ,**kw\n
                        ).CashDetail_fastInputForm(**kw)\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/baobab/portal_skins/erp5_banking_core/CashDetail_fastInputUpdate</string> </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>listbox=None,cashDetail_parameter=None, destination=None,**kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>3</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>listbox</string>
                            <string>cashDetail_parameter</string>
                            <string>destination</string>
                            <string>kw</string>
                            <string>None</string>
                            <string>_getitem_</string>
                            <string>default_cashStatus_list</string>
                            <string>default_emissionLetter_list</string>
                            <string>default_variation_list</string>
                            <string>operation_currency</string>
                            <string>default_line_portalType</string>
                            <string>default_columnBase</string>
                            <string>default_updatePossible</string>
                            <string>default_currencyCash_portalType</string>
                            <string>_getattr_</string>
                            <string>default_useInventory</string>
                            <string>default_otherParameter</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>_getiter_</string>
                            <string>context</string>
                            <string>x</string>
                            <string>currency_list</string>
                            <string>old_currency_list</string>
                            <string>len</string>
                            <string>variation</string>
                            <string>currency</string>
                            <string>total_price</string>
                            <string>Line_number</string>
                            <string>listbox_line</string>
                            <string>axis_list_dict</string>
                            <string>axis_dict</string>
                            <string>axis_name</string>
                            <string>False</string>
                            <string>resource_created</string>
                            <string>resource_list</string>
                            <string>resource_price</string>
                            <string>find_currencyLine</string>
                            <string>line1</string>
                            <string>line2</string>
                            <string>debug_kha</string>
                            <string>counter</string>
                            <string>newLine_created</string>
                            <string>total_quantity</string>
                            <string>col</string>
                            <string>quantity</string>
                            <string>cell</string>
                            <string>True</string>
                            <string>currency_dict</string>
                            <string>_write_</string>
                            <string>str</string>
                            <string>int</string>
                            <string>_apply_</string>
                            <string>otherParameter_list</string>
                            <string>columnBase_list</string>
                            <string>maxLines</string>
                            <string>new_lineList</string>
                            <string>preview_listbox_line</string>
                            <string>numberLineToAdd</string>
                            <string>numberSameLine</string>
                            <string>listbox_line_count</string>
                            <string>listbox_line_count_plus_1</string>
                            <string>last_row</string>
                            <string>range</string>
                            <string>i_listbox</string>
                            <string>w</string>
                            <string>z</string>
                            <string>y</string>
                            <string>cell_quantity</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <none/>
                <none/>
                <none/>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>CashDetail_fastInputUpdate</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
