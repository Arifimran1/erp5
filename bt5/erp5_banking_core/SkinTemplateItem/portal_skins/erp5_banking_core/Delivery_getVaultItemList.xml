<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

# vault_type = None : D\xc3\xa9finit les vaut_types \xc3\xa0 afficher,\n
#                     si valeur est None on r\xc3\xa9cup\xc3\xa8re vault_type\n
#                     depuis les sites auxquels est assign\xc3\xa9 l\'user\n
# exclude_vault_type = None : D\xc3\xa9finit les vaut_types \xc3\xa0 exclure,\n
#                             on veut par exemple les encaisses du Caveau, sauf celles du Tri tiers\n
# current_url = None : Permet de r\xc3\xa9injecter la valeur courante dans le popup et \xc3\xa9vite ainsi l\'affichage de \'???\',\n
#                      on mettra par exemple "current_url=here.getSource()" en param\xc3\xa8tre du\n
#                      Delivery_getVaultItemList utilis\xc3\xa9 dans le TALES de my_source dans le formulaire\n
# user_site = 1 : Permet de s\xc3\xa9lectionner uniquement les encaisses des sites auquels l\'user est affect\xc3\xa9,\n
#                 au lieu des encaisses de tous le sites\n
# leaf_node = 1 : S\xc3\xa9lectionne uniquement les noeuds qui sont des feuilles de l\'arbre (qui n\'ont pas de sous-cat\xc3\xa9gories)\n
# strict_membership = 0 : Appartenance stricte. Si vault_type=\'site\', on s\xc3\xa9lectionnera \'site/agence/principale/paris\',\n
#                         mais pas \'site/agence/principale/paris/caveau\', \'site/agence/principale/paris/surface\' et\n
#                         leurs encaisses. Attention : possibilit\xc3\xa9 de conflit (et donc de popup menu vide) si\n
#                         utilis\xc3\xa9 en m\xc3\xaame temps que leaf_node\n
# with_base = 1 : D\xc3\xa9finie si on renvoie la base categorie \'site\' dans la liste de valeur\n
# all = 0 : Affiche aussi entrante/sortante, utile pour les inventaires\n
\n
from Products.ERP5Type.Cache import CachingMethod\n
\n
def getVaultItemList(vault_type=None, exclude_vault_type=None,\n
    user_site=1, leaf_node=1, strict_membership=0, assignment_list=None, site_list=None, with_base=1, all=0):\n
\n
  if vault_type is None:\n
    organisation_list = []\n
    for assignment in assignment_list :\n
# XXX FOR NOW, LET\'S USE SITE UNTIL THE LINK BETWEEN ORGANISATIONS AND SITE HAS BEEN SORTED OUT XXX\n
#      organisation = assignment.getDestinationValue().getMapping()\n
      organisation = assignment.getSiteValue()\n
      if organisation is not None:\n
        organisation_list.append(organisation)\n
\n
    vault_type_dict = {}\n
    for organisation in organisation_list:\n
      vault_type_list = organisation.getVaultTypeList()\n
      for vault in vault_type_list:\n
        vault_type_dict[\'vault_type/\' + vault] = 1\n
    vault_type = vault_type_dict.keys()\n
\n
  if same_type(vault_type, \'\'):\n
    vault_type = [vault_type]\n
  if same_type(exclude_vault_type, None):\n
    exclude_vault_type = []\n
  elif same_type(exclude_vault_type, \'\'):\n
    exclude_vault_type = [exclude_vault_type]\n
\n
  new_vault_type = []\n
  for v in vault_type:\n
    if v.startswith(\'vault_type/\'):\n
      new_vault_type.append(v)\n
    else:\n
      new_vault_type.append(\'vault_type/\' + v)\n
  vault_type = new_vault_type\n
  new_exclude_vault_type = []\n
  for v in exclude_vault_type:\n
    if v.startswith(\'vault_type/\'):\n
      new_exclude_vault_type.append(v)\n
    else:\n
      new_exclude_vault_type.append(\'vault_type/\' + v)\n
  exclude_vault_type = new_exclude_vault_type\n
  vault_dict = {}\n
  for site in site_list:\n
    site_object = context.portal_categories.getCategoryValue(site, base_category=\'site\')\n
    for site_member in site_object.getCategoryChildLogicalPathItemList(base=1)[1:]:\n
      site_member_object = context.portal_categories.getCategoryValue(site_member[1])\n
      for vault_type_item in vault_type:\n
        if context.portal_categories.isMemberOf(site_member_object, vault_type_item, strict=strict_membership):\n
          for exclude_vault_type_item in exclude_vault_type:\n
            if context.portal_categories.isMemberOf(site_member_object, exclude_vault_type_item, strict=0) :\n
              break\n
          else:\n
            if leaf_node == 1:\n
              if len(site_member_object.contentValues()) == 0:\n
                vault_dict[site_member[1]] = site_member\n
            else:\n
              vault_dict[site_member[1]] = site_member\n
  vault_list = vault_dict.values()\n
\n
  # Sort the vault list by path\n
  vault_list.sort(lambda x, y: cmp(x[1], y[1]))\n
  vault_dict = {}\n
  # Transform each line of the vault list\n
  keep_level = []\n
  for vault_item in vault_list:\n
    title_path_list = vault_item[0].split(\'/\')\n
    id_path_list    = vault_item[1].split(\'/\')[1:] # exclude the base category\n
    path_len      = len(id_path_list)\n
    # remove some uneeded part in path\n
    if not all and (\'Entrante\' in title_path_list[-1] or "Sortante" in title_path_list[-1]):\n
      title_path_list = title_path_list[:-1]\n
      id_path_list = id_path_list[:-1]\n
      path_len = path_len - 1\n
    if \'Encaisse\' in title_path_list[-1]:\n
      id = title_path_list[-1].lstrip("Encaisse des ")\n
    else:\n
      id = title_path_list[-1]\n
    # get a counter if there is\n
    counter_name = None\n
    for counter in [\'Guichet 1\', \'Guichet 2\', \'Guichet 3\']:\n
      if counter in title_path_list:\n
        # produce a shorter name for the counter\n
        counter_name = \'%s%s\' %(counter[0], counter[-1])\n
        # remove counter to construct the list as if there is none\n
        title_path_list.remove(counter)\n
        path_len = path_len - 1\n
\n
    new_title_list = []\n
    # create new title\n
    if \'Siege\' in title_path_list:\n
      new_title_list.append(title_path_list[0]) # ie Siege\n
      if path_len > 2:\n
        new_title_list.append(title_path_list[2]) # ie Auxiliaire, Devise...\n
      if id not in new_title_list: # ie last part of path\n
        new_title_list.append(id)\n
    else:\n
      if path_len <= 2:\n
        new_title_list = title_path_list[:]\n
      for i in xrange(path_len):\n
        if i%2 == 0 and i != 0:\n
          new_title_list.append(title_path_list[i])\n
        elif \'Ventilation\' in title_path_list[i]:\n
          new_title_list.append(\'Ventilation\')\n
        elif \'Transit\' in title_path_list[i]:\n
          new_title_list.append(\'Transit\')\n
      if id not in new_title_list: # ie last part of path\n
        new_title_list.append(id)\n
    # put back the counter name into the list\n
    if counter_name is not None:\n
      new_title_list.insert(2, counter_name)\n
\n
    new_id = \'/\'.join(new_title_list)\n
    if with_base:\n
      item_value = \'/\'.join([\'site\'] + id_path_list[:])\n
    else:\n
      item_value = \'/\'.join(id_path_list[:])\n
    item = (new_id, item_value)\n
    vault_dict[new_id] = item_value\n
\n
  vault_list = vault_dict.items()\n
  vault_list.sort()\n
  return vault_list\n
\n
getVaultItemList = CachingMethod(getVaultItemList, id=(\'Delivery_getVaultItemList\', \'getVaultItemList\'), cache_duration=360000)\n
\n
if vault_type is None:\n
  assignment_list = context.Baobab_getUserAssignmentList()\n
else:\n
  assignment_list = None\n
\n
if user_site == 1:\n
  site_list = context.Baobab_getUserAssignedSiteList()\n
  # even if we are on a counter, we can see every thing in the same agency\n
  new_site_list = []\n
  for site in site_list:\n
    if "guichet" in  site:\n
      site = context.Baobab_getVaultSite(vault=site)\n
      new_site_list.append(site.getRelativeUrl())\n
    else:\n
      new_site_list.append(site)\n
  site_list = new_site_list\n
else:\n
  site_list = [\'site\']\n
\n
vault_list = getVaultItemList(vault_type=vault_type, exclude_vault_type=exclude_vault_type,\n
  user_site=user_site, leaf_node=leaf_node, strict_membership=strict_membership,\n
  assignment_list=assignment_list, site_list=site_list, with_base=with_base, all=all)\n
\n
if current_url != None :\n
  if \'site\' not in current_url:\n
    current_url = \'site/\'+current_url\n
  current_category = context.portal_categories.getCategoryValue(current_url)\n
  if current_category is not None :\n
    if current_category.getRelativeUrl() not in [x[1] for x in vault_list] :\n
      return [(\'\', \'\'), (current_category.getRelativeUrl(), current_url)] + list(vault_list)\n
  else :\n
    return [(\'\', \'\'), (context.Localizer.erp5_ui.gettext(\'Unknown Vault\')+\' : %s\' % current_url, current_url)] + list(vault_list)\n
return [(\'\', \'\')] + list(vault_list)\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/baobab/portal_skins/erp5_banking_core/Delivery_getVaultItemList</string> </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>vault_type=None, exclude_vault_type=None, current_url=None, user_site=1, leaf_node=1, strict_membership=0, with_base=1, all=0</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>8</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>vault_type</string>
                            <string>exclude_vault_type</string>
                            <string>current_url</string>
                            <string>user_site</string>
                            <string>leaf_node</string>
                            <string>strict_membership</string>
                            <string>with_base</string>
                            <string>all</string>
                            <string>Products.ERP5Type.Cache</string>
                            <string>CachingMethod</string>
                            <string>None</string>
                            <string>getVaultItemList</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>assignment_list</string>
                            <string>site_list</string>
                            <string>new_site_list</string>
                            <string>_getiter_</string>
                            <string>site</string>
                            <string>vault_list</string>
                            <string>current_category</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>x</string>
                            <string>_getitem_</string>
                            <string>list</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <none/>
                <none/>
                <none/>
                <int>1</int>
                <int>1</int>
                <int>0</int>
                <int>1</int>
                <int>0</int>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Delivery_getVaultItemList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
