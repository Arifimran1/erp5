<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PDFTemplate" module="Products.ERP5Form.PDFTemplate"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<?xml version="1.0" encoding="iso-8859-1" ?>\n
<document filename="erp5_list.pdf"\n
   xmlns:tal="http://xml.zope.org/namespaces/tal"\n
   xmlns:metal="http://xml.zope.org/namespaces/metal"\n
   xmlns:i18n="http://xml.zope.org/namespaces/i18n"\n
   tal:define="landscape python: int(request.get(\'landscape\', 0) or 0);\n
               global frame_width python:landscape and 25.8 or 19"\n
   metal:define-macro="master">\n
  <title>List Print</title>\n
  <author>ERP5</author>\n
  <subject>Print Example</subject>\n
  <!-- This template can be used to aggregate together some already rendered report sections.\n
        In this case, "rendered_report_item_list" must be in the page template context. -->\n
  <tal:block tal:define="rendered_report_item_list rendered_report_item_list | python:[];\n
                         report_item_list python: rendered_report_item_list or report_method();">\n
\n
  <content tal:define="dummy python: request.set(\'here\',here); ">\n
\n
   <action name="nextPageTemplate">\n
      <parameter>FirstPage</parameter>\n
   </action>\n
   \n
   <para tal:content="python: here.Localizer.erp5_ui.gettext(form.getProperty(\'title\', \'\')).encode(\'utf-8\')" style=\'Title\'> report title </para>\n
\n
   <spacer height="100" tal:condition="form/get_fields"/>\n
\n
    <tal:block tal:repeat="group python: [g for g in form.get_groups() if g not in (\'bottom\', \'hidden\')]">\n
      <tal:block tal:define="field_list python: form.get_fields_in_group(group)">\n
        <tal:block tal:condition="field_list">\n
\n
          <table splitbyrow="1" repeatrows="0" repeatcols="0"  style="AttributesTable" >\n
            <tal:block tal:repeat="field field_list">\n
              <tal:block tal:condition="python:field.meta_type != \'HiddenStringField\'">\n
                <tr>\n
                  <td tal:attributes="colwidth python: \'5cm\'" >\n
                    <para  style="TableHeader" tal:content="python: here.Localizer.erp5_ui.gettext(field.get_value(\'title\')).encode(\'utf-8\')" />\n
                  </td>\n
                  <td tal:attributes="colwidth python: None" tal:define="value python: field.get_value(\'default\')">\n
                    <tal:block tal:condition="python: same_type(value,[]) or same_type(value,())">\n
                    <tal:block tal:condition="python: field.has_value(\'items\')">\n
                      <tal:block tal:define="field_item_dict python:dict([(x[1], x[0]) for x in field.get_value(\'items\')]);">\n
                         <tal:block tal:repeat="item value">\n
                           <para style="TableStandard"\n
                                 tal:content="python: field_item_dict.get(item, \'??? (%s)\' % item)"/>\n
                         </tal:block>\n
                       </tal:block>\n
                      </tal:block>\n
                      <tal:block tal:condition="python: not field.has_value(\'items\')">\n
                        <tal:block tal:repeat="item value">\n
                          <para  style="TableStandard" tal:content="python: str(item)" />\n
                        </tal:block>\n
                      </tal:block>\n
                    </tal:block>\n
                    <tal:block tal:condition="python: not (same_type(value, []) or same_type(value, ()) or same_type(value, None))">\n
                     <tal:block tal:condition="python: field.has_value(\'items\')">\n
                      <tal:block tal:define="field_item_dict python:dict([(x[1], x[0]) for x in field.get_value(\'items\')]);">\n
                        <!-- field.render_pdf should do this. Also the check field.has_value is wrong with RelationFields.\n
                             Fortunatly we don\'t use them in reports for now --> \n
                         <para style="TableStandard"\n
                               tal:content="python: field_item_dict.get(value, \'??? (%s)\' % value)"/>\n
                       </tal:block>\n
                     </tal:block>\n
                      <tal:block tal:condition="python: not field.has_value(\'items\')">\n
                        <para  style="TableStandard" tal:content="python: field.render_pdf(value)" />\n
                      </tal:block>\n
                    </tal:block>\n
                    <tal:block tal:condition="python: value is None">\n
                      <para  style="TableStandard" tal:content="python: \' \'" />\n
                    </tal:block>\n
                  </td>\n
                </tr>\n
              </tal:block>\n
            </tal:block>\n
          </table>\n
\n
          <table><tr><td tal:content="python: \' \'"></td></tr></table>\n
\n
        </tal:block>\n
      </tal:block>\n
    </tal:block>\n
\n
      <tal:block tal:define="field_list python: form.get_fields_in_group(\'bottom\')">\n
        <tal:block tal:condition="field_list">\n
          <tal:block tal:repeat="field field_list">\n
            <tal:block metal:use-macro="here/field_pdf_macro/macros/field" />\n
          </tal:block>\n
        </tal:block>\n
      </tal:block>\n
\n
\n
   <spacer height="100"/>\n
\n
   <!-- if we are called with a rendered_report_item_list, just insert the rendered text here. -->\n
   <tal:block tal:condition="rendered_report_item_list">\n
      <tal:block tal:repeat="report_item report_item_list">\n
        <tal:block tal:replace="structure report_item"/>\n
      </tal:block>\n
   </tal:block>\n
\n
<tal:block tal:define="portal_object here/portal_url/getPortalObject"\n
           tal:condition="not: rendered_report_item_list">\n
<tal:block tal:repeat="report_item report_item_list">\n
  <tal:block tal:define="here python:report_item.getObject(portal_object);\n
                         dummy python:report_item.pushReport(portal_object)">\n
  <tal:block metal:define-macro="render_report_section"\n
             tal:define="comment string:this is required for the macro;\n
                         landscape python: int(request.get(\'landscape\', 0) or 0);\n
                         global frame_width python:landscape and 25.8 or 19">\n
  <tal:block tal:condition="report_item/getTitle | report_item/getTranslatedTitle">\n
    <tal:block tal:condition="report_item/getTitle">\n
      <para style="Heading1" tal:content="report_item/getTitle"\n
                             i18n:translate=""\n
                             tal:attributes="style python:\'Heading%s\' % report_item.getLevel()">toto</para><para/></tal:block>\n
    <tal:block tal:condition="report_item/getTranslatedTitle">\n
      <para style="Heading1" tal:content="report_item/getTranslatedTitle"\n
                             tal:attributes="style python:\'Heading%s\' % report_item.getLevel()">toto</para><para/></tal:block></tal:block>\n
  <tal:block tal:condition="report_item/getFormId">\n
    <tal:block tal:define="form python:getattr(here,report_item.getFormId())" >\n
      <tal:block tal:condition="python:form.pt == \'form_view\'">\n
        <tal:block metal:use-macro="form/form_view/macros/form_layout"/></tal:block>\n
      <tal:block tal:condition="python:form.pt == \'form_list\'">\n
        <tal:block metal:use-macro="form/form_list/macros/form_layout"/></tal:block></tal:block></tal:block></tal:block></tal:block>\n
  <tal:block tal:define="dummy python:report_item.popReport(portal_object)"/>\n
</tal:block>\n
</tal:block>\n
\n
  </content>\n
 </tal:block>\n
</document>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/xml</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>report_view</string> </value>
        </item>
        <item>
            <key> <string>pdf_stylesheet</string> </key>
            <value> <string>report_pdf</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
