<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>request = container.REQUEST\n
RESPONSE =  request.RESPONSE\n
\n
format = request.get(\'format\', \'\')\n
skin_name = request[\'deferred_portal_skin\']\n
\n
portal = context.getPortalObject()\n
N_ = portal.Base_translateString\n
\n
person_value = portal.ERP5Site_getAuthenticatedMemberPersonValue()\n
if person_value is None:\n
  portal.changeSkin(None)\n
  return context.Base_redirect(\'view\', keep_items=dict(\n
              portal_status_message=N_("No person found for your user")))\n
\n
if person_value.getDefaultEmailText(\'\') in (\'\', None):\n
  portal.changeSkin(None)\n
  return context.Base_redirect(\'view\', keep_items=dict(\n
              portal_status_message=N_("You haven\'t defined your email address")))\n
  \n
active_process = portal.portal_activities.newActiveProcess()\n
user_name = person_value.getReference()\n
\n
tag = \'active-report-%s\' % random.randint(0, 1000)\n
priority = 3\n
\n
# compute list of report section to render\n
if form.meta_type == \'ERP5 Report\':\n
  report_section_list = getattr(context, form.report_method)()\n
elif form.meta_type == \'ERP5 Form\':\n
  report_section_list = []\n
  for field in form.get_fields():\n
    if field.getRecursiveTemplateField().meta_type == \'ReportBox\':\n
      report_section_list.extend(field.render())\n
else:\n
  raise ValueError, \'form meta_type unknown\'\n
\n
# save request parameters (after calling the report_method which may tweak the\n
# request). XXX we exclude some reserved names in a very ad hoc way\n
request_other = dict()\n
for k, v in request.items():\n
  if k not in (\'TraversalRequestNameStack\', \'AUTHENTICATED_USER\', \'URL\',\n
      \'SERVER_URL\', \'AUTHENTICATION_PATH\', \'USER_PREF_LANGUAGES\', \'PARENTS\',\n
      \'PUBLISHED\', \'AcceptLanguage\', \'AcceptCharset\', \'RESPONSE\', \'SESSION\',\n
      \'ACTUAL_URL\'):\n
    # XXX proxy fields stores a cache in request.other that cannot be pickled\n
    if k.startswith(\'field__proxyfield\'):\n
      continue\n
    # Remove FileUpload parameters\n
    elif getattr(v, \'headers\', \'\'):\n
      continue\n
    request_other[k] = v\n
\n
localizer_language = portal.Localizer.get_selected_language()\n
\n
for idx, report_section in enumerate(report_section_list):\n
  if report_section.getPath():\n
    doc = report_section.getObject(portal)\n
  else:\n
    doc = context\n
  doc.activate(activity=\'SQLQueue\',\n
               active_process=active_process,\n
               tag=tag,\n
               priority=priority,\n
              ).Base_renderReportSection(skin_name=skin_name,\n
                                         localizer_language=localizer_language,\n
                                         report_section=report_section,\n
                                         report_section_idx=idx,\n
                                         request_other=request_other)\n
\n
activity_context = context\n
if activity_context == portal:\n
  # portal is not an active object\n
  activity_context = portal.portal_simulation\n
\n
activity_context.activate(activity=\'SQLQueue\', after_tag=tag, priority=priority).Base_report(\n
           active_process_url=active_process.getRelativeUrl(),\n
           skin_name=skin_name,\n
           localizer_language=localizer_language,\n
           title=N_(form.getProperty(\'title\')),\n
           request_other=request_other,\n
           form_path=form.getPhysicalPath(),\n
           user_name=user_name,\n
           format=format,\n
          )\n
\n
context.activate(activity=\'SQLQueue\', after_tag=tag).getTitle()\n
\n
portal.changeSkin(None)\n
return context.Base_redirect(\'view\', keep_items=dict(\n
              portal_status_message=N_("Report Started")))\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>form, **kw</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Base_activateReport</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
