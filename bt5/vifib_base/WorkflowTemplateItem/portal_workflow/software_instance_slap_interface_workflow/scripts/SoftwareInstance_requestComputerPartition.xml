<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>from DateTime import DateTime\n
import random\n
\n
software_instance = state_change[\'object\']\n
software_release_url_string = state_change.kwargs[\'software_release\']\n
hosting_subscription_uid = state_change.kwargs[\'hosting_subscription_uid\']\n
shared = state_change.kwargs[\'shared\']\n
software_type = state_change.kwargs["software_type"]\n
tag = state_change.kwargs[\'tag\']\n
\n
# Assertion: No packing list line should be related to this software instance\n
packing_list_line = software_instance.getAggregateRelatedValue(portal_type=\'Sale Packing List Line\')\n
if packing_list_line is not None:\n
  raise ValueError("Software Instance %s is already associated to a packing list line" % software_instance.getRelativeurl())\n
\n
# Find a free computer partition. This means:\n
# Computer Partition which doesn\'t have non delivered sale packing list related\n
\n
computer_partition = None\n
query_kw = {\n
  \'software_release_url\': software_release_url_string,\n
  \'portal_type\': \'Computer Partition\'\n
}\n
# fetch at mot 50 random Computer Partitions, and check if they are ok\n
isTransitionPossible = software_instance.getPortalObject().portal_workflow.isTransitionPossible\n
if shared:\n
  query_kw.update(\n
    software_type=software_type,\n
    available_slave=1, # has slave\n
    free_for_request=0, # is not available for normal request\n
  )\n
  result_count = software_instance.portal_catalog.countResults(**query_kw)[0][0]\n
\n
  offset = max(0, result_count-1)\n
\n
  for computer_partition_candidate in software_instance.portal_catalog(\n
                                           limit=(random.randint(0, offset), 50), **query_kw):\n
    computer_partition_candidate = computer_partition_candidate.getObject()\n
    # Check if the computer partition can be marked as busy (done by an interaction workflow on sale packing list level)\n
    if computer_partition_candidate.getSlapState() == \'busy\' and computer_partition_candidate.ComputerPartition_isSlaveAvailable():\n
      computer_partition = computer_partition_candidate\n
      break\n
\n
  if computer_partition is None:\n
    raise ValueError(\'It was not possible to find Computer Partition with free slave\')\n
\n
  # find free slave\n
  slave_partition = None\n
  for slave_partition_candidate in computer_partition.contentValues(portal_type=\'Slave Partition\'):\n
    if isTransitionPossible(slave_partition_candidate, \'mark_busy\'):\n
      slave_partition = slave_partition_candidate\n
      slave_partition.serialize()\n
      break\n
\n
  if slave_partition is None:\n
    slave_partition = computer_partition.newContent(portal_type=\'Slave Partition\')\n
    slave_partition.markFree()\n
  computer_partition = slave_partition\n
else:\n
  query_kw.update(free_for_request=1) # is free\n
  result_count = software_instance.portal_catalog.countResults(**query_kw)[0][0]\n
\n
  offset = max(0, result_count-1)\n
\n
  for computer_partition_candidate in software_instance.portal_catalog(\n
                                           limit=(random.randint(0, offset), 50), **query_kw):\n
    computer_partition_candidate = computer_partition_candidate.getObject()\n
    # Check if the computer partition can be marked as busy (done by an interaction workflow on sale packing list level)\n
    if isTransitionPossible(computer_partition_candidate, \'mark_busy\'):\n
      computer_partition = computer_partition_candidate\n
      break\n
\n
  if computer_partition is None:\n
    raise ValueError(\'It was not possible to find free Computer Partition\')\n
\n
  # lock computer partition\n
  computer_partition.serialize()\n
\n
software_release_document = context.portal_catalog.getResultValue(\n
  portal_type=\'Software Release\',\n
  url_string=software_release_url_string)\n
\n
# protect computer partition from being selected again\n
portal = context.getPortalObject()\n
\n
# XXX: SoftwareInstance_createSalePackingList shall be used to create new Sale Packing List\n
sale_packing_list_module = portal.getDefaultModule(portal_type=\'Sale Packing List\')\n
sale_packing_list = sale_packing_list_module.newContent(portal_type=\'Sale Packing List\', \n
                                                        start_date=DateTime())\n
hosting_subscription = software_instance.portal_catalog.getResultValue(uid=hosting_subscription_uid)\n
sale_packing_list_line = sale_packing_list.newContent(\n
  portal_type=\'Sale Packing List Line\',\n
  resource=context.portal_preferences.getPreferredInstanceSetupResource(),\n
  aggregate_value_list=[software_instance, software_release_document, computer_partition, hosting_subscription]\n
)\n
\n
# confirm Sale Packing List\n
sale_packing_list.confirm()\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>state_change</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>state_change</string>
                            <string>DateTime</string>
                            <string>random</string>
                            <string>_getitem_</string>
                            <string>software_instance</string>
                            <string>_getattr_</string>
                            <string>software_release_url_string</string>
                            <string>hosting_subscription_uid</string>
                            <string>shared</string>
                            <string>software_type</string>
                            <string>tag</string>
                            <string>packing_list_line</string>
                            <string>None</string>
                            <string>ValueError</string>
                            <string>computer_partition</string>
                            <string>query_kw</string>
                            <string>isTransitionPossible</string>
                            <string>_apply_</string>
                            <string>result_count</string>
                            <string>max</string>
                            <string>offset</string>
                            <string>_getiter_</string>
                            <string>computer_partition_candidate</string>
                            <string>slave_partition</string>
                            <string>slave_partition_candidate</string>
                            <string>context</string>
                            <string>software_release_document</string>
                            <string>portal</string>
                            <string>sale_packing_list_module</string>
                            <string>sale_packing_list</string>
                            <string>hosting_subscription</string>
                            <string>sale_packing_list_line</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>SoftwareInstance_requestComputerPartition</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
