<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="SQL" module="Products.ZSQLMethods.SQL"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Use_Database_Methods_Permission</string> </key>
            <value>
              <list>
                <string>Anonymous</string>
              </list>
            </value>
        </item>
        <item>
            <key> <string>_arg</string> </key>
            <value>
              <object>
                <klass>
                  <global name="Args" module="Shared.DC.ZRDB.Aqueduct"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_data</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>all_languages</string> </key>
                                <value>
                                  <dictionary/>
                                </value>
                            </item>
                            <item>
                                <key> <string>all_versions</string> </key>
                                <value>
                                  <dictionary/>
                                </value>
                            </item>
                            <item>
                                <key> <string>kw</string> </key>
                                <value>
                                  <dictionary/>
                                </value>
                            </item>
                            <item>
                                <key> <string>language</string> </key>
                                <value>
                                  <dictionary/>
                                </value>
                            </item>
                            <item>
                                <key> <string>validation_state</string> </key>
                                <value>
                                  <dictionary>
                                    <item>
                                        <key> <string>type</string> </key>
                                        <value> <string>list</string> </value>
                                    </item>
                                  </dictionary>
                                </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                    <item>
                        <key> <string>_keys</string> </key>
                        <value>
                          <list>
                            <string>language</string>
                            <string>all_languages</string>
                            <string>all_versions</string>
                            <string>validation_state</string>
                            <string>kw</string>
                          </list>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>allow_simple_one_argument_traversal</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>arguments_src</string> </key>
            <value> <string>language\n
all_languages\n
all_versions\n
validation_state:list\n
kw</string> </value>
        </item>
        <item>
            <key> <string>cache_time_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>class_file_</string> </key>
            <value> <string>ZSQLCatalog.zsqlbrain</string> </value>
        </item>
        <item>
            <key> <string>class_name_</string> </key>
            <value> <string>ZSQLBrain</string> </value>
        </item>
        <item>
            <key> <string>connection_hook</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>connection_id</string> </key>
            <value> <string>erp5_sql_connection</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>WebSection_zGetDocumentValueList</string> </value>
        </item>
        <item>
            <key> <string>max_cache_</string> </key>
            <value> <int>100</int> </value>
        </item>
        <item>
            <key> <string>max_rows_</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>src</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<dtml-let query="buildSQLQuery(query=portal_catalog.getSecurityQuery(**kw),\n
                               validation_state=validation_state, **kw)"\n
          is_translation_order_by="query[\'order_by_expression\'] is not None and\n
            query[\'order_by_expression\'].startswith(\'related_translation_0.\')">\n
\n
<dtml-comment>\n
  Currently, there is no other choice to implement this method as an SQL catalog until SQLCatalog \n
  can support more features which are needed here. Once SQLCatalog supports those feature, \n
  this method should be refactored to use catalog only.\n
  \n
   The subquery is named catalog to prevent use another LEFT JOIN.\n
</dtml-comment>\n
\n
SELECT\n
  catalog.path AS path, catalog.uid AS uid, catalog.modification_date,\n
  catalog.reference, catalog.int_index,  catalog.creation_date , catalog.title, \n
  catalog.priority\n
  <dtml-if is_translation_order_by>  \n
    ,catalog.translated_message\n
  </dtml-if>\n
\n
FROM\n
   (\n
    SELECT\n
      catalog.uid, catalog.path, catalog.int_index, catalog.modification_date,\n
      catalog.reference, my_versioning.language, my_versioning.version,\n
      catalog.creation_date, catalog.title\n
      , MAX(CONCAT(CASE my_versioning.language\n
                                       WHEN  <dtml-sqlvar language type="string"> THEN \'3\'\n
                                       WHEN \'en\' THEN \'2\'\n
                                       ELSE \'1\' END,\n
                            my_versioning.version)) AS priority\n
      <dtml-if is_translation_order_by>\n
        ,related_translation_intermediate.translated_message\n
      </dtml-if>\n
    FROM\n
      <dtml-in prefix="table" expr="query[\'from_table_list\']">\n
          <dtml-var table_item> AS <dtml-var table_key>,\n
      </dtml-in>\n
      versioning AS my_versioning\n
      <dtml-if is_translation_order_by>\n
        ,translation AS related_translation_intermediate\n
      </dtml-if>\n
    WHERE\n
      my_versioning.uid = catalog.uid\n
      <dtml-if "query[\'where_expression\']">\n
          AND <dtml-var "query[\'where_expression\']">\n
      </dtml-if>\n
<dtml-if all_languages>\n
\n
<dtml-else>\n
      AND my_versioning.language = <dtml-sqlvar language type="string"> \n
</dtml-if>\n
    GROUP BY\n
      catalog.uid\n
    ORDER BY\n
      priority DESC\n
  ) AS catalog, versioning AS my_versioning\n
     WHERE\n
          catalog.uid = my_versioning.uid\n
<dtml-if all_versions>\n
    GROUP BY\n
      catalog.uid\n
<dtml-else>\n
     GROUP BY\n
       catalog.reference\n
     HAVING \n
         MAX(CONCAT(CASE my_versioning.language\n
                                       WHEN  <dtml-sqlvar language type="string"> THEN \'3\'\n
                                       WHEN \'en\' THEN \'2\'\n
                                       ELSE \'1\' END,\n
                            my_versioning.version)) = catalog.priority\n
</dtml-if>\n
\n
  ORDER BY\n
  <dtml-if "query[\'order_by_expression\']">\n
    <dtml-if is_translation_order_by>\n
      <dtml-var "query[\'order_by_expression\'].split(\'.\')[-1]">\n
    <dtml-else>\n
      <dtml-var "query[\'order_by_expression\']">\n
    </dtml-if>\n
  <dtml-else>\n
    catalog.int_index, catalog.reference\n
  </dtml-if>\n
<dtml-if "query[\'limit_expression\']">\n
  LIMIT <dtml-var "query[\'limit_expression\']">\n
<dtml-else>\n
  LIMIT 1000\n
</dtml-if>\n
\n
</dtml-let>

]]></string> </value>
        </item>
        <item>
            <key> <string>template</string> </key>
            <value>
              <object>
                <klass>
                  <global name="__newobj__" module="copy_reg"/>
                </klass>
                <tuple>
                  <global name="SQL" module="Shared.DC.ZRDB.DA"/>
                </tuple>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>__name__</string> </key>
                        <value> <string encoding="cdata"><![CDATA[

<string>

]]></string> </value>
                    </item>
                    <item>
                        <key> <string>_vars</string> </key>
                        <value>
                          <dictionary/>
                        </value>
                    </item>
                    <item>
                        <key> <string>globals</string> </key>
                        <value>
                          <dictionary/>
                        </value>
                    </item>
                    <item>
                        <key> <string>raw</string> </key>
                        <value> <string encoding="cdata"><![CDATA[

<dtml-let query="buildSQLQuery(query=portal_catalog.getSecurityQuery(**kw),\n
                               validation_state=validation_state, **kw)"\n
          is_translation_order_by="query[\'order_by_expression\'] is not None and\n
            query[\'order_by_expression\'].startswith(\'related_translation_0.\')">\n
\n
<dtml-comment>\n
  Currently, there is no other choice to implement this method as an SQL catalog until SQLCatalog \n
  can support more features which are needed here. Once SQLCatalog supports those feature, \n
  this method should be refactored to use catalog only.\n
  \n
   The subquery is named catalog to prevent use another LEFT JOIN.\n
</dtml-comment>\n
\n
SELECT\n
  catalog.path AS path, catalog.uid AS uid, catalog.modification_date,\n
  catalog.reference, catalog.int_index,  catalog.creation_date , catalog.title, \n
  catalog.priority\n
  <dtml-if is_translation_order_by>  \n
    ,catalog.translated_message\n
  </dtml-if>\n
\n
FROM\n
   (\n
    SELECT\n
      catalog.uid, catalog.path, catalog.int_index, catalog.modification_date,\n
      catalog.reference, my_versioning.language, my_versioning.version,\n
      catalog.creation_date, catalog.title\n
      , MAX(CONCAT(CASE my_versioning.language\n
                                       WHEN  <dtml-sqlvar language type="string"> THEN \'3\'\n
                                       WHEN \'en\' THEN \'2\'\n
                                       ELSE \'1\' END,\n
                            my_versioning.version)) AS priority\n
      <dtml-if is_translation_order_by>\n
        ,related_translation_intermediate.translated_message\n
      </dtml-if>\n
    FROM\n
      <dtml-in prefix="table" expr="query[\'from_table_list\']">\n
          <dtml-var table_item> AS <dtml-var table_key>,\n
      </dtml-in>\n
      versioning AS my_versioning\n
      <dtml-if is_translation_order_by>\n
        ,translation AS related_translation_intermediate\n
      </dtml-if>\n
    WHERE\n
      my_versioning.uid = catalog.uid\n
      <dtml-if "query[\'where_expression\']">\n
          AND <dtml-var "query[\'where_expression\']">\n
      </dtml-if>\n
<dtml-if all_languages>\n
\n
<dtml-else>\n
      AND my_versioning.language = <dtml-sqlvar language type="string"> \n
</dtml-if>\n
    GROUP BY\n
      catalog.uid\n
    ORDER BY\n
      priority DESC\n
  ) AS catalog, versioning AS my_versioning\n
     WHERE\n
          catalog.uid = my_versioning.uid\n
<dtml-if all_versions>\n
    GROUP BY\n
      catalog.uid\n
<dtml-else>\n
     GROUP BY\n
       catalog.reference\n
     HAVING \n
         MAX(CONCAT(CASE my_versioning.language\n
                                       WHEN  <dtml-sqlvar language type="string"> THEN \'3\'\n
                                       WHEN \'en\' THEN \'2\'\n
                                       ELSE \'1\' END,\n
                            my_versioning.version)) = catalog.priority\n
</dtml-if>\n
\n
  ORDER BY\n
  <dtml-if "query[\'order_by_expression\']">\n
    <dtml-if is_translation_order_by>\n
      <dtml-var "query[\'order_by_expression\'].split(\'.\')[-1]">\n
    <dtml-else>\n
      <dtml-var "query[\'order_by_expression\']">\n
    </dtml-if>\n
  <dtml-else>\n
    catalog.int_index, catalog.reference\n
  </dtml-if>\n
<dtml-if "query[\'limit_expression\']">\n
  LIMIT <dtml-var "query[\'limit_expression\']">\n
<dtml-else>\n
  LIMIT 1000\n
</dtml-if>\n
\n
</dtml-let>

]]></string> </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
