<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<tal:block replace="nothing"><!--\n
    This macro is recursive and display lists of lists to display the breadcrumb as a tree.\n
    TODO: merge it with site map (similar code)\n
-->\n
</tal:block>\n
<tal:block metal:define-macro="renderBreadcrumbItem">\n
  <ul tal:define="remaining_items remaining_items | nothing"\n
      tal:condition="remaining_items">\n
    <li tal:define="current_item    python: remaining_items[0];\n
                    remaining_items python: remaining_items[1:]">\n
      <a tal:attributes="href  python: current_item[1].getPermanentURL(current_item[1]);\n
                         class python: len(remaining_items) == 0 and \'selected\' or \'\'"\n
          tal:content="python: current_item[0]"/>\n
      <tal:block metal:use-macro="here/breadcrumb/macros/renderBreadcrumbItem"/>\n
    </li>\n
  </ul>\n
</tal:block>\n
\n
<tal:block tal:define="is_web_section_default_document request/is_web_section_default_document|nothing;\n
                       current_web_section python:request.get(\'current_web_section\', None)\n
                                                  or here.getWebSectionValue()">\n
  <!-- Initialize the recursive loop starting from context or from web section -->\n
  <div class="breadcrumb" tal:define="remaining_items python: here.getBreadcrumbItemList(here)"\n
                          tal:condition="not:is_web_section_default_document">\n
    <tal:block metal:use-macro="here/breadcrumb/macros/renderBreadcrumbItem"/>\n
  </div>\n
  <div class="breadcrumb" tal:define="remaining_items python: here.getBreadcrumbItemList(current_web_section)"\n
                          tal:condition="is_web_section_default_document">\n
    <tal:block metal:use-macro="here/breadcrumb/macros/renderBreadcrumbItem"/>\n
  </div>\n
</tal:block>\n
\n
<span style="float:right;" tal:condition="python:not here.portal_membership.isAnonymousUser()">\n
Logged in as: <a style="color:blue;" tal:define="user here/portal_membership/getAuthenticatedMember"\n
                 tal:content="user"\n
                 tal:attributes="href python:\'WebSite_redirectToUserView?%s&user=%s\' % (\n
                                 request.get(\'http_parameters\', None), user)">userid</a>\n
</span>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>breadcrumb</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
