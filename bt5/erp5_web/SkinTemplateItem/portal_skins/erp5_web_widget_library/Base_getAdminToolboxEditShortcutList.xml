<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

"""\n
  This script creates edit actions for the admin toolbox\n
  and adds some extra actions taken from the action_list\n
  defined in portal_types tool.\n
\n
  The script is able to rewrite some actions by looking at the\n
  editable_absolute_url property stored on Context objects\n
  which are created for virtual pages. (ie. pages which\n
  are obtained through _aq_dynamic from Web Section or Web Page)\n
"""\n
# Init some variables\n
translateString = context.Base_translateString\n
result = []\n
portal_type = context.getPortalType()\n
request = context.REQUEST\n
current_web_section = request.current_web_section\n
current_web_section_pt = current_web_section.getPortalType()\n
action_dict = request.get(\'actions\', {}) # XXX actions needs to be renamed to action_dict\n
exchange_action_list = action_dict.get(\'object_exchange\', [])\n
button_action_list = action_dict.get(\'object_button\', [])\n
portal_url = context.portal_url()\n
http_parameters = request.get(\'http_parameters\', \'\')\n
http_parameters = http_parameters.replace(\'editable_mode\', \'dummy_editable_mode\')\n
\n
# Try to get the original absolute_url if this is a permanent URL\n
absolute_url = context.absolute_url()\n
editable_absolute_url = getattr(context, \'editable_absolute_url\', absolute_url)\n
\n
# action title based on security\n
def getActionTitleForContext(context, portal_type):\n
  if context.portal_membership.checkPermission(\'Modify portal content\', context):\n
    edit_title = translateString("Edit ${portal_type}", \n
                                 mapping=dict(portal_type=portal_type))\n
  else:\n
    edit_title = translateString("Access ${portal_type} details",\n
                                 mapping=dict(portal_type=portal_type))\n
  return edit_title\n
\n
# Append a button to edit the current document\n
if not bool(request.get(\'editable_mode\', 0)):\n
  # The title is called Edit only if the document can be edited\n
  if portal_type == \'Web Section\' and context.getDefaultDocumentValue() is not None:\n
    # try to show link to default page\n
    default_document = context.getDefaultDocumentValue()\n
    # change portal_type, this will be taken into account when determining parent action (below)\n
    portal_type = default_document.getPortalType() \n
    edit_title = getActionTitleForContext(context, portal_type)\n
    result.append(dict(\n
      url = "%s/view?editable_mode:int=1&%s" \n
              %(default_document.absolute_url(), http_parameters),\n
      icon = default_document.getIcon() or \'file_icon.gif\',\n
      title = edit_title,\n
      label = "%s Icon" % portal_type,))\n
  else:\n
    edit_title = getActionTitleForContext(context, portal_type)\n
    result.append(dict(\n
      url = "%s/view?editable_mode:int=1&%s" \n
              %(editable_absolute_url, http_parameters),\n
      icon = context.getIcon() or \'file_icon.gif\',\n
      title = edit_title,\n
      label = "%s Icon" % portal_type,))\n
else: \n
  result.append(dict(\n
    url = "%s/view?editable_mode:int=0&%s" % (absolute_url, http_parameters),\n
    icon  = context.getIcon() or \'file_icon.gif\',\n
    title = translateString("View ${portal_type}", \n
                            mapping=dict(portal_type=portal_type)),\n
                            label = "%s Icon" % portal_type,))\n
\n
# Append a button to edit the parent section\n
if portal_type not in (\'Web Section\', \'Web Site\'): \n
  result.append(dict(\n
    url = "%s/view?editable_mode=1" % current_web_section.absolute_url(),\n
    icon = current_web_section.getIcon(),\n
    title = translateString("Edit parent ${portal_type}",\n
                             mapping=dict(portal_type=current_web_section_pt)),\n
    label = "%s Icon" % current_web_section_pt,))\n
\n
# Append all icon buttons\n
for action in button_action_list:\n
  if action[\'id\'] == \'webdav\':\n
    result.append(dict(\n
      url = action[\'url\'].replace(absolute_url, editable_absolute_url),\n
      icon = action[\'icon\'],\n
      title = translateString(action[\'title\']),\n
      label = "WebDAV Icon",))\n
\n
# Append an exchange button\n
if len(exchange_action_list):\n
  action = exchange_action_list[0]\n
  url = action[\'url\'].replace(absolute_url, editable_absolute_url)\n
  url = \'%s?dialog_category=object_exchange&cancel_url=%s/view\' % (url, absolute_url)\n
  result.append(dict(\n
    url = url,\n
    icon  = \'%s/images/imp-exp.png\' % portal_url,\n
    title = translateString(\'Import / Export\'),\n
    label = "Import / Export Icon",))\n
\n
return result\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>translateString</string>
                            <string>result</string>
                            <string>portal_type</string>
                            <string>request</string>
                            <string>current_web_section</string>
                            <string>current_web_section_pt</string>
                            <string>action_dict</string>
                            <string>exchange_action_list</string>
                            <string>button_action_list</string>
                            <string>portal_url</string>
                            <string>http_parameters</string>
                            <string>absolute_url</string>
                            <string>getattr</string>
                            <string>editable_absolute_url</string>
                            <string>getActionTitleForContext</string>
                            <string>bool</string>
                            <string>None</string>
                            <string>default_document</string>
                            <string>edit_title</string>
                            <string>dict</string>
                            <string>_getiter_</string>
                            <string>action</string>
                            <string>_getitem_</string>
                            <string>len</string>
                            <string>url</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Base_getAdminToolboxEditShortcutList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
