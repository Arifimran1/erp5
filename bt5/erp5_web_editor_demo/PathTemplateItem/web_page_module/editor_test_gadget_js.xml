<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="Web Script" module="erp5.portal_type"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Access_contents_information_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Add_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Change_local_roles_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_Modify_portal_content_Permission</string> </key>
            <value>
              <tuple>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>_View_Permission</string> </key>
            <value>
              <tuple>
                <string>Anonymous</string>
                <string>Assignee</string>
                <string>Assignor</string>
                <string>Associate</string>
                <string>Auditor</string>
                <string>Manager</string>
                <string>Owner</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>content_md5</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>default_reference</string> </key>
            <value> <string>editor_test_gadget.js</string> </value>
        </item>
        <item>
            <key> <string>description</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>editor_test_gadget_js</string> </value>
        </item>
        <item>
            <key> <string>language</string> </key>
            <value> <string>en</string> </value>
        </item>
        <item>
            <key> <string>portal_type</string> </key>
            <value> <string>Web Script</string> </value>
        </item>
        <item>
            <key> <string>short_title</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>text_content</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*jslint indent: 2, maxlen: 80, nomen: true */\n
/*global console, window, document, rJS, RSVP, $ */\n
(function (window, document, rJS, promiseEventListener) {\n
  "use strict";\n
\n
  var DEFAULT_GADGET_URL = "interface_gadget_bootstrap3_wysiwyg.html",\n
    JIO_STORAGE_TYPE = "local",\n
    DAV_URL = "",\n
    DAV_USER = "",\n
    DAV_PASSWORD = "";\n
\n
  function createJio_indexeddb(gadget) {\n
    return gadget.getDeclaredGadget("jio_gadget")\n
      .push(function (jio_gadget) {\n
        return jio_gadget.createJio({\n
          type: "indexeddb",\n
          database: "jio_demo"\n
        });\n
      });\n
  }\n
\n
  function createJio_local(gadget) {\n
    return gadget.getDeclaredGadget("jio_gadget")\n
      .push(function (jio_gadget) {\n
        return jio_gadget.createJio({\n
          type: "query",\n
          sub_storage: {\n
            type: "document",\n
            document_id: "/",\n
            sub_storage: { type: "local" }\n
          }\n
        });\n
      });\n
  }\n
\n
  function createJio_dav(gadget) {\n
    return gadget.getDeclaredGadget("jio_gadget")\n
      .push(function (jio_gadget) {\n
        return jio_gadget.createJio({\n
          type: "drivetojiomapping",\n
          sub_storage: {\n
            type: "dav",\n
            url: DAV_URL,\n
            basic_login: btoa(DAV_USER + ":" + DAV_PASSWORD)\n
          }\n
        });\n
      });\n
  }\n
\n
  function createJio(gadget) {\n
    switch (JIO_STORAGE_TYPE) {\n
    case "indexeddb":\n
      return createJio_indexeddb(gadget);\n
    case "local":\n
      return createJio_local(gadget);\n
    case "dav":\n
      return createJio_dav(gadget);\n
    }\n
  }\n
\n
  function declareSubGadget(gadget, sub_gadget_url) {\n
    return gadget.declareGadget(sub_gadget_url, {\n
      sandbox: \'iframe\',\n
      element: gadget.props.content_element.querySelector("div.ui-content"),\n
      scope: "sub_gadget"\n
    });\n
  }\n
\n
  function updateSimilarGadgetOptionList(gadget, sub_gadget_url) {\n
    var jio;\n
    return RSVP.Queue()\n
      .push(function() {\n
        return gadget.getDeclaredGadget("jio_gadget");\n
      })\n
      .push(function(jio_gadget) {\n
        jio = jio_gadget;\n
        return jio.get(sub_gadget_url);\n
      })\n
      .push(function(sub_gadget_data) {\n
        var interface_url = sub_gadget_data.interface_url,\n
          options = {};\n
        options.query = \'(interface_url:"\' + interface_url + \'") AND (type:"gadget")\';\n
        return jio.allDocs(options);\n
      })\n
      .push(function(query_result) {\n
        var i,\n
          matched_gadget_data = [],\n
          data = query_result.data,\n
          rows = data.rows;\n
        for (i = 0; i < data.total_rows; i += 1) {\n
          matched_gadget_data.push(jio.get(rows[i].id));\n
        }\n
        return RSVP.all(matched_gadget_data);\n
      })\n
      .push(function(similar_gadget_data) {\n
        var select = gadget.props.content_element.querySelector(\'form.similar-gadget-select-form\').similar_gadget_selector,\n
          i;\n
        select.innerHTML = "";\n
        for(i = 0; i < similar_gadget_data.length; i += 1) {\n
          var option = document.createElement("option");\n
          option.text = similar_gadget_data[i].title;\n
          option.value = similar_gadget_data[i].url;\n
          select.appendChild(option);\n
        }\n
        select.value = similar_gadget_data[0].url;\n
        return;\n
      });\n
  }\n
  function gadgetSwitchHandler(gadget) {\n
    var current_state = "",\n
      selected_gadget,\n
      submit_source;\n
    return new RSVP.Queue()\n
      .push(function() {\n
        return RSVP.any([\n
          promiseEventListener(\n
            gadget.props.content_element.querySelector(\'form.main-gadget-select-form\'),\n
            \'submit\',\n
            false\n
          ),\n
          promiseEventListener(\n
            gadget.props.content_element.querySelector(\'form.similar-gadget-select-form\'),\n
            \'submit\',\n
            false\n
          )\n
        ]);\n
      })\n
      .push(function(submit_event) {\n
        submit_source = submit_event.target.className;\n
        selected_gadget = submit_event.target[0].value;\n
        gadget.props.content_element.querySelector("input[type=submit]")\n
          .disabled = true;\n
        if(submit_source === \'main-gadget-select-form\') {\n
          return updateSimilarGadgetOptionList(gadget, selected_gadget);\n
        } else {\n
          return gadget.subgadget_initStateTransfer();\n
        }\n
      })\n
      .push(function(form_data) {\n
        gadget.props.content_element.querySelector("div.ui-content").innerHTML = "";\n
        if(submit_source === \'similar-gadget-select-form\') {\n
          current_state = form_data;\n
        } \n
        return declareSubGadget(gadget, selected_gadget);\n
      })\n
      .push(function() {\n
        return gadget.subgadget_initSubGadget();\n
      })\n
      .push(function() {\n
        if(submit_source === \'similar-gadget-select-form\') {\n
          return gadget.subgadget_finishStateTransfer([current_state]);\n
        } else {\n
          return;\n
        } \n
      })\n
      .push(function(){\n
        gadget.props.content_element.querySelector("input[type=submit]")\n
          .disabled = false;\n
        return gadgetSwitchHandler(gadget);\n
      });\n
  }\n
  \n
  rJS(window)\n
\n
    .ready(function (g) {\n
      var gadget = g,\n
        jio;\n
      gadget.props = {};\n
      return gadget.getElement()\n
        .push(function (element) {\n
          $(element).trigger("create");\n
          gadget.props.element = element;\n
          gadget.props.content_element = element.querySelector(\'.gadget-content\');\n
          return createJio(gadget);\n
        })\n
        .push(function() {\n
          return gadget.getDeclaredGadget("jio_gadget");\n
        })\n
        .push(function(jio_gadget) {\n
          jio = jio_gadget;\n
          $.getJSON("gadget_info.json", function(data) {\n
            var select = gadget.props.content_element.querySelector(\'form.main-gadget-select-form\').main_gadget_selector,\n
              key;\n
            gadget.props.data = data;\n
            select.innerHTML = "";\n
            for(key in data) {\n
              var option = document.createElement("option");\n
              option.text = key;\n
              option.value = data[key];\n
              select.appendChild(option);\n
            }\n
            var temp_list = [],\n
              status_list = [],\n
              interface_list = [],\n
              available_subgadget_list = [];\n
            return new RSVP.Queue()\n
              .push(function() {\n
                var item;\n
                for (item in data) {\n
                  available_subgadget_list.push({url:data[item], title:item});\n
                  temp_list.push(gadget.verifyGadgetInterfaceImplementation(data[item]));\n
                }\n
                return RSVP.all(temp_list);\n
              })\n
              .push(function(temp_list_1) {\n
                status_list = temp_list_1;\n
                temp_list = [];\n
                var item;\n
                for (item in data) {\n
                  temp_list.push(gadget.getDeclaredGadgetInterfaceList(data[item]));\n
                }\n
                return RSVP.all(temp_list);\n
              })\n
              .push(function(temp_list_2) {\n
                interface_list = temp_list_2;\n
                var item,\n
                  put_list = [];\n
                for (item in available_subgadget_list) {\n
                  if(status_list[item]) {\n
                    var content = {\n
                      "title": available_subgadget_list[item].title,\n
                      "url": available_subgadget_list[item].url,\n
                      "type": "gadget",\n
                      "interface_url": interface_list[item][0]\n
                    };\n
                    jio.put(available_subgadget_list[item].url, content);\n
                  }\n
                }\n
                return RSVP.all(put_list);\n
              })\n
              .push(function() {\n
                return declareSubGadget(gadget, DEFAULT_GADGET_URL);\n
              })\n
              .push(function() {\n
                return gadget.subgadget_initSubGadget();\n
              })\n
              .push(function() {\n
                return gadgetSwitchHandler(gadget);\n
              });\n
  \n
          });\n
        });\n
    })\n
\n
    /* ============================ SUBGADGET =============================== */\n
    .declareMethod("subgadget_getContent", function (param_list) {\n
      return this.getDeclaredGadget("sub_gadget")\n
        .then(function (sub_gadget) {\n
          return sub_gadget.getContent.apply(sub_gadget, param_list);\n
        });\n
    })\n
    .declareMethod("subgadget_setContent", function (param_list) {\n
      return this.getDeclaredGadget("sub_gadget")\n
        .then(function (sub_gadget) {\n
          return sub_gadget.setContent.apply(sub_gadget, param_list);\n
        });\n
    })\n
    .declareMethod("subgadget_clearContent", function (param_list) {\n
      return this.getDeclaredGadget("sub_gadget")\n
        .then(function (sub_gadget) {\n
          return sub_gadget.clearContent.apply(sub_gadget, param_list);\n
        });\n
    })\n
    .declareMethod("subgadget_initStateTransfer", function (param_list) {\n
      return this.getDeclaredGadget("sub_gadget")\n
        .then(function (sub_gadget) {\n
          return sub_gadget.initStateTransfer.apply(sub_gadget, param_list);\n
        });\n
    })\n
    .declareMethod("subgadget_finishStateTransfer", function (param_list) {\n
      return this.getDeclaredGadget("sub_gadget")\n
        .then(function (sub_gadget) {\n
          return sub_gadget.finishStateTransfer.apply(sub_gadget, param_list);\n
        });\n
    })\n
    .declareMethod("subgadget_initSubGadget", function (param_list) {\n
      return this.getDeclaredGadget("sub_gadget")\n
        .then(function (sub_gadget) {\n
          return sub_gadget.initSubGadget.apply(sub_gadget, param_list);\n
        });\n
    });\n
\n
}(window, document, rJS, promiseEventListener));\n


]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Editor Test Gadget JS</string> </value>
        </item>
        <item>
            <key> <string>version</string> </key>
            <value> <string>001</string> </value>
        </item>
        <item>
            <key> <string>workflow_history</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="PersistentMapping" module="Persistence.mapping"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value>
              <dictionary>
                <item>
                    <key> <string>document_publication_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>edit_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
                    </value>
                </item>
                <item>
                    <key> <string>processing_status_workflow</string> </key>
                    <value>
                      <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
                    </value>
                </item>
              </dictionary>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>publish_alive</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope1</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1438594081.2</float>
                        <string>GMT</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
            <item>
                <key> <string>validation_state</string> </key>
                <value> <string>published_alive</string> </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value> <string>edit</string> </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>945.47991.22634.26641</string> </value>
            </item>
            <item>
                <key> <string>state</string> </key>
                <value> <string>current</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1442218093.98</float>
                        <string>GMT</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="WorkflowHistoryList" module="Products.ERP5Type.patches.WorkflowTool"/>
    </pickle>
    <pickle>
      <tuple>
        <none/>
        <list>
          <dictionary>
            <item>
                <key> <string>action</string> </key>
                <value>
                  <none/>
                </value>
            </item>
            <item>
                <key> <string>actor</string> </key>
                <value> <string>zope</string> </value>
            </item>
            <item>
                <key> <string>comment</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>error_message</string> </key>
                <value> <string></string> </value>
            </item>
            <item>
                <key> <string>external_processing_state</string> </key>
                <value> <string>empty</string> </value>
            </item>
            <item>
                <key> <string>serial</string> </key>
                <value> <string>0.0.0.0</string> </value>
            </item>
            <item>
                <key> <string>time</string> </key>
                <value>
                  <object>
                    <klass>
                      <global name="DateTime" module="DateTime.DateTime"/>
                    </klass>
                    <tuple>
                      <none/>
                    </tuple>
                    <state>
                      <tuple>
                        <float>1438330895.73</float>
                        <string>GMT</string>
                      </tuple>
                    </state>
                  </object>
                </value>
            </item>
          </dictionary>
        </list>
      </tuple>
    </pickle>
  </record>
</ZopeData>
