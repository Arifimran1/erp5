<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41268307.43</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>Panel.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/**\n
 * Panel.js\n
 *\n
 * Released under LGPL License.\n
 * Copyright (c) 1999-2015 Ephox Corp. All rights reserved\n
 *\n
 * License: http://www.tinymce.com/license\n
 * Contributing: http://www.tinymce.com/contributing\n
 */\n
\n
/**\n
 * Creates a new panel.\n
 *\n
 * @-x-less Panel.less\n
 * @class tinymce.ui.Panel\n
 * @extends tinymce.ui.Container\n
 * @mixes tinymce.ui.Scrollable\n
 */\n
define("tinymce/ui/Panel", [\n
\t"tinymce/ui/Container",\n
\t"tinymce/ui/Scrollable"\n
], function(Container, Scrollable) {\n
\t"use strict";\n
\n
\treturn Container.extend({\n
\t\tDefaults: {\n
\t\t\tlayout: \'fit\',\n
\t\t\tcontainerCls: \'panel\'\n
\t\t},\n
\n
\t\tMixins: [Scrollable],\n
\n
\t\t/**\n
\t\t * Renders the control as a HTML string.\n
\t\t *\n
\t\t * @method renderHtml\n
\t\t * @return {String} HTML representing the control.\n
\t\t */\n
\t\trenderHtml: function() {\n
\t\t\tvar self = this, layout = self._layout, innerHtml = self.settings.html;\n
\n
\t\t\tself.preRender();\n
\t\t\tlayout.preRender(self);\n
\n
\t\t\tif (typeof innerHtml == "undefined") {\n
\t\t\t\tinnerHtml = (\n
\t\t\t\t\t\'<div id="\' + self._id + \'-body" class="\' + self.bodyClasses + \'">\' +\n
\t\t\t\t\t\tlayout.renderHtml(self) +\n
\t\t\t\t\t\'</div>\'\n
\t\t\t\t);\n
\t\t\t} else {\n
\t\t\t\tif (typeof innerHtml == \'function\') {\n
\t\t\t\t\tinnerHtml = innerHtml.call(self);\n
\t\t\t\t}\n
\n
\t\t\t\tself._hasBody = false;\n
\t\t\t}\n
\n
\t\t\treturn (\n
\t\t\t\t\'<div id="\' + self._id + \'" class="\' + self.classes + \'" hidefocus="1" tabindex="-1" role="group">\' +\n
\t\t\t\t\t(self._preBodyHtml || \'\') +\n
\t\t\t\t\tinnerHtml +\n
\t\t\t\t\'</div>\'\n
\t\t\t);\n
\t\t}\n
\t});\n
});

]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>1420</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>Panel.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
