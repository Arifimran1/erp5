<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41268106.99</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>moxiezip.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string>var fs = require("fs");\n
var path = require("path");\n
var ZipWriter = require(\'moxie-zip\').ZipWriter;\n
\n
module.exports = function(grunt) {\n
\tgrunt.registerMultiTask("moxiezip", "Creates zip files.", function() {\n
\t\tvar target = grunt.config([this.name, this.target]);\n
\t\tvar archive = new ZipWriter();\n
\t\tvar done = this.async();\n
\t\tvar options = target.options || {}, excludePaths = {};\n
\n
\t\tfunction addExcludes(excludes) {\n
\t\t\tif (Array.isArray(excludes)) {\n
\t\t\t\texcludes.forEach(function(excludePath) {\n
\t\t\t\t\texcludePaths[path.resolve(excludePath)] = true;\n
\t\t\t\t});\n
\t\t\t}\n
\t\t}\n
\n
\t\tfunction process(filePath, zipFilePath) {\n
\t\t\tvar args, stat = fs.statSync(filePath);\n
\n
\t\t\tif (excludePaths[path.resolve(filePath)]) {\n
\t\t\t\treturn;\n
\t\t\t}\n
\n
\t\t\tzipFilePath = zipFilePath || filePath;\n
\t\t\tfilePath = filePath.replace(/\\\\/g, \'/\');\n
\t\t\tzipFilePath = zipFilePath.replace(/\\\\/g, \'/\');\n
\n
\t\t\tif (options.pathFilter) {\n
\t\t\t\targs = {filePath: filePath, zipFilePath: zipFilePath};\n
\t\t\t\toptions.pathFilter(args);\n
\t\t\t\tzipFilePath = args.zipFilePath;\n
\t\t\t}\n
\n
\t\t\tif (stat.isFile()) {\n
\t\t\t\tvar data = fs.readFileSync(filePath);\n
\n
\t\t\t\tif (options.dataFilter) {\n
\t\t\t\t\targs = {filePath: filePath, zipFilePath: zipFilePath, data: data};\n
\t\t\t\t\toptions.dataFilter(args);\n
\t\t\t\t\tdata = args.data;\n
\t\t\t\t}\n
\n
\t\t\t\tarchive.addData(path.join(options.baseDir, zipFilePath), data);\n
\t\t\t} else if (stat.isDirectory()) {\n
\t\t\t\tfs.readdirSync(filePath).forEach(function(fileName) {\n
\t\t\t\t\tprocess(path.join(filePath, fileName), path.join(zipFilePath, fileName));\n
\t\t\t\t});\n
\t\t\t}\n
\t\t}\n
\n
\t\toptions.baseDir = (options.baseDir || \'\').replace(/\\\\/g, \'/\');\n
\n
\t\tif (target.options.excludes) {\n
\t\t\taddExcludes(grunt.file.expand(target.options.excludes));\n
\t\t}\n
\n
\t\tthis.files.forEach(function(filePair) {\n
\t\t\tfilePair.src.forEach(function(src) {\n
\t\t\t\tprocess(src);\n
\t\t\t});\n
\t\t});\n
\n
\t\tif (options.onBeforeSave) {\n
\t\t\toptions.onBeforeSave(archive);\n
\t\t}\n
\n
\t\tgrunt.file.mkdir(path.dirname(options.to));\n
\n
\t\tarchive.saveAs(options.to, function() {\n
\t\t\tgrunt.log.ok(\'Created zip file:\', options.to);\n
\t\t\tdone();\n
\t\t});\n
\t});\n
};\n
</string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2016</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>moxiezip.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
