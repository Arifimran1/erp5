<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41268133.0</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>spellchecker.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

(function() {\n
\tvar count = 0;\n
\n
\tmodule("tinymce.plugins.Spellchecker", {\n
\t\tsetupModule: function() {\n
\t\t\tdocument.getElementById(\'view\').innerHTML = (\n
\t\t\t\t\'<textarea id="no_lang"></textarea>\' +\n
\t\t\t\t\'<textarea id="one_lang"></textarea>\' +\n
\t\t\t\t\'<textarea id="many_lang"></textarea>\'\n
\t\t\t);\n
\n
\t\t\tQUnit.stop();\n
\n
\t\t\tfunction wait() {\n
\t\t\t\tif (++count == 3) {\n
\t\t\t\t\tQUnit.start();\n
\t\t\t\t}\n
\t\t\t}\n
\n
\t\t\ttinymce.init({\n
\t\t\t\tselector: \'#no_lang\',\n
\t\t\t\tplugins: "spellchecker",\n
\t\t\t\tadd_unload_trigger: false,\n
\t\t\t\tskin: false,\n
\t\t\t\tdisable_nodechange: true,\n
\t\t\t\ttoolbar: \'spellchecker\',\n
\t\t\t\tinit_instance_callback: function(ed) {\n
\t\t\t\t\twindow.editor = ed;\n
\t\t\t\t\twait();\n
\t\t\t\t}\n
\t\t\t});\n
\n
\t\t\ttinymce.init({\n
\t\t\t\tselector: \'#one_lang\',\n
\t\t\t\tplugins: "spellchecker",\n
\t\t\t\tadd_unload_trigger: false,\n
\t\t\t\tskin: false,\n
\t\t\t\tspellchecker_languages: \'English=en\',\n
\t\t\t\tdisable_nodechange: true,\n
\t\t\t\ttoolbar: \'spellchecker\',\n
\t\t\t\tinit_instance_callback: function(ed) {\n
\t\t\t\t\twindow.editor = ed;\n
\t\t\t\t\twait();\n
\t\t\t\t}\n
\t\t\t});\n
\n
\t\t\ttinymce.init({\n
\t\t\t\tselector: \'#many_lang\',\n
\t\t\t\tplugins: "spellchecker",\n
\t\t\t\tadd_unload_trigger: false,\n
\t\t\t\tskin: false,\n
\t\t\t\tspellchecker_languages: \'English=en,French=fr,German=de\',\n
\t\t\t\tdisable_nodechange: true,\n
\t\t\t\ttoolbar: \'spellchecker\',\n
\t\t\t\tinit_instance_callback: function(ed) {\n
\t\t\t\t\twindow.editor = ed;\n
\t\t\t\t\twait();\n
\t\t\t\t}\n
\t\t\t});\n
\t\t},\n
\n
\t\tteardown: function() {\n
\t\t\teditor.settings.forced_root_block = \'p\';\n
\t\t}\n
\t});\n
\n
\t// Default spellchecker language should match editor language\n
\ttest(\'Check default language\', function() {\n
\t\tvar mainLanguage = tinymce.get(\'no_lang\').settings.language || \'en\';\n
\t\tequal(tinymce.get(\'no_lang\').settings.spellchecker_language, mainLanguage);\n
\t});\n
\n
\t// Spellchecker button may include a language menu\n
\n
\t// When no languages are specified, the default list of languages should be\n
\t// used, matching the list in the old TinyMCE 3 spellchecker plugin.\n
\ttest(\'Check spellcheck button is a splitbutton (no languages)\', function() {\n
\t\tvar spellcheckButton = tinymce.get(\'no_lang\').buttons.spellchecker;\n
\t\tequal(spellcheckButton.type, \'splitbutton\');\n
\t});\n
\n
\t// When exactly one spellchecker language is specified, there\'s no need to\n
\t// display a selection menu.\n
\ttest(\'Check spellcheck button is a normal button (one language)\', function() {\n
\t\tvar spellcheckButton = tinymce.get(\'one_lang\').buttons.spellchecker;\n
\t\tequal(spellcheckButton.type, \'button\');\n
\t});\n
\n
\t// When more than one spellchecker language is specified, a selection menu\n
\t// should be provided to choose between them.\n
\ttest(\'Check spellcheck button is a splitbutton (many languages)\', function() {\n
\t\tvar spellcheckButton = tinymce.get(\'many_lang\').buttons.spellchecker;\n
\t\tequal(spellcheckButton.type, \'splitbutton\');\n
\t});\n
})();\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2700</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>spellchecker.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
