<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41268216.5</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>TabPanel.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string>(function() {\n
\tmodule("tinymce.ui.TabPanel", {\n
\t\tsetup: function() {\n
\t\t\tdocument.getElementById(\'view\').innerHTML = \'\';\n
\t\t},\n
\n
\t\tteardown: function() {\n
\t\t\ttinymce.dom.Event.clean(document.getElementById(\'view\'));\n
\t\t}\n
\t});\n
\n
\tfunction createTabPanel(settings) {\n
\t\treturn tinymce.ui.Factory.create(tinymce.extend({\n
\t\t\ttype: \'tabpanel\',\n
\t\t\titems: [\n
\t\t\t\t{title: \'a\', type: \'spacer\', classes: \'red\'},\n
\t\t\t\t{title: \'b\', type: \'spacer\', classes: \'green\'},\n
\t\t\t\t{title: \'c\', type: \'spacer\', classes: \'blue\'}\n
\t\t\t]\n
\t\t}, settings)).renderTo(document.getElementById(\'view\')).reflow();\n
\t}\n
\n
\ttest("panel width: 100, height: 100", function() {\n
\t\tvar panel = createTabPanel({\n
\t\t\twidth: 100,\n
\t\t\theight: 100,\n
\t\t\tlayout: \'fit\'\n
\t\t});\n
\n
\t\tdeepEqual(Utils.rect(panel), [0, 0, 100, 100]);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[0]), [0, 31, 100, 69], 4);\n
\t});\n
\n
\ttest("panel width: 100, height: 100, border: 1", function() {\n
\t\tvar panel = createTabPanel({\n
\t\t\twidth: 100,\n
\t\t\theight: 100,\n
\t\t\tborder: 1,\n
\t\t\tlayout: \'fit\'\n
\t\t});\n
\n
\t\tdeepEqual(Utils.rect(panel), [0, 0, 100, 100]);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[0]), [0, 31, 100, 69], 4);\n
\t});\n
\n
\ttest("panel width: 100, height: 100, activeTab: 1", function() {\n
\t\tvar panel = createTabPanel({\n
\t\t\twidth: 100,\n
\t\t\theight: 100,\n
\t\t\tactiveTab: 1,\n
\t\t\tlayout: \'fit\'\n
\t\t});\n
\n
\t\tdeepEqual(Utils.rect(panel), [0, 0, 100, 100]);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[1]), [0, 31, 100, 69], 4);\n
\t});\n
\n
\ttest("panel width: auto, height: auto, mixed sized widgets", function() {\n
\t\tvar panel = createTabPanel({\n
\t\t\titems: [\n
\t\t\t\t{title: \'a\', type: \'spacer\', classes: \'red\', style: \'width: 100px; height: 100px\'},\n
\t\t\t\t{title: \'b\', type: \'spacer\', classes: \'green\', style: \'width: 70px; height: 70px\'},\n
\t\t\t\t{title: \'c\', type: \'spacer\', classes: \'blue\', style: \'width: 120px; height: 120px\'}\n
\t\t\t]\n
\t\t});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel), [0, 0, 120, 151], 4);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[0]), [0, 31, 120, 120], 4);\n
\n
\t\tpanel.activateTab(1);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[1]), [0, 31, 120, 120], 4);\n
\n
\t\tpanel.activateTab(2);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[2]), [0, 31, 120, 120], 4);\n
\t});\n
\n
\ttest("panel width: auto, height: auto, mixed sized containers", function() {\n
\t\tvar panel = createTabPanel({\n
\t\t\titems: [\n
\t\t\t\t{\n
\t\t\t\t\ttitle: \'a\',\n
\t\t\t\t\ttype: \'panel\',\n
\t\t\t\t\tlayout: \'flex\',\n
\t\t\t\t\talign: \'stretch\',\n
\t\t\t\t\titems: {\n
\t\t\t\t\t\ttype: \'spacer\',\n
\t\t\t\t\t\tclasses: \'red\',\n
\t\t\t\t\t\tflex: 1,\n
\t\t\t\t\t\tminWidth: 100,\n
\t\t\t\t\t\tminHeight: 100\n
\t\t\t\t\t}\n
\t\t\t\t},\n
\n
\t\t\t\t{\n
\t\t\t\t\ttitle: \'b\',\n
\t\t\t\t\ttype: \'panel\',\n
\t\t\t\t\tlayout: \'flex\',\n
\t\t\t\t\talign: \'stretch\',\n
\t\t\t\t\titems: {\n
\t\t\t\t\t\ttype: \'spacer\',\n
\t\t\t\t\t\tflex: 1,\n
\t\t\t\t\t\tclasses: \'green\',\n
\t\t\t\t\t\tminWidth: 70,\n
\t\t\t\t\t\tminHeight: 70\n
\t\t\t\t\t}\n
\t\t\t\t},\n
\n
\t\t\t\t{\n
\t\t\t\t\ttitle: \'c\',\n
\t\t\t\t\ttype: \'panel\',\n
\t\t\t\t\tlayout: \'flex\',\n
\t\t\t\t\talign: \'stretch\',\n
\t\t\t\t\titems: {\n
\t\t\t\t\t\ttype: \'spacer\',\n
\t\t\t\t\t\tclasses: \'blue\',\n
\t\t\t\t\t\tflex: 1,\n
\t\t\t\t\t\tminWidth: 120,\n
\t\t\t\t\t\tminHeight: 120\n
\t\t\t\t\t}\n
\t\t\t\t}\n
\t\t\t]\n
\t\t});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel), [0, 0, 120, 151], 4);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[0]), [0, 31, 120, 120], 4);\n
\n
\t\tpanel.activateTab(1);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[1]), [0, 31, 120, 120], 4);\n
\n
\t\tpanel.activateTab(2);\n
\t\tUtils.nearlyEqualRects(Utils.rect(panel.items()[2]), [0, 31, 120, 120], 4);\n
\t});\n
})();\n
</string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>3336</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>TabPanel.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
