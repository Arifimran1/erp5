<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41268207.7</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>MenuButton.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

(function() {\n
\tmodule("tinymce.ui.MenuButton", {\n
\t\tsetup: function() {\n
\t\t\tdocument.getElementById(\'view\').innerHTML = \'\';\n
\t\t},\n
\n
\t\tteardown: function() {\n
\t\t\ttinymce.dom.Event.clean(document.getElementById(\'view\'));\n
\t\t}\n
\t});\n
\n
\tfunction createMenuButton(settings) {\n
\t\treturn tinymce.ui.Factory.create(tinymce.extend({\n
\t\t\ttype: \'menubutton\',\n
\t\t\tmenu: [\n
\t\t\t\t{text: \'1\'},\n
\t\t\t\t{text: \'2\'},\n
\t\t\t\t{text: \'3\'}\n
\t\t\t]\n
\t\t}, settings)).renderTo(document.getElementById(\'view\'));\n
\t}\n
\n
\ttest("menubutton text, size default", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 39, 30], 4);\n
\t});\n
\n
\ttest("menubutton text, size large", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\', size: \'large\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 53, 39], 4);\n
\t});\n
\n
\ttest("menubutton text, size small", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\', size: \'small\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 30, 23], 4);\n
\t});\n
\n
\ttest("menubutton text, width 100, height 100", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\', width: 100, height: 100});\n
\n
\t\tdeepEqual(Utils.rect(menuButton), [0, 0, 100, 100]);\n
\t\tdeepEqual(Utils.rect(menuButton.getEl().firstChild), [1, 1, 98, 98]);\n
\t});\n
\n
\ttest("menubutton icon, size default", function() {\n
\t\tvar menuButton = createMenuButton({icon: \'test\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 46, 30], 4);\n
\t});\n
\n
\ttest("menubutton icon, size small", function() {\n
\t\tvar menuButton = createMenuButton({icon: \'test\', size: \'small\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 39, 24], 4);\n
\t});\n
\n
\ttest("menubutton icon, size large", function() {\n
\t\tvar menuButton = createMenuButton({icon: \'test\', size: \'large\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 56, 40], 6);\n
\t});\n
\n
\ttest("menubutton icon, width 100, height 100", function() {\n
\t\tvar menuButton = createMenuButton({icon: \'test\', width: 100, height: 100});\n
\n
\t\tdeepEqual(Utils.rect(menuButton), [0, 0, 100, 100]);\n
\t\tdeepEqual(Utils.rect(menuButton.getEl().firstChild), [1, 1, 98, 98]);\n
\t});\n
\n
\ttest("menubutton text & icon, size default", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\', icon: \'test\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 59, 30], 4);\n
\t});\n
\n
\ttest("menubutton text & icon, size large", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\', icon: \'test\', size: \'large\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 71, 40], 4);\n
\t});\n
\n
\ttest("menubutton text & icon, size small", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\', icon: \'test\', size: \'small\'});\n
\n
\t\tUtils.nearlyEqualRects(Utils.rect(menuButton), [0, 0, 49, 24], 4);\n
\t});\n
\n
\ttest("menubutton text & icon, width 100, height 100", function() {\n
\t\tvar menuButton = createMenuButton({text: \'X\', icon: \'test\', width: 100, height: 100});\n
\n
\t\tdeepEqual(Utils.rect(menuButton), [0, 0, 100, 100]);\n
\t\tdeepEqual(Utils.rect(menuButton.getEl().firstChild), [1, 1, 98, 98]);\n
\t});\n
\n
\ttest("menubutton click event", function() {\n
\t\tvar menuButton, clicks = {};\n
\n
\t\tmenuButton = createMenuButton({text: \'X\', onclick: function() {clicks.a = \'a\';}});\n
\t\tmenuButton.on(\'click\', function() {clicks.b = \'b\';});\n
\t\tmenuButton.on(\'click\', function() {clicks.c = \'c\';});\n
\t\tmenuButton.fire(\'click\');\n
\n
\t\tdeepEqual(clicks, {a: \'a\', b: \'b\', c: \'c\'});\n
\t});\n
})();\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>3414</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>MenuButton.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
