<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41272838.94</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>handsontable.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>787094</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>handsontable.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/*!\n
 * Handsontable 0.17.0\n
 * Handsontable is a JavaScript library for editable tables with basic copy-paste compatibility with Excel and Google Docs\n
 *\n
 * Copyright (c) 2012-2014 Marcin Warpechowski\n
 * Copyright 2015 Handsoncode sp. z o.o. <hello@handsontable.com>\n
 * Licensed under the MIT license.\n
 * http://handsontable.com/\n
 *\n
 * Date: Thu Aug 27 2015 11:51:28 GMT+0200 (CEST)\n
 */\n
/*jslint white: true, browser: true, plusplus: true, indent: 4, maxerr: 50 */\n
\n
window.Handsontable = {\n
  version: \'0.17.0\',\n
  buildDate: \'Thu Aug 27 2015 11:51:28 GMT+0200 (CEST)\'\n
};\n
(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Handsontable = f()}})(function(){var define,module,exports;return (function init(modules, cache, entry) {\n
  (function outer (modules, cache, entry) {\n
    // Save the require from previous bundle to this closure if any\n
    var previousRequire = typeof require == "function" && require;\n
    var globalNS = JSON.parse(\'{"zeroclipboard":"ZeroClipboard","moment":"moment","pikaday":"Pikaday"}\') || {};\n
\n
    function newRequire(name, jumped){\n
      if(!cache[name]) {\n
\n
        if(!modules[name]) {\n
          // if we cannot find the the module within our internal map or\n
          // cache jump to the current global require ie. the last bundle\n
          // that was added to the page.\n
          var currentRequire = typeof require == "function" && require;\n
          if (!jumped && currentRequire) return currentRequire(name, true);\n
\n
          // If there are other bundles on this page the require from the\n
          // previous one is saved to \'previousRequire\'. Repeat this as\n
          // many times as there are bundles until the module is found or\n
          // we exhaust the require chain.\n
          if (previousRequire) return previousRequire(name, true);\n
\n
          // Try find module from global scope\n
          if (globalNS[name] && typeof window[globalNS[name]] !== \'undefined\') {\n
            return window[globalNS[name]];\n
          }\n
\n
          var err = new Error(\'Cannot find module \\\'\' + name + \'\\\'\');\n
          err.code = \'MODULE_NOT_FOUND\';\n
          throw err;\n
        }\n
        var m = cache[name] = {exports:{}};\n
        modules[name][0].call(m.exports, function(x){\n
          var id = modules[name][1][x];\n
          return newRequire(id ? id : x);\n
        },m,m.exports,outer,modules,cache,entry);\n
      }\n
\n
      return cache[name].exports;\n
    }\n
    for(var i=0;i<entry.length;i++) newRequire(entry[i]);\n
\n
    // Override the current require with this new one\n
    return newRequire;\n
  })(modules, cache, entry);\n
\n
  return function() {\n
    return Handsontable;\n
  };\n
})\n
({1:[function(require,module,exports){\n
"use strict";\n
if (window.jQuery) {\n
  (function(window, $, Handsontable) {\n
    $.fn.handsontable = function(action) {\n
      var i,\n
          ilen,\n
          args,\n
          output,\n
          userSettings,\n
          $this = this.first(),\n
          instance = $this.data(\'handsontable\');\n
      if (typeof action !== \'string\') {\n
        userSettings = action || {};\n
        if (instance) {\n
          instance.updateSettings(userSettings);\n
        } else {\n
          instance = new Handsontable.Core($this[0], userSettings);\n
          $this.data(\'handsontable\', instance);\n
          instance.init();\n
        }\n
        return $this;\n
      } else {\n
        args = [];\n
        if (arguments.length > 1) {\n
          for (i = 1, ilen = arguments.length; i < ilen; i++) {\n
            args.push(arguments[i]);\n
          }\n
        }\n
        if (instance) {\n
          if (typeof instance[action] !== \'undefined\') {\n
            output = instance[action].apply(instance, args);\n
            if (action === \'destroy\') {\n
              $this.removeData();\n
            }\n
          } else {\n
            throw new Error(\'Handsontable do not provide action: \' + action);\n
          }\n
        }\n
        return output;\n
      }\n
    };\n
  })(window, jQuery, Handsontable);\n
}\n
\n
//# \n
},{}],2:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableBorder: {get: function() {\n
      return WalkontableBorder;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47__46__46__47_eventManager__,\n
    $__cell_47_coords__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    getComputedStyle = $__0.getComputedStyle,\n
    getTrimmingContainer = $__0.getTrimmingContainer,\n
    innerWidth = $__0.innerWidth,\n
    offset = $__0.offset,\n
    outerHeight = $__0.outerHeight,\n
    outerWidth = $__0.outerWidth;\n
var stopImmediatePropagation = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;\n
var EventManager = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).EventManager;\n
var WalkontableCellCoords = ($__cell_47_coords__ = require("cell/coords"), $__cell_47_coords__ && $__cell_47_coords__.__esModule && $__cell_47_coords__ || {default: $__cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableBorder = function WalkontableBorder(wotInstance, settings) {\n
  if (!settings) {\n
    return;\n
  }\n
  this.eventManager = new EventManager(wotInstance);\n
  this.instance = wotInstance;\n
  this.wot = wotInstance;\n
  this.settings = settings;\n
  this.mouseDown = false;\n
  this.main = null;\n
  this.top = null;\n
  this.left = null;\n
  this.bottom = null;\n
  this.right = null;\n
  this.topStyle = null;\n
  this.leftStyle = null;\n
  this.bottomStyle = null;\n
  this.rightStyle = null;\n
  this.cornerDefaultStyle = {\n
    width: \'5px\',\n
    height: \'5px\',\n
    borderWidth: \'2px\',\n
    borderStyle: \'solid\',\n
    borderColor: \'#FFF\'\n
  };\n
  this.corner = null;\n
  this.cornerStyle = null;\n
  this.createBorders(settings);\n
  this.registerListeners();\n
};\n
($traceurRuntime.createClass)(WalkontableBorder, {\n
  registerListeners: function() {\n
    var $__4 = this;\n
    this.eventManager.addEventListener(document.body, \'mousedown\', (function() {\n
      return $__4.onMouseDown();\n
    }));\n
    this.eventManager.addEventListener(document.body, \'mouseup\', (function() {\n
      return $__4.onMouseUp();\n
    }));\n
    for (var c = 0,\n
        len = this.main.childNodes.length; c < len; c++) {\n
      this.eventManager.addEventListener(this.main.childNodes[c], \'mouseenter\', (function(event) {\n
        return $__4.onMouseEnter(event);\n
      }));\n
    }\n
  },\n
  onMouseDown: function() {\n
    this.mouseDown = true;\n
  },\n
  onMouseUp: function() {\n
    this.mouseDown = false;\n
  },\n
  onMouseEnter: function(event) {\n
    if (!this.mouseDown || !this.wot.getSetting(\'hideBorderOnMouseDownOver\')) {\n
      return;\n
    }\n
    event.preventDefault();\n
    stopImmediatePropagation(event);\n
    var _this = this;\n
    var bounds = this.getBoundingClientRect();\n
    this.style.display = \'none\';\n
    function isOutside(event) {\n
      if (event.clientY < Math.floor(bounds.top)) {\n
        return true;\n
      }\n
      if (event.clientY > Math.ceil(bounds.top + bounds.height)) {\n
        return true;\n
      }\n
      if (event.clientX < Math.floor(bounds.left)) {\n
        return true;\n
      }\n
      if (event.clientX > Math.ceil(bounds.left + bounds.width)) {\n
        return true;\n
      }\n
    }\n
    function handler(event) {\n
      if (isOutside(event)) {\n
        _this.eventManager.removeEventListener(document.body, \'mousemove\', handler);\n
        _this.style.display = \'block\';\n
      }\n
    }\n
    this.eventManager.addEventListener(document.body, \'mousemove\', handler);\n
  },\n
  createBorders: function(settings) {\n
    this.main = document.createElement(\'div\');\n
    var borderDivs = [\'top\', \'left\', \'bottom\', \'right\', \'corner\'];\n
    var style = this.main.style;\n
    style.position = \'absolute\';\n
    style.top = 0;\n
    style.left = 0;\n
    for (var i = 0; i < 5; i++) {\n
      var position = borderDivs[i];\n
      var div = document.createElement(\'div\');\n
      div.className = \'wtBorder \' + (this.settings.className || \'\');\n
      if (this.settings[position] && this.settings[position].hide) {\n
        div.className += \' hidden\';\n
      }\n
      style = div.style;\n
      style.backgroundColor = (this.settings[position] && this.settings[position].color) ? this.settings[position].color : settings.border.color;\n
      style.height = (this.settings[position] && this.settings[position].width) ? this.settings[position].width + \'px\' : settings.border.width + \'px\';\n
      style.width = (this.settings[position] && this.settings[position].width) ? this.settings[position].width + \'px\' : settings.border.width + \'px\';\n
      this.main.appendChild(div);\n
    }\n
    this.top = this.main.childNodes[0];\n
    this.left = this.main.childNodes[1];\n
    this.bottom = this.main.childNodes[2];\n
    this.right = this.main.childNodes[3];\n
    this.topStyle = this.top.style;\n
    this.leftStyle = this.left.style;\n
    this.bottomStyle = this.bottom.style;\n
    this.rightStyle = this.right.style;\n
    this.corner = this.main.childNodes[4];\n
    this.corner.className += \' corner\';\n
    this.cornerStyle = this.corner.style;\n
    this.cornerStyle.width = this.cornerDefaultStyle.width;\n
    this.cornerStyle.height = this.cornerDefaultStyle.height;\n
    this.cornerStyle.border = [this.cornerDefaultStyle.borderWidth, this.cornerDefaultStyle.borderStyle, this.cornerDefaultStyle.borderColor].join(\' \');\n
    if (Handsontable.mobileBrowser) {\n
      this.createMultipleSelectorHandles();\n
    }\n
    this.disappear();\n
    if (!this.wot.wtTable.bordersHolder) {\n
      this.wot.wtTable.bordersHolder = document.createElement(\'div\');\n
      this.wot.wtTable.bordersHolder.className = \'htBorders\';\n
      this.wot.wtTable.spreader.appendChild(this.wot.wtTable.bordersHolder);\n
    }\n
    this.wot.wtTable.bordersHolder.insertBefore(this.main, this.wot.wtTable.bordersHolder.firstChild);\n
  },\n
  createMultipleSelectorHandles: function() {\n
    this.selectionHandles = {\n
      topLeft: document.createElement(\'DIV\'),\n
      topLeftHitArea: document.createElement(\'DIV\'),\n
      bottomRight: document.createElement(\'DIV\'),\n
      bottomRightHitArea: document.createElement(\'DIV\')\n
    };\n
    var width = 10;\n
    var hitAreaWidth = 40;\n
    this.selectionHandles.topLeft.className = \'topLeftSelectionHandle\';\n
    this.selectionHandles.topLeftHitArea.className = \'topLeftSelectionHandle-HitArea\';\n
    this.selectionHandles.bottomRight.className = \'bottomRightSelectionHandle\';\n
    this.selectionHandles.bottomRightHitArea.className = \'bottomRightSelectionHandle-HitArea\';\n
    this.selectionHandles.styles = {\n
      topLeft: this.selectionHandles.topLeft.style,\n
      topLeftHitArea: this.selectionHandles.topLeftHitArea.style,\n
      bottomRight: this.selectionHandles.bottomRight.style,\n
      bottomRightHitArea: this.selectionHandles.bottomRightHitArea.style\n
    };\n
    var hitAreaStyle = {\n
      \'position\': \'absolute\',\n
      \'height\': hitAreaWidth + \'px\',\n
      \'width\': hitAreaWidth + \'px\',\n
      \'border-radius\': parseInt(hitAreaWidth / 1.5, 10) + \'px\'\n
    };\n
    for (var prop in hitAreaStyle) {\n
      if (hitAreaStyle.hasOwnProperty(prop)) {\n
        this.selectionHandles.styles.bottomRightHitArea[prop] = hitAreaStyle[prop];\n
        this.selectionHandles.styles.topLeftHitArea[prop] = hitAreaStyle[prop];\n
      }\n
    }\n
    var handleStyle = {\n
      \'position\': \'absolute\',\n
      \'height\': width + \'px\',\n
      \'width\': width + \'px\',\n
      \'border-radius\': parseInt(width / 1.5, 10) + \'px\',\n
      \'background\': \'#F5F5FF\',\n
      \'border\': \'1px solid #4285c8\'\n
    };\n
    for (var prop$__6 in handleStyle) {\n
      if (handleStyle.hasOwnProperty(prop$__6)) {\n
        this.selectionHandles.styles.bottomRight[prop$__6] = handleStyle[prop$__6];\n
        this.selectionHandles.styles.topLeft[prop$__6] = handleStyle[prop$__6];\n
      }\n
    }\n
    this.main.appendChild(this.selectionHandles.topLeft);\n
    this.main.appendChild(this.selectionHandles.bottomRight);\n
    this.main.appendChild(this.selectionHandles.topLeftHitArea);\n
    this.main.appendChild(this.selectionHandles.bottomRightHitArea);\n
  },\n
  isPartRange: function(row, col) {\n
    if (this.wot.selections.area.cellRange) {\n
      if (row != this.wot.selections.area.cellRange.to.row || col != this.wot.selections.area.cellRange.to.col) {\n
        return true;\n
      }\n
    }\n
    return false;\n
  },\n
  updateMultipleSelectionHandlesPosition: function(row, col, top, left, width, height) {\n
    var handleWidth = parseInt(this.selectionHandles.styles.topLeft.width, 10);\n
    var hitAreaWidth = parseInt(this.selectionHandles.styles.topLeftHitArea.width, 10);\n
    this.selectionHandles.styles.topLeft.top = parseInt(top - handleWidth, 10) + "px";\n
    this.selectionHandles.styles.topLeft.left = parseInt(left - handleWidth, 10) + "px";\n
    this.selectionHandles.styles.topLeftHitArea.top = parseInt(top - (hitAreaWidth / 4) * 3, 10) + "px";\n
    this.selectionHandles.styles.topLeftHitArea.left = parseInt(left - (hitAreaWidth / 4) * 3, 10) + "px";\n
    this.selectionHandles.styles.bottomRight.top = parseInt(top + height, 10) + "px";\n
    this.selectionHandles.styles.bottomRight.left = parseInt(left + width, 10) + "px";\n
    this.selectionHandles.styles.bottomRightHitArea.top = parseInt(top + height - hitAreaWidth / 4, 10) + "px";\n
    this.selectionHandles.styles.bottomRightHitArea.left = parseInt(left + width - hitAreaWidth / 4, 10) + "px";\n
    if (this.settings.border.multipleSelectionHandlesVisible && this.settings.border.multipleSelectionHandlesVisible()) {\n
      this.selectionHandles.styles.topLeft.display = "block";\n
      this.selectionHandles.styles.topLeftHitArea.display = "block";\n
      if (!this.isPartRange(row, col)) {\n
        this.selectionHandles.styles.bottomRight.display = "block";\n
        this.selectionHandles.styles.bottomRightHitArea.display = "block";\n
      } else {\n
        this.selectionHandles.styles.bottomRight.display = "none";\n
        this.selectionHandles.styles.bottomRightHitArea.display = "none";\n
      }\n
    } else {\n
      this.selectionHandles.styles.topLeft.display = "none";\n
      this.selectionHandles.styles.bottomRight.display = "none";\n
      this.selectionHandles.styles.topLeftHitArea.display = "none";\n
      this.selectionHandles.styles.bottomRightHitArea.display = "none";\n
    }\n
    if (row == this.wot.wtSettings.getSetting(\'fixedRowsTop\') || col == this.wot.wtSettings.getSetting(\'fixedColumnsLeft\')) {\n
      this.selectionHandles.styles.topLeft.zIndex = "9999";\n
      this.selectionHandles.styles.topLeftHitArea.zIndex = "9999";\n
    } else {\n
      this.selectionHandles.styles.topLeft.zIndex = "";\n
      this.selectionHandles.styles.topLeftHitArea.zIndex = "";\n
    }\n
  },\n
  appear: function(corners) {\n
    if (this.disabled) {\n
      return;\n
    }\n
    var isMultiple,\n
        fromTD,\n
        toTD,\n
        fromOffset,\n
        toOffset,\n
        containerOffset,\n
        top,\n
        minTop,\n
        left,\n
        minLeft,\n
        height,\n
        width,\n
        fromRow,\n
        fromColumn,\n
        toRow,\n
        toColumn,\n
        ilen;\n
    if (this.wot.cloneOverlay instanceof WalkontableTopOverlay || this.wot.cloneOverlay instanceof WalkontableCornerOverlay) {\n
      ilen = this.wot.getSetting(\'fixedRowsTop\');\n
    } else {\n
      ilen = this.wot.wtTable.getRenderedRowsCount();\n
    }\n
    for (var i = 0; i < ilen; i++) {\n
      var s = this.wot.wtTable.rowFilter.renderedToSource(i);\n
      if (s >= corners[0] && s <= corners[2]) {\n
        fromRow = s;\n
        break;\n
      }\n
    }\n
    for (var i$__7 = ilen - 1; i$__7 >= 0; i$__7--) {\n
      var s$__8 = this.wot.wtTable.rowFilter.renderedToSource(i$__7);\n
      if (s$__8 >= corners[0] && s$__8 <= corners[2]) {\n
        toRow = s$__8;\n
        break;\n
      }\n
    }\n
    ilen = this.wot.wtTable.getRenderedColumnsCount();\n
    for (var i$__9 = 0; i$__9 < ilen; i$__9++) {\n
      var s$__10 = this.wot.wtTable.columnFilter.renderedToSource(i$__9);\n
      if (s$__10 >= corners[1] && s$__10 <= corners[3]) {\n
        fromColumn = s$__10;\n
        break;\n
      }\n
    }\n
    for (var i$__11 = ilen - 1; i$__11 >= 0; i$__11--) {\n
      var s$__12 = this.wot.wtTable.columnFilter.renderedToSource(i$__11);\n
      if (s$__12 >= corners[1] && s$__12 <= corners[3]) {\n
        toColumn = s$__12;\n
        break;\n
      }\n
    }\n
    if (fromRow === void 0 || fromColumn === void 0) {\n
      this.disappear();\n
      return;\n
    }\n
    isMultiple = (fromRow !== toRow || fromColumn !== toColumn);\n
    fromTD = this.wot.wtTable.getCell(new WalkontableCellCoords(fromRow, fromColumn));\n
    toTD = isMultiple ? this.wot.wtTable.getCell(new WalkontableCellCoords(toRow, toColumn)) : fromTD;\n
    fromOffset = offset(fromTD);\n
    toOffset = isMultiple ? offset(toTD) : fromOffset;\n
    containerOffset = offset(this.wot.wtTable.TABLE);\n
    minTop = fromOffset.top;\n
    height = toOffset.top + outerHeight(toTD) - minTop;\n
    minLeft = fromOffset.left;\n
    width = toOffset.left + outerWidth(toTD) - minLeft;\n
    top = minTop - containerOffset.top - 1;\n
    left = minLeft - containerOffset.left - 1;\n
    var style = getComputedStyle(fromTD);\n
    if (parseInt(style.borderTopWidth, 10) > 0) {\n
      top += 1;\n
      height = height > 0 ? height - 1 : 0;\n
    }\n
    if (parseInt(style.borderLeftWidth, 10) > 0) {\n
      left += 1;\n
      width = width > 0 ? width - 1 : 0;\n
    }\n
    this.topStyle.top = top + \'px\';\n
    this.topStyle.left = left + \'px\';\n
    this.topStyle.width = width + \'px\';\n
    this.topStyle.display = \'block\';\n
    this.leftStyle.top = top + \'px\';\n
    this.leftStyle.left = left + \'px\';\n
    this.leftStyle.height = height + \'px\';\n
    this.leftStyle.display = \'block\';\n
    var delta = Math.floor(this.settings.border.width / 2);\n
    this.bottomStyle.top = top + height - delta + \'px\';\n
    this.bottomStyle.left = left + \'px\';\n
    this.bottomStyle.width = width + \'px\';\n
    this.bottomStyle.display = \'block\';\n
    this.rightStyle.top = top + \'px\';\n
    this.rightStyle.left = left + width - delta + \'px\';\n
    this.rightStyle.height = height + 1 + \'px\';\n
    this.rightStyle.display = \'block\';\n
    if (Handsontable.mobileBrowser || (!this.hasSetting(this.settings.border.cornerVisible) || this.isPartRange(toRow, toColumn))) {\n
      this.cornerStyle.display = \'none\';\n
    } else {\n
      this.cornerStyle.top = top + height - 4 + \'px\';\n
      this.cornerStyle.left = left + width - 4 + \'px\';\n
      this.cornerStyle.borderRightWidth = this.cornerDefaultStyle.borderWidth;\n
      this.cornerStyle.width = this.cornerDefaultStyle.width;\n
      this.cornerStyle.display = \'block\';\n
      if (toColumn === this.wot.getSetting(\'totalColumns\') - 1) {\n
        var trimmingContainer = getTrimmingContainer(this.wot.wtTable.TABLE);\n
        var cornerOverlappingContainer = toTD.offsetLeft + outerWidth(toTD) >= innerWidth(trimmingContainer);\n
        if (cornerOverlappingContainer) {\n
          this.cornerStyle.left = Math.floor(left + width - 3 - parseInt(this.cornerDefaultStyle.width) / 2) + "px";\n
          this.cornerStyle.borderRightWidth = 0;\n
        }\n
      }\n
    }\n
    if (Handsontable.mobileBrowser) {\n
      this.updateMultipleSelectionHandlesPosition(fromRow, fromColumn, top, left, width, height);\n
    }\n
  },\n
  disappear: function() {\n
    this.topStyle.display = \'none\';\n
    this.leftStyle.display = \'none\';\n
    this.bottomStyle.display = \'none\';\n
    this.rightStyle.display = \'none\';\n
    this.cornerStyle.display = \'none\';\n
    if (Handsontable.mobileBrowser) {\n
      this.selectionHandles.styles.topLeft.display = \'none\';\n
      this.selectionHandles.styles.bottomRight.display = \'none\';\n
    }\n
  },\n
  hasSetting: function(setting) {\n
    if (typeof setting === \'function\') {\n
      return setting();\n
    }\n
    return !!setting;\n
  }\n
}, {});\n
;\n
window.WalkontableBorder = WalkontableBorder;\n
\n
//# \n
},{"cell/coords":5,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45}],3:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableViewportColumnsCalculator: {get: function() {\n
      return WalkontableViewportColumnsCalculator;\n
    }},\n
  __esModule: {value: true}\n
});\n
var privatePool = new WeakMap();\n
var WalkontableViewportColumnsCalculator = function WalkontableViewportColumnsCalculator(viewportWidth, scrollOffset, totalColumns, columnWidthFn, overrideFn, onlyFullyVisible, stretchH) {\n
  privatePool.set(this, {\n
    viewportWidth: viewportWidth,\n
    scrollOffset: scrollOffset,\n
    totalColumns: totalColumns,\n
    columnWidthFn: columnWidthFn,\n
    overrideFn: overrideFn,\n
    onlyFullyVisible: onlyFullyVisible\n
  });\n
  this.count = 0;\n
  this.startColumn = null;\n
  this.endColumn = null;\n
  this.startPosition = null;\n
  this.stretchAllRatio = 0;\n
  this.stretchLastWidth = 0;\n
  this.stretch = stretchH;\n
  this.totalTargetWidth = 0;\n
  this.needVerifyLastColumnWidth = true;\n
  this.stretchAllColumnsWidth = [];\n
  this.calculate();\n
};\n
var $WalkontableViewportColumnsCalculator = WalkontableViewportColumnsCalculator;\n
($traceurRuntime.createClass)(WalkontableViewportColumnsCalculator, {\n
  calculate: function() {\n
    var sum = 0;\n
    var needReverse = true;\n
    var startPositions = [];\n
    var columnWidth;\n
    var priv = privatePool.get(this);\n
    var onlyFullyVisible = priv.onlyFullyVisible;\n
    var overrideFn = priv.overrideFn;\n
    var scrollOffset = priv.scrollOffset;\n
    var totalColumns = priv.totalColumns;\n
    var viewportWidth = priv.viewportWidth;\n
    for (var i = 0; i < totalColumns; i++) {\n
      columnWidth = this._getColumnWidth(i);\n
      if (sum <= scrollOffset && !onlyFullyVisible) {\n
        this.startColumn = i;\n
      }\n
      if (sum >= scrollOffset && sum + columnWidth <= scrollOffset + viewportWidth) {\n
        if (this.startColumn == null) {\n
          this.startColumn = i;\n
        }\n
        this.endColumn = i;\n
      }\n
      startPositions.push(sum);\n
      sum += columnWidth;\n
      if (!onlyFullyVisible) {\n
        this.endColumn = i;\n
      }\n
      if (sum >= scrollOffset + viewportWidth) {\n
        needReverse = false;\n
        break;\n
      }\n
    }\n
    if (this.endColumn === totalColumns - 1 && needReverse) {\n
      this.startColumn = this.endColumn;\n
      while (this.startColumn > 0) {\n
        var viewportSum = startPositions[this.endColumn] + columnWidth - startPositions[this.startColumn - 1];\n
        if (viewportSum <= viewportWidth || !onlyFullyVisible) {\n
          this.startColumn--;\n
        }\n
        if (viewportSum > viewportWidth) {\n
          break;\n
        }\n
      }\n
    }\n
    if (this.startColumn !== null && overrideFn) {\n
      overrideFn(this);\n
    }\n
    this.startPosition = startPositions[this.startColumn];\n
    if (this.startPosition == void 0) {\n
      this.startPosition = null;\n
    }\n
    if (this.startColumn !== null) {\n
      this.count = this.endColumn - this.startColumn + 1;\n
    }\n
  },\n
  refreshStretching: function(totalWidth) {\n
    if (this.stretch === \'none\') {\n
      return;\n
    }\n
    var sumAll = 0;\n
    var columnWidth;\n
    var remainingSize;\n
    var priv = privatePool.get(this);\n
    var totalColumns = priv.totalColumns;\n
    for (var i = 0; i < totalColumns; i++) {\n
      columnWidth = this._getColumnWidth(i);\n
      sumAll += columnWidth;\n
    }\n
    this.totalTargetWidth = totalWidth;\n
    remainingSize = sumAll - totalWidth;\n
    if (this.stretch === \'all\' && remainingSize < 0) {\n
      this.stretchAllRatio = totalWidth / sumAll;\n
      this.stretchAllColumnsWidth = [];\n
      this.needVerifyLastColumnWidth = true;\n
    } else if (this.stretch === \'last\' && totalWidth !== Infinity) {\n
      this.stretchLastWidth = -remainingSize + this._getColumnWidth(totalColumns - 1);\n
    }\n
  },\n
  getStretchedColumnWidth: function(column, baseWidth) {\n
    var result = null;\n
    if (this.stretch === \'all\' && this.stretchAllRatio !== 0) {\n
      result = this._getStretchedAllColumnWidth(column, baseWidth);\n
    } else if (this.stretch === \'last\' && this.stretchLastWidth !== 0) {\n
      result = this._getStretchedLastColumnWidth(column);\n
    }\n
    return result;\n
  },\n
  _getStretchedAllColumnWidth: function(column, baseWidth) {\n
    var sumRatioWidth = 0;\n
    var priv = privatePool.get(this);\n
    var totalColumns = priv.totalColumns;\n
    if (!this.stretchAllColumnsWidth[column]) {\n
      this.stretchAllColumnsWidth[column] = Math.round(baseWidth * this.stretchAllRatio);\n
    }\n
    if (this.stretchAllColumnsWidth.length === totalColumns && this.needVerifyLastColumnWidth) {\n
      this.needVerifyLastColumnWidth = false;\n
      for (var i = 0; i < this.stretchAllColumnsWidth.length; i++) {\n
        sumRatioWidth += this.stretchAllColumnsWidth[i];\n
      }\n
      if (sumRatioWidth !== this.totalTargetWidth) {\n
        this.stretchAllColumnsWidth[this.stretchAllColumnsWidth.length - 1] += this.totalTargetWidth - sumRatioWidth;\n
      }\n
    }\n
    return this.stretchAllColumnsWidth[column];\n
  },\n
  _getStretchedLastColumnWidth: function(column) {\n
    var priv = privatePool.get(this);\n
    var totalColumns = priv.totalColumns;\n
    if (column === totalColumns - 1) {\n
      return this.stretchLastWidth;\n
    }\n
    return null;\n
  },\n
  _getColumnWidth: function(column) {\n
    var width = privatePool.get(this).columnWidthFn(column);\n
    if (width === undefined) {\n
      width = $WalkontableViewportColumnsCalculator.DEFAULT_WIDTH;\n
    }\n
    return width;\n
  }\n
}, {get DEFAULT_WIDTH() {\n
    return 50;\n
  }});\n
;\n
window.WalkontableViewportColumnsCalculator = WalkontableViewportColumnsCalculator;\n
\n
//# \n
},{}],4:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableViewportRowsCalculator: {get: function() {\n
      return WalkontableViewportRowsCalculator;\n
    }},\n
  __esModule: {value: true}\n
});\n
var privatePool = new WeakMap();\n
var WalkontableViewportRowsCalculator = function WalkontableViewportRowsCalculator(viewportHeight, scrollOffset, totalRows, rowHeightFn, overrideFn, onlyFullyVisible) {\n
  privatePool.set(this, {\n
    viewportHeight: viewportHeight,\n
    scrollOffset: scrollOffset,\n
    totalRows: totalRows,\n
    rowHeightFn: rowHeightFn,\n
    overrideFn: overrideFn,\n
    onlyFullyVisible: onlyFullyVisible\n
  });\n
  this.count = 0;\n
  this.startRow = null;\n
  this.endRow = null;\n
  this.startPosition = null;\n
  this.calculate();\n
};\n
var $WalkontableViewportRowsCalculator = WalkontableViewportRowsCalculator;\n
($traceurRuntime.createClass)(WalkontableViewportRowsCalculator, {calculate: function() {\n
    var sum = 0;\n
    var needReverse = true;\n
    var startPositions = [];\n
    var priv = privatePool.get(this);\n
    var onlyFullyVisible = priv.onlyFullyVisible;\n
    var overrideFn = priv.overrideFn;\n
    var rowHeightFn = priv.rowHeightFn;\n
    var scrollOffset = priv.scrollOffset;\n
    var totalRows = priv.totalRows;\n
    var viewportHeight = priv.viewportHeight;\n
    for (var i = 0; i < totalRows; i++) {\n
      var rowHeight = rowHeightFn(i);\n
      if (rowHeight === undefined) {\n
        rowHeight = $WalkontableViewportRowsCalculator.DEFAULT_HEIGHT;\n
      }\n
      if (sum <= scrollOffset && !onlyFullyVisible) {\n
        this.startRow = i;\n
      }\n
      if (sum >= scrollOffset && sum + rowHeight <= scrollOffset + viewportHeight) {\n
        if (this.startRow === null) {\n
          this.startRow = i;\n
        }\n
        this.endRow = i;\n
      }\n
      startPositions.push(sum);\n
      sum += rowHeight;\n
      if (!onlyFullyVisible) {\n
        this.endRow = i;\n
      }\n
      if (sum >= scrollOffset + viewportHeight) {\n
        needReverse = false;\n
        break;\n
      }\n
    }\n
    if (this.endRow === totalRows - 1 && needReverse) {\n
      this.startRow = this.endRow;\n
      while (this.startRow > 0) {\n
        var viewportSum = startPositions[this.endRow] + rowHeight - startPositions[this.startRow - 1];\n
        if (viewportSum <= viewportHeight || !onlyFullyVisible) {\n
          this.startRow--;\n
        }\n
        if (viewportSum >= viewportHeight) {\n
          break;\n
        }\n
      }\n
    }\n
    if (this.startRow !== null && overrideFn) {\n
      overrideFn(this);\n
    }\n
    this.startPosition = startPositions[this.startRow];\n
    if (this.startPosition == void 0) {\n
      this.startPosition = null;\n
    }\n
    if (this.startRow !== null) {\n
      this.count = this.endRow - this.startRow + 1;\n
    }\n
  }}, {get DEFAULT_HEIGHT() {\n
    return 23;\n
  }});\n
;\n
window.WalkontableViewportRowsCalculator = WalkontableViewportRowsCalculator;\n
\n
//# \n
},{}],5:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableCellCoords: {get: function() {\n
      return WalkontableCellCoords;\n
    }},\n
  __esModule: {value: true}\n
});\n
var WalkontableCellCoords = function WalkontableCellCoords(row, col) {\n
  if (typeof row !== \'undefined\' && typeof col !== \'undefined\') {\n
    this.row = row;\n
    this.col = col;\n
  } else {\n
    this.row = null;\n
    this.col = null;\n
  }\n
};\n
($traceurRuntime.createClass)(WalkontableCellCoords, {\n
  isValid: function(wotInstance) {\n
    if (this.row < 0 || this.col < 0) {\n
      return false;\n
    }\n
    if (this.row >= wotInstance.getSetting(\'totalRows\') || this.col >= wotInstance.getSetting(\'totalColumns\')) {\n
      return false;\n
    }\n
    return true;\n
  },\n
  isEqual: function(cellCoords) {\n
    if (cellCoords === this) {\n
      return true;\n
    }\n
    return this.row === cellCoords.row && this.col === cellCoords.col;\n
  },\n
  isSouthEastOf: function(testedCoords) {\n
    return this.row >= testedCoords.row && this.col >= testedCoords.col;\n
  },\n
  isNorthWestOf: function(testedCoords) {\n
    return this.row <= testedCoords.row && this.col <= testedCoords.col;\n
  },\n
  isSouthWestOf: function(testedCoords) {\n
    return this.row >= testedCoords.row && this.col <= testedCoords.col;\n
  },\n
  isNorthEastOf: function(testedCoords) {\n
    return this.row <= testedCoords.row && this.col >= testedCoords.col;\n
  }\n
}, {});\n
;\n
window.WalkontableCellCoords = WalkontableCellCoords;\n
\n
//# \n
},{}],6:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableCellRange: {get: function() {\n
      return WalkontableCellRange;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_cell_47_coords__;\n
var WalkontableCellCoords = ($___46__46__47_cell_47_coords__ = require("cell/coords"), $___46__46__47_cell_47_coords__ && $___46__46__47_cell_47_coords__.__esModule && $___46__46__47_cell_47_coords__ || {default: $___46__46__47_cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableCellRange = function WalkontableCellRange(highlight, from, to) {\n
  this.highlight = highlight;\n
  this.from = from;\n
  this.to = to;\n
};\n
var $WalkontableCellRange = WalkontableCellRange;\n
($traceurRuntime.createClass)(WalkontableCellRange, {\n
  isValid: function(wotInstance) {\n
    return this.from.isValid(wotInstance) && this.to.isValid(wotInstance);\n
  },\n
  isSingle: function() {\n
    return this.from.row === this.to.row && this.from.col === this.to.col;\n
  },\n
  getHeight: function() {\n
    return Math.max(this.from.row, this.to.row) - Math.min(this.from.row, this.to.row) + 1;\n
  },\n
  getWidth: function() {\n
    return Math.max(this.from.col, this.to.col) - Math.min(this.from.col, this.to.col) + 1;\n
  },\n
  includes: function(cellCoords) {\n
    var topLeft = this.getTopLeftCorner();\n
    var bottomRight = this.getBottomRightCorner();\n
    if (cellCoords.row < 0) {\n
      cellCoords.row = 0;\n
    }\n
    if (cellCoords.col < 0) {\n
      cellCoords.col = 0;\n
    }\n
    return topLeft.row <= cellCoords.row && bottomRight.row >= cellCoords.row && topLeft.col <= cellCoords.col && bottomRight.col >= cellCoords.col;\n
  },\n
  includesRange: function(testedRange) {\n
    return this.includes(testedRange.getTopLeftCorner()) && this.includes(testedRange.getBottomRightCorner());\n
  },\n
  isEqual: function(testedRange) {\n
    return (Math.min(this.from.row, this.to.row) == Math.min(testedRange.from.row, testedRange.to.row)) && (Math.max(this.from.row, this.to.row) == Math.max(testedRange.from.row, testedRange.to.row)) && (Math.min(this.from.col, this.to.col) == Math.min(testedRange.from.col, testedRange.to.col)) && (Math.max(this.from.col, this.to.col) == Math.max(testedRange.from.col, testedRange.to.col));\n
  },\n
  overlaps: function(testedRange) {\n
    return testedRange.isSouthEastOf(this.getTopLeftCorner()) && testedRange.isNorthWestOf(this.getBottomRightCorner());\n
  },\n
  isSouthEastOf: function(testedCoords) {\n
    return this.getTopLeftCorner().isSouthEastOf(testedCoords) || this.getBottomRightCorner().isSouthEastOf(testedCoords);\n
  },\n
  isNorthWestOf: function(testedCoords) {\n
    return this.getTopLeftCorner().isNorthWestOf(testedCoords) || this.getBottomRightCorner().isNorthWestOf(testedCoords);\n
  },\n
  expand: function(cellCoords) {\n
    var topLeft = this.getTopLeftCorner();\n
    var bottomRight = this.getBottomRightCorner();\n
    if (cellCoords.row < topLeft.row || cellCoords.col < topLeft.col || cellCoords.row > bottomRight.row || cellCoords.col > bottomRight.col) {\n
      this.from = new WalkontableCellCoords(Math.min(topLeft.row, cellCoords.row), Math.min(topLeft.col, cellCoords.col));\n
      this.to = new WalkontableCellCoords(Math.max(bottomRight.row, cellCoords.row), Math.max(bottomRight.col, cellCoords.col));\n
      return true;\n
    }\n
    return false;\n
  },\n
  expandByRange: function(expandingRange) {\n
    if (this.includesRange(expandingRange) || !this.overlaps(expandingRange)) {\n
      return false;\n
    }\n
    var topLeft = this.getTopLeftCorner();\n
    var bottomRight = this.getBottomRightCorner();\n
    var topRight = this.getTopRightCorner();\n
    var bottomLeft = this.getBottomLeftCorner();\n
    var expandingTopLeft = expandingRange.getTopLeftCorner();\n
    var expandingBottomRight = expandingRange.getBottomRightCorner();\n
    var resultTopRow = Math.min(topLeft.row, expandingTopLeft.row);\n
    var resultTopCol = Math.min(topLeft.col, expandingTopLeft.col);\n
    var resultBottomRow = Math.max(bottomRight.row, expandingBottomRight.row);\n
    var resultBottomCol = Math.max(bottomRight.col, expandingBottomRight.col);\n
    var finalFrom = new WalkontableCellCoords(resultTopRow, resultTopCol),\n
        finalTo = new WalkontableCellCoords(resultBottomRow, resultBottomCol);\n
    var isCorner = new $WalkontableCellRange(finalFrom, finalFrom, finalTo).isCorner(this.from, expandingRange),\n
        onlyMerge = expandingRange.isEqual(new $WalkontableCellRange(finalFrom, finalFrom, finalTo));\n
    if (isCorner && !onlyMerge) {\n
      if (this.from.col > finalFrom.col) {\n
        finalFrom.col = resultBottomCol;\n
        finalTo.col = resultTopCol;\n
      }\n
      if (this.from.row > finalFrom.row) {\n
        finalFrom.row = resultBottomRow;\n
        finalTo.row = resultTopRow;\n
      }\n
    }\n
    this.from = finalFrom;\n
    this.to = finalTo;\n
    return true;\n
  },\n
  getDirection: function() {\n
    if (this.from.isNorthWestOf(this.to)) {\n
      return \'NW-SE\';\n
    } else if (this.from.isNorthEastOf(this.to)) {\n
      return \'NE-SW\';\n
    } else if (this.from.isSouthEastOf(this.to)) {\n
      return \'SE-NW\';\n
    } else if (this.from.isSouthWestOf(this.to)) {\n
      return \'SW-NE\';\n
    }\n
  },\n
  setDirection: function(direction) {\n
    switch (direction) {\n
      case \'NW-SE\':\n
        this.from = this.getTopLeftCorner();\n
        this.to = this.getBottomRightCorner();\n
        break;\n
      case \'NE-SW\':\n
        this.from = this.getTopRightCorner();\n
        this.to = this.getBottomLeftCorner();\n
        break;\n
      case \'SE-NW\':\n
        this.from = this.getBottomRightCorner();\n
        this.to = this.getTopLeftCorner();\n
        break;\n
      case \'SW-NE\':\n
        this.from = this.getBottomLeftCorner();\n
        this.to = this.getTopRightCorner();\n
        break;\n
    }\n
  },\n
  getTopLeftCorner: function() {\n
    return new WalkontableCellCoords(Math.min(this.from.row, this.to.row), Math.min(this.from.col, this.to.col));\n
  },\n
  getBottomRightCorner: function() {\n
    return new WalkontableCellCoords(Math.max(this.from.row, this.to.row), Math.max(this.from.col, this.to.col));\n
  },\n
  getTopRightCorner: function() {\n
    return new WalkontableCellCoords(Math.min(this.from.row, this.to.row), Math.max(this.from.col, this.to.col));\n
  },\n
  getBottomLeftCorner: function() {\n
    return new WalkontableCellCoords(Math.max(this.from.row, this.to.row), Math.min(this.from.col, this.to.col));\n
  },\n
  isCorner: function(coords, expandedRange) {\n
    if (expandedRange) {\n
      if (expandedRange.includes(coords)) {\n
        if (this.getTopLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.from.col)) || this.getTopRightCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.to.col)) || this.getBottomLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.from.col)) || this.getBottomRightCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.to.col))) {\n
          return true;\n
        }\n
      }\n
    }\n
    return coords.isEqual(this.getTopLeftCorner()) || coords.isEqual(this.getTopRightCorner()) || coords.isEqual(this.getBottomLeftCorner()) || coords.isEqual(this.getBottomRightCorner());\n
  },\n
  getOppositeCorner: function(coords, expandedRange) {\n
    if (!(coords instanceof WalkontableCellCoords)) {\n
      return false;\n
    }\n
    if (expandedRange) {\n
      if (expandedRange.includes(coords)) {\n
        if (this.getTopLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.from.col))) {\n
          return this.getBottomRightCorner();\n
        }\n
        if (this.getTopRightCorner().isEqual(new WalkontableCellCoords(expandedRange.from.row, expandedRange.to.col))) {\n
          return this.getBottomLeftCorner();\n
        }\n
        if (this.getBottomLeftCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.from.col))) {\n
          return this.getTopRightCorner();\n
        }\n
        if (this.getBottomRightCorner().isEqual(new WalkontableCellCoords(expandedRange.to.row, expandedRange.to.col))) {\n
          return this.getTopLeftCorner();\n
        }\n
      }\n
    }\n
    if (coords.isEqual(this.getBottomRightCorner())) {\n
      return this.getTopLeftCorner();\n
    } else if (coords.isEqual(this.getTopLeftCorner())) {\n
      return this.getBottomRightCorner();\n
    } else if (coords.isEqual(this.getTopRightCorner())) {\n
      return this.getBottomLeftCorner();\n
    } else if (coords.isEqual(this.getBottomLeftCorner())) {\n
      return this.getTopRightCorner();\n
    }\n
  },\n
  getBordersSharedWith: function(range) {\n
    if (!this.includesRange(range)) {\n
      return [];\n
    }\n
    var thisBorders = {\n
      top: Math.min(this.from.row, this.to.row),\n
      bottom: Math.max(this.from.row, this.to.row),\n
      left: Math.min(this.from.col, this.to.col),\n
      right: Math.max(this.from.col, this.to.col)\n
    };\n
    var rangeBorders = {\n
      top: Math.min(range.from.row, range.to.row),\n
      bottom: Math.max(range.from.row, range.to.row),\n
      left: Math.min(range.from.col, range.to.col),\n
      right: Math.max(range.from.col, range.to.col)\n
    };\n
    var result = [];\n
    if (thisBorders.top == rangeBorders.top) {\n
      result.push(\'top\');\n
    }\n
    if (thisBorders.right == rangeBorders.right) {\n
      result.push(\'right\');\n
    }\n
    if (thisBorders.bottom == rangeBorders.bottom) {\n
      result.push(\'bottom\');\n
    }\n
    if (thisBorders.left == rangeBorders.left) {\n
      result.push(\'left\');\n
    }\n
    return result;\n
  },\n
  getInner: function() {\n
    var topLeft = this.getTopLeftCorner();\n
    var bottomRight = this.getBottomRightCorner();\n
    var out = [];\n
    for (var r = topLeft.row; r <= bottomRight.row; r++) {\n
      for (var c = topLeft.col; c <= bottomRight.col; c++) {\n
        if (!(this.from.row === r && this.from.col === c) && !(this.to.row === r && this.to.col === c)) {\n
          out.push(new WalkontableCellCoords(r, c));\n
        }\n
      }\n
    }\n
    return out;\n
  },\n
  getAll: function() {\n
    var topLeft = this.getTopLeftCorner();\n
    var bottomRight = this.getBottomRightCorner();\n
    var out = [];\n
    for (var r = topLeft.row; r <= bottomRight.row; r++) {\n
      for (var c = topLeft.col; c <= bottomRight.col; c++) {\n
        if (topLeft.row === r && topLeft.col === c) {\n
          out.push(topLeft);\n
        } else if (bottomRight.row === r && bottomRight.col === c) {\n
          out.push(bottomRight);\n
        } else {\n
          out.push(new WalkontableCellCoords(r, c));\n
        }\n
      }\n
    }\n
    return out;\n
  },\n
  forAll: function(callback) {\n
    var topLeft = this.getTopLeftCorner();\n
    var bottomRight = this.getBottomRightCorner();\n
    for (var r = topLeft.row; r <= bottomRight.row; r++) {\n
      for (var c = topLeft.col; c <= bottomRight.col; c++) {\n
        var breakIteration = callback(r, c);\n
        if (breakIteration === false) {\n
          return;\n
        }\n
      }\n
    }\n
  }\n
}, {});\n
;\n
window.WalkontableCellRange = WalkontableCellRange;\n
\n
//# \n
},{"cell/coords":5}],7:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  Walkontable: {get: function() {\n
      return Walkontable;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47__46__46__47_helpers_47_string__,\n
    $__event__,\n
    $__overlays__,\n
    $__scroll__,\n
    $__settings__,\n
    $__table__,\n
    $__viewport__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    fastInnerText = $__0.fastInnerText,\n
    isVisible = $__0.isVisible,\n
    removeClass = $__0.removeClass;\n
var objectEach = ($___46__46__47__46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_object__}).objectEach;\n
var $__2 = ($___46__46__47__46__46__47__46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47__46__46__47__46__46__47_helpers_47_string__ && $___46__46__47__46__46__47__46__46__47_helpers_47_string__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_string__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_string__}),\n
    toUpperCaseFirst = $__2.toUpperCaseFirst,\n
    randomString = $__2.randomString;\n
var WalkontableEvent = ($__event__ = require("event"), $__event__ && $__event__.__esModule && $__event__ || {default: $__event__}).WalkontableEvent;\n
var WalkontableOverlays = ($__overlays__ = require("overlays"), $__overlays__ && $__overlays__.__esModule && $__overlays__ || {default: $__overlays__}).WalkontableOverlays;\n
var WalkontableScroll = ($__scroll__ = require("scroll"), $__scroll__ && $__scroll__.__esModule && $__scroll__ || {default: $__scroll__}).WalkontableScroll;\n
var WalkontableSettings = ($__settings__ = require("settings"), $__settings__ && $__settings__.__esModule && $__settings__ || {default: $__settings__}).WalkontableSettings;\n
var WalkontableTable = ($__table__ = require("table"), $__table__ && $__table__.__esModule && $__table__ || {default: $__table__}).WalkontableTable;\n
var WalkontableViewport = ($__viewport__ = require("viewport"), $__viewport__ && $__viewport__.__esModule && $__viewport__ || {default: $__viewport__}).WalkontableViewport;\n
var Walkontable = function Walkontable(settings) {\n
  var originalHeaders = [];\n
  this.guid = \'wt_\' + randomString();\n
  if (settings.cloneSource) {\n
    this.cloneSource = settings.cloneSource;\n
    this.cloneOverlay = settings.cloneOverlay;\n
    this.wtSettings = settings.cloneSource.wtSettings;\n
    this.wtTable = new WalkontableTable(this, settings.table, settings.wtRootElement);\n
    this.wtScroll = new WalkontableScroll(this);\n
    this.wtViewport = settings.cloneSource.wtViewport;\n
    this.wtEvent = new WalkontableEvent(this);\n
    this.selections = this.cloneSource.selections;\n
  } else {\n
    this.wtSettings = new WalkontableSettings(this, settings);\n
    this.wtTable = new WalkontableTable(this, settings.table);\n
    this.wtScroll = new WalkontableScroll(this);\n
    this.wtViewport = new WalkontableViewport(this);\n
    this.wtEvent = new WalkontableEvent(this);\n
    this.selections = this.getSetting(\'selections\');\n
    this.wtOverlays = new WalkontableOverlays(this);\n
    this.exportSettingsAsClassNames();\n
  }\n
  if (this.wtTable.THEAD.childNodes.length && this.wtTable.THEAD.childNodes[0].childNodes.length) {\n
    for (var c = 0,\n
        clen = this.wtTable.THEAD.childNodes[0].childNodes.length; c < clen; c++) {\n
      originalHeaders.push(this.wtTable.THEAD.childNodes[0].childNodes[c].innerHTML);\n
    }\n
    if (!this.getSetting(\'columnHeaders\').length) {\n
      this.update(\'columnHeaders\', [function(column, TH) {\n
        fastInnerText(TH, originalHeaders[column]);\n
      }]);\n
    }\n
  }\n
  this.drawn = false;\n
  this.drawInterrupted = false;\n
};\n
($traceurRuntime.createClass)(Walkontable, {\n
  draw: function() {\n
    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;\n
    this.drawInterrupted = false;\n
    if (!fastDraw && !isVisible(this.wtTable.TABLE)) {\n
      this.drawInterrupted = true;\n
    } else {\n
      this.wtTable.draw(fastDraw);\n
    }\n
    return this;\n
  },\n
  getCell: function(coords) {\n
    var topmost = arguments[1] !== (void 0) ? arguments[1] : false;\n
    if (!topmost) {\n
      return this.wtTable.getCell(coords);\n
    }\n
    var fixedRows = this.wtSettings.getSetting(\'fixedRowsTop\');\n
    var fixedColumns = this.wtSettings.getSetting(\'fixedColumnsLeft\');\n
    if (coords.row < fixedRows && coords.col < fixedColumns) {\n
      return this.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell(coords);\n
    } else if (coords.row < fixedRows) {\n
      return this.wtOverlays.topOverlay.clone.wtTable.getCell(coords);\n
    } else if (coords.col < fixedColumns) {\n
      return this.wtOverlays.leftOverlay.clone.wtTable.getCell(coords);\n
    }\n
    return this.wtTable.getCell(coords);\n
  },\n
  update: function(settings, value) {\n
    return this.wtSettings.update(settings, value);\n
  },\n
  scrollVertical: function(row) {\n
    this.wtOverlays.topOverlay.scrollTo(row);\n
    this.getSetting(\'onScrollVertically\');\n
    return this;\n
  },\n
  scrollHorizontal: function(column) {\n
    this.wtOverlays.leftOverlay.scrollTo(column);\n
    this.getSetting(\'onScrollHorizontally\');\n
    return this;\n
  },\n
  scrollViewport: function(coords) {\n
    this.wtScroll.scrollViewport(coords);\n
    return this;\n
  },\n
  getViewport: function() {\n
    return [this.wtTable.getFirstVisibleRow(), this.wtTable.getFirstVisibleColumn(), this.wtTable.getLastVisibleRow(), this.wtTable.getLastVisibleColumn()];\n
  },\n
  getOverlayName: function() {\n
    return this.cloneOverlay ? this.cloneOverlay.type : \'master\';\n
  },\n
  exportSettingsAsClassNames: function() {\n
    var $__9 = this;\n
    var toExport = {\n
      rowHeaders: [\'array\'],\n
      columnHeaders: [\'array\']\n
    };\n
    var allClassNames = [];\n
    var newClassNames = [];\n
    objectEach(toExport, (function(optionType, key) {\n
      if (optionType.indexOf(\'array\') > -1 && $__9.getSetting(key).length) {\n
        newClassNames.push(\'ht\' + toUpperCaseFirst(key));\n
      }\n
      allClassNames.push(\'ht\' + toUpperCaseFirst(key));\n
    }));\n
    removeClass(this.wtTable.wtRootElement.parentNode, allClassNames);\n
    addClass(this.wtTable.wtRootElement.parentNode, newClassNames);\n
  },\n
  getSetting: function(key, param1, param2, param3, param4) {\n
    return this.wtSettings.getSetting(key, param1, param2, param3, param4);\n
  },\n
  hasSetting: function(key) {\n
    return this.wtSettings.has(key);\n
  },\n
  destroy: function() {\n
    this.wtOverlays.destroy();\n
    this.wtEvent.destroy();\n
  }\n
}, {});\n
;\n
window.Walkontable = Walkontable;\n
\n
//# \n
},{"event":8,"helpers/dom/element":44,"helpers/object":49,"helpers/string":51,"overlays":16,"scroll":17,"settings":19,"table":20,"viewport":22}],8:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableEvent: {get: function() {\n
      return WalkontableEvent;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47__46__46__47_eventManager__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    closest = $__0.closest,\n
    hasClass = $__0.hasClass,\n
    isChildOf = $__0.isChildOf;\n
var eventManagerObject = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).eventManager;\n
function WalkontableEvent(instance) {\n
  var that = this;\n
  var eventManager = eventManagerObject(instance);\n
  this.instance = instance;\n
  var dblClickOrigin = [null, null];\n
  this.dblClickTimeout = [null, null];\n
  var onMouseDown = function(event) {\n
    var cell = that.parentCell(event.realTarget);\n
    if (hasClass(event.realTarget, \'corner\')) {\n
      that.instance.getSetting(\'onCellCornerMouseDown\', event, event.realTarget);\n
    } else if (cell.TD) {\n
      if (that.instance.hasSetting(\'onCellMouseDown\')) {\n
        that.instance.getSetting(\'onCellMouseDown\', event, cell.coords, cell.TD, that.instance);\n
      }\n
    }\n
    if (event.button !== 2) {\n
      if (cell.TD) {\n
        dblClickOrigin[0] = cell.TD;\n
        clearTimeout(that.dblClickTimeout[0]);\n
        that.dblClickTimeout[0] = setTimeout(function() {\n
          dblClickOrigin[0] = null;\n
        }, 1000);\n
      }\n
    }\n
  };\n
  var onTouchMove = function(event) {\n
    that.instance.touchMoving = true;\n
  };\n
  var longTouchTimeout;\n
  var onTouchStart = function(event) {\n
    var container = this;\n
    eventManager.addEventListener(this, \'touchmove\', onTouchMove);\n
    that.checkIfTouchMove = setTimeout(function() {\n
      if (that.instance.touchMoving === true) {\n
        that.instance.touchMoving = void 0;\n
        eventManager.removeEventListener("touchmove", onTouchMove, false);\n
        return;\n
      } else {\n
        onMouseDown(event);\n
      }\n
    }, 30);\n
  };\n
  var lastMouseOver;\n
  var onMouseOver = function(event) {\n
    var table,\n
        td;\n
    if (that.instance.hasSetting(\'onCellMouseOver\')) {\n
      table = that.instance.wtTable.TABLE;\n
      td = closest(event.realTarget, [\'TD\', \'TH\'], table);\n
      if (td && td !== lastMouseOver && isChildOf(td, table)) {\n
        lastMouseOver = td;\n
        that.instance.getSetting(\'onCellMouseOver\', event, that.instance.wtTable.getCoords(td), td, that.instance);\n
      }\n
    }\n
  };\n
  var onMouseUp = function(event) {\n
    if (event.button !== 2) {\n
      var cell = that.parentCell(event.realTarget);\n
      if (cell.TD === dblClickOrigin[0] && cell.TD === dblClickOrigin[1]) {\n
        if (hasClass(event.realTarget, \'corner\')) {\n
          that.instance.getSetting(\'onCellCornerDblClick\', event, cell.coords, cell.TD, that.instance);\n
        } else {\n
          that.instance.getSetting(\'onCellDblClick\', event, cell.coords, cell.TD, that.instance);\n
        }\n
        dblClickOrigin[0] = null;\n
        dblClickOrigin[1] = null;\n
      } else if (cell.TD === dblClickOrigin[0]) {\n
        dblClickOrigin[1] = cell.TD;\n
        clearTimeout(that.dblClickTimeout[1]);\n
        that.dblClickTimeout[1] = setTimeout(function() {\n
          dblClickOrigin[1] = null;\n
        }, 500);\n
      }\n
    }\n
  };\n
  var onTouchEnd = function(event) {\n
    clearTimeout(longTouchTimeout);\n
    event.preventDefault();\n
    onMouseUp(event);\n
  };\n
  eventManager.addEventListener(this.instance.wtTable.holder, \'mousedown\', onMouseDown);\n
  eventManager.addEventListener(this.instance.wtTable.TABLE, \'mouseover\', onMouseOver);\n
  eventManager.addEventListener(this.instance.wtTable.holder, \'mouseup\', onMouseUp);\n
  if (this.instance.wtTable.holder.parentNode.parentNode && Handsontable.mobileBrowser && !that.instance.wtTable.isWorkingOnClone()) {\n
    var classSelector = "." + this.instance.wtTable.holder.parentNode.className.split(" ").join(".");\n
    eventManager.addEventListener(this.instance.wtTable.holder, \'touchstart\', function(event) {\n
      that.instance.touchApplied = true;\n
      if (isChildOf(event.target, classSelector)) {\n
        onTouchStart.call(event.target, event);\n
      }\n
    });\n
    eventManager.addEventListener(this.instance.wtTable.holder, \'touchend\', function(event) {\n
      that.instance.touchApplied = false;\n
      if (isChildOf(event.target, classSelector)) {\n
        onTouchEnd.call(event.target, event);\n
      }\n
    });\n
    if (!that.instance.momentumScrolling) {\n
      that.instance.momentumScrolling = {};\n
    }\n
    eventManager.addEventListener(this.instance.wtTable.holder, \'scroll\', function(event) {\n
      clearTimeout(that.instance.momentumScrolling._timeout);\n
      if (!that.instance.momentumScrolling.ongoing) {\n
        that.instance.getSetting(\'onBeforeTouchScroll\');\n
      }\n
      that.instance.momentumScrolling.ongoing = true;\n
      that.instance.momentumScrolling._timeout = setTimeout(function() {\n
        if (!that.instance.touchApplied) {\n
          that.instance.momentumScrolling.ongoing = false;\n
          that.instance.getSetting(\'onAfterMomentumScroll\');\n
        }\n
      }, 200);\n
    });\n
  }\n
  eventManager.addEventListener(window, \'resize\', function() {\n
    if (that.instance.getSetting(\'stretchH\') !== \'none\') {\n
      that.instance.draw();\n
    }\n
  });\n
  this.destroy = function() {\n
    clearTimeout(this.dblClickTimeout[0]);\n
    clearTimeout(this.dblClickTimeout[1]);\n
    eventManager.destroy();\n
  };\n
}\n
WalkontableEvent.prototype.parentCell = function(elem) {\n
  var cell = {};\n
  var TABLE = this.instance.wtTable.TABLE;\n
  var TD = closest(elem, [\'TD\', \'TH\'], TABLE);\n
  if (TD && isChildOf(TD, TABLE)) {\n
    cell.coords = this.instance.wtTable.getCoords(TD);\n
    cell.TD = TD;\n
  } else if (hasClass(elem, \'wtBorder\') && hasClass(elem, \'current\')) {\n
    cell.coords = this.instance.selections.current.cellRange.highlight;\n
    cell.TD = this.instance.wtTable.getCell(cell.coords);\n
  } else if (hasClass(elem, \'wtBorder\') && hasClass(elem, \'area\')) {\n
    if (this.instance.selections.area.cellRange) {\n
      cell.coords = this.instance.selections.area.cellRange.to;\n
      cell.TD = this.instance.wtTable.getCell(cell.coords);\n
    }\n
  }\n
  return cell;\n
};\n
;\n
window.WalkontableEvent = WalkontableEvent;\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44}],9:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableColumnFilter: {get: function() {\n
      return WalkontableColumnFilter;\n
    }},\n
  __esModule: {value: true}\n
});\n
var WalkontableColumnFilter = function WalkontableColumnFilter(offset, total, countTH) {\n
  this.offset = offset;\n
  this.total = total;\n
  this.countTH = countTH;\n
};\n
($traceurRuntime.createClass)(WalkontableColumnFilter, {\n
  offsetted: function(index) {\n
    return index + this.offset;\n
  },\n
  unOffsetted: function(index) {\n
    return index - this.offset;\n
  },\n
  renderedToSource: function(index) {\n
    return this.offsetted(index);\n
  },\n
  sourceToRendered: function(index) {\n
    return this.unOffsetted(index);\n
  },\n
  offsettedTH: function(index) {\n
    return index - this.countTH;\n
  },\n
  unOffsettedTH: function(index) {\n
    return index + this.countTH;\n
  },\n
  visibleRowHeadedColumnToSourceColumn: function(index) {\n
    return this.renderedToSource(this.offsettedTH(index));\n
  },\n
  sourceColumnToVisibleRowHeadedColumn: function(index) {\n
    return this.unOffsettedTH(this.sourceToRendered(index));\n
  }\n
}, {});\n
;\n
window.WalkontableColumnFilter = WalkontableColumnFilter;\n
\n
//# \n
},{}],10:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableRowFilter: {get: function() {\n
      return WalkontableRowFilter;\n
    }},\n
  __esModule: {value: true}\n
});\n
var WalkontableRowFilter = function WalkontableRowFilter(offset, total, countTH) {\n
  this.offset = offset;\n
  this.total = total;\n
  this.countTH = countTH;\n
};\n
($traceurRuntime.createClass)(WalkontableRowFilter, {\n
  offsetted: function(index) {\n
    return index + this.offset;\n
  },\n
  unOffsetted: function(index) {\n
    return index - this.offset;\n
  },\n
  renderedToSource: function(index) {\n
    return this.offsetted(index);\n
  },\n
  sourceToRendered: function(index) {\n
    return this.unOffsetted(index);\n
  },\n
  offsettedTH: function(index) {\n
    return index - this.countTH;\n
  },\n
  unOffsettedTH: function(index) {\n
    return index + this.countTH;\n
  },\n
  visibleColHeadedRowToSourceRow: function(index) {\n
    return this.renderedToSource(this.offsettedTH(index));\n
  },\n
  sourceRowToVisibleColHeadedRow: function(index) {\n
    return this.unOffsettedTH(this.sourceToRendered(index));\n
  }\n
}, {});\n
;\n
window.WalkontableRowFilter = WalkontableRowFilter;\n
\n
//# \n
},{}],11:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableOverlay: {get: function() {\n
      return WalkontableOverlay;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    getScrollableElement = $__0.getScrollableElement,\n
    getTrimmingContainer = $__0.getTrimmingContainer;\n
var defineGetter = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_object__}).defineGetter;\n
var eventManagerObject = ($___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_eventManager__}).eventManager;\n
var WalkontableOverlay = function WalkontableOverlay(wotInstance) {\n
  defineGetter(this, \'wot\', wotInstance, {writable: false});\n
  this.instance = this.wot;\n
  this.type = \'\';\n
  this.TABLE = this.wot.wtTable.TABLE;\n
  this.hider = this.wot.wtTable.hider;\n
  this.spreader = this.wot.wtTable.spreader;\n
  this.holder = this.wot.wtTable.holder;\n
  this.wtRootElement = this.wot.wtTable.wtRootElement;\n
  this.trimmingContainer = getTrimmingContainer(this.hider.parentNode.parentNode);\n
  this.mainTableScrollableElement = getScrollableElement(this.wot.wtTable.TABLE);\n
  this.needFullRender = this.shouldBeRendered();\n
  this.isElementSizesAdjusted = false;\n
};\n
var $WalkontableOverlay = WalkontableOverlay;\n
($traceurRuntime.createClass)(WalkontableOverlay, {\n
  shouldBeRendered: function() {\n
    return true;\n
  },\n
  makeClone: function(direction) {\n
    if ($WalkontableOverlay.CLONE_TYPES.indexOf(direction) === -1) {\n
      throw new Error(\'Clone type "\' + direction + \'" is not supported.\');\n
    }\n
    var clone = document.createElement(\'DIV\');\n
    var clonedTable = document.createElement(\'TABLE\');\n
    clone.className = \'ht_clone_\' + direction + \' handsontable\';\n
    clone.style.position = \'absolute\';\n
    clone.style.top = 0;\n
    clone.style.left = 0;\n
    clone.style.overflow = \'hidden\';\n
    clonedTable.className = this.wot.wtTable.TABLE.className;\n
    clone.appendChild(clonedTable);\n
    this.type = direction;\n
    this.wot.wtTable.wtRootElement.parentNode.appendChild(clone);\n
    return new Walkontable({\n
      cloneSource: this.wot,\n
      cloneOverlay: this,\n
      table: clonedTable\n
    });\n
  },\n
  refresh: function() {\n
    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;\n
    var nextCycleRenderFlag = this.shouldBeRendered();\n
    if (this.clone && (this.needFullRender || nextCycleRenderFlag)) {\n
      this.clone.draw(fastDraw);\n
    }\n
    this.needFullRender = nextCycleRenderFlag;\n
  },\n
  destroy: function() {\n
    eventManagerObject(this.clone).destroy();\n
  }\n
}, {\n
  get CLONE_TOP() {\n
    return \'top\';\n
  },\n
  get CLONE_LEFT() {\n
    return \'left\';\n
  },\n
  get CLONE_CORNER() {\n
    return \'corner\';\n
  },\n
  get CLONE_DEBUG() {\n
    return \'debug\';\n
  },\n
  get CLONE_TYPES() {\n
    return [$WalkontableOverlay.CLONE_TOP, $WalkontableOverlay.CLONE_LEFT, $WalkontableOverlay.CLONE_CORNER, $WalkontableOverlay.CLONE_DEBUG];\n
  }\n
});\n
;\n
window.WalkontableOverlay = WalkontableOverlay;\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44,"helpers/object":49}],12:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableCornerOverlay: {get: function() {\n
      return WalkontableCornerOverlay;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___95_base__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    outerHeight = $__0.outerHeight,\n
    outerWidth = $__0.outerWidth,\n
    setOverlayPosition = $__0.setOverlayPosition;\n
var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;\n
var WalkontableCornerOverlay = function WalkontableCornerOverlay(wotInstance) {\n
  $traceurRuntime.superConstructor($WalkontableCornerOverlay).call(this, wotInstance);\n
  this.clone = this.makeClone(WalkontableOverlay.CLONE_CORNER);\n
};\n
var $WalkontableCornerOverlay = WalkontableCornerOverlay;\n
($traceurRuntime.createClass)(WalkontableCornerOverlay, {\n
  shouldBeRendered: function() {\n
    return (this.wot.getSetting(\'fixedRowsTop\') || this.wot.getSetting(\'columnHeaders\').length) && (this.wot.getSetting(\'fixedColumnsLeft\') || this.wot.getSetting(\'rowHeaders\').length) ? true : false;\n
  },\n
  resetFixedPosition: function() {\n
    if (!this.wot.wtTable.holder.parentNode) {\n
      return;\n
    }\n
    var overlayRoot = this.clone.wtTable.holder.parentNode;\n
    var tableHeight = outerHeight(this.clone.wtTable.TABLE);\n
    var tableWidth = outerWidth(this.clone.wtTable.TABLE);\n
    if (this.trimmingContainer === window) {\n
      var box = this.wot.wtTable.hider.getBoundingClientRect();\n
      var top = Math.ceil(box.top);\n
      var left = Math.ceil(box.left);\n
      var bottom = Math.ceil(box.bottom);\n
      var right = Math.ceil(box.right);\n
      var finalLeft;\n
      var finalTop;\n
      if (left < 0 && (right - overlayRoot.offsetWidth) > 0) {\n
        finalLeft = -left + \'px\';\n
      } else {\n
        finalLeft = \'0\';\n
      }\n
      if (top < 0 && (bottom - overlayRoot.offsetHeight) > 0) {\n
        finalTop = -top + \'px\';\n
      } else {\n
        finalTop = \'0\';\n
      }\n
      setOverlayPosition(overlayRoot, finalLeft, finalTop);\n
    }\n
    overlayRoot.style.height = (tableHeight === 0 ? tableHeight : tableHeight + 4) + \'px\';\n
    overlayRoot.style.width = (tableWidth === 0 ? tableWidth : tableWidth + 4) + \'px\';\n
  }\n
}, {}, WalkontableOverlay);\n
;\n
window.WalkontableCornerOverlay = WalkontableCornerOverlay;\n
\n
//# \n
},{"_base":11,"helpers/dom/element":44}],13:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableDebugOverlay: {get: function() {\n
      return WalkontableDebugOverlay;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___95_base__;\n
var addClass = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_elemen

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAM=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="3" aka="AAAAAAAAAAM=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

t__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}).addClass;\n
var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;\n
var WalkontableDebugOverlay = function WalkontableDebugOverlay(wotInstance) {\n
  $traceurRuntime.superConstructor($WalkontableDebugOverlay).call(this, wotInstance);\n
  this.clone = this.makeClone(WalkontableOverlay.CLONE_DEBUG);\n
  this.clone.wtTable.holder.style.opacity = 0.4;\n
  this.clone.wtTable.holder.style.textShadow = \'0 0 2px #ff0000\';\n
  addClass(this.clone.wtTable.holder.parentNode, \'wtDebugVisible\');\n
};\n
var $WalkontableDebugOverlay = WalkontableDebugOverlay;\n
($traceurRuntime.createClass)(WalkontableDebugOverlay, {}, {}, WalkontableOverlay);\n
;\n
window.WalkontableDebugOverlay = WalkontableDebugOverlay;\n
\n
//# \n
},{"_base":11,"helpers/dom/element":44}],14:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableLeftOverlay: {get: function() {\n
      return WalkontableLeftOverlay;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___95_base__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    getScrollbarWidth = $__0.getScrollbarWidth,\n
    getScrollLeft = $__0.getScrollLeft,\n
    getWindowScrollTop = $__0.getWindowScrollTop,\n
    hasClass = $__0.hasClass,\n
    outerWidth = $__0.outerWidth,\n
    removeClass = $__0.removeClass,\n
    setOverlayPosition = $__0.setOverlayPosition;\n
var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;\n
var WalkontableLeftOverlay = function WalkontableLeftOverlay(wotInstance) {\n
  $traceurRuntime.superConstructor($WalkontableLeftOverlay).call(this, wotInstance);\n
  this.clone = this.makeClone(WalkontableOverlay.CLONE_LEFT);\n
};\n
var $WalkontableLeftOverlay = WalkontableLeftOverlay;\n
($traceurRuntime.createClass)(WalkontableLeftOverlay, {\n
  shouldBeRendered: function() {\n
    return this.wot.getSetting(\'fixedColumnsLeft\') || this.wot.getSetting(\'rowHeaders\').length ? true : false;\n
  },\n
  resetFixedPosition: function() {\n
    if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {\n
      return;\n
    }\n
    var overlayRoot = this.clone.wtTable.holder.parentNode;\n
    var headerPosition = 0;\n
    if (this.trimmingContainer === window) {\n
      var box = this.wot.wtTable.hider.getBoundingClientRect();\n
      var left = Math.ceil(box.left);\n
      var right = Math.ceil(box.right);\n
      var finalLeft;\n
      var finalTop;\n
      finalTop = this.wot.wtTable.hider.style.top;\n
      finalTop = finalTop === \'\' ? 0 : finalTop;\n
      if (left < 0 && (right - overlayRoot.offsetWidth) > 0) {\n
        finalLeft = -left;\n
      } else {\n
        finalLeft = 0;\n
      }\n
      headerPosition = finalLeft;\n
      finalLeft = finalLeft + \'px\';\n
      setOverlayPosition(overlayRoot, finalLeft, finalTop);\n
    } else {\n
      headerPosition = this.getScrollPosition();\n
    }\n
    this.adjustHeaderBordersPosition(headerPosition);\n
  },\n
  setScrollPosition: function(pos) {\n
    if (this.mainTableScrollableElement === window) {\n
      window.scrollTo(pos, getWindowScrollTop());\n
    } else {\n
      this.mainTableScrollableElement.scrollLeft = pos;\n
    }\n
  },\n
  onScroll: function() {\n
    this.wot.getSetting(\'onScrollHorizontally\');\n
  },\n
  sumCellSizes: function(from, to) {\n
    var sum = 0;\n
    var defaultColumnWidth = this.wot.wtSettings.defaultColumnWidth;\n
    while (from < to) {\n
      sum += this.wot.wtTable.getStretchedColumnWidth(from) || defaultColumnWidth;\n
      from++;\n
    }\n
    return sum;\n
  },\n
  adjustElementsSize: function() {\n
    var force = arguments[0] !== (void 0) ? arguments[0] : false;\n
    if (this.needFullRender || force) {\n
      this.adjustRootElementSize();\n
      this.adjustRootChildsSize();\n
      if (!force) {\n
        this.isElementSizesAdjusted = true;\n
      }\n
    }\n
  },\n
  adjustRootElementSize: function() {\n
    var masterHolder = this.wot.wtTable.holder;\n
    var scrollbarHeight = masterHolder.clientHeight !== masterHolder.offsetHeight ? getScrollbarWidth() : 0;\n
    var overlayRoot = this.clone.wtTable.holder.parentNode;\n
    var overlayRootStyle = overlayRoot.style;\n
    var tableWidth;\n
    if (this.trimmingContainer !== window) {\n
      overlayRootStyle.height = this.wot.wtViewport.getWorkspaceHeight() - scrollbarHeight + \'px\';\n
    }\n
    this.clone.wtTable.holder.style.height = overlayRootStyle.height;\n
    tableWidth = outerWidth(this.clone.wtTable.TABLE);\n
    overlayRootStyle.width = (tableWidth === 0 ? tableWidth : tableWidth + 4) + \'px\';\n
  },\n
  adjustRootChildsSize: function() {\n
    var scrollbarWidth = getScrollbarWidth();\n
    this.clone.wtTable.hider.style.height = this.hider.style.height;\n
    this.clone.wtTable.holder.style.height = this.clone.wtTable.holder.parentNode.style.height;\n
    if (scrollbarWidth === 0) {\n
      scrollbarWidth = 30;\n
    }\n
    this.clone.wtTable.holder.style.width = parseInt(this.clone.wtTable.holder.parentNode.style.width, 10) + scrollbarWidth + \'px\';\n
  },\n
  applyToDOM: function() {\n
    var total = this.wot.getSetting(\'totalColumns\');\n
    if (!this.isElementSizesAdjusted) {\n
      this.adjustElementsSize();\n
    }\n
    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === \'number\') {\n
      this.spreader.style.left = this.wot.wtViewport.columnsRenderCalculator.startPosition + \'px\';\n
    } else if (total === 0) {\n
      this.spreader.style.left = \'0\';\n
    } else {\n
      throw new Error(\'Incorrect value of the columnsRenderCalculator\');\n
    }\n
    this.spreader.style.right = \'\';\n
    if (this.needFullRender) {\n
      this.syncOverlayOffset();\n
    }\n
  },\n
  syncOverlayOffset: function() {\n
    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === \'number\') {\n
      this.clone.wtTable.spreader.style.top = this.wot.wtViewport.rowsRenderCalculator.startPosition + \'px\';\n
    } else {\n
      this.clone.wtTable.spreader.style.top = \'\';\n
    }\n
  },\n
  scrollTo: function(sourceCol, beyondRendered) {\n
    var newX = this.getTableParentOffset();\n
    var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n
    var mainHolder = sourceInstance.wtTable.holder;\n
    var scrollbarCompensation = 0;\n
    if (beyondRendered && mainHolder.offsetWidth !== mainHolder.clientWidth) {\n
      scrollbarCompensation = getScrollbarWidth();\n
    }\n
    if (beyondRendered) {\n
      newX += this.sumCellSizes(0, sourceCol + 1);\n
      newX -= this.wot.wtViewport.getViewportWidth();\n
    } else {\n
      newX += this.sumCellSizes(this.wot.getSetting(\'fixedColumnsLeft\'), sourceCol);\n
    }\n
    newX += scrollbarCompensation;\n
    this.setScrollPosition(newX);\n
  },\n
  getTableParentOffset: function() {\n
    if (this.trimmingContainer === window) {\n
      return this.wot.wtTable.holderOffset.left;\n
    } else {\n
      return 0;\n
    }\n
  },\n
  getScrollPosition: function() {\n
    return getScrollLeft(this.mainTableScrollableElement);\n
  },\n
  adjustHeaderBordersPosition: function(position) {\n
    var masterParent = this.wot.wtTable.holder.parentNode;\n
    var rowHeaders = this.wot.getSetting(\'rowHeaders\');\n
    var fixedColumnsLeft = this.wot.getSetting(\'fixedColumnsLeft\');\n
    if (fixedColumnsLeft && !rowHeaders.length) {\n
      addClass(masterParent, \'innerBorderLeft\');\n
    } else if (!fixedColumnsLeft && rowHeaders.length) {\n
      var previousState = hasClass(masterParent, \'innerBorderLeft\');\n
      if (position) {\n
        addClass(masterParent, \'innerBorderLeft\');\n
      } else {\n
        removeClass(masterParent, \'innerBorderLeft\');\n
      }\n
      if (!previousState && position || previousState && !position) {\n
        this.wot.wtOverlays.adjustElementsSize();\n
      }\n
    }\n
  }\n
}, {}, WalkontableOverlay);\n
;\n
window.WalkontableLeftOverlay = WalkontableLeftOverlay;\n
\n
//# \n
},{"_base":11,"helpers/dom/element":44}],15:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableTopOverlay: {get: function() {\n
      return WalkontableTopOverlay;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___95_base__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    getScrollbarWidth = $__0.getScrollbarWidth,\n
    getScrollTop = $__0.getScrollTop,\n
    getWindowScrollLeft = $__0.getWindowScrollLeft,\n
    hasClass = $__0.hasClass,\n
    outerHeight = $__0.outerHeight,\n
    removeClass = $__0.removeClass,\n
    setOverlayPosition = $__0.setOverlayPosition;\n
var WalkontableOverlay = ($___95_base__ = require("_base"), $___95_base__ && $___95_base__.__esModule && $___95_base__ || {default: $___95_base__}).WalkontableOverlay;\n
var WalkontableTopOverlay = function WalkontableTopOverlay(wotInstance) {\n
  $traceurRuntime.superConstructor($WalkontableTopOverlay).call(this, wotInstance);\n
  this.clone = this.makeClone(WalkontableOverlay.CLONE_TOP);\n
};\n
var $WalkontableTopOverlay = WalkontableTopOverlay;\n
($traceurRuntime.createClass)(WalkontableTopOverlay, {\n
  shouldBeRendered: function() {\n
    return this.wot.getSetting(\'fixedRowsTop\') || this.wot.getSetting(\'columnHeaders\').length ? true : false;\n
  },\n
  resetFixedPosition: function() {\n
    if (!this.needFullRender || !this.wot.wtTable.holder.parentNode) {\n
      return;\n
    }\n
    var overlayRoot = this.clone.wtTable.holder.parentNode;\n
    var headerPosition = 0;\n
    if (this.wot.wtOverlays.leftOverlay.trimmingContainer === window) {\n
      var box = this.wot.wtTable.hider.getBoundingClientRect();\n
      var top = Math.ceil(box.top);\n
      var bottom = Math.ceil(box.bottom);\n
      var finalLeft;\n
      var finalTop;\n
      finalLeft = this.wot.wtTable.hider.style.left;\n
      finalLeft = finalLeft === \'\' ? 0 : finalLeft;\n
      if (top < 0 && (bottom - overlayRoot.offsetHeight) > 0) {\n
        finalTop = -top;\n
      } else {\n
        finalTop = 0;\n
      }\n
      headerPosition = finalTop;\n
      finalTop = finalTop + \'px\';\n
      setOverlayPosition(overlayRoot, finalLeft, finalTop);\n
    } else {\n
      headerPosition = this.getScrollPosition();\n
    }\n
    this.adjustHeaderBordersPosition(headerPosition);\n
  },\n
  setScrollPosition: function(pos) {\n
    if (this.mainTableScrollableElement === window) {\n
      window.scrollTo(getWindowScrollLeft(), pos);\n
    } else {\n
      this.mainTableScrollableElement.scrollTop = pos;\n
    }\n
  },\n
  onScroll: function() {\n
    this.wot.getSetting(\'onScrollVertically\');\n
  },\n
  sumCellSizes: function(from, to) {\n
    var sum = 0;\n
    var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;\n
    while (from < to) {\n
      sum += this.wot.wtTable.getRowHeight(from) || defaultRowHeight;\n
      from++;\n
    }\n
    return sum;\n
  },\n
  adjustElementsSize: function() {\n
    var force = arguments[0] !== (void 0) ? arguments[0] : false;\n
    if (this.needFullRender || force) {\n
      this.adjustRootElementSize();\n
      this.adjustRootChildsSize();\n
      if (!force) {\n
        this.isElementSizesAdjusted = true;\n
      }\n
    }\n
  },\n
  adjustRootElementSize: function() {\n
    var masterHolder = this.wot.wtTable.holder;\n
    var scrollbarWidth = masterHolder.clientWidth !== masterHolder.offsetWidth ? getScrollbarWidth() : 0;\n
    var overlayRoot = this.clone.wtTable.holder.parentNode;\n
    var overlayRootStyle = overlayRoot.style;\n
    var tableHeight;\n
    if (this.trimmingContainer !== window) {\n
      overlayRootStyle.width = this.wot.wtViewport.getWorkspaceWidth() - scrollbarWidth + \'px\';\n
    }\n
    this.clone.wtTable.holder.style.width = overlayRootStyle.width;\n
    tableHeight = outerHeight(this.clone.wtTable.TABLE);\n
    overlayRootStyle.height = (tableHeight === 0 ? tableHeight : tableHeight + 4) + \'px\';\n
  },\n
  adjustRootChildsSize: function() {\n
    var scrollbarWidth = getScrollbarWidth();\n
    this.clone.wtTable.hider.style.width = this.hider.style.width;\n
    this.clone.wtTable.holder.style.width = this.clone.wtTable.holder.parentNode.style.width;\n
    if (scrollbarWidth === 0) {\n
      scrollbarWidth = 30;\n
    }\n
    this.clone.wtTable.holder.style.height = parseInt(this.clone.wtTable.holder.parentNode.style.height, 10) + scrollbarWidth + \'px\';\n
  },\n
  applyToDOM: function() {\n
    var total = this.wot.getSetting(\'totalRows\');\n
    if (!this.isElementSizesAdjusted) {\n
      this.adjustElementsSize();\n
    }\n
    if (typeof this.wot.wtViewport.rowsRenderCalculator.startPosition === \'number\') {\n
      this.spreader.style.top = this.wot.wtViewport.rowsRenderCalculator.startPosition + \'px\';\n
    } else if (total === 0) {\n
      this.spreader.style.top = \'0\';\n
    } else {\n
      throw new Error("Incorrect value of the rowsRenderCalculator");\n
    }\n
    this.spreader.style.bottom = \'\';\n
    if (this.needFullRender) {\n
      this.syncOverlayOffset();\n
    }\n
  },\n
  syncOverlayOffset: function() {\n
    if (typeof this.wot.wtViewport.columnsRenderCalculator.startPosition === \'number\') {\n
      this.clone.wtTable.spreader.style.left = this.wot.wtViewport.columnsRenderCalculator.startPosition + \'px\';\n
    } else {\n
      this.clone.wtTable.spreader.style.left = \'\';\n
    }\n
  },\n
  scrollTo: function(sourceRow, bottomEdge) {\n
    var newY = this.getTableParentOffset();\n
    var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n
    var mainHolder = sourceInstance.wtTable.holder;\n
    var scrollbarCompensation = 0;\n
    if (bottomEdge && mainHolder.offsetHeight !== mainHolder.clientHeight) {\n
      scrollbarCompensation = getScrollbarWidth();\n
    }\n
    if (bottomEdge) {\n
      newY += this.sumCellSizes(0, sourceRow + 1);\n
      newY -= this.wot.wtViewport.getViewportHeight();\n
      newY += 1;\n
    } else {\n
      newY += this.sumCellSizes(this.wot.getSetting(\'fixedRowsTop\'), sourceRow);\n
    }\n
    newY += scrollbarCompensation;\n
    this.setScrollPosition(newY);\n
  },\n
  getTableParentOffset: function() {\n
    if (this.mainTableScrollableElement === window) {\n
      return this.wot.wtTable.holderOffset.top;\n
    } else {\n
      return 0;\n
    }\n
  },\n
  getScrollPosition: function() {\n
    return getScrollTop(this.mainTableScrollableElement);\n
  },\n
  adjustHeaderBordersPosition: function(position) {\n
    if (this.wot.getSetting(\'fixedRowsTop\') === 0 && this.wot.getSetting(\'columnHeaders\').length > 0) {\n
      var masterParent = this.wot.wtTable.holder.parentNode;\n
      var previousState = hasClass(masterParent, \'innerBorderTop\');\n
      if (position) {\n
        addClass(masterParent, \'innerBorderTop\');\n
      } else {\n
        removeClass(masterParent, \'innerBorderTop\');\n
      }\n
      if (!previousState && position || previousState && !position) {\n
        this.wot.wtOverlays.adjustElementsSize();\n
      }\n
    }\n
    if (this.wot.getSetting(\'rowHeaders\').length === 0) {\n
      var secondHeaderCell = this.clone.wtTable.THEAD.querySelector(\'th:nth-of-type(2)\');\n
      if (secondHeaderCell) {\n
        secondHeaderCell.style[\'border-left-width\'] = 0;\n
      }\n
    }\n
  }\n
}, {}, WalkontableOverlay);\n
;\n
window.WalkontableTopOverlay = WalkontableTopOverlay;\n
\n
//# \n
},{"_base":11,"helpers/dom/element":44}],16:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableOverlays: {get: function() {\n
      return WalkontableOverlays;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__,\n
    $___46__46__47__46__46__47__46__46__47_eventManager__,\n
    $__overlay_47_corner__,\n
    $__overlay_47_debug__,\n
    $__overlay_47_left__,\n
    $__overlay_47_top__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    getScrollableElement = $__0.getScrollableElement,\n
    getScrollbarWidth = $__0.getScrollbarWidth,\n
    getScrollLeft = $__0.getScrollLeft,\n
    getScrollTop = $__0.getScrollTop;\n
var isKey = ($___46__46__47__46__46__47__46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__ && $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_unicode__}).isKey;\n
var EventManager = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).EventManager;\n
var WalkontableCornerOverlay = ($__overlay_47_corner__ = require("overlay/corner"), $__overlay_47_corner__ && $__overlay_47_corner__.__esModule && $__overlay_47_corner__ || {default: $__overlay_47_corner__}).WalkontableCornerOverlay;\n
var WalkontableDebugOverlay = ($__overlay_47_debug__ = require("overlay/debug"), $__overlay_47_debug__ && $__overlay_47_debug__.__esModule && $__overlay_47_debug__ || {default: $__overlay_47_debug__}).WalkontableDebugOverlay;\n
var WalkontableLeftOverlay = ($__overlay_47_left__ = require("overlay/left"), $__overlay_47_left__ && $__overlay_47_left__.__esModule && $__overlay_47_left__ || {default: $__overlay_47_left__}).WalkontableLeftOverlay;\n
var WalkontableTopOverlay = ($__overlay_47_top__ = require("overlay/top"), $__overlay_47_top__ && $__overlay_47_top__.__esModule && $__overlay_47_top__ || {default: $__overlay_47_top__}).WalkontableTopOverlay;\n
var WalkontableOverlays = function WalkontableOverlays(wotInstance) {\n
  this.wot = wotInstance;\n
  this.instance = this.wot;\n
  this.eventManager = new EventManager(this.wot);\n
  this.wot.update(\'scrollbarWidth\', getScrollbarWidth());\n
  this.wot.update(\'scrollbarHeight\', getScrollbarWidth());\n
  this.mainTableScrollableElement = getScrollableElement(this.wot.wtTable.TABLE);\n
  this.topOverlay = new WalkontableTopOverlay(this.wot);\n
  this.leftOverlay = new WalkontableLeftOverlay(this.wot);\n
  if (this.topOverlay.needFullRender && this.leftOverlay.needFullRender) {\n
    this.topLeftCornerOverlay = new WalkontableCornerOverlay(this.wot);\n
  }\n
  if (this.wot.getSetting(\'debug\')) {\n
    this.debug = new WalkontableDebugOverlay(this.wot);\n
  }\n
  this.destroyed = false;\n
  this.keyPressed = false;\n
  this.spreaderLastSize = {\n
    width: null,\n
    height: null\n
  };\n
  this.overlayScrollPositions = {\n
    \'master\': {\n
      top: 0,\n
      left: 0\n
    },\n
    \'top\': {\n
      top: null,\n
      left: 0\n
    },\n
    \'left\': {\n
      top: 0,\n
      left: null\n
    }\n
  };\n
  this.registerListeners();\n
};\n
($traceurRuntime.createClass)(WalkontableOverlays, {\n
  refreshAll: function() {\n
    if (!this.wot.drawn) {\n
      return;\n
    }\n
    if (!this.wot.wtTable.holder.parentNode) {\n
      this.destroy();\n
      return;\n
    }\n
    this.wot.draw(true);\n
    this.topOverlay.onScroll();\n
    this.leftOverlay.onScroll();\n
  },\n
  registerListeners: function() {\n
    var $__7 = this;\n
    this.eventManager.addEventListener(document.documentElement, \'keydown\', (function(event) {\n
      return $__7.onKeyDown(event);\n
    }));\n
    this.eventManager.addEventListener(document.documentElement, \'keyup\', (function() {\n
      return $__7.onKeyUp();\n
    }));\n
    this.eventManager.addEventListener(document, \'visibilitychange\', (function() {\n
      return $__7.onKeyUp();\n
    }));\n
    this.eventManager.addEventListener(this.mainTableScrollableElement, \'scroll\', (function(event) {\n
      return $__7.onTableScroll(event);\n
    }));\n
    if (this.topOverlay.needFullRender) {\n
      this.eventManager.addEventListener(this.topOverlay.clone.wtTable.holder, \'scroll\', (function(event) {\n
        return $__7.onTableScroll(event);\n
      }));\n
      this.eventManager.addEventListener(this.topOverlay.clone.wtTable.holder, \'wheel\', (function(event) {\n
        return $__7.onTableScroll(event);\n
      }));\n
    }\n
    if (this.leftOverlay.needFullRender) {\n
      this.eventManager.addEventListener(this.leftOverlay.clone.wtTable.holder, \'scroll\', (function(event) {\n
        return $__7.onTableScroll(event);\n
      }));\n
      this.eventManager.addEventListener(this.leftOverlay.clone.wtTable.holder, \'wheel\', (function(event) {\n
        return $__7.onTableScroll(event);\n
      }));\n
    }\n
    if (this.topOverlay.trimmingContainer !== window && this.leftOverlay.trimmingContainer !== window) {\n
      this.eventManager.addEventListener(window, \'wheel\', (function(event) {\n
        var overlay;\n
        var deltaY = event.wheelDeltaY || event.deltaY;\n
        var deltaX = event.wheelDeltaX || event.deltaX;\n
        if ($__7.topOverlay.clone.wtTable.holder.contains(event.realTarget)) {\n
          overlay = \'top\';\n
        } else if ($__7.leftOverlay.clone.wtTable.holder.contains(event.realTarget)) {\n
          overlay = \'left\';\n
        }\n
        if (overlay == \'top\' && deltaY !== 0) {\n
          event.preventDefault();\n
        } else if (overlay == \'left\' && deltaX !== 0) {\n
          event.preventDefault();\n
        }\n
      }));\n
    }\n
  },\n
  onTableScroll: function(event) {\n
    if (Handsontable.mobileBrowser) {\n
      return;\n
    }\n
    if (this.keyPressed && this.mainTableScrollableElement !== window && !event.target.contains(this.mainTableScrollableElement)) {\n
      return;\n
    }\n
    if (event.type === \'scroll\') {\n
      this.syncScrollPositions(event);\n
    } else {\n
      this.translateMouseWheelToScroll(event);\n
    }\n
  },\n
  onKeyDown: function(event) {\n
    this.keyPressed = isKey(event.keyCode, \'ARROW_UP|ARROW_RIGHT|ARROW_DOWN|ARROW_LEFT\');\n
  },\n
  onKeyUp: function() {\n
    this.keyPressed = false;\n
  },\n
  translateMouseWheelToScroll: function(event) {\n
    var topOverlay = this.topOverlay.clone.wtTable.holder;\n
    var leftOverlay = this.leftOverlay.clone.wtTable.holder;\n
    var eventMockup = {type: \'wheel\'};\n
    var tempElem = event.target;\n
    var deltaY = event.wheelDeltaY || (-1) * event.deltaY;\n
    var deltaX = event.wheelDeltaX || (-1) * event.deltaX;\n
    var parentHolder;\n
    while (tempElem != document && tempElem != null) {\n
      if (tempElem.className.indexOf(\'wtHolder\') > -1) {\n
        parentHolder = tempElem;\n
        break;\n
      }\n
      tempElem = tempElem.parentNode;\n
    }\n
    eventMockup.target = parentHolder;\n
    if (parentHolder == topOverlay) {\n
      this.syncScrollPositions(eventMockup, (-0.2) * deltaY);\n
    } else if (parentHolder == leftOverlay) {\n
      this.syncScrollPositions(eventMockup, (-0.2) * deltaX);\n
    }\n
    return false;\n
  },\n
  syncScrollPositions: function(event) {\n
    var fakeScrollValue = arguments[1] !== (void 0) ? arguments[1] : null;\n
    if (this.destroyed) {\n
      return;\n
    }\n
    if (arguments.length === 0) {\n
      this.syncScrollWithMaster();\n
      return;\n
    }\n
    var master = this.mainTableScrollableElement;\n
    var target = event.target;\n
    var tempScrollValue = 0;\n
    var scrollValueChanged = false;\n
    var topOverlay;\n
    var leftOverlay;\n
    if (this.topOverlay.needFullRender) {\n
      topOverlay = this.topOverlay.clone.wtTable.holder;\n
    }\n
    if (this.leftOverlay.needFullRender) {\n
      leftOverlay = this.leftOverlay.clone.wtTable.holder;\n
    }\n
    if (target === document) {\n
      target = window;\n
    }\n
    if (target === master) {\n
      tempScrollValue = getScrollLeft(target);\n
      if (this.overlayScrollPositions.master.left !== tempScrollValue) {\n
        this.overlayScrollPositions.master.left = tempScrollValue;\n
        scrollValueChanged = true;\n
        if (topOverlay) {\n
          topOverlay.scrollLeft = tempScrollValue;\n
        }\n
      }\n
      tempScrollValue = getScrollTop(target);\n
      if (this.overlayScrollPositions.master.top !== tempScrollValue) {\n
        this.overlayScrollPositions.master.top = tempScrollValue;\n
        scrollValueChanged = true;\n
        if (leftOverlay) {\n
          leftOverlay.scrollTop = tempScrollValue;\n
        }\n
      }\n
    } else if (target === topOverlay) {\n
      tempScrollValue = getScrollLeft(target);\n
      if (this.overlayScrollPositions.top.left !== tempScrollValue) {\n
        this.overlayScrollPositions.top.left = tempScrollValue;\n
        scrollValueChanged = true;\n
        master.scrollLeft = tempScrollValue;\n
      }\n
      if (fakeScrollValue !== null) {\n
        scrollValueChanged = true;\n
        master.scrollTop += fakeScrollValue;\n
      }\n
    } else if (target === leftOverlay) {\n
      tempScrollValue = getScrollTop(target);\n
      if (this.overlayScrollPositions.left.top !== tempScrollValue) {\n
        this.overlayScrollPositions.left.top = tempScrollValue;\n
        scrollValueChanged = true;\n
        master.scrollTop = tempScrollValue;\n
      }\n
      if (fakeScrollValue !== null) {\n
        scrollValueChanged = true;\n
        master.scrollLeft += fakeScrollValue;\n
      }\n
    }\n
    if (!this.keyPressed && scrollValueChanged && event.type === \'scroll\') {\n
      this.refreshAll();\n
    }\n
  },\n
  syncScrollWithMaster: function() {\n
    var master = this.topOverlay.mainTableScrollableElement;\n
    if (this.topOverlay.needFullRender) {\n
      this.topOverlay.clone.wtTable.holder.scrollLeft = master.scrollLeft;\n
    }\n
    if (this.leftOverlay.needFullRender) {\n
      this.leftOverlay.clone.wtTable.holder.scrollTop = master.scrollTop;\n
    }\n
  },\n
  destroy: function() {\n
    this.eventManager.destroy();\n
    this.topOverlay.destroy();\n
    this.leftOverlay.destroy();\n
    if (this.topLeftCornerOverlay) {\n
      this.topLeftCornerOverlay.destroy();\n
    }\n
    if (this.debug) {\n
      this.debug.destroy();\n
    }\n
    this.destroyed = true;\n
  },\n
  refresh: function() {\n
    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;\n
    if (this.topOverlay.isElementSizesAdjusted && this.leftOverlay.isElementSizesAdjusted) {\n
      var container = this.wot.wtTable.wtRootElement.parentNode || this.wot.wtTable.wtRootElement;\n
      var width = container.clientWidth;\n
      var height = container.clientHeight;\n
      if (width !== this.spreaderLastSize.width || height !== this.spreaderLastSize.height) {\n
        this.spreaderLastSize.width = width;\n
        this.spreaderLastSize.height = height;\n
        this.adjustElementsSize();\n
      }\n
    }\n
    this.leftOverlay.refresh(fastDraw);\n
    this.topOverlay.refresh(fastDraw);\n
    if (this.topLeftCornerOverlay) {\n
      this.topLeftCornerOverlay.refresh(fastDraw);\n
    }\n
    if (this.debug) {\n
      this.debug.refresh(fastDraw);\n
    }\n
  },\n
  adjustElementsSize: function() {\n
    var force = arguments[0] !== (void 0) ? arguments[0] : false;\n
    var totalColumns = this.wot.getSetting(\'totalColumns\');\n
    var totalRows = this.wot.getSetting(\'totalRows\');\n
    var headerRowSize = this.wot.wtViewport.getRowHeaderWidth();\n
    var headerColumnSize = this.wot.wtViewport.getColumnHeaderHeight();\n
    var hiderStyle = this.wot.wtTable.hider.style;\n
    hiderStyle.width = (headerRowSize + this.leftOverlay.sumCellSizes(0, totalColumns)) + \'px\';\n
    hiderStyle.height = (headerColumnSize + this.topOverlay.sumCellSizes(0, totalRows) + 1) + \'px\';\n
    this.topOverlay.adjustElementsSize(force);\n
    this.leftOverlay.adjustElementsSize(force);\n
  },\n
  applyToDOM: function() {\n
    if (!this.topOverlay.isElementSizesAdjusted || !this.leftOverlay.isElementSizesAdjusted) {\n
      this.adjustElementsSize();\n
    }\n
    this.topOverlay.applyToDOM();\n
    this.leftOverlay.applyToDOM();\n
  }\n
}, {});\n
;\n
window.WalkontableOverlays = WalkontableOverlays;\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44,"helpers/unicode":52,"overlay/corner":12,"overlay/debug":13,"overlay/left":14,"overlay/top":15}],17:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableScroll: {get: function() {\n
      return WalkontableScroll;\n
    }},\n
  __esModule: {value: true}\n
});\n
var WalkontableScroll = function WalkontableScroll(wotInstance) {\n
  this.wot = wotInstance;\n
  this.instance = wotInstance;\n
};\n
($traceurRuntime.createClass)(WalkontableScroll, {scrollViewport: function(coords) {\n
    if (!this.wot.drawn) {\n
      return;\n
    }\n
    var totalRows = this.wot.getSetting(\'totalRows\');\n
    var totalColumns = this.wot.getSetting(\'totalColumns\');\n
    if (coords.row < 0 || coords.row > totalRows - 1) {\n
      throw new Error(\'row \' + coords.row + \' does not exist\');\n
    }\n
    if (coords.col < 0 || coords.col > totalColumns - 1) {\n
      throw new Error(\'column \' + coords.col + \' does not exist\');\n
    }\n
    if (coords.row > this.instance.wtTable.getLastVisibleRow()) {\n
      this.wot.wtOverlays.topOverlay.scrollTo(coords.row, true);\n
    } else if (coords.row >= this.instance.getSetting(\'fixedRowsTop\') && coords.row < this.instance.wtTable.getFirstVisibleRow()) {\n
      this.wot.wtOverlays.topOverlay.scrollTo(coords.row);\n
    }\n
    if (coords.col > this.instance.wtTable.getLastVisibleColumn()) {\n
      this.wot.wtOverlays.leftOverlay.scrollTo(coords.col, true);\n
    } else if (coords.col >= this.instance.getSetting(\'fixedColumnsLeft\') && coords.col < this.instance.wtTable.getFirstVisibleColumn()) {\n
      this.wot.wtOverlays.leftOverlay.scrollTo(coords.col);\n
    }\n
  }}, {});\n
;\n
window.WalkontableScroll = WalkontableScroll;\n
\n
//# \n
},{}],18:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableSelection: {get: function() {\n
      return WalkontableSelection;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $__border__,\n
    $__cell_47_coords__,\n
    $__cell_47_range__;\n
var addClass = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}).addClass;\n
var WalkontableBorder = ($__border__ = require("border"), $__border__ && $__border__.__esModule && $__border__ || {default: $__border__}).WalkontableBorder;\n
var WalkontableCellCoords = ($__cell_47_coords__ = require("cell/coords"), $__cell_47_coords__ && $__cell_47_coords__.__esModule && $__cell_47_coords__ || {default: $__cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableCellRange = ($__cell_47_range__ = require("cell/range"), $__cell_47_range__ && $__cell_47_range__.__esModule && $__cell_47_range__ || {default: $__cell_47_range__}).WalkontableCellRange;\n
var WalkontableSelection = function WalkontableSelection(settings, cellRange) {\n
  this.settings = settings;\n
  this.cellRange = cellRange || null;\n
  this.instanceBorders = {};\n
};\n
($traceurRuntime.createClass)(WalkontableSelection, {\n
  getBorder: function(wotInstance) {\n
    if (this.instanceBorders[wotInstance.guid]) {\n
      return this.instanceBorders[wotInstance.guid];\n
    }\n
    this.instanceBorders[wotInstance.guid] = new WalkontableBorder(wotInstance, this.settings);\n
  },\n
  isEmpty: function() {\n
    return this.cellRange === null;\n
  },\n
  add: function(coords) {\n
    if (this.isEmpty()) {\n
      this.cellRange = new WalkontableCellRange(coords, coords, coords);\n
    } else {\n
      this.cellRange.expand(coords);\n
    }\n
  },\n
  replace: function(oldCoords, newCoords) {\n
    if (!this.isEmpty()) {\n
      if (this.cellRange.from.isEqual(oldCoords)) {\n
        this.cellRange.from = newCoords;\n
        return true;\n
      }\n
      if (this.cellRange.to.isEqual(oldCoords)) {\n
        this.cellRange.to = newCoords;\n
        return true;\n
      }\n
    }\n
    return false;\n
  },\n
  clear: function() {\n
    this.cellRange = null;\n
  },\n
  getCorners: function() {\n
    var topLeft = this.cellRange.getTopLeftCorner();\n
    var bottomRight = this.cellRange.getBottomRightCorner();\n
    return [topLeft.row, topLeft.col, bottomRight.row, bottomRight.col];\n
  },\n
  addClassAtCoords: function(wotInstance, sourceRow, sourceColumn, className) {\n
    var TD = wotInstance.wtTable.getCell(new WalkontableCellCoords(sourceRow, sourceColumn));\n
    if (typeof TD === \'object\') {\n
      addClass(TD, className);\n
    }\n
  },\n
  draw: function(wotInstance) {\n
    if (this.isEmpty()) {\n
      if (this.settings.border) {\n
        var border = this.getBorder(wotInstance);\n
        if (border) {\n
          border.disappear();\n
        }\n
      }\n
      return;\n
    }\n
    var renderedRows = wotInstance.wtTable.getRenderedRowsCount();\n
    var renderedColumns = wotInstance.wtTable.getRenderedColumnsCount();\n
    var corners = this.getCorners();\n
    var sourceRow,\n
        sourceCol,\n
        TH;\n
    for (var column = 0; column < renderedColumns; column++) {\n
      sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column);\n
      if (sourceCol >= corners[1] && sourceCol <= corners[3]) {\n
        TH = wotInstance.wtTable.getColumnHeader(sourceCol);\n
        if (TH && this.settings.highlightColumnClassName) {\n
          addClass(TH, this.settings.highlightColumnClassName);\n
        }\n
      }\n
    }\n
    for (var row = 0; row < renderedRows; row++) {\n
      sourceRow = wotInstance.wtTable.rowFilter.renderedToSource(row);\n
      if (sourceRow >= corners[0] && sourceRow <= corners[2]) {\n
        TH = wotInstance.wtTable.getRowHeader(sourceRow);\n
        if (TH && this.settings.highlightRowClassName) {\n
          addClass(TH, this.settings.highlightRowClassName);\n
        }\n
      }\n
      for (var column$__5 = 0; column$__5 < renderedColumns; column$__5++) {\n
        sourceCol = wotInstance.wtTable.columnFilter.renderedToSource(column$__5);\n
        if (sourceRow >= corners[0] && sourceRow <= corners[2] && sourceCol >= corners[1] && sourceCol <= corners[3]) {\n
          if (this.settings.className) {\n
            this.addClassAtCoords(wotInstance, sourceRow, sourceCol, this.settings.className);\n
          }\n
        } else if (sourceRow >= corners[0] && sourceRow <= corners[2]) {\n
          if (this.settings.highlightRowClassName) {\n
            this.addClassAtCoords(wotInstance, sourceRow, sourceCol, this.settings.highlightRowClassName);\n
          }\n
        } else if (sourceCol >= corners[1] && sourceCol <= corners[3]) {\n
          if (this.settings.highlightColumnClassName) {\n
            this.addClassAtCoords(wotInstance, sourceRow, sourceCol, this.settings.highlightColumnClassName);\n
          }\n
        }\n
      }\n
    }\n
    wotInstance.getSetting(\'onBeforeDrawBorders\', corners, this.settings.className);\n
    if (this.settings.border) {\n
      var border$__6 = this.getBorder(wotInstance);\n
      if (border$__6) {\n
        border$__6.appear(corners);\n
      }\n
    }\n
  }\n
}, {});\n
;\n
window.WalkontableSelection = WalkontableSelection;\n
\n
//# \n
},{"border":2,"cell/coords":5,"cell/range":6,"helpers/dom/element":44}],19:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableSettings: {get: function() {\n
      return WalkontableSettings;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__;\n
var fastInnerText = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}).fastInnerText;\n
var WalkontableSettings = function WalkontableSettings(wotInstance, settings) {\n
  var $__1 = this;\n
  this.wot = wotInstance;\n
  this.instance = wotInstance;\n
  this.defaults = {\n
    table: void 0,\n
    debug: false,\n
    externalRowCalculator: false,\n
    stretchH: \'none\',\n
    currentRowClassName: null,\n
    currentColumnClassName: null,\n
    data: void 0,\n
    fixedColumnsLeft: 0,\n
    fixedRowsTop: 0,\n
    rowHeaders: function() {\n
      return [];\n
    },\n
    columnHeaders: function() {\n
      return [];\n
    },\n
    totalRows: void 0,\n
    totalColumns: void 0,\n
    cellRenderer: (function(row, column, TD) {\n
      var cellData = $__1.getSetting(\'data\', row, column);\n
      fastInnerText(TD, cellData === void 0 || cellData === null ? \'\' : cellData);\n
    }),\n
    columnWidth: function(col) {\n
      return;\n
    },\n
    rowHeight: function(row) {\n
      return;\n
    },\n
    defaultRowHeight: 23,\n
    defaultColumnWidth: 50,\n
    selections: null,\n
    hideBorderOnMouseDownOver: false,\n
    viewportRowCalculatorOverride: null,\n
    viewportColumnCalculatorOverride: null,\n
    onCellMouseDown: null,\n
    onCellMouseOver: null,\n
    onCellDblClick: null,\n
    onCellCornerMouseDown: null,\n
    onCellCornerDblClick: null,\n
    beforeDraw: null,\n
    onDraw: null,\n
    onBeforeDrawBorders: null,\n
    onScrollVertically: null,\n
    onScrollHorizontally: null,\n
    onBeforeTouchScroll: null,\n
    onAfterMomentumScroll: null,\n
    scrollbarWidth: 10,\n
    scrollbarHeight: 10,\n
    renderAllRows: false,\n
    groups: false\n
  };\n
  this.settings = {};\n
  for (var i in this.defaults) {\n
    if (this.defaults.hasOwnProperty(i)) {\n
      if (settings[i] !== void 0) {\n
        this.settings[i] = settings[i];\n
      } else if (this.defaults[i] === void 0) {\n
        throw new Error(\'A required setting "\' + i + \'" was not provided\');\n
      } else {\n
        this.settings[i] = this.defaults[i];\n
      }\n
    }\n
  }\n
};\n
($traceurRuntime.createClass)(WalkontableSettings, {\n
  update: function(settings, value) {\n
    if (value === void 0) {\n
      for (var i in settings) {\n
        if (settings.hasOwnProperty(i)) {\n
          this.settings[i] = settings[i];\n
        }\n
      }\n
    } else {\n
      this.settings[settings] = value;\n
    }\n
    return this.wot;\n
  },\n
  getSetting: function(key, param1, param2, param3, param4) {\n
    if (typeof this.settings[key] === \'function\') {\n
      return this.settings[key](param1, param2, param3, param4);\n
    } else if (param1 !== void 0 && Array.isArray(this.settings[key])) {\n
      return this.settings[key][param1];\n
    } else {\n
      return this.settings[key];\n
    }\n
  },\n
  has: function(key) {\n
    return !!this.settings[key];\n
  }\n
}, {});\n
;\n
window.WalkontableSettings = WalkontableSettings;\n
\n
//# \n
},{"helpers/dom/element":44}],20:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableTable: {get: function() {\n
      return WalkontableTable;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $__cell_47_coords__,\n
    $__cell_47_range__,\n
    $__filter_47_column__,\n
    $__overlay_47_corner__,\n
    $__overlay_47_debug__,\n
    $__overlay_47_left__,\n
    $__filter_47_row__,\n
    $__tableRenderer__,\n
    $__overlay_47_top__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    getStyle = $__0.getStyle,\n
    getTrimmingContainer = $__0.getTrimmingContainer,\n
    hasClass = $__0.hasClass,\n
    index = $__0.index,\n
    offset = $__0.offset,\n
    removeClass = $__0.removeClass,\n
    removeTextNodes = $__0.removeTextNodes;\n
var WalkontableCellCoords = ($__cell_47_coords__ = require("cell/coords"), $__cell_47_coords__ && $__cell_47_coords__.__esModule && $__cell_47_coords__ || {default: $__cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableCellRange = ($__cell_47_range__ = require("cell/range"), $__cell_47_range__ && $__cell_47_range__.__esModule && $__cell_47_range__ || {default: $__cell_47_range__}).WalkontableCellRange;\n
var WalkontableColumnFilter = ($__filter_47_column__ = require("filter/column"), $__filter_47_column__ && $__filter_47_column__.__esModule && $__filter_47_column__ || {default: $__filter_47_column__}).WalkontableColumnFilter;\n
var WalkontableCornerOverlay = ($__overlay_47_corner__ = require("overlay/corner"), $__overlay_47_corner__ && $__overlay_47_corner__.__esModule && $__overlay_47_corner__ || {default: $__overlay_47_corner__}).WalkontableCornerOverlay;\n
var WalkontableDebugOverlay = ($__overlay_47_debug__ = require("overlay/debug"), $__overlay_47_debug__ && $__overlay_47_debug__.__esModule && $__overlay_47_debug__ || {default: $__overlay_47_debug__}).WalkontableDebugOverlay;\n
var WalkontableLeftOverlay = ($__overlay_47_left__ = require("overlay/left"), $__overlay_47_left__ && $__overlay_47_left__.__esModule && $__overlay_47_left__ || {default: $__overlay_47_left__}).WalkontableLeftOverlay;\n
var WalkontableRowFilter = ($__filter_47_row__ = require("filter/row"), $__filter_47_row__ && $__filter_47_row__.__esModule && $__filter_47_row__ || {default: $__filter_47_row__}).WalkontableRowFilter;\n
var WalkontableTableRenderer = ($__tableRenderer__ = require("tableRenderer"), $__tableRenderer__ && $__tableRenderer__.__esModule && $__tableRenderer__ || {default: $__tableRenderer__}).WalkontableTableRenderer;\n
var WalkontableTopOverlay = ($__overlay_47_top__ = require("overlay/top"), $__overlay_47_top__ && $__overlay_47_top__.__esModule && $__overlay_47_top__ || {default: $__overlay_47_top__}).WalkontableTopOverlay;\n
var WalkontableTable = function WalkontableTable(wotInstance, table) {\n
  this.wot = wotInstance;\n
  this.instance = this.wot;\n
  this.TABLE = table;\n
  this.TBODY = null;\n
  this.THEAD = null;\n
  this.COLGROUP = null;\n
  this.tableOffset = 0;\n
  this.holderOffset = 0;\n
  removeTextNodes(this.TABLE);\n
  this.spreader = this.createSpreader(this.TABLE);\n
  this.hider = this.createHider(this.spreader);\n
  this.holder = this.createHolder(this.hider);\n
  this.wtRootElement = this.holder.parentNode;\n
  this.alignOverlaysWithTrimmingContainer();\n
  this.fixTableDomTree();\n
  this.colgroupChildrenLength = this.COLGROUP.childNodes.length;\n
  this.theadChildrenLength = this.THEAD.firstChild ? this.THEAD.firstChild.childNodes.length : 0;\n
  this.tbodyChildrenLength = this.TBODY.childNodes.length;\n
  this.rowFilter = null;\n
  this.columnFilter = null;\n
};\n
($traceurRuntime.createClass)(WalkontableTable, {\n
  fixTableDomTree: function() {\n
    this.TBODY = this.TABLE.querySelector(\'tbody\');\n
    if (!this.TBODY) {\n
      this.TBODY = document.createElement(\'tbody\');\n
      this.TABLE.appendChild(this.TBODY);\n
    }\n
    this.THEAD = this.TABLE.querySelector(\'thead\');\n
    if (!this.THEAD) {\n
      this.THEAD = document.createElement(\'thead\');\n
      this.TABLE.insertBefore(this.THEAD, this.TBODY);\n
    }\n
    this.COLGROUP = this.TABLE.querySelector(\'colgroup\');\n
    if (!this.COLGROUP) {\n
      this.COLGROUP = document.createElement(\'colgroup\');\n
      this.TABLE.insertBefore(this.COLGROUP, this.THEAD);\n
    }\n
    if (this.wot.getSetting(\'columnHeaders\').length && !this.THEAD.childNodes.length) {\n
      this.THEAD.appendChild(document.createElement(\'TR\'));\n
    }\n
  },\n
  createSpreader: function(table) {\n
    var parent = table.parentNode;\n
    var spreader;\n
    if (!parent || parent.nodeType !== 1 || !hasClass(parent, \'wtHolder\')) {\n
      spreader = document.createElement(\'div\');\n
      spreader.className = \'wtSpreader\';\n
      if (parent) {\n
        parent.insertBefore(spreader, table);\n
      }\n
      spreader.appendChild(table);\n
    }\n
    spreader.style.position = \'relative\';\n
    return spreader;\n
  },\n
  createHider: function(spreader) {\n
    var parent = spreader.parentNode;\n
    var hider;\n
    if (!parent || parent.nodeType !== 1 || !hasClass(parent, \'wtHolder\')) {\n
      hider = document.createElement(\'div\');\n
      hider.className = \'wtHider\';\n
      if (parent) {\n
        parent.insertBefore(hider, spreader);\n
      }\n
      hider.appendChild(spreader);\n
    }\n
    return hider;\n
  },\n
  createHolder: function(hider) {\n
    var parent = hider.parentNode;\n
    var holder;\n
    if (!parent || parent.nodeType !== 1 || !hasClass(parent, \'wtHolder\')) {\n
      holder = document.createElement(\'div\');\n
      holder.style.position = \'relative\';\n
      holder.className = \'wtHolder\';\n
      if (parent) {\n
        parent.insertBefore(holder, hider);\n
      }\n
      if (!this.isWorkingOnClone()) {\n
        holder.parentNode.className += \'ht_master handsontable\';\n
      }\n
      holder.appendChild(hider);\n
    }\n
    return holder;\n
  },\n
  alignOverlaysWithTrimmingContainer: function() {\n
    var trimmingElement = getTrimmingContainer(this.wtRootElement);\n
    if (!this.isWorkingOnClone()) {\n
      this.holder.parentNode.style.position = \'relative\';\n
      if (trimmingElement !== window) {\n
        this.holder.style.width = getStyle(trimmingElement, \'width\');\n
        this.holder.style.height = getStyle(trimmingElement, \'height\');\n
        this.holder.style.overflow = \'\';\n
      } else {\n
        this.holder.style.overflow = \'visible\';\n
        this.wtRootElement.style.overflow = \'visible\';\n
      }\n
    }\n
  },\n
  isWorkingOnClone: function() {\n
    return !!this.wot.cloneSource;\n
  },\n
  draw: function(fastDraw) {\n
    if (!this.isWorkingOnClone()) {\n
      this.holderOffset = offset(this.holder);\n
      fastDraw = this.wot.wtViewport.createRenderCalculators(fastDraw);\n
    }\n
    if (!fastDraw) {\n
      if (this.isWorkingOnClone()) {\n
        this.tableOffset = this.wot.cloneSource.wtTable.tableOffset;\n
      } else {\n
        this.tableOffset = offset(this.TABLE);\n
      }\n
      var startRow;\n
      if (this.wot.cloneOverlay instanceof WalkontableDebugOverlay || this.wot.cloneOverlay instanceof WalkontableTopOverlay || this.wot.cloneOverlay instanceof WalkontableCornerOverlay) {\n
        startRow = 0;\n
      } else {\n
        startRow = this.wot.wtViewport.rowsRenderCalculator.startRow;\n
      }\n
      var startColumn;\n
      if (this.wot.cloneOverlay instanceof WalkontableDebugOverlay || this.wot.cloneOverlay instanceof WalkontableLeftOverlay || this.wot.cloneOverlay instanceof WalkontableCornerOverlay) {\n
        startColumn = 0;\n
      } else {\n
        startColumn = this.wot.wtViewport.columnsRenderCalculator.startColumn;\n
      }\n
      this.rowFilter = new WalkontableRowFilter(startRow, this.wot.getSetting(\'totalRows\'), this.wot.getSetting(\'columnHeaders\').length);\n
      this.columnFilter = new WalkontableColumnFilter(startColumn, this.wot.getSetting(\'totalColumns\'), this.wot.getSetting(\'rowHeaders\').length);\n
      this._doDraw();\n
      this.alignOverlaysWithTrimmingContainer();\n
    } else {\n
      if (!this.isWorkingOnClone()) {\n
        this.wot.wtViewport.createVisibleCalculators();\n
      }\n
      if (this.wot.wtOverlays) {\n
        this.wot.wtOverlays.refresh(true);\n
      }\n
    }\n
    this.refreshSelections(fastDraw);\n
    if (!this.isWorkingOnClone()) {\n
      this.wot.wtOverlays.topOverlay.resetFixedPosition();\n
      this.wot.wtOverlays.leftOverlay.resetFixedPosition();\n
      if (this.wot.wtOverlays.topLeftCornerOverlay) {\n
        this.wot.wtOverlays.topLeftCornerOverlay.resetFixedPosition();\n
      }\n
    }\n
    this.wot.drawn = true;\n
    return this;\n
  },\n
  _doDraw: function() {\n
    var wtRenderer = new WalkontableTableRenderer(this);\n
    wtRenderer.render();\n
  },\n
  removeClassFromCells: function(className) {\n
    var nodes = this.TABLE.querySelectorAll(\'.\' + className);\n
    for (var i = 0,\n
        len = nodes.length; i < len; i++) {\n
      removeClass(nodes[i], className);\n
    }\n
  },\n
  refreshSelections: function(fastDraw) {\n
    if (!this.wot.selections) {\n
      return;\n
    }\n
    var len = this.wot.selections.length;\n
    if (fastDraw) {\n
      for (var i = 0; i < len; i++) {\n
        if (this.wot.selections[i].settings.className) {\n
          this.removeClassFromCells(this.wot.selections[i].settings.className);\n
        }\n
        if (this.wot.selections[i].settings.highlightRowClassName) {\n
          this.removeClassFromCells(this.wot.selections[i].settings.highlightRowClassName);\n
        }\n
        if (this.wot.selections[i].settings.highlightColumnClassName) {\n
          this.removeClassFromCells(this.wot.selections[i].settings.highlightColumnClassName);\n
        }\n
      }\n
    }\n
    for (var i$__11 = 0; i$__11 < len; i$__11++) {\n
      this.wot.selections[i$__11].draw(this.wot, fastDraw);\n
    }\n
  },\n
  getCell: function(coords) {\n
    if (this.isRowBeforeRenderedRows(coords.row)) {\n
      return -1;\n
    } else if (this.isRowAfterRenderedRows(coords.row)) {\n
      return -2;\n
    }\n
    var TR = this.TBODY.childNodes[this.rowFilter.sourceToRendered(coords.row)];\n
    if (TR) {\n
      return TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(coords.col)];\n
    }\n
  },\n
  getColumnHeader: function(col) {\n
    var level = arguments[1] !== (void 0) ? arguments[1] : 0;\n
    var TR = this.THEAD.childNodes[level];\n
    if (TR) {\n
      return TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(col)];\n
    }\n
  },\n
  getRowHeader: function(row) {\n
    if (this.columnFilter.sourceColumnToVisibleRowHeadedColumn(0) === 0) {\n
      return null;\n
    }\n
    var TR = this.TBODY.childNodes[this.rowFilter.sourceToRendered(row)];\n
    if (TR) {\n
      return TR.childNodes[0];\n
    }\n
  },\n
  getCoords: function(TD) {\n
    var TR = TD.parentNode;\n
    var row = index(TR);\n
    if (TR.parentNode === this.THEAD) {\n
      row = this.rowFilter.visibleColHeadedRowToSourceRow(row);\n
    } else {\n
      row = this.rowFilter.renderedToSource(row);\n
    }\n
    return new WalkontableCellCoords(row, this.columnFilter.visibleRowHeadedColumnToSourceColumn(TD.cellIndex));\n
  },\n
  getTrForRow: function(row) {\n
    return this.TBODY.childNodes[this.rowFilter.sourceToRendered(row)];\n
  },\n
  getFirstRenderedRow: function() {\n
    return this.wot.wtViewport.rowsRenderCalculator.startRow;\n
  },\n
  getFirstVisibleRow: function() {\n
    return this.wot.wtViewport.rowsVisibleCalculator.startRow;\n
  },\n
  getFirstRenderedColumn: function() {\n
    return this.wot.wtViewport.columnsRenderCalculator.startColumn;\n
  },\n
  getFirstVisibleColumn: function() {\n
    return this.wot.wtViewport.columnsVisibleCalculator.startColumn;\n
  },\n
  getLastRenderedRow: function() {\n
    return this.wot.wtViewport.rowsRenderCalculator.endRow;\n
  },\n
  getLastVisibleRow: function() {\n
    return this.wot.wtViewport.rowsVisibleCalculator.endRow;\n
  },\n
  getLastRenderedColumn: function() {\n
    return this.wot.wtViewport.columnsRenderCalculator.endColumn;\n
  },\n
  getLastVisibleColumn: function() {\n
    return this.wot.wtViewport.columnsVisibleCalculator.endColumn;\n
  },\n
  isRowBeforeRenderedRows: function(row) {\n
    return (this.rowFilter.sourceToRendered(row) < 0 && row >= 0);\n
  },\n
  isRowAfterViewport: function(row) {\n
    return (row > this.getLastVisibleRow());\n
  },\n
  isRowAfterRenderedRows: function(row) {\n
    return (row > this.getLastRenderedRow());\n
  },\n
  isColumnBeforeViewport: function(column) {\n
    return this.columnFilter.sourceToRendered(column) < 0 && column >= 0;\n
  },\n
  isColumnAfterViewport: function(column) {\n
    return column > this.getLastVisibleColumn();\n
  },\n
  isLastRowFullyVisible: function() {\n
    return this.getLastVisibleRow() === this.getLastRenderedRow();\n
  },\n
  isLastColumnFullyVisible: function() {\n
    return this.getLastVisibleColumn() === this.getLastRenderedColumn();\n
  },\n
  getRenderedColumnsCount: function() {\n
    if (this.wot.cloneOverlay instanceof WalkontableDebugOverlay) {\n
      return this.wot.getSetting(\'totalColumns\');\n
    } else if (this.wot.cloneOverlay instanceof WalkontableLeftOverlay || this.wot.cloneOverlay instanceof WalkontableCornerOverlay) {\n
      return this.wot.getSetting(\'fixedColumnsLeft\');\n
    } else {\n
      return this.wot.wtViewport.columnsRenderCalculator.count;\n
    }\n
  },\n
  getRenderedRowsCount: function() {\n
    if (this.wot.cloneOverlay instanceof WalkontableDebugOverlay) {\n
      return this.wot.getSetting(\'totalRows\');\n
    } else if (this.wot.cloneOverlay instanceof WalkontableTopOverlay || this.wot.cloneOverlay instanceof WalkontableCornerOverlay) {\n
      return this.wot.getSetting(\'fixedRowsTop\');\n
    }\n
    return this.wot.wtViewport.rowsRenderCalculator.count;\n
  },\n
  getVisibleRowsCount: function() {\n
    return this.wot.wtViewport.rowsVisibleCalculator.count;\n
  },\n
  allRowsInViewport: function() {\n
    return this.wot.getSetting(\'totalRows\') == this.getVisibleRowsCount();\n
  },\n
  getRowHeight: function(sourceRow) {\n
    var height = this.wot.wtSettings.settings.rowHeight(sourceRow);\n
    var oversizedHeight = this.wot.wtViewport.oversizedRows[sourceRow];\n
    if (oversizedHeight !== void 0) {\n
      height = height ? Math.max(height, oversizedHeight) : oversizedHeight;\n
    }\n
    return height;\n
  },\n
  getColumnHeaderHeight: function(level) {\n
    var height = this.wot.wtSettings.settings.defaultRowHeight;\n
    var oversizedHeight = this.wot.wtViewport.oversizedColumnHeaders[level];\n
    if (oversizedHeight !== void 0) {\n
      height = height ? Math.max(height, oversizedHeight) : oversizedHeight;\n
    }\n
    return height;\n
  },\n
  getVisibleColumnsCount: function() {\n
    return this.wot.wtViewport.columnsVisibleCalculator.count;\n
  },\n
  allColumnsInViewport: function() {\n
    return this.wot.getSetting(\'totalColumns\') == this.getVisibleColumnsCount();\n
  },\n
  getColumnWidth: function(sourceColumn) {\n
    var width = this.wot.wtSettings.settings.columnWidth;\n
    if (typeof width === \'function\') {\n
      width = width(sourceColumn);\n
    } else if (typeof width === \'object\') {\n
      width = width[sourceColumn];\n
    }\n
    return width || this.wot.wtSettings.settings.defaultColumnWidth;\n
  },\n
  getStretchedColumnWidth: function(sourceColumn) {\n
    var width = this.getColumnWidth(sourceColumn);\n
    var calculator = this.wot.wtViewport.columnsRenderCalculator;\n
    if (calculator) {\n
      var stretchedWidth = calculator.getStretchedColumnWidth(sourceColumn, width);\n
      if (stretchedWidth) {\n
        width = stretchedWidth;\n
      }\n
    }\n
    return width;\n
  }\n
}, {});\n
;\n
window.WalkontableTable = WalkontableTable;\n
\n
//# \n
},{"cell/coords":5,"cell/range":6,"filter/column":9,"filter/row":10,"helpers/dom/element":44,"overlay/corner":12,"overlay/debug":13,"overlay/left":14,"overlay/top":15,"tableRenderer":21}],21:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableTableRenderer: {get: function() {\n
      return WalkontableTableRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    empty = $__0.empty,\n
    getScrollbarWidth = $__0.getScrollbarWidth,\n
    hasClass = $__0.hasClass,\n
    innerHeight = $__0.innerHeight;\n
var WalkontableTableRenderer = function WalkontableTableRenderer(wtTable) {\n
  this.wtTable = wtTable;\n
  this.wot = wtTable.instance;\n
  this.instance = wtTable.instance;\n
  this.rowFilter = wtTable.rowFilter;\n
  this.columnFilter = wtTable.columnFilter;\n
  this.TABLE = wtTable.TABLE;\n
  this.THEAD = wtTable.THEAD;\n
  this.TBODY = wtTable.TBODY;\n
  this.COLGROUP = wtTable.COLGROUP;\n
  this.rowHeaders = [];\n
  this.rowHeaderCount = 0;\n
  this.columnHeaders = [];\n
  this.columnHeaderCount = 0;\n
  this.fixedRowsTop = 0;\n
};\n
($traceurRuntime.createClass)(WalkontableTableRenderer, {\n
  render: function() {\n
    if (!this.wtTable.isWorkingOnClone()) {\n
      this.wot.getSetting(\'beforeDraw\', true);\n
    }\n
    this.rowHeaders = this.wot.getSetting(\'rowHeaders\');\n
    this.rowHeaderCount = this.rowHeaders.length;\n
    this.fixedRowsTop = this.wot.getSetting(\'fixedRowsTop\');\n
    this.columnHeaders = this.wot.getSetting(\'columnHeaders\');\n
    this.columnHeaderCount = this.columnHeaders.length;\n
    var columnsToRender = this.wtTable.getRenderedColumnsCount();\n
    var rowsToRender = this.wtTable.getRenderedRowsCount();\n
    var totalColumns = this.wot.getSetting(\'totalColumns\');\n
    var totalRows = this.wot.getSetting(\'totalRows\');\n
    var workspaceWidth;\n
    var adjusted = false;\n
    if (totalColumns > 0) {\n
      this.adjustAvailableNodes();\n
      adjusted = true;\n
      this.renderColumnHeaders();\n
      this.renderRows(totalRows, rowsToRender, columnsToRender);\n
      if (!this.wtTable.isWorkingOnClone()) {\n
        workspaceWidth = this.wot.wtViewport.getWorkspaceWidth();\n
        this.wot.wtViewport.containerWidth = null;\n
      }\n
      this.adjustColumnHeaderHeights();\n
      this.adjustColumnWidths(columnsToRender);\n
      this.markOversizedColumns();\n
    }\n
    if (!adjusted) {\n
      this.adjustAvailableNodes();\n
    }\n
    this.removeRedundantRows(rowsToRender);\n
    if (!this.wtTable.isWorkingOnClone()) {\n
      this.markOversizedRows();\n
      this.wot.wtViewport.createVisibleCalculators();\n
      this.wot.wtOverlays.refresh(false);\n
      this.wot.wtOverlays.applyToDOM();\n
      if (workspaceWidth !== this.wot.wtViewport.getWorkspaceWidth()) {\n
        this.wot.wtViewport.containerWidth = null;\n
        var firstRendered = this.wtTable.getFirstRenderedColumn();\n
        var lastRendered = this.wtTable.getLastRenderedColumn();\n
        for (var i = firstRendered; i < lastRendered; i++) {\n
          var width = this.wtTable.getStretchedColumnWidth(i);\n
          var renderedIndex = this.columnFilter.sourceToRendered(i);\n
          this.COLGROUP.childNodes[renderedIndex + this.rowHeaderCount].style.width = width + \'px\';\n
        }\n
      }\n
      this.wot.getSetting(\'onDraw\', true);\n
    }\n
  },\n
  removeRedundantRows: function(renderedRowsCount) {\n
    while (this.wtTable.tbodyChildrenLength > renderedRowsCount) {\n
      this.TBODY.removeChild(this.TBODY.lastChild);\n
      this.wtTable.tbodyChildrenLength--;\n
    }\n
  },\n
  renderRows: function(totalRows, rowsToRender, columnsToRender) {\n
    var lastTD,\n
        TR;\n
    var visibleRowIndex = 0;\n
    var sourceRowIndex = this.rowFilter.renderedToSource(visibleRowIndex);\n
    var isWorkingOnClone = this.wtTable.isWorkingOnClone();\n
    while (sourceRowIndex < totalRows && sourceRowIndex >= 0) {\n
      if (visibleRowIndex > 1000) {\n
        throw new Error(\'Security brake: Too much TRs. Please define height for your table, which will enforce scrollbars.\');\n
      }\n
      if (rowsToRender !== void 0 && visibleRowIndex === rowsToRender) {\n
        break;\n
      }\n
      TR = this.getOrCreateTrForRow(visibleRowIndex, TR);\n
      this.renderRowHeaders(sourceRowIndex, TR);\n
      this.adjustColumns(TR, columnsToRender + this.rowHeaderCount);\n
      lastTD = this.renderCells(sourceRowIndex, TR, columnsToRender);\n
      if (!isWorkingOnClone) {\n
        this.resetOversizedRow(sourceRowIndex);\n
      }\n
      if (TR.firstChild) {\n
        var height = this.wot.wtTable.getRowHeight(sourceRowIndex);\n
        if (height) {\n
          height--;\n
          TR.firstChild.style.height = height + \'px\';\n
        } else {\n
          TR.firstChild.style.height = \'\';\n
        }\n
      }\n
      visibleRowIndex++;\n
      sourceRowIndex = this.rowFilter.renderedToSource(visibleRowIndex);\n
    }\n
  },\n
  resetOversizedRow: function(sourceRow) {\n
    if (this.wot.getSetting(\'externalRowCalculator\')) {\n
      return;\n
    }\n
    if (this.wot.wtViewport.oversizedRows && this.wot.wtViewport.oversizedRows[sourceRow]) {\n
      this.wot.wtViewport.oversizedRows[sourceRow] = void 0;\n
    }\n
  },\n
  markOversizedRows: function() {\n
    if (this.wot.getSetting(\'externalRowCalculator\')) {\n
      return;\n
    }\n
    var rowCount = this.instance.wtTable.TBODY.childNodes.length;\n
    var expectedTableHeight = rowCount * this.instance.wtSettings.settings.defaultRowHeight;\n
    var actualTableHeight = innerHeight(this.instance.wtTable.TBODY) - 1;\n
    var previousRowHeight;\n
    var rowInnerHeight;\n
    var sourceRowIndex;\n
    var currentTr;\n
    var rowHeader;\n
    if (expectedTableHeight === actualTableHeight) {\n
      return;\n
    }\n
    while (rowCount) {\n
      rowCount--;\n
      sourceRowIndex = this.instance.wtTable.rowFilter.renderedToSource(rowCount);\n
      previousRowHeight = this.instance.wtTable.getRowHeight(sourceRowIndex);\n
      currentTr = this.instance.wtTable.getTrForRow(sourceRowIndex);\n
      rowHeader = currentTr.querySelector(\'th\');\n
      if (rowHeader) {\n
        rowInnerHeight = innerHeight(rowHeader);\n
      } else {\n
        rowInnerHeight = innerHeight(currentTr) - 1;\n
      }\n
      if ((!previousRowHeight && this.instance.wtSettings.settings.defaultRowHeight < rowInnerHeight || previousRowHeight < rowInnerHeight)) {\n
        this.instance.wtViewport.oversizedRows[sourceRowIndex] = ++rowInnerHeight;\n
      }\n
    }\n
  },\n
  markOversizedColumns: function() {\n
    var overlayName = this.wot.getOverlayName();\n
    if (!this.columnHeaderCount || this.wot.wtViewport.isMarkedOversizedColumn[overlayName] || this.wtTable.isWorkingOnClone()) {\n
      return;\n
    }\n
    var columnCount = this.wtTable.getRenderedColumnsCount();\n
    for (var i = 0; i < this.columnHeaderCount; i++) {\n
      for (var renderedColumnIndex = (-1) * this.rowHeaderCount; renderedColumnIndex < columnCount; renderedColumnIndex++) {\n
        this.markIfOversizedColumnHeader(renderedColumnIndex);\n
      }\n
    }\n
    this.wot.wtViewport.isMarkedOversizedColumn[overlayName] = true;\n
  },\n
  adjustColumnHeaderHeights: function() {\n
    var columnHeaders = this.wot.getSetting(\'columnHeaders\');\n
    var childs = this.wot.wtTable.THEAD.childNodes;\n
    var oversizedCols = this.wot.wtViewport.oversizedColumnHeaders;\n
    for (var i = 0,\n
        len = columnHeaders.length; i < len; i++) {\n
      if (oversizedCols[i]) {\n
        if (childs[i].childNodes.length === 0) {\n
          return;\n
        }\n
        childs[i].childNodes[0].style.height = oversizedCols[i] + \'px\';\n
      }\n
    }\n
  },\n
  markIfOversizedColumnHeader: function(col) {\n
    var sourceColIndex = this.wot.wtTable.columnFilter.renderedToSource(col);\n
    var level = this.columnHeaderCount;\n
    var defaultRowHeight = this.wot.wtSettings.settings.defaultRowHeight;\n
    var previousColHeaderHeight;\n
    var currentHeader;\n
    var currentHeaderHeight;\n
    while (level) {\n
      level--;\n
      previousColHeaderHeight = this.wot.wtTable.getColumnHeaderHeight(level);\n
      currentHeader = this.wot.wtTable.getColumnHeader(sourceColIndex, level);\n
      if (!currentHeader) {\n
        continue;\n
      }\n
      currentHeaderHeight = innerHeight(currentHeader);\n
      if (!previousColHeaderHeight && defaultRowHeight < currentHeaderHeight || previousColHeaderHeight < currentHeaderHeight) {\n
        this.wot.wtViewport.oversizedColumnHeaders[level] = currentHeaderHeight;\n
      }\n
    }\n
  },\n
  renderCells: function(sourceRowIndex, TR, columnsToRender) {\n
    var TD;\n
    var sourceColIndex;\n
    for (var visibleColIndex = 0; visibleColIndex < columnsToRender; visibleColIndex++) {\n
      sourceColIndex = this.columnFilter.renderedToSource(visibleColIndex);\n
      if (visibleColIndex === 0) {\n
        TD = TR.childNodes[this.columnFilter.sourceColumnToVisibleRowHeadedColumn(sourceColIndex)];\n
      } else {\n
        TD = TD.nextSibling;\n
      }\n
      if (TD.nodeName == \'TH\') {\n
        TD = replaceThWithTd(TD, TR);\n
      }\n
      if (!hasClass(TD, \'hide\')) {\n
        TD.className = \'\';\n
      }\n
      TD.removeAttribute(\'style\');\n
      this.wot.wtSettings.settings.cellRenderer(sourceRowIndex, sourceColIndex, TD);\n
    }\n
    return TD;\n
  },\n
  adjustColumnWidths: function(columnsToRender) {\n
    var scrollbarCompensation = 0;\n
    var sourceInstance = this.wot.cloneSource ? this.wot.cloneSource : this.wot;\n
    var mainHolder = sourceInstance.wtTable.holder;\n
    if (mainHolder.offsetHeight < mainHolder.scrollHeight) {\n
      scrollbarCompensation = getScrollbarWidth();\n
    }\n
    this.wot.wtViewport.columnsRenderCalculator.refreshStretching(this.wot.wtViewport.getViewportWidth() - scrollbarCompensation);\n
    for (var renderedColIndex = 0; renderedColIndex < columnsToRender; renderedColIndex++) {\n
      var width = this.wtTable.getStretchedColumnWidth(this.columnFilter.renderedToSource(renderedColIndex));\n
      this.COLGROUP.childNodes[renderedColIndex + this.rowHeaderCount].style.width = width + \'px\';\n
    }\n
  },\n
  appendToTbody: function(TR) {\n
    this.TBODY.appendChild(TR);\n
    this.wtTable.tbodyChildrenLength++;\n
  },\n
  getOrCreateTrForRow: function(rowIndex, currentTr) {\n
    var TR;\n
    if (rowIndex >= this.wtTable.tbodyChildrenLength) {\n
      TR = this.createRow();\n
      this.appendToTbody(TR);\n
    } else if (rowIndex === 0) {\n
      TR = this.TBODY.firstChild;\n
    } else {\n
      TR = currentTr.nextSibling;\n
    }\n
    return TR;\n
  },\n
  createRow: function() {\n
    var TR = document.createElement(\'TR\');\n
    for (var visibleColIndex = 0; visi

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAQ=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="4" aka="AAAAAAAAAAQ=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

bleColIndex < this.rowHeaderCount; visibleColIndex++) {\n
      TR.appendChild(document.createElement(\'TH\'));\n
    }\n
    return TR;\n
  },\n
  renderRowHeader: function(row, col, TH) {\n
    TH.className = \'\';\n
    TH.removeAttribute(\'style\');\n
    this.rowHeaders[col](row, TH, col);\n
  },\n
  renderRowHeaders: function(row, TR) {\n
    for (var TH = TR.firstChild,\n
        visibleColIndex = 0; visibleColIndex < this.rowHeaderCount; visibleColIndex++) {\n
      if (!TH) {\n
        TH = document.createElement(\'TH\');\n
        TR.appendChild(TH);\n
      } else if (TH.nodeName == \'TD\') {\n
        TH = replaceTdWithTh(TH, TR);\n
      }\n
      this.renderRowHeader(row, visibleColIndex, TH);\n
      TH = TH.nextSibling;\n
    }\n
  },\n
  adjustAvailableNodes: function() {\n
    this.adjustColGroups();\n
    this.adjustThead();\n
  },\n
  renderColumnHeaders: function() {\n
    var overlayName = this.wot.getOverlayName();\n
    if (!this.columnHeaderCount) {\n
      return;\n
    }\n
    var columnCount = this.wtTable.getRenderedColumnsCount();\n
    for (var i = 0; i < this.columnHeaderCount; i++) {\n
      var TR = this.getTrForColumnHeaders(i);\n
      for (var renderedColumnIndex = (-1) * this.rowHeaderCount; renderedColumnIndex < columnCount; renderedColumnIndex++) {\n
        var sourceCol = this.columnFilter.renderedToSource(renderedColumnIndex);\n
        this.renderColumnHeader(i, sourceCol, TR.childNodes[renderedColumnIndex + this.rowHeaderCount]);\n
      }\n
    }\n
  },\n
  adjustColGroups: function() {\n
    var columnCount = this.wtTable.getRenderedColumnsCount();\n
    while (this.wtTable.colgroupChildrenLength < columnCount + this.rowHeaderCount) {\n
      this.COLGROUP.appendChild(document.createElement(\'COL\'));\n
      this.wtTable.colgroupChildrenLength++;\n
    }\n
    while (this.wtTable.colgroupChildrenLength > columnCount + this.rowHeaderCount) {\n
      this.COLGROUP.removeChild(this.COLGROUP.lastChild);\n
      this.wtTable.colgroupChildrenLength--;\n
    }\n
    if (this.rowHeaderCount) {\n
      addClass(this.COLGROUP.childNodes[0], \'rowHeader\');\n
    }\n
  },\n
  adjustThead: function() {\n
    var columnCount = this.wtTable.getRenderedColumnsCount();\n
    var TR = this.THEAD.firstChild;\n
    if (this.columnHeaders.length) {\n
      for (var i = 0,\n
          len = this.columnHeaders.length; i < len; i++) {\n
        TR = this.THEAD.childNodes[i];\n
        if (!TR) {\n
          TR = document.createElement(\'TR\');\n
          this.THEAD.appendChild(TR);\n
        }\n
        this.theadChildrenLength = TR.childNodes.length;\n
        while (this.theadChildrenLength < columnCount + this.rowHeaderCount) {\n
          TR.appendChild(document.createElement(\'TH\'));\n
          this.theadChildrenLength++;\n
        }\n
        while (this.theadChildrenLength > columnCount + this.rowHeaderCount) {\n
          TR.removeChild(TR.lastChild);\n
          this.theadChildrenLength--;\n
        }\n
      }\n
      var theadChildrenLength = this.THEAD.childNodes.length;\n
      if (theadChildrenLength > this.columnHeaders.length) {\n
        for (var i$__2 = this.columnHeaders.length; i$__2 < theadChildrenLength; i$__2++) {\n
          this.THEAD.removeChild(this.THEAD.lastChild);\n
        }\n
      }\n
    } else if (TR) {\n
      empty(TR);\n
    }\n
  },\n
  getTrForColumnHeaders: function(index) {\n
    return this.THEAD.childNodes[index];\n
  },\n
  renderColumnHeader: function(row, col, TH) {\n
    TH.className = \'\';\n
    TH.removeAttribute(\'style\');\n
    return this.columnHeaders[row](col, TH, row);\n
  },\n
  adjustColumns: function(TR, desiredCount) {\n
    var count = TR.childNodes.length;\n
    while (count < desiredCount) {\n
      var TD = document.createElement(\'TD\');\n
      TR.appendChild(TD);\n
      count++;\n
    }\n
    while (count > desiredCount) {\n
      TR.removeChild(TR.lastChild);\n
      count--;\n
    }\n
  },\n
  removeRedundantColumns: function(columnsToRender) {\n
    while (this.wtTable.tbodyChildrenLength > columnsToRender) {\n
      this.TBODY.removeChild(this.TBODY.lastChild);\n
      this.wtTable.tbodyChildrenLength--;\n
    }\n
  }\n
}, {});\n
function replaceTdWithTh(TD, TR) {\n
  var TH = document.createElement(\'TH\');\n
  TR.insertBefore(TH, TD);\n
  TR.removeChild(TD);\n
  return TH;\n
}\n
function replaceThWithTd(TH, TR) {\n
  var TD = document.createElement(\'TD\');\n
  TR.insertBefore(TD, TH);\n
  TR.removeChild(TH);\n
  return TD;\n
}\n
;\n
window.WalkontableTableRenderer = WalkontableTableRenderer;\n
\n
//# \n
},{"helpers/dom/element":44}],22:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  WalkontableViewport: {get: function() {\n
      return WalkontableViewport;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47__46__46__47_eventManager__,\n
    $__calculator_47_viewportColumns__,\n
    $__calculator_47_viewportRows__;\n
var $__0 = ($___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    getScrollbarWidth = $__0.getScrollbarWidth,\n
    getScrollTop = $__0.getScrollTop,\n
    getStyle = $__0.getStyle,\n
    offset = $__0.offset,\n
    outerHeight = $__0.outerHeight,\n
    outerWidth = $__0.outerWidth;\n
var EventManager = ($___46__46__47__46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47__46__46__47_eventManager__}).EventManager;\n
var WalkontableViewportColumnsCalculator = ($__calculator_47_viewportColumns__ = require("calculator/viewportColumns"), $__calculator_47_viewportColumns__ && $__calculator_47_viewportColumns__.__esModule && $__calculator_47_viewportColumns__ || {default: $__calculator_47_viewportColumns__}).WalkontableViewportColumnsCalculator;\n
var WalkontableViewportRowsCalculator = ($__calculator_47_viewportRows__ = require("calculator/viewportRows"), $__calculator_47_viewportRows__ && $__calculator_47_viewportRows__.__esModule && $__calculator_47_viewportRows__ || {default: $__calculator_47_viewportRows__}).WalkontableViewportRowsCalculator;\n
var WalkontableViewport = function WalkontableViewport(wotInstance) {\n
  var $__4 = this;\n
  this.wot = wotInstance;\n
  this.instance = this.wot;\n
  this.oversizedRows = [];\n
  this.oversizedColumnHeaders = [];\n
  this.isMarkedOversizedColumn = {};\n
  this.clientHeight = 0;\n
  this.containerWidth = NaN;\n
  this.rowHeaderWidth = NaN;\n
  this.rowsVisibleCalculator = null;\n
  this.columnsVisibleCalculator = null;\n
  this.eventManager = new EventManager(this.wot);\n
  this.eventManager.addEventListener(window, \'resize\', (function() {\n
    $__4.clientHeight = $__4.getWorkspaceHeight();\n
  }));\n
};\n
($traceurRuntime.createClass)(WalkontableViewport, {\n
  getWorkspaceHeight: function() {\n
    var trimmingContainer = this.instance.wtOverlays.topOverlay.trimmingContainer;\n
    var elemHeight;\n
    var height = 0;\n
    if (trimmingContainer === window) {\n
      height = document.documentElement.clientHeight;\n
    } else {\n
      elemHeight = outerHeight(trimmingContainer);\n
      height = (elemHeight > 0 && trimmingContainer.clientHeight > 0) ? trimmingContainer.clientHeight : Infinity;\n
    }\n
    return height;\n
  },\n
  getWorkspaceWidth: function() {\n
    var width;\n
    var totalColumns = this.instance.getSetting("totalColumns");\n
    var trimmingContainer = this.instance.wtOverlays.leftOverlay.trimmingContainer;\n
    var overflow;\n
    var stretchSetting = this.instance.getSetting(\'stretchH\');\n
    var docOffsetWidth = document.documentElement.offsetWidth;\n
    if (Handsontable.freezeOverlays) {\n
      width = Math.min(docOffsetWidth - this.getWorkspaceOffset().left, docOffsetWidth);\n
    } else {\n
      width = Math.min(this.getContainerFillWidth(), docOffsetWidth - this.getWorkspaceOffset().left, docOffsetWidth);\n
    }\n
    if (trimmingContainer === window && totalColumns > 0 && this.sumColumnWidths(0, totalColumns - 1) > width) {\n
      return document.documentElement.clientWidth;\n
    }\n
    if (trimmingContainer !== window) {\n
      overflow = getStyle(this.instance.wtOverlays.leftOverlay.trimmingContainer, \'overflow\');\n
      if (overflow == "scroll" || overflow == "hidden" || overflow == "auto") {\n
        return Math.max(width, trimmingContainer.clientWidth);\n
      }\n
    }\n
    if (stretchSetting === \'none\' || !stretchSetting) {\n
      return Math.max(width, outerWidth(this.instance.wtTable.TABLE));\n
    } else {\n
      return width;\n
    }\n
  },\n
  hasVerticalScroll: function() {\n
    return this.getWorkspaceActualHeight() > this.getWorkspaceHeight();\n
  },\n
  hasHorizontalScroll: function() {\n
    return this.getWorkspaceActualWidth() > this.getWorkspaceWidth();\n
  },\n
  sumColumnWidths: function(from, length) {\n
    var sum = 0;\n
    while (from < length) {\n
      sum += this.wot.wtTable.getColumnWidth(from);\n
      from++;\n
    }\n
    return sum;\n
  },\n
  getContainerFillWidth: function() {\n
    if (this.containerWidth) {\n
      return this.containerWidth;\n
    }\n
    var mainContainer = this.instance.wtTable.holder;\n
    var fillWidth;\n
    var dummyElement;\n
    dummyElement = document.createElement("DIV");\n
    dummyElement.style.width = "100%";\n
    dummyElement.style.height = "1px";\n
    mainContainer.appendChild(dummyElement);\n
    fillWidth = dummyElement.offsetWidth;\n
    this.containerWidth = fillWidth;\n
    mainContainer.removeChild(dummyElement);\n
    return fillWidth;\n
  },\n
  getWorkspaceOffset: function() {\n
    return offset(this.wot.wtTable.TABLE);\n
  },\n
  getWorkspaceActualHeight: function() {\n
    return outerHeight(this.wot.wtTable.TABLE);\n
  },\n
  getWorkspaceActualWidth: function() {\n
    return outerWidth(this.wot.wtTable.TABLE) || outerWidth(this.wot.wtTable.TBODY) || outerWidth(this.wot.wtTable.THEAD);\n
  },\n
  getColumnHeaderHeight: function() {\n
    if (isNaN(this.columnHeaderHeight)) {\n
      this.columnHeaderHeight = outerHeight(this.wot.wtTable.THEAD);\n
    }\n
    return this.columnHeaderHeight;\n
  },\n
  getViewportHeight: function() {\n
    var containerHeight = this.getWorkspaceHeight();\n
    var columnHeaderHeight;\n
    if (containerHeight === Infinity) {\n
      return containerHeight;\n
    }\n
    columnHeaderHeight = this.getColumnHeaderHeight();\n
    if (columnHeaderHeight > 0) {\n
      containerHeight -= columnHeaderHeight;\n
    }\n
    return containerHeight;\n
  },\n
  getRowHeaderWidth: function() {\n
    if (this.wot.cloneSource) {\n
      return this.wot.cloneSource.wtViewport.getRowHeaderWidth();\n
    }\n
    if (isNaN(this.rowHeaderWidth)) {\n
      var rowHeaders = this.instance.getSetting(\'rowHeaders\');\n
      if (rowHeaders.length) {\n
        var TH = this.instance.wtTable.TABLE.querySelector(\'TH\');\n
        this.rowHeaderWidth = 0;\n
        for (var i = 0,\n
            len = rowHeaders.length; i < len; i++) {\n
          if (TH) {\n
            this.rowHeaderWidth += outerWidth(TH);\n
            TH = TH.nextSibling;\n
          } else {\n
            this.rowHeaderWidth += 50;\n
          }\n
        }\n
      } else {\n
        this.rowHeaderWidth = 0;\n
      }\n
    }\n
    return this.rowHeaderWidth;\n
  },\n
  getViewportWidth: function() {\n
    var containerWidth = this.getWorkspaceWidth();\n
    var rowHeaderWidth;\n
    if (containerWidth === Infinity) {\n
      return containerWidth;\n
    }\n
    rowHeaderWidth = this.getRowHeaderWidth();\n
    if (rowHeaderWidth > 0) {\n
      return containerWidth - rowHeaderWidth;\n
    }\n
    return containerWidth;\n
  },\n
  createRowsCalculator: function() {\n
    var visible = arguments[0] !== (void 0) ? arguments[0] : false;\n
    var $__4 = this;\n
    var height;\n
    var pos;\n
    var fixedRowsTop;\n
    this.rowHeaderWidth = NaN;\n
    if (this.wot.wtSettings.settings.renderAllRows) {\n
      height = Infinity;\n
    } else {\n
      height = this.getViewportHeight();\n
    }\n
    pos = getScrollTop(this.wot.wtOverlays.mainTableScrollableElement) - this.wot.wtOverlays.topOverlay.getTableParentOffset();\n
    if (pos < 0) {\n
      pos = 0;\n
    }\n
    fixedRowsTop = this.wot.getSetting(\'fixedRowsTop\');\n
    if (fixedRowsTop) {\n
      var fixedRowsHeight = this.wot.wtOverlays.topOverlay.sumCellSizes(0, fixedRowsTop);\n
      pos += fixedRowsHeight;\n
      height -= fixedRowsHeight;\n
    }\n
    return new WalkontableViewportRowsCalculator(height, pos, this.wot.getSetting(\'totalRows\'), (function(sourceRow) {\n
      return $__4.wot.wtTable.getRowHeight(sourceRow);\n
    }), visible ? null : this.wot.wtSettings.settings.viewportRowCalculatorOverride, visible);\n
  },\n
  createColumnsCalculator: function() {\n
    var visible = arguments[0] !== (void 0) ? arguments[0] : false;\n
    var $__4 = this;\n
    var width = this.getViewportWidth();\n
    var pos;\n
    var fixedColumnsLeft;\n
    this.columnHeaderHeight = NaN;\n
    pos = this.wot.wtOverlays.leftOverlay.getScrollPosition() - this.wot.wtOverlays.leftOverlay.getTableParentOffset();\n
    if (pos < 0) {\n
      pos = 0;\n
    }\n
    fixedColumnsLeft = this.wot.getSetting(\'fixedColumnsLeft\');\n
    if (fixedColumnsLeft) {\n
      var fixedColumnsWidth = this.wot.wtOverlays.leftOverlay.sumCellSizes(0, fixedColumnsLeft);\n
      pos += fixedColumnsWidth;\n
      width -= fixedColumnsWidth;\n
    }\n
    if (this.wot.wtTable.holder.clientWidth !== this.wot.wtTable.holder.offsetWidth) {\n
      width -= getScrollbarWidth();\n
    }\n
    return new WalkontableViewportColumnsCalculator(width, pos, this.wot.getSetting(\'totalColumns\'), (function(sourceCol) {\n
      return $__4.wot.wtTable.getColumnWidth(sourceCol);\n
    }), visible ? null : this.wot.wtSettings.settings.viewportColumnCalculatorOverride, visible, this.wot.getSetting(\'stretchH\'));\n
  },\n
  createRenderCalculators: function() {\n
    var fastDraw = arguments[0] !== (void 0) ? arguments[0] : false;\n
    if (fastDraw) {\n
      var proposedRowsVisibleCalculator = this.createRowsCalculator(true);\n
      var proposedColumnsVisibleCalculator = this.createColumnsCalculator(true);\n
      if (!(this.areAllProposedVisibleRowsAlreadyRendered(proposedRowsVisibleCalculator) && this.areAllProposedVisibleColumnsAlreadyRendered(proposedColumnsVisibleCalculator))) {\n
        fastDraw = false;\n
      }\n
    }\n
    if (!fastDraw) {\n
      this.rowsRenderCalculator = this.createRowsCalculator();\n
      this.columnsRenderCalculator = this.createColumnsCalculator();\n
    }\n
    this.rowsVisibleCalculator = null;\n
    this.columnsVisibleCalculator = null;\n
    return fastDraw;\n
  },\n
  createVisibleCalculators: function() {\n
    this.rowsVisibleCalculator = this.createRowsCalculator(true);\n
    this.columnsVisibleCalculator = this.createColumnsCalculator(true);\n
  },\n
  areAllProposedVisibleRowsAlreadyRendered: function(proposedRowsVisibleCalculator) {\n
    if (this.rowsVisibleCalculator) {\n
      if (proposedRowsVisibleCalculator.startRow < this.rowsRenderCalculator.startRow || (proposedRowsVisibleCalculator.startRow === this.rowsRenderCalculator.startRow && proposedRowsVisibleCalculator.startRow > 0)) {\n
        return false;\n
      } else if (proposedRowsVisibleCalculator.endRow > this.rowsRenderCalculator.endRow || (proposedRowsVisibleCalculator.endRow === this.rowsRenderCalculator.endRow && proposedRowsVisibleCalculator.endRow < this.wot.getSetting(\'totalRows\') - 1)) {\n
        return false;\n
      } else {\n
        return true;\n
      }\n
    }\n
    return false;\n
  },\n
  areAllProposedVisibleColumnsAlreadyRendered: function(proposedColumnsVisibleCalculator) {\n
    if (this.columnsVisibleCalculator) {\n
      if (proposedColumnsVisibleCalculator.startColumn < this.columnsRenderCalculator.startColumn || (proposedColumnsVisibleCalculator.startColumn === this.columnsRenderCalculator.startColumn && proposedColumnsVisibleCalculator.startColumn > 0)) {\n
        return false;\n
      } else if (proposedColumnsVisibleCalculator.endColumn > this.columnsRenderCalculator.endColumn || (proposedColumnsVisibleCalculator.endColumn === this.columnsRenderCalculator.endColumn && proposedColumnsVisibleCalculator.endColumn < this.wot.getSetting(\'totalColumns\') - 1)) {\n
        return false;\n
      } else {\n
        return true;\n
      }\n
    }\n
    return false;\n
  }\n
}, {});\n
;\n
window.WalkontableViewport = WalkontableViewport;\n
\n
//# \n
},{"calculator/viewportColumns":3,"calculator/viewportRows":4,"eventManager":40,"helpers/dom/element":44}],23:[function(require,module,exports){\n
"use strict";\n
var $__shims_47_classes__,\n
    $__es6collections__,\n
    $__pluginHooks__,\n
    $__core__,\n
    $__renderers_47__95_cellDecorator__,\n
    $__cellTypes__,\n
    $___46__46__47_plugins_47_jqueryHandsontable__,\n
    $__helpers_47_array__,\n
    $__helpers_47_browser__,\n
    $__helpers_47_data__,\n
    $__helpers_47_function__,\n
    $__helpers_47_mixed__,\n
    $__helpers_47_number__,\n
    $__helpers_47_object__,\n
    $__helpers_47_setting__,\n
    $__helpers_47_string__,\n
    $__helpers_47_unicode__,\n
    $__helpers_47_dom_47_element__,\n
    $__helpers_47_dom_47_event__;\n
var version = Handsontable.version;\n
var buildDate = Handsontable.buildDate;\n
window.Handsontable = function Handsontable(rootElement, userSettings) {\n
  var instance = new Handsontable.Core(rootElement, userSettings || {});\n
  instance.init();\n
  return instance;\n
};\n
Handsontable.version = version;\n
Handsontable.buildDate = buildDate;\n
($__shims_47_classes__ = require("shims/classes"), $__shims_47_classes__ && $__shims_47_classes__.__esModule && $__shims_47_classes__ || {default: $__shims_47_classes__});\n
($__es6collections__ = require("es6collections"), $__es6collections__ && $__es6collections__.__esModule && $__es6collections__ || {default: $__es6collections__});\n
Handsontable.plugins = {};\n
var Hooks = ($__pluginHooks__ = require("pluginHooks"), $__pluginHooks__ && $__pluginHooks__.__esModule && $__pluginHooks__ || {default: $__pluginHooks__}).Hooks;\n
if (!Handsontable.hooks) {\n
  Handsontable.hooks = new Hooks();\n
}\n
($__core__ = require("core"), $__core__ && $__core__.__esModule && $__core__ || {default: $__core__});\n
($__renderers_47__95_cellDecorator__ = require("renderers/_cellDecorator"), $__renderers_47__95_cellDecorator__ && $__renderers_47__95_cellDecorator__.__esModule && $__renderers_47__95_cellDecorator__ || {default: $__renderers_47__95_cellDecorator__});\n
($__cellTypes__ = require("cellTypes"), $__cellTypes__ && $__cellTypes__.__esModule && $__cellTypes__ || {default: $__cellTypes__});\n
($___46__46__47_plugins_47_jqueryHandsontable__ = require("plugins/jqueryHandsontable"), $___46__46__47_plugins_47_jqueryHandsontable__ && $___46__46__47_plugins_47_jqueryHandsontable__.__esModule && $___46__46__47_plugins_47_jqueryHandsontable__ || {default: $___46__46__47_plugins_47_jqueryHandsontable__});\n
var arrayHelpers = ($__helpers_47_array__ = require("helpers/array"), $__helpers_47_array__ && $__helpers_47_array__.__esModule && $__helpers_47_array__ || {default: $__helpers_47_array__});\n
var browserHelpers = ($__helpers_47_browser__ = require("helpers/browser"), $__helpers_47_browser__ && $__helpers_47_browser__.__esModule && $__helpers_47_browser__ || {default: $__helpers_47_browser__});\n
var dataHelpers = ($__helpers_47_data__ = require("helpers/data"), $__helpers_47_data__ && $__helpers_47_data__.__esModule && $__helpers_47_data__ || {default: $__helpers_47_data__});\n
var functionHelpers = ($__helpers_47_function__ = require("helpers/function"), $__helpers_47_function__ && $__helpers_47_function__.__esModule && $__helpers_47_function__ || {default: $__helpers_47_function__});\n
var mixedHelpers = ($__helpers_47_mixed__ = require("helpers/mixed"), $__helpers_47_mixed__ && $__helpers_47_mixed__.__esModule && $__helpers_47_mixed__ || {default: $__helpers_47_mixed__});\n
var numberHelpers = ($__helpers_47_number__ = require("helpers/number"), $__helpers_47_number__ && $__helpers_47_number__.__esModule && $__helpers_47_number__ || {default: $__helpers_47_number__});\n
var objectHelpers = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__});\n
var settingHelpers = ($__helpers_47_setting__ = require("helpers/setting"), $__helpers_47_setting__ && $__helpers_47_setting__.__esModule && $__helpers_47_setting__ || {default: $__helpers_47_setting__});\n
var stringHelpers = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__});\n
var unicodeHelpers = ($__helpers_47_unicode__ = require("helpers/unicode"), $__helpers_47_unicode__ && $__helpers_47_unicode__.__esModule && $__helpers_47_unicode__ || {default: $__helpers_47_unicode__});\n
var helpers = [arrayHelpers, browserHelpers, dataHelpers, functionHelpers, mixedHelpers, numberHelpers, objectHelpers, settingHelpers, stringHelpers, unicodeHelpers];\n
Handsontable.helper = {};\n
arrayHelpers.arrayEach(helpers, (function(helper) {\n
  arrayHelpers.arrayEach(Object.getOwnPropertyNames(helper), (function(key) {\n
    if (key.charAt(0) !== \'_\') {\n
      Handsontable.helper[key] = helper[key];\n
    }\n
  }));\n
}));\n
var domHelpers = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__});\n
var domEventHelpers = ($__helpers_47_dom_47_event__ = require("helpers/dom/event"), $__helpers_47_dom_47_event__ && $__helpers_47_dom_47_event__.__esModule && $__helpers_47_dom_47_event__ || {default: $__helpers_47_dom_47_event__});\n
Handsontable.dom = {};\n
Handsontable.Dom = Handsontable.dom;\n
arrayHelpers.arrayEach([domHelpers, domEventHelpers], (function(helper) {\n
  arrayHelpers.arrayEach(Object.getOwnPropertyNames(helper), (function(key) {\n
    if (key.charAt(0) !== \'_\') {\n
      Handsontable.dom[key] = helper[key];\n
    }\n
  }));\n
}));\n
\n
//# \n
},{"cellTypes":24,"core":25,"es6collections":"es6collections","helpers/array":41,"helpers/browser":42,"helpers/data":43,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/function":46,"helpers/mixed":47,"helpers/number":48,"helpers/object":49,"helpers/setting":50,"helpers/string":51,"helpers/unicode":52,"pluginHooks":54,"plugins/jqueryHandsontable":1,"renderers/_cellDecorator":88,"shims/classes":95}],24:[function(require,module,exports){\n
"use strict";\n
var $__helpers_47_browser__,\n
    $__editors__,\n
    $__renderers__,\n
    $__editors_47_autocompleteEditor__,\n
    $__editors_47_checkboxEditor__,\n
    $__editors_47_dateEditor__,\n
    $__editors_47_dropdownEditor__,\n
    $__editors_47_handsontableEditor__,\n
    $__editors_47_mobileTextEditor__,\n
    $__editors_47_numericEditor__,\n
    $__editors_47_passwordEditor__,\n
    $__editors_47_selectEditor__,\n
    $__editors_47_textEditor__,\n
    $__renderers_47_autocompleteRenderer__,\n
    $__renderers_47_checkboxRenderer__,\n
    $__renderers_47_htmlRenderer__,\n
    $__renderers_47_numericRenderer__,\n
    $__renderers_47_passwordRenderer__,\n
    $__renderers_47_textRenderer__,\n
    $__validators_47_autocompleteValidator__,\n
    $__validators_47_dateValidator__,\n
    $__validators_47_numericValidator__;\n
var isMobileBrowser = ($__helpers_47_browser__ = require("helpers/browser"), $__helpers_47_browser__ && $__helpers_47_browser__.__esModule && $__helpers_47_browser__ || {default: $__helpers_47_browser__}).isMobileBrowser;\n
var getEditorConstructor = ($__editors__ = require("editors"), $__editors__ && $__editors__.__esModule && $__editors__ || {default: $__editors__}).getEditorConstructor;\n
var getRenderer = ($__renderers__ = require("renderers"), $__renderers__ && $__renderers__.__esModule && $__renderers__ || {default: $__renderers__}).getRenderer;\n
var AutocompleteEditor = ($__editors_47_autocompleteEditor__ = require("editors/autocompleteEditor"), $__editors_47_autocompleteEditor__ && $__editors_47_autocompleteEditor__.__esModule && $__editors_47_autocompleteEditor__ || {default: $__editors_47_autocompleteEditor__}).AutocompleteEditor;\n
var CheckboxEditor = ($__editors_47_checkboxEditor__ = require("editors/checkboxEditor"), $__editors_47_checkboxEditor__ && $__editors_47_checkboxEditor__.__esModule && $__editors_47_checkboxEditor__ || {default: $__editors_47_checkboxEditor__}).CheckboxEditor;\n
var DateEditor = ($__editors_47_dateEditor__ = require("editors/dateEditor"), $__editors_47_dateEditor__ && $__editors_47_dateEditor__.__esModule && $__editors_47_dateEditor__ || {default: $__editors_47_dateEditor__}).DateEditor;\n
var DropdownEditor = ($__editors_47_dropdownEditor__ = require("editors/dropdownEditor"), $__editors_47_dropdownEditor__ && $__editors_47_dropdownEditor__.__esModule && $__editors_47_dropdownEditor__ || {default: $__editors_47_dropdownEditor__}).DropdownEditor;\n
var HandsontableEditor = ($__editors_47_handsontableEditor__ = require("editors/handsontableEditor"), $__editors_47_handsontableEditor__ && $__editors_47_handsontableEditor__.__esModule && $__editors_47_handsontableEditor__ || {default: $__editors_47_handsontableEditor__}).HandsontableEditor;\n
var MobileTextEditor = ($__editors_47_mobileTextEditor__ = require("editors/mobileTextEditor"), $__editors_47_mobileTextEditor__ && $__editors_47_mobileTextEditor__.__esModule && $__editors_47_mobileTextEditor__ || {default: $__editors_47_mobileTextEditor__}).MobileTextEditor;\n
var NumericEditor = ($__editors_47_numericEditor__ = require("editors/numericEditor"), $__editors_47_numericEditor__ && $__editors_47_numericEditor__.__esModule && $__editors_47_numericEditor__ || {default: $__editors_47_numericEditor__}).NumericEditor;\n
var PasswordEditor = ($__editors_47_passwordEditor__ = require("editors/passwordEditor"), $__editors_47_passwordEditor__ && $__editors_47_passwordEditor__.__esModule && $__editors_47_passwordEditor__ || {default: $__editors_47_passwordEditor__}).PasswordEditor;\n
var SelectEditor = ($__editors_47_selectEditor__ = require("editors/selectEditor"), $__editors_47_selectEditor__ && $__editors_47_selectEditor__.__esModule && $__editors_47_selectEditor__ || {default: $__editors_47_selectEditor__}).SelectEditor;\n
var TextEditor = ($__editors_47_textEditor__ = require("editors/textEditor"), $__editors_47_textEditor__ && $__editors_47_textEditor__.__esModule && $__editors_47_textEditor__ || {default: $__editors_47_textEditor__}).TextEditor;\n
var AutocompleteRenderer = ($__renderers_47_autocompleteRenderer__ = require("renderers/autocompleteRenderer"), $__renderers_47_autocompleteRenderer__ && $__renderers_47_autocompleteRenderer__.__esModule && $__renderers_47_autocompleteRenderer__ || {default: $__renderers_47_autocompleteRenderer__}).AutocompleteRenderer;\n
var CheckboxRenderer = ($__renderers_47_checkboxRenderer__ = require("renderers/checkboxRenderer"), $__renderers_47_checkboxRenderer__ && $__renderers_47_checkboxRenderer__.__esModule && $__renderers_47_checkboxRenderer__ || {default: $__renderers_47_checkboxRenderer__}).CheckboxRenderer;\n
var HtmlRenderer = ($__renderers_47_htmlRenderer__ = require("renderers/htmlRenderer"), $__renderers_47_htmlRenderer__ && $__renderers_47_htmlRenderer__.__esModule && $__renderers_47_htmlRenderer__ || {default: $__renderers_47_htmlRenderer__}).HtmlRenderer;\n
var NumericRenderer = ($__renderers_47_numericRenderer__ = require("renderers/numericRenderer"), $__renderers_47_numericRenderer__ && $__renderers_47_numericRenderer__.__esModule && $__renderers_47_numericRenderer__ || {default: $__renderers_47_numericRenderer__}).NumericRenderer;\n
var PasswordRenderer = ($__renderers_47_passwordRenderer__ = require("renderers/passwordRenderer"), $__renderers_47_passwordRenderer__ && $__renderers_47_passwordRenderer__.__esModule && $__renderers_47_passwordRenderer__ || {default: $__renderers_47_passwordRenderer__}).PasswordRenderer;\n
var TextRenderer = ($__renderers_47_textRenderer__ = require("renderers/textRenderer"), $__renderers_47_textRenderer__ && $__renderers_47_textRenderer__.__esModule && $__renderers_47_textRenderer__ || {default: $__renderers_47_textRenderer__}).TextRenderer;\n
var AutocompleteValidator = ($__validators_47_autocompleteValidator__ = require("validators/autocompleteValidator"), $__validators_47_autocompleteValidator__ && $__validators_47_autocompleteValidator__.__esModule && $__validators_47_autocompleteValidator__ || {default: $__validators_47_autocompleteValidator__}).AutocompleteValidator;\n
var DateValidator = ($__validators_47_dateValidator__ = require("validators/dateValidator"), $__validators_47_dateValidator__ && $__validators_47_dateValidator__.__esModule && $__validators_47_dateValidator__ || {default: $__validators_47_dateValidator__}).DateValidator;\n
var NumericValidator = ($__validators_47_numericValidator__ = require("validators/numericValidator"), $__validators_47_numericValidator__ && $__validators_47_numericValidator__.__esModule && $__validators_47_numericValidator__ || {default: $__validators_47_numericValidator__}).NumericValidator;\n
Handsontable.mobileBrowser = isMobileBrowser();\n
Handsontable.AutocompleteCell = {\n
  editor: getEditorConstructor(\'autocomplete\'),\n
  renderer: getRenderer(\'autocomplete\'),\n
  validator: Handsontable.AutocompleteValidator\n
};\n
Handsontable.CheckboxCell = {\n
  editor: getEditorConstructor(\'checkbox\'),\n
  renderer: getRenderer(\'checkbox\')\n
};\n
Handsontable.TextCell = {\n
  editor: Handsontable.mobileBrowser ? getEditorConstructor(\'mobile\') : getEditorConstructor(\'text\'),\n
  renderer: getRenderer(\'text\')\n
};\n
Handsontable.NumericCell = {\n
  editor: getEditorConstructor(\'numeric\'),\n
  renderer: getRenderer(\'numeric\'),\n
  validator: Handsontable.NumericValidator,\n
  dataType: \'number\'\n
};\n
Handsontable.DateCell = {\n
  editor: getEditorConstructor(\'date\'),\n
  validator: Handsontable.DateValidator,\n
  renderer: getRenderer(\'autocomplete\')\n
};\n
Handsontable.HandsontableCell = {\n
  editor: getEditorConstructor(\'handsontable\'),\n
  renderer: getRenderer(\'autocomplete\')\n
};\n
Handsontable.PasswordCell = {\n
  editor: getEditorConstructor(\'password\'),\n
  renderer: getRenderer(\'password\'),\n
  copyable: false\n
};\n
Handsontable.DropdownCell = {\n
  editor: getEditorConstructor(\'dropdown\'),\n
  renderer: getRenderer(\'autocomplete\'),\n
  validator: Handsontable.AutocompleteValidator\n
};\n
Handsontable.cellTypes = {\n
  text: Handsontable.TextCell,\n
  date: Handsontable.DateCell,\n
  numeric: Handsontable.NumericCell,\n
  checkbox: Handsontable.CheckboxCell,\n
  autocomplete: Handsontable.AutocompleteCell,\n
  handsontable: Handsontable.HandsontableCell,\n
  password: Handsontable.PasswordCell,\n
  dropdown: Handsontable.DropdownCell\n
};\n
Handsontable.cellLookup = {validator: {\n
    numeric: Handsontable.NumericValidator,\n
    autocomplete: Handsontable.AutocompleteValidator\n
  }};\n
\n
//# \n
},{"editors":28,"editors/autocompleteEditor":30,"editors/checkboxEditor":31,"editors/dateEditor":32,"editors/dropdownEditor":33,"editors/handsontableEditor":34,"editors/mobileTextEditor":35,"editors/numericEditor":36,"editors/passwordEditor":37,"editors/selectEditor":38,"editors/textEditor":39,"helpers/browser":42,"renderers":87,"renderers/autocompleteRenderer":89,"renderers/checkboxRenderer":90,"renderers/htmlRenderer":91,"renderers/numericRenderer":92,"renderers/passwordRenderer":93,"renderers/textRenderer":94,"validators/autocompleteValidator":99,"validators/dateValidator":100,"validators/numericValidator":101}],25:[function(require,module,exports){\n
"use strict";\n
var $__numeral__,\n
    $__helpers_47_dom_47_element__,\n
    $__helpers_47_setting__,\n
    $__dataMap__,\n
    $__editorManager__,\n
    $__eventManager__,\n
    $__helpers_47_object__,\n
    $__plugins__,\n
    $__renderers__,\n
    $__helpers_47_string__,\n
    $__tableView__,\n
    $__helpers_47_data__,\n
    $__3rdparty_47_walkontable_47_src_47_cell_47_coords__,\n
    $__3rdparty_47_walkontable_47_src_47_cell_47_range__,\n
    $__3rdparty_47_walkontable_47_src_47_selection__,\n
    $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__;\n
var numeral = ($__numeral__ = require("numeral"), $__numeral__ && $__numeral__.__esModule && $__numeral__ || {default: $__numeral__}).default;\n
var $__1 = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__}),\n
    addClass = $__1.addClass,\n
    empty = $__1.empty,\n
    isChildOfWebComponentTable = $__1.isChildOfWebComponentTable,\n
    removeClass = $__1.removeClass;\n
var columnFactory = ($__helpers_47_setting__ = require("helpers/setting"), $__helpers_47_setting__ && $__helpers_47_setting__.__esModule && $__helpers_47_setting__ || {default: $__helpers_47_setting__}).columnFactory;\n
var DataMap = ($__dataMap__ = require("dataMap"), $__dataMap__ && $__dataMap__.__esModule && $__dataMap__ || {default: $__dataMap__}).DataMap;\n
var EditorManager = ($__editorManager__ = require("editorManager"), $__editorManager__ && $__editorManager__.__esModule && $__editorManager__ || {default: $__editorManager__}).EditorManager;\n
var eventManagerObject = ($__eventManager__ = require("eventManager"), $__eventManager__ && $__eventManager__.__esModule && $__eventManager__ || {default: $__eventManager__}).eventManager;\n
var $__6 = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}),\n
    extend = $__6.extend,\n
    duckSchema = $__6.duckSchema,\n
    isObjectEquals = $__6.isObjectEquals,\n
    deepClone = $__6.deepClone;\n
var getPlugin = ($__plugins__ = require("plugins"), $__plugins__ && $__plugins__.__esModule && $__plugins__ || {default: $__plugins__}).getPlugin;\n
var getRenderer = ($__renderers__ = require("renderers"), $__renderers__ && $__renderers__.__esModule && $__renderers__ || {default: $__renderers__}).getRenderer;\n
var randomString = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).randomString;\n
var TableView = ($__tableView__ = require("tableView"), $__tableView__ && $__tableView__.__esModule && $__tableView__ || {default: $__tableView__}).TableView;\n
var $__11 = ($__helpers_47_data__ = require("helpers/data"), $__helpers_47_data__ && $__helpers_47_data__.__esModule && $__helpers_47_data__ || {default: $__helpers_47_data__}),\n
    translateRowsToColumns = $__11.translateRowsToColumns,\n
    cellMethodLookupFactory = $__11.cellMethodLookupFactory,\n
    spreadsheetColumnLabel = $__11.spreadsheetColumnLabel;\n
var WalkontableCellCoords = ($__3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableCellRange = ($__3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $__3rdparty_47_walkontable_47_src_47_cell_47_range__ && $__3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;\n
var WalkontableSelection = ($__3rdparty_47_walkontable_47_src_47_selection__ = require("3rdparty/walkontable/src/selection"), $__3rdparty_47_walkontable_47_src_47_selection__ && $__3rdparty_47_walkontable_47_src_47_selection__.__esModule && $__3rdparty_47_walkontable_47_src_47_selection__ || {default: $__3rdparty_47_walkontable_47_src_47_selection__}).WalkontableSelection;\n
var WalkontableViewportColumnsCalculator = ($__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ = require("3rdparty/walkontable/src/calculator/viewportColumns"), $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ && $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__.__esModule && $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ || {default: $__3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__}).WalkontableViewportColumnsCalculator;\n
Handsontable.activeGuid = null;\n
Handsontable.Core = function Core(rootElement, userSettings) {\n
  var priv,\n
      datamap,\n
      grid,\n
      selection,\n
      editorManager,\n
      instance = this,\n
      GridSettings = function() {},\n
      eventManager = eventManagerObject(instance);\n
  extend(GridSettings.prototype, DefaultSettings.prototype);\n
  extend(GridSettings.prototype, userSettings);\n
  extend(GridSettings.prototype, expandType(userSettings));\n
  this.rootElement = rootElement;\n
  this.isHotTableEnv = isChildOfWebComponentTable(this.rootElement);\n
  Handsontable.eventManager.isHotTableEnv = this.isHotTableEnv;\n
  this.container = document.createElement(\'DIV\');\n
  this.renderCall = false;\n
  rootElement.insertBefore(this.container, rootElement.firstChild);\n
  this.guid = \'ht_\' + randomString();\n
  if (!this.rootElement.id || this.rootElement.id.substring(0, 3) === "ht_") {\n
    this.rootElement.id = this.guid;\n
  }\n
  priv = {\n
    cellSettings: [],\n
    columnSettings: [],\n
    columnsSettingConflicts: [\'data\', \'width\'],\n
    settings: new GridSettings(),\n
    selRange: null,\n
    isPopulated: null,\n
    scrollable: null,\n
    firstRun: true\n
  };\n
  grid = {\n
    alter: function(action, index, amount, source, keepEmptyRows) {\n
      var delta;\n
      amount = amount || 1;\n
      switch (action) {\n
        case "insert_row":\n
          if (instance.getSettings().maxRows === instance.countRows()) {\n
            return;\n
          }\n
          delta = datamap.createRow(index, amount);\n
          if (delta) {\n
            if (selection.isSelected() && priv.selRange.from.row >= index) {\n
              priv.selRange.from.row = priv.selRange.from.row + delta;\n
              selection.transformEnd(delta, 0);\n
            } else {\n
              selection.refreshBorders();\n
            }\n
          }\n
          break;\n
        case "insert_col":\n
          delta = datamap.createCol(index, amount);\n
          if (delta) {\n
            if (Array.isArray(instance.getSettings().colHeaders)) {\n
              var spliceArray = [index, 0];\n
              spliceArray.length += delta;\n
              Array.prototype.splice.apply(instance.getSettings().colHeaders, spliceArray);\n
            }\n
            if (selection.isSelected() && priv.selRange.from.col >= index) {\n
              priv.selRange.from.col = priv.selRange.from.col + delta;\n
              selection.transformEnd(0, delta);\n
            } else {\n
              selection.refreshBorders();\n
            }\n
          }\n
          break;\n
        case "remove_row":\n
          index = instance.runHooks(\'modifyCol\', index);\n
          datamap.removeRow(index, amount);\n
          priv.cellSettings.splice(index, amount);\n
          var fixedRowsTop = instance.getSettings().fixedRowsTop;\n
          if (fixedRowsTop >= index + 1) {\n
            instance.getSettings().fixedRowsTop -= Math.min(amount, fixedRowsTop - index);\n
          }\n
          grid.adjustRowsAndCols();\n
          selection.refreshBorders();\n
          break;\n
        case "remove_col":\n
          datamap.removeCol(index, amount);\n
          for (var row = 0,\n
              len = datamap.getAll().length; row < len; row++) {\n
            if (row in priv.cellSettings) {\n
              priv.cellSettings[row].splice(index, amount);\n
            }\n
          }\n
          var fixedColumnsLeft = instance.getSettings().fixedColumnsLeft;\n
          if (fixedColumnsLeft >= index + 1) {\n
            instance.getSettings().fixedColumnsLeft -= Math.min(amount, fixedColumnsLeft - index);\n
          }\n
          if (Array.isArray(instance.getSettings().colHeaders)) {\n
            if (typeof index == \'undefined\') {\n
              index = -1;\n
            }\n
            instance.getSettings().colHeaders.splice(index, amount);\n
          }\n
          grid.adjustRowsAndCols();\n
          selection.refreshBorders();\n
          break;\n
        default:\n
          throw new Error(\'There is no such action "\' + action + \'"\');\n
          break;\n
      }\n
      if (!keepEmptyRows) {\n
        grid.adjustRowsAndCols();\n
      }\n
    },\n
    adjustRowsAndCols: function() {\n
      if (priv.settings.minRows) {\n
        var rows = instance.countRows();\n
        if (rows < priv.settings.minRows) {\n
          for (var r = 0,\n
              minRows = priv.settings.minRows; r < minRows - rows; r++) {\n
            datamap.createRow(instance.countRows(), 1, true);\n
          }\n
        }\n
      }\n
      if (priv.settings.minSpareRows) {\n
        var emptyRows = instance.countEmptyRows(true);\n
        if (emptyRows < priv.settings.minSpareRows) {\n
          for (; emptyRows < priv.settings.minSpareRows && instance.countRows() < priv.settings.maxRows; emptyRows++) {\n
            datamap.createRow(instance.countRows(), 1, true);\n
          }\n
        }\n
      }\n
      {\n
        var emptyCols;\n
        if (priv.settings.minCols || priv.settings.minSpareCols) {\n
          emptyCols = instance.countEmptyCols(true);\n
        }\n
        if (priv.settings.minCols && !priv.settings.columns && instance.countCols() < priv.settings.minCols) {\n
          for (; instance.countCols() < priv.settings.minCols; emptyCols++) {\n
            datamap.createCol(instance.countCols(), 1, true);\n
          }\n
        }\n
        if (priv.settings.minSpareCols && !priv.settings.columns && instance.dataType === \'array\' && emptyCols < priv.settings.minSpareCols) {\n
          for (; emptyCols < priv.settings.minSpareCols && instance.countCols() < priv.settings.maxCols; emptyCols++) {\n
            datamap.createCol(instance.countCols(), 1, true);\n
          }\n
        }\n
      }\n
      var rowCount = instance.countRows();\n
      var colCount = instance.countCols();\n
      if (rowCount === 0 || colCount === 0) {\n
        selection.deselect();\n
      }\n
      if (selection.isSelected()) {\n
        var selectionChanged = false;\n
        var fromRow = priv.selRange.from.row;\n
        var fromCol = priv.selRange.from.col;\n
        var toRow = priv.selRange.to.row;\n
        var toCol = priv.selRange.to.col;\n
        if (fromRow > rowCount - 1) {\n
          fromRow = rowCount - 1;\n
          selectionChanged = true;\n
          if (toRow > fromRow) {\n
            toRow = fromRow;\n
          }\n
        } else if (toRow > rowCount - 1) {\n
          toRow = rowCount - 1;\n
          selectionChanged = true;\n
          if (fromRow > toRow) {\n
            fromRow = toRow;\n
          }\n
        }\n
        if (fromCol > colCount - 1) {\n
          fromCol = colCount - 1;\n
          selectionChanged = true;\n
          if (toCol > fromCol) {\n
            toCol = fromCol;\n
          }\n
        } else if (toCol > colCount - 1) {\n
          toCol = colCount - 1;\n
          selectionChanged = true;\n
          if (fromCol > toCol) {\n
            fromCol = toCol;\n
          }\n
        }\n
        if (selectionChanged) {\n
          instance.selectCell(fromRow, fromCol, toRow, toCol);\n
        }\n
      }\n
      if (instance.view) {\n
        instance.view.wt.wtOverlays.adjustElementsSize();\n
      }\n
    },\n
    populateFromArray: function(start, input, end, source, method, direction, deltas) {\n
      var r,\n
          rlen,\n
          c,\n
          clen,\n
          setData = [],\n
          current = {};\n
      rlen = input.length;\n
      if (rlen === 0) {\n
        return false;\n
      }\n
      var repeatCol,\n
          repeatRow,\n
          cmax,\n
          rmax;\n
      switch (method) {\n
        case \'shift_down\':\n
          repeatCol = end ? end.col - start.col + 1 : 0;\n
          repeatRow = end ? end.row - start.row + 1 : 0;\n
          input = translateRowsToColumns(input);\n
          for (c = 0, clen = input.length, cmax = Math.max(clen, repeatCol); c < cmax; c++) {\n
            if (c < clen) {\n
              for (r = 0, rlen = input[c].length; r < repeatRow - rlen; r++) {\n
                input[c].push(input[c][r % rlen]);\n
              }\n
              input[c].unshift(start.col + c, start.row, 0);\n
              instance.spliceCol.apply(instance, input[c]);\n
            } else {\n
              input[c % clen][0] = start.col + c;\n
              instance.spliceCol.apply(instance, input[c % clen]);\n
            }\n
          }\n
          break;\n
        case \'shift_right\':\n
          repeatCol = end ? end.col - start.col + 1 : 0;\n
          repeatRow = end ? end.row - start.row + 1 : 0;\n
          for (r = 0, rlen = input.length, rmax = Math.max(rlen, repeatRow); r < rmax; r++) {\n
            if (r < rlen) {\n
              for (c = 0, clen = input[r].length; c < repeatCol - clen; c++) {\n
                input[r].push(input[r][c % clen]);\n
              }\n
              input[r].unshift(start.row + r, start.col, 0);\n
              instance.spliceRow.apply(instance, input[r]);\n
            } else {\n
              input[r % rlen][0] = start.row + r;\n
              instance.spliceRow.apply(instance, input[r % rlen]);\n
            }\n
          }\n
          break;\n
        case \'overwrite\':\n
        default:\n
          current.row = start.row;\n
          current.col = start.col;\n
          var iterators = {\n
            row: 0,\n
            col: 0\n
          },\n
              selected = {\n
                row: (end && start) ? (end.row - start.row + 1) : 1,\n
                col: (end && start) ? (end.col - start.col + 1) : 1\n
              },\n
              pushData = true;\n
          if ([\'up\', \'left\'].indexOf(direction) !== -1) {\n
            iterators = {\n
              row: Math.ceil(selected.row / rlen) || 1,\n
              col: Math.ceil(selected.col / input[0].length) || 1\n
            };\n
          } else if ([\'down\', \'right\'].indexOf(direction) !== -1) {\n
            iterators = {\n
              row: 1,\n
              col: 1\n
            };\n
          }\n
          for (r = 0; r < rlen; r++) {\n
            if ((end && current.row > end.row) || (!priv.settings.allowInsertRow && current.row > instance.countRows() - 1) || (current.row >= priv.settings.maxRows)) {\n
              break;\n
            }\n
            current.col = start.col;\n
            clen = input[r] ? input[r].length : 0;\n
            for (c = 0; c < clen; c++) {\n
              if ((end && current.col > end.col) || (!priv.settings.allowInsertColumn && current.col > instance.countCols() - 1) || (current.col >= priv.settings.maxCols)) {\n
                break;\n
              }\n
              if (!instance.getCellMeta(current.row, current.col).readOnly) {\n
                var result,\n
                    value = input[r][c],\n
                    orgValue = instance.getDataAtCell(current.row, current.col),\n
                    index = {\n
                      row: r,\n
                      col: c\n
                    },\n
                    valueSchema,\n
                    orgValueSchema;\n
                if (source === \'autofill\') {\n
                  result = instance.runHooks(\'beforeAutofillInsidePopulate\', index, direction, input, deltas, iterators, selected);\n
                  if (result) {\n
                    iterators = typeof(result.iterators) !== \'undefined\' ? result.iterators : iterators;\n
                    value = typeof(result.value) !== \'undefined\' ? result.value : value;\n
                  }\n
                }\n
                if (value !== null && typeof value === \'object\') {\n
                  if (orgValue === null || typeof orgValue !== \'object\') {\n
                    pushData = false;\n
                  } else {\n
                    orgValueSchema = duckSchema(orgValue[0] || orgValue);\n
                    valueSchema = duckSchema(value[0] || value);\n
                    if (isObjectEquals(orgValueSchema, valueSchema)) {\n
                      value = deepClone(value);\n
                    } else {\n
                      pushData = false;\n
                    }\n
                  }\n
                } else if (orgValue !== null && typeof orgValue === \'object\') {\n
                  pushData = false;\n
                }\n
                if (pushData) {\n
                  setData.push([current.row, current.col, value]);\n
                }\n
                pushData = true;\n
              }\n
              current.col++;\n
              if (end && c === clen - 1) {\n
                c = -1;\n
                if ([\'down\', \'right\'].indexOf(direction) !== -1) {\n
                  iterators.col++;\n
                } else if ([\'up\', \'left\'].indexOf(direction) !== -1) {\n
                  if (iterators.col > 1) {\n
                    iterators.col--;\n
                  }\n
                }\n
              }\n
            }\n
            current.row++;\n
            iterators.col = 1;\n
            if (end && r === rlen - 1) {\n
              r = -1;\n
              if ([\'down\', \'right\'].indexOf(direction) !== -1) {\n
                iterators.row++;\n
              } else if ([\'up\', \'left\'].indexOf(direction) !== -1) {\n
                if (iterators.row > 1) {\n
                  iterators.row--;\n
                }\n
              }\n
            }\n
          }\n
          instance.setDataAtCell(setData, null, null, source || \'populateFromArray\');\n
          break;\n
      }\n
    }\n
  };\n
  this.selection = selection = {\n
    inProgress: false,\n
    selectedHeader: {\n
      cols: false,\n
      rows: false\n
    },\n
    setSelectedHeaders: function(rows, cols) {\n
      instance.selection.selectedHeader.rows = rows;\n
      instance.selection.selectedHeader.cols = cols;\n
    },\n
    begin: function() {\n
      instance.selection.inProgress = true;\n
    },\n
    finish: function() {\n
      var sel = instance.getSelected();\n
      Handsontable.hooks.run(instance, "afterSelectionEnd", sel[0], sel[1], sel[2], sel[3]);\n
      Handsontable.hooks.run(instance, "afterSelectionEndByProp", sel[0], instance.colToProp(sel[1]), sel[2], instance.colToProp(sel[3]));\n
      instance.selection.inProgress = false;\n
    },\n
    isInProgress: function() {\n
      return instance.selection.inProgress;\n
    },\n
    setRangeStart: function(coords, keepEditorOpened) {\n
      Handsontable.hooks.run(instance, "beforeSetRangeStart", coords);\n
      priv.selRange = new WalkontableCellRange(coords, coords, coords);\n
      selection.setRangeEnd(coords, null, keepEditorOpened);\n
    },\n
    setRangeEnd: function(coords, scrollToCell, keepEditorOpened) {\n
      if (priv.selRange === null) {\n
        return;\n
      }\n
      var disableVisualSelection;\n
      Handsontable.hooks.run(instance, "beforeSetRangeEnd", coords);\n
      instance.selection.begin();\n
      priv.selRange.to = new WalkontableCellCoords(coords.row, coords.col);\n
      if (!priv.settings.multiSelect) {\n
        priv.selRange.from = coords;\n
      }\n
      instance.view.wt.selections.current.clear();\n
      disableVisualSelection = instance.getCellMeta(priv.selRange.highlight.row, priv.selRange.highlight.col).disableVisualSelection;\n
      if (typeof disableVisualSelection === \'string\') {\n
        disableVisualSelection = [disableVisualSelection];\n
      }\n
      if (disableVisualSelection === false || Array.isArray(disableVisualSelection) && disableVisualSelection.indexOf(\'current\') === -1) {\n
        instance.view.wt.selections.current.add(priv.selRange.highlight);\n
      }\n
      instance.view.wt.selections.area.clear();\n
      if ((disableVisualSelection === false || Array.isArray(disableVisualSelection) && disableVisualSelection.indexOf(\'area\') === -1) && selection.isMultiple()) {\n
        instance.view.wt.selections.area.add(priv.selRange.from);\n
        instance.view.wt.selections.area.add(priv.selRange.to);\n
      }\n
      if (priv.settings.currentRowClassName || priv.settings.currentColClassName) {\n
        instance.view.wt.selections.highlight.clear();\n
        instance.view.wt.selections.highlight.add(priv.selRange.from);\n
        instance.view.wt.selections.highlight.add(priv.selRange.to);\n
      }\n
      Handsontable.hooks.run(instance, "afterSelection", priv.selRange.from.row, priv.selRange.from.col, priv.selRange.to.row, priv.selRange.to.col);\n
      Handsontable.hooks.run(instance, "afterSelectionByProp", priv.selRange.from.row, datamap.colToProp(priv.selRange.from.col), priv.selRange.to.row, datamap.colToProp(priv.selRange.to.col));\n
      if (scrollToCell !== false && instance.view.mainViewIsActive()) {\n
        if (priv.selRange.from && !selection.isMultiple()) {\n
          instance.view.scrollViewport(priv.selRange.from);\n
        } else {\n
          instance.view.scrollViewport(coords);\n
        }\n
      }\n
      selection.refreshBorders(null, keepEditorOpened);\n
    },\n
    refreshBorders: function(revertOriginal, keepEditor) {\n
      if (!keepEditor) {\n
        editorManager.destroyEditor(revertOriginal);\n
      }\n
      instance.view.render();\n
      if (selection.isSelected() && !keepEditor) {\n
        editorManager.prepareEditor();\n
      }\n
    },\n
    isMultiple: function() {\n
      var isMultiple = !(priv.selRange.to.col === priv.selRange.from.col && priv.selRange.to.row === priv.selRange.from.row),\n
          modifier = Handsontable.hooks.run(instance, \'afterIsMultipleSelection\', isMultiple);\n
      if (isMultiple) {\n
        return modifier;\n
      }\n
    },\n
    transformStart: function(rowDelta, colDelta, force, keepEditorOpened) {\n
      var delta = new WalkontableCellCoords(rowDelta, colDelta),\n
          rowTransformDir = 0,\n
          colTransformDir = 0,\n
          totalRows,\n
          totalCols,\n
          coords;\n
      instance.runHooks(\'modifyTransformStart\', delta);\n
      totalRows = instance.countRows();\n
      totalCols = instance.countCols();\n
      if (priv.selRange.highlight.row + rowDelta > totalRows - 1) {\n
        if (force && priv.settings.minSpareRows > 0) {\n
          instance.alter("insert_row", totalRows);\n
          totalRows = instance.countRows();\n
        } else if (priv.settings.autoWrapCol) {\n
          delta.row = 1 - totalRows;\n
          delta.col = priv.selRange.highlight.col + delta.col == totalCols - 1 ? 1 - totalCols : 1;\n
        }\n
      } else if (priv.settings.autoWrapCol && priv.selRange.highlight.row + delta.row < 0 && priv.selRange.highlight.col + delta.col >= 0) {\n
        delta.row = totalRows - 1;\n
        delta.col = priv.selRange.highlight.col + delta.col == 0 ? totalCols - 1 : -1;\n
      }\n
      if (priv.selRange.highlight.col + delta.col > totalCols - 1) {\n
        if (force && priv.settings.minSpareCols > 0) {\n
          instance.alter("insert_col", totalCols);\n
          totalCols = instance.countCols();\n
        } else if (priv.settings.autoWrapRow) {\n
          delta.row = priv.selRange.highlight.row + delta.row == totalRows - 1 ? 1 - totalRows : 1;\n
          delta.col = 1 - totalCols;\n
        }\n
      } else if (priv.settings.autoWrapRow && priv.selRange.highlight.col + delta.col < 0 && priv.selRange.highlight.row + delta.row >= 0) {\n
        delta.row = priv.selRange.highlight.row + delta.row == 0 ? totalRows - 1 : -1;\n
        delta.col = totalCols - 1;\n
      }\n
      coords = new WalkontableCellCoords(priv.selRange.highlight.row + delta.row, priv.selRange.highlight.col + delta.col);\n
      if (coords.row < 0) {\n
        rowTransformDir = -1;\n
        coords.row = 0;\n
      } else if (coords.row > 0 && coords.row >= totalRows) {\n
        rowTransformDir = 1;\n
        coords.row = totalRows - 1;\n
      }\n
      if (coords.col < 0) {\n
        colTransformDir = -1;\n
        coords.col = 0;\n
      } else if (coords.col > 0 && coords.col >= totalCols) {\n
        colTransformDir = 1;\n
        coords.col = totalCols - 1;\n
      }\n
      instance.runHooks(\'afterModifyTransformStart\', coords, rowTransformDir, colTransformDir);\n
      selection.setRangeStart(coords, keepEditorOpened);\n
    },\n
    transformEnd: function(rowDelta, colDelta) {\n
      var delta = new WalkontableCellCoords(rowDelta, colDelta),\n
          rowTransformDir = 0,\n
          colTransformDir = 0,\n
          totalRows,\n
          totalCols,\n
          coords;\n
      instance.runHooks(\'modifyTransformEnd\', delta);\n
      totalRows = instance.countRows();\n
      totalCols = instance.countCols();\n
      coords = new WalkontableCellCoords(priv.selRange.to.row + delta.row, priv.selRange.to.col + delta.col);\n
      if (coords.row < 0) {\n
        rowTransformDir = -1;\n
        coords.row = 0;\n
      } else if (coords.row > 0 && coords.row >= totalRows) {\n
        rowTransformDir = 1;\n
        coords.row = totalRows - 1;\n
      }\n
      if (coords.col < 0) {\n
        colTransformDir = -1;\n
        coords.col = 0;\n
      } else if (coords.col > 0 && coords.col >= totalCols) {\n
        colTransformDir = 1;\n
        coords.col = totalCols - 1;\n
      }\n
      instance.runHooks(\'afterModifyTransformEnd\', coords, rowTransformDir, colTransformDir);\n
      selection.setRangeEnd(coords, true);\n
    },\n
    isSelected: function() {\n
      return (priv.selRange !== null);\n
    },\n
    inInSelection: function(coords) {\n
      if (!selection.isSelected()) {\n
        return false;\n
      }\n
      return priv.selRange.includes(coords);\n
    },\n
    deselect: function() {\n
      if (!selection.isSelected()) {\n
        return;\n
      }\n
      instance.selection.inProgress = false;\n
      priv.selRange = null;\n
      instance.view.wt.selections.current.clear();\n
      instance.view.wt.selections.area.clear();\n
      if (priv.settings.currentRowClassName || priv.settings.currentColClassName) {\n
        instance.view.wt.selections.highlight.clear();\n
      }\n
      editorManager.destroyEditor();\n
      selection.refreshBorders();\n
      Handsontable.hooks.run(instance, \'afterDeselect\');\n
    },\n
    selectAll: function() {\n
      if (!priv.settings.multiSelect) {\n
        return;\n
      }\n
      selection.setRangeStart(new WalkontableCellCoords(0, 0));\n
      selection.setRangeEnd(new WalkontableCellCoords(instance.countRows() - 1, instance.countCols() - 1), false);\n
    },\n
    empty: function() {\n
      if (!selection.isSelected()) {\n
        return;\n
      }\n
      var topLeft = priv.selRange.getTopLeftCorner();\n
      var bottomRight = priv.selRange.getBottomRightCorner();\n
      var r,\n
          c,\n
          changes = [];\n
      for (r = topLeft.row; r <= bottomRight.row; r++) {\n
        for (c = topLeft.col; c <= bottomRight.col; c++) {\n
          if (!instance.getCellMeta(r, c).readOnly) {\n
            changes.push([r, c, \'\']);\n
          }\n
        }\n
      }\n
      instance.setDataAtCell(changes);\n
    }\n
  };\n
  this.init = function() {\n
    Handsontable.hooks.run(instance, \'beforeInit\');\n
    if (Handsontable.mobileBrowser) {\n
      addClass(instance.rootElement, \'mobile\');\n
    }\n
    this.updateSettings(priv.settings, true);\n
    this.view = new TableView(this);\n
    editorManager = new EditorManager(instance, priv, selection, datamap);\n
    this.forceFullRender = true;\n
    Handsontable.hooks.run(instance, \'init\');\n
    this.view.render();\n
    if (typeof priv.firstRun === \'object\') {\n
      Handsontable.hooks.run(instance, \'afterChange\', priv.firstRun[0], priv.firstRun[1]);\n
      priv.firstRun = false;\n
    }\n
    Handsontable.hooks.run(instance, \'afterInit\');\n
  };\n
  function ValidatorsQueue() {\n
    var resolved = false;\n
    return {\n
      validatorsInQueue: 0,\n
      addValidatorToQueue: function() {\n
        this.validatorsInQueue++;\n
        resolved = false;\n
      },\n
      removeValidatorFormQueue: function() {\n
        this.validatorsInQueue = this.validatorsInQueue - 1 < 0 ? 0 : this.validatorsInQueue - 1;\n
        this.checkIfQueueIsEmpty();\n
      },\n
      onQueueEmpty: function() {},\n
      checkIfQueueIsEmpty: function() {\n
        if (this.validatorsInQueue == 0 && resolved == false) {\n
          resolved = true;\n
          this.onQueueEmpty();\n
        }\n
      }\n
    };\n
  }\n
  function validateChanges(changes, source, callback) {\n
    var waitingForValidator = new ValidatorsQueue();\n
    waitingForValidator.onQueueEmpty = resolve;\n
    for (var i = changes.length - 1; i >= 0; i--) {\n
      if (changes[i] === null) {\n
        changes.splice(i, 1);\n
      } else {\n
        var row = changes[i][0];\n
        var col = datamap.propToCol(changes[i][1]);\n
        var logicalCol = instance.runHooks(\'modifyCol\', col);\n
        var cellProperties = instance.getCellMeta(row, logicalCol);\n
        if (cellProperties.type === \'numeric\' && typeof changes[i][3] === \'string\') {\n
          if (changes[i][3].length > 0 && (/^-?[\\d\\s]*(\\.|\\,)?\\d*$/.test(changes[i][3]) || cellProperties.format)) {\n
            var len = changes[i][3].length;\n
            if (typeof cellProperties.language == \'undefined\') {\n
              numeral.language(\'en\');\n
            } else if (changes[i][3].indexOf(".") === len - 3 && changes[i][3].indexOf(",") === -1) {\n
              numeral.language(\'en\');\n
            } else {\n
              numeral.language(cellProperties.language);\n
            }\n
            if (numeral.validate(changes[i][3])) {\n
              changes[i][3] = numeral().unformat(changes[i][3]);\n
            }\n
          }\n
        }\n
        if (instance.getCellValidator(cellProperties)) {\n
          waitingForValidator.addValidatorToQueue();\n
          instance.validateCell(changes[i][3], cellProperties, (function(i, cellProperties) {\n
            return function(result) {\n
              if (typeof result !== \'boolean\') {\n
                throw new Error("Validation error: result is not boolean");\n
              }\n
              if (result === false && cellProperties.allowInvalid === false) {\n
                changes.splice(i, 1);\n
                cellProperties.valid = true;\n
                --i;\n
              }\n
              waitingForValidator.removeValidatorFormQueue();\n
            };\n
          })(i, cellProperties), source);\n
        }\n
      }\n
    }\n
    waitingForValidator.checkIfQueueIsEmpty();\n
    function resolve() {\n
      var beforeChangeResult;\n
      if (changes.length) {\n
        beforeChangeResult = Handsontable.hooks.run(instance, "beforeChange", changes, source);\n
        if (typeof beforeChangeResult === \'function\') {\n
          console.warn("Your beforeChange callback returns a function. It\'s not supported since Handsontable 0.12.1 (and the returned function will not be executed).");\n
        } else if (beforeChangeResult === false) {\n
          changes.splice(0, changes.length);\n
        }\n
      }\n
      callback();\n
    }\n
  }\n
  function applyChanges(changes, source) {\n
    var i = changes.length - 1;\n
    if (i < 0) {\n
      return;\n
    }\n
    for (; 0 <= i; i--) {\n
      if (changes[i] === null) {\n
        changes.splice(i, 1);\n
        continue;\n
      }\n
      if (changes[i][2] == null && changes[i][3] == null) {\n
        continue;\n
      }\n
      if (priv.settings.allowInsertRow) {\n
        while (changes[i][0] > instance.countRows() - 1) {\n
          datamap.createRow();\n
        }\n
      }\n
      if (instance.dataType === \'array\' && priv.settings.allowInsertColumn) {\n
        while (datamap.propToCol(changes[i][1]) > instance.countCols() - 1) {\n
          datamap.createCol();\n
        }\n
      }\n
      datamap.set(changes[i][0], changes[i][1], changes[i][3]);\n
    }\n
    instance.forceFullRender = true;\n
    grid.adjustRowsAndCols();\n
    Handsontable.hooks.run(instance, \'beforeChangeRender\', changes, source);\n
    selection.refreshBorders(null, true);\n
    instance.view.wt.wtOverlays.adjustElementsSize();\n
    Handsontable.hooks.run(instance, \'afterChange\', changes, source || \'edit\');\n
  }\n
  this.validateCell = function(value, cellProperties, callback, source) {\n
    var validator = instance.getCellValidator(cellProperties);\n
    function done(valid) {\n
      var col = cellProperties.col,\n
          row = cellProperties.row,\n
          td = instance.getCell(row, col, true);\n
      if (td) {\n
        instance.view.wt.wtSettings.settings.cellRenderer(row, col, td);\n
      }\n
      callback(valid);\n
    }\n
    if (Object.prototype.toString.call(validator) === \'[object RegExp]\') {\n
      validator = (function(validator) {\n
        return function(value, callback) {\n
          callback(validator.test(value));\n
        };\n
      })(validator);\n
    }\n
    if (typeof validator == \'function\') {\n
      value = Handsontable.hooks.run(instance, "beforeValidate", value, cellProperties.row, cellProperties.prop, source);\n
      instance._registerTimeout(setTimeout(function() {\n
        validator.call(cellProperties, value, function(valid) {\n
          valid = Handsontable.hooks.run(instance, "afterValidate", valid, value, cellProperties.row, cellProperties.prop, source);\n
          cellProperties.valid = valid;\n
          done(valid);\n
          Handsontable.hooks.run(instance, "postAfterValidate", valid, value, cellProperties.row, cellProperties.prop, source);\n
        });\n
      }, 0));\n
    } else {\n
      cellProperties.valid = true;\n
      done(cellProperties.valid);\n
    }\n
  };\n
  function setDataInputToArray(row, propOrCol, value) {\n
    if (typeof row === "object") {\n
      return row;\n
    } else {\n
      return [[row, propOrCol, value]];\n
    }\n
  }\n
  this.setDataAtCell = function(row, col, value, source) {\n
    var input = setDataInputToArray(row, col, value),\n
        i,\n
        ilen,\n
        changes = [],\n
        prop;\n
    for (i = 0, ilen = input.length; i < ilen; i++) {\n
      if (typeof input[i] !== \'object\') {\n
        throw new Error(\'Method `setDataAtCell` accepts row number or changes array of arrays as its first parameter\');\n
      }\n
      if (typeof input[i][1] !== \'number\') {\n
        throw new Error(\'Method `setDataAtCell` accepts row and column number as its parameters. If you want to use object property name, use method `setDataAtRowProp`\');\n
      }\n
      prop = datamap.colToProp(input[i][1]);\n
      changes.push([input[i][0], prop, datamap.get(input[i][0], prop), input[i][2]]);\n
    }\n
    if (!source && typeof row === "object") {\n
      source = col;\n
    }\n
    validateChanges(changes, source, function() {\n
      applyChanges(changes, source);\n
    });\n
  };\n
  this.setDataAtRowProp = function(row, prop, value, source) {\n
    var input = setDataInputToArray(row, prop, value),\n
        i,\n


]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAU=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="5" aka="AAAAAAAAAAU=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

        ilen,\n
        changes = [];\n
    for (i = 0, ilen = input.length; i < ilen; i++) {\n
      changes.push([input[i][0], input[i][1], datamap.get(input[i][0], input[i][1]), input[i][2]]);\n
    }\n
    if (!source && typeof row === "object") {\n
      source = prop;\n
    }\n
    validateChanges(changes, source, function() {\n
      applyChanges(changes, source);\n
    });\n
  };\n
  this.listen = function() {\n
    Handsontable.activeGuid = instance.guid;\n
    if (document.activeElement && document.activeElement !== document.body) {\n
      document.activeElement.blur();\n
    } else if (!document.activeElement) {\n
      document.body.focus();\n
    }\n
  };\n
  this.unlisten = function() {\n
    Handsontable.activeGuid = null;\n
  };\n
  this.isListening = function() {\n
    return Handsontable.activeGuid === instance.guid;\n
  };\n
  this.destroyEditor = function(revertOriginal) {\n
    selection.refreshBorders(revertOriginal);\n
  };\n
  this.populateFromArray = function(row, col, input, endRow, endCol, source, method, direction, deltas) {\n
    var c;\n
    if (!(typeof input === \'object\' && typeof input[0] === \'object\')) {\n
      throw new Error("populateFromArray parameter `input` must be an array of arrays");\n
    }\n
    c = typeof endRow === \'number\' ? new WalkontableCellCoords(endRow, endCol) : null;\n
    return grid.populateFromArray(new WalkontableCellCoords(row, col), input, c, source, method, direction, deltas);\n
  };\n
  this.spliceCol = function(col, index, amount) {\n
    return datamap.spliceCol.apply(datamap, arguments);\n
  };\n
  this.spliceRow = function(row, index, amount) {\n
    return datamap.spliceRow.apply(datamap, arguments);\n
  };\n
  this.getSelected = function() {\n
    if (selection.isSelected()) {\n
      return [priv.selRange.from.row, priv.selRange.from.col, priv.selRange.to.row, priv.selRange.to.col];\n
    }\n
  };\n
  this.getSelectedRange = function() {\n
    if (selection.isSelected()) {\n
      return priv.selRange;\n
    }\n
  };\n
  this.render = function() {\n
    if (instance.view) {\n
      instance.renderCall = true;\n
      instance.forceFullRender = true;\n
      selection.refreshBorders(null, true);\n
    }\n
  };\n
  this.loadData = function(data) {\n
    if (typeof data === \'object\' && data !== null) {\n
      if (!(data.push && data.splice)) {\n
        data = [data];\n
      }\n
    } else if (data === null) {\n
      data = [];\n
      var row;\n
      for (var r = 0,\n
          rlen = priv.settings.startRows; r < rlen; r++) {\n
        row = [];\n
        for (var c = 0,\n
            clen = priv.settings.startCols; c < clen; c++) {\n
          row.push(null);\n
        }\n
        data.push(row);\n
      }\n
    } else {\n
      throw new Error("loadData only accepts array of objects or array of arrays (" + typeof data + " given)");\n
    }\n
    priv.isPopulated = false;\n
    GridSettings.prototype.data = data;\n
    if (Array.isArray(priv.settings.dataSchema) || Array.isArray(data[0])) {\n
      instance.dataType = \'array\';\n
    } else if (typeof priv.settings.dataSchema === \'function\') {\n
      instance.dataType = \'function\';\n
    } else {\n
      instance.dataType = \'object\';\n
    }\n
    datamap = new DataMap(instance, priv, GridSettings);\n
    clearCellSettingCache();\n
    grid.adjustRowsAndCols();\n
    Handsontable.hooks.run(instance, \'afterLoadData\');\n
    if (priv.firstRun) {\n
      priv.firstRun = [null, \'loadData\'];\n
    } else {\n
      Handsontable.hooks.run(instance, \'afterChange\', null, \'loadData\');\n
      instance.render();\n
    }\n
    priv.isPopulated = true;\n
    function clearCellSettingCache() {\n
      priv.cellSettings.length = 0;\n
    }\n
  };\n
  this.getData = function(r, c, r2, c2) {\n
    if (typeof r === \'undefined\') {\n
      return datamap.getAll();\n
    } else {\n
      return datamap.getRange(new WalkontableCellCoords(r, c), new WalkontableCellCoords(r2, c2), datamap.DESTINATION_RENDERER);\n
    }\n
  };\n
  this.getCopyableData = function(startRow, startCol, endRow, endCol) {\n
    return datamap.getCopyableText(new WalkontableCellCoords(startRow, startCol), new WalkontableCellCoords(endRow, endCol));\n
  };\n
  this.getSchema = function() {\n
    return datamap.getSchema();\n
  };\n
  this.updateSettings = function(settings, init) {\n
    var i,\n
        clen;\n
    if (typeof settings.rows !== "undefined") {\n
      throw new Error("\'rows\' setting is no longer supported. do you mean startRows, minRows or maxRows?");\n
    }\n
    if (typeof settings.cols !== "undefined") {\n
      throw new Error("\'cols\' setting is no longer supported. do you mean startCols, minCols or maxCols?");\n
    }\n
    for (i in settings) {\n
      if (i === \'data\') {\n
        continue;\n
      } else {\n
        if (Handsontable.hooks.getRegistered().indexOf(i) > -1) {\n
          if (typeof settings[i] === \'function\' || Array.isArray(settings[i])) {\n
            instance.addHook(i, settings[i]);\n
          }\n
        } else {\n
          if (!init && settings.hasOwnProperty(i)) {\n
            GridSettings.prototype[i] = settings[i];\n
          }\n
        }\n
      }\n
    }\n
    if (settings.data === void 0 && priv.settings.data === void 0) {\n
      instance.loadData(null);\n
    } else if (settings.data !== void 0) {\n
      instance.loadData(settings.data);\n
    } else if (settings.columns !== void 0) {\n
      datamap.createMap();\n
    }\n
    clen = instance.countCols();\n
    priv.cellSettings.length = 0;\n
    if (clen > 0) {\n
      var proto,\n
          column;\n
      for (i = 0; i < clen; i++) {\n
        priv.columnSettings[i] = columnFactory(GridSettings, priv.columnsSettingConflicts);\n
        proto = priv.columnSettings[i].prototype;\n
        if (GridSettings.prototype.columns) {\n
          column = GridSettings.prototype.columns[i];\n
          extend(proto, column);\n
          extend(proto, expandType(column));\n
        }\n
      }\n
    }\n
    if (typeof settings.cell !== \'undefined\') {\n
      for (i in settings.cell) {\n
        if (settings.cell.hasOwnProperty(i)) {\n
          var cell = settings.cell[i];\n
          instance.setCellMetaObject(cell.row, cell.col, cell);\n
        }\n
      }\n
    }\n
    Handsontable.hooks.run(instance, \'afterCellMetaReset\');\n
    if (typeof settings.className !== "undefined") {\n
      if (GridSettings.prototype.className) {\n
        removeClass(instance.rootElement, GridSettings.prototype.className);\n
      }\n
      if (settings.className) {\n
        addClass(instance.rootElement, settings.className);\n
      }\n
    }\n
    if (typeof settings.height != \'undefined\') {\n
      var height = settings.height;\n
      if (typeof height == \'function\') {\n
        height = height();\n
      }\n
      instance.rootElement.style.height = height + \'px\';\n
    }\n
    if (typeof settings.width != \'undefined\') {\n
      var width = settings.width;\n
      if (typeof width == \'function\') {\n
        width = width();\n
      }\n
      instance.rootElement.style.width = width + \'px\';\n
    }\n
    if (height) {\n
      instance.rootElement.style.overflow = \'hidden\';\n
    }\n
    if (!init) {\n
      Handsontable.hooks.run(instance, \'afterUpdateSettings\');\n
    }\n
    grid.adjustRowsAndCols();\n
    if (instance.view && !priv.firstRun) {\n
      instance.forceFullRender = true;\n
      selection.refreshBorders(null, true);\n
    }\n
  };\n
  this.getValue = function() {\n
    var sel = instance.getSelected();\n
    if (GridSettings.prototype.getValue) {\n
      if (typeof GridSettings.prototype.getValue === \'function\') {\n
        return GridSettings.prototype.getValue.call(instance);\n
      } else if (sel) {\n
        return instance.getData()[sel[0]][GridSettings.prototype.getValue];\n
      }\n
    } else if (sel) {\n
      return instance.getDataAtCell(sel[0], sel[1]);\n
    }\n
  };\n
  function expandType(obj) {\n
    if (!obj.hasOwnProperty(\'type\')) {\n
      return;\n
    }\n
    var type,\n
        expandedType = {};\n
    if (typeof obj.type === \'object\') {\n
      type = obj.type;\n
    } else if (typeof obj.type === \'string\') {\n
      type = Handsontable.cellTypes[obj.type];\n
      if (type === void 0) {\n
        throw new Error(\'You declared cell type "\' + obj.type + \'" as a string that is not mapped to a known object. Cell type must be an object or a string mapped to an object in Handsontable.cellTypes\');\n
      }\n
    }\n
    for (var i in type) {\n
      if (type.hasOwnProperty(i) && !obj.hasOwnProperty(i)) {\n
        expandedType[i] = type[i];\n
      }\n
    }\n
    return expandedType;\n
  }\n
  this.getSettings = function() {\n
    return priv.settings;\n
  };\n
  this.clear = function() {\n
    selection.selectAll();\n
    selection.empty();\n
  };\n
  this.alter = function(action, index, amount, source, keepEmptyRows) {\n
    grid.alter(action, index, amount, source, keepEmptyRows);\n
  };\n
  this.getCell = function(row, col, topmost) {\n
    return instance.view.getCellAtCoords(new WalkontableCellCoords(row, col), topmost);\n
  };\n
  this.getCoords = function(elem) {\n
    return this.view.wt.wtTable.getCoords.call(this.view.wt.wtTable, elem);\n
  };\n
  this.colToProp = function(col) {\n
    return datamap.colToProp(col);\n
  };\n
  this.propToCol = function(prop) {\n
    return datamap.propToCol(prop);\n
  };\n
  this.getDataAtCell = function(row, col) {\n
    return datamap.get(row, datamap.colToProp(col));\n
  };\n
  this.getDataAtRowProp = function(row, prop) {\n
    return datamap.get(row, prop);\n
  };\n
  this.getDataAtCol = function(col) {\n
    var out = [];\n
    return out.concat.apply(out, datamap.getRange(new WalkontableCellCoords(0, col), new WalkontableCellCoords(priv.settings.data.length - 1, col), datamap.DESTINATION_RENDERER));\n
  };\n
  this.getDataAtProp = function(prop) {\n
    var out = [],\n
        range;\n
    range = datamap.getRange(new WalkontableCellCoords(0, datamap.propToCol(prop)), new WalkontableCellCoords(priv.settings.data.length - 1, datamap.propToCol(prop)), datamap.DESTINATION_RENDERER);\n
    return out.concat.apply(out, range);\n
  };\n
  this.getSourceDataAtCol = function(col) {\n
    var out = [],\n
        data = priv.settings.data;\n
    for (var i = 0; i < data.length; i++) {\n
      out.push(data[i][col]);\n
    }\n
    return out;\n
  };\n
  this.getSourceDataAtRow = function(row) {\n
    return priv.settings.data[row];\n
  };\n
  this.getDataAtRow = function(row) {\n
    var data = datamap.getRange(new WalkontableCellCoords(row, 0), new WalkontableCellCoords(row, this.countCols() - 1), datamap.DESTINATION_RENDERER);\n
    return data[0];\n
  };\n
  this.removeCellMeta = function(row, col, key) {\n
    var cellMeta = instance.getCellMeta(row, col);\n
    if (cellMeta[key] != undefined) {\n
      delete priv.cellSettings[row][col][key];\n
    }\n
  };\n
  this.setCellMetaObject = function(row, col, prop) {\n
    if (typeof prop === \'object\') {\n
      for (var key in prop) {\n
        if (prop.hasOwnProperty(key)) {\n
          var value = prop[key];\n
          this.setCellMeta(row, col, key, value);\n
        }\n
      }\n
    }\n
  };\n
  this.setCellMeta = function(row, col, key, val) {\n
    if (!priv.cellSettings[row]) {\n
      priv.cellSettings[row] = [];\n
    }\n
    if (!priv.cellSettings[row][col]) {\n
      priv.cellSettings[row][col] = new priv.columnSettings[col]();\n
    }\n
    priv.cellSettings[row][col][key] = val;\n
    Handsontable.hooks.run(instance, \'afterSetCellMeta\', row, col, key, val);\n
  };\n
  this.getCellMeta = function(row, col) {\n
    var prop = datamap.colToProp(col),\n
        cellProperties;\n
    row = translateRowIndex(row);\n
    col = translateColIndex(col);\n
    if (!priv.columnSettings[col]) {\n
      priv.columnSettings[col] = columnFactory(GridSettings, priv.columnsSettingConflicts);\n
    }\n
    if (!priv.cellSettings[row]) {\n
      priv.cellSettings[row] = [];\n
    }\n
    if (!priv.cellSettings[row][col]) {\n
      priv.cellSettings[row][col] = new priv.columnSettings[col]();\n
    }\n
    cellProperties = priv.cellSettings[row][col];\n
    cellProperties.row = row;\n
    cellProperties.col = col;\n
    cellProperties.prop = prop;\n
    cellProperties.instance = instance;\n
    Handsontable.hooks.run(instance, \'beforeGetCellMeta\', row, col, cellProperties);\n
    extend(cellProperties, expandType(cellProperties));\n
    if (cellProperties.cells) {\n
      var settings = cellProperties.cells.call(cellProperties, row, col, prop);\n
      if (settings) {\n
        extend(cellProperties, settings);\n
        extend(cellProperties, expandType(settings));\n
      }\n
    }\n
    Handsontable.hooks.run(instance, \'afterGetCellMeta\', row, col, cellProperties);\n
    return cellProperties;\n
  };\n
  this.isColumnModificationAllowed = function() {\n
    return !(instance.dataType === \'object\' || instance.getSettings().columns);\n
  };\n
  function translateRowIndex(row) {\n
    return Handsontable.hooks.run(instance, \'modifyRow\', row);\n
  }\n
  function translateColIndex(col) {\n
    return Handsontable.hooks.run(instance, \'modifyCol\', col);\n
  }\n
  var rendererLookup = cellMethodLookupFactory(\'renderer\');\n
  this.getCellRenderer = function(row, col) {\n
    var renderer = rendererLookup.call(this, row, col);\n
    return getRenderer(renderer);\n
  };\n
  this.getCellEditor = cellMethodLookupFactory(\'editor\');\n
  this.getCellValidator = cellMethodLookupFactory(\'validator\');\n
  this.validateCells = function(callback) {\n
    var waitingForValidator = new ValidatorsQueue();\n
    waitingForValidator.onQueueEmpty = callback;\n
    var i = instance.countRows() - 1;\n
    while (i >= 0) {\n
      var j = instance.countCols() - 1;\n
      while (j >= 0) {\n
        waitingForValidator.addValidatorToQueue();\n
        instance.validateCell(instance.getDataAtCell(i, j), instance.getCellMeta(i, j), function() {\n
          waitingForValidator.removeValidatorFormQueue();\n
        }, \'validateCells\');\n
        j--;\n
      }\n
      i--;\n
    }\n
    waitingForValidator.checkIfQueueIsEmpty();\n
  };\n
  this.getRowHeader = function(row) {\n
    if (row === void 0) {\n
      var out = [];\n
      for (var i = 0,\n
          ilen = instance.countRows(); i < ilen; i++) {\n
        out.push(instance.getRowHeader(i));\n
      }\n
      return out;\n
    } else if (Array.isArray(priv.settings.rowHeaders) && priv.settings.rowHeaders[row] !== void 0) {\n
      return priv.settings.rowHeaders[row];\n
    } else if (typeof priv.settings.rowHeaders === \'function\') {\n
      return priv.settings.rowHeaders(row);\n
    } else if (priv.settings.rowHeaders && typeof priv.settings.rowHeaders !== \'string\' && typeof priv.settings.rowHeaders !== \'number\') {\n
      return row + 1;\n
    } else {\n
      return priv.settings.rowHeaders;\n
    }\n
  };\n
  this.hasRowHeaders = function() {\n
    return !!priv.settings.rowHeaders;\n
  };\n
  this.hasColHeaders = function() {\n
    if (priv.settings.colHeaders !== void 0 && priv.settings.colHeaders !== null) {\n
      return !!priv.settings.colHeaders;\n
    }\n
    for (var i = 0,\n
        ilen = instance.countCols(); i < ilen; i++) {\n
      if (instance.getColHeader(i)) {\n
        return true;\n
      }\n
    }\n
    return false;\n
  };\n
  this.getColHeader = function(col) {\n
    if (col === void 0) {\n
      var out = [];\n
      for (var i = 0,\n
          ilen = instance.countCols(); i < ilen; i++) {\n
        out.push(instance.getColHeader(i));\n
      }\n
      return out;\n
    } else {\n
      var baseCol = col;\n
      col = Handsontable.hooks.run(instance, \'modifyCol\', col);\n
      if (priv.settings.columns && priv.settings.columns[col] && priv.settings.columns[col].title) {\n
        return priv.settings.columns[col].title;\n
      } else if (Array.isArray(priv.settings.colHeaders) && priv.settings.colHeaders[col] !== void 0) {\n
        return priv.settings.colHeaders[col];\n
      } else if (typeof priv.settings.colHeaders === \'function\') {\n
        return priv.settings.colHeaders(col);\n
      } else if (priv.settings.colHeaders && typeof priv.settings.colHeaders !== \'string\' && typeof priv.settings.colHeaders !== \'number\') {\n
        return spreadsheetColumnLabel(baseCol);\n
      } else {\n
        return priv.settings.colHeaders;\n
      }\n
    }\n
  };\n
  this._getColWidthFromSettings = function(col) {\n
    var cellProperties = instance.getCellMeta(0, col);\n
    var width = cellProperties.width;\n
    if (width === void 0 || width === priv.settings.width) {\n
      width = cellProperties.colWidths;\n
    }\n
    if (width !== void 0 && width !== null) {\n
      switch (typeof width) {\n
        case \'object\':\n
          width = width[col];\n
          break;\n
        case \'function\':\n
          width = width(col);\n
          break;\n
      }\n
      if (typeof width === \'string\') {\n
        width = parseInt(width, 10);\n
      }\n
    }\n
    return width;\n
  };\n
  this.getColWidth = function(col) {\n
    var width = instance._getColWidthFromSettings(col);\n
    width = Handsontable.hooks.run(instance, \'modifyColWidth\', width, col);\n
    if (width === void 0) {\n
      width = WalkontableViewportColumnsCalculator.DEFAULT_WIDTH;\n
    }\n
    return width;\n
  };\n
  this._getRowHeightFromSettings = function(row) {\n
    var height = priv.settings.rowHeights;\n
    if (height !== void 0 && height !== null) {\n
      switch (typeof height) {\n
        case \'object\':\n
          height = height[row];\n
          break;\n
        case \'function\':\n
          height = height(row);\n
          break;\n
      }\n
      if (typeof height === \'string\') {\n
        height = parseInt(height, 10);\n
      }\n
    }\n
    return height;\n
  };\n
  this.getRowHeight = function(row) {\n
    var height = instance._getRowHeightFromSettings(row);\n
    height = Handsontable.hooks.run(instance, \'modifyRowHeight\', height, row);\n
    return height;\n
  };\n
  this.countRows = function() {\n
    return priv.settings.data.length;\n
  };\n
  this.countCols = function() {\n
    if (instance.dataType === \'object\' || instance.dataType === \'function\') {\n
      if (priv.settings.columns && priv.settings.columns.length) {\n
        return priv.settings.columns.length;\n
      } else {\n
        return datamap.colToPropCache.length;\n
      }\n
    } else if (instance.dataType === \'array\') {\n
      if (priv.settings.columns && priv.settings.columns.length) {\n
        return priv.settings.columns.length;\n
      } else if (priv.settings.data && priv.settings.data[0] && priv.settings.data[0].length) {\n
        return priv.settings.data[0].length;\n
      } else {\n
        return 0;\n
      }\n
    }\n
  };\n
  this.rowOffset = function() {\n
    return instance.view.wt.wtTable.getFirstRenderedRow();\n
  };\n
  this.colOffset = function() {\n
    return instance.view.wt.wtTable.getFirstRenderedColumn();\n
  };\n
  this.countRenderedRows = function() {\n
    return instance.view.wt.drawn ? instance.view.wt.wtTable.getRenderedRowsCount() : -1;\n
  };\n
  this.countVisibleRows = function() {\n
    return instance.view.wt.drawn ? instance.view.wt.wtTable.getVisibleRowsCount() : -1;\n
  };\n
  this.countRenderedCols = function() {\n
    return instance.view.wt.drawn ? instance.view.wt.wtTable.getRenderedColumnsCount() : -1;\n
  };\n
  this.countVisibleCols = function() {\n
    return instance.view.wt.drawn ? instance.view.wt.wtTable.getVisibleColumnsCount() : -1;\n
  };\n
  this.countEmptyRows = function(ending) {\n
    var i = instance.countRows() - 1,\n
        empty = 0,\n
        row;\n
    while (i >= 0) {\n
      row = Handsontable.hooks.run(this, \'modifyRow\', i);\n
      if (instance.isEmptyRow(row)) {\n
        empty++;\n
      } else if (ending) {\n
        break;\n
      }\n
      i--;\n
    }\n
    return empty;\n
  };\n
  this.countEmptyCols = function(ending) {\n
    if (instance.countRows() < 1) {\n
      return 0;\n
    }\n
    var i = instance.countCols() - 1,\n
        empty = 0;\n
    while (i >= 0) {\n
      if (instance.isEmptyCol(i)) {\n
        empty++;\n
      } else if (ending) {\n
        break;\n
      }\n
      i--;\n
    }\n
    return empty;\n
  };\n
  this.isEmptyRow = function(row) {\n
    return priv.settings.isEmptyRow.call(instance, row);\n
  };\n
  this.isEmptyCol = function(col) {\n
    return priv.settings.isEmptyCol.call(instance, col);\n
  };\n
  this.selectCell = function(row, col, endRow, endCol, scrollToCell, changeListener) {\n
    var coords;\n
    changeListener = typeof changeListener === \'undefined\' || changeListener === true;\n
    if (typeof row !== \'number\' || row < 0 || row >= instance.countRows()) {\n
      return false;\n
    }\n
    if (typeof col !== \'number\' || col < 0 || col >= instance.countCols()) {\n
      return false;\n
    }\n
    if (typeof endRow !== \'undefined\') {\n
      if (typeof endRow !== \'number\' || endRow < 0 || endRow >= instance.countRows()) {\n
        return false;\n
      }\n
      if (typeof endCol !== \'number\' || endCol < 0 || endCol >= instance.countCols()) {\n
        return false;\n
      }\n
    }\n
    coords = new WalkontableCellCoords(row, col);\n
    priv.selRange = new WalkontableCellRange(coords, coords, coords);\n
    if (document.activeElement && document.activeElement !== document.documentElement && document.activeElement !== document.body) {\n
      document.activeElement.blur();\n
    }\n
    if (changeListener) {\n
      instance.listen();\n
    }\n
    if (typeof endRow === \'undefined\') {\n
      selection.setRangeEnd(priv.selRange.from, scrollToCell);\n
    } else {\n
      selection.setRangeEnd(new WalkontableCellCoords(endRow, endCol), scrollToCell);\n
    }\n
    instance.selection.finish();\n
    return true;\n
  };\n
  this.selectCellByProp = function(row, prop, endRow, endProp, scrollToCell) {\n
    arguments[1] = datamap.propToCol(arguments[1]);\n
    if (typeof arguments[3] !== "undefined") {\n
      arguments[3] = datamap.propToCol(arguments[3]);\n
    }\n
    return instance.selectCell.apply(instance, arguments);\n
  };\n
  this.deselectCell = function() {\n
    selection.deselect();\n
  };\n
  this.destroy = function() {\n
    instance._clearTimeouts();\n
    if (instance.view) {\n
      instance.view.destroy();\n
    }\n
    empty(instance.rootElement);\n
    eventManager.destroy();\n
    Handsontable.hooks.run(instance, \'afterDestroy\');\n
    Handsontable.hooks.destroy(instance);\n
    for (var i in instance) {\n
      if (instance.hasOwnProperty(i)) {\n
        if (typeof instance[i] === "function") {\n
          instance[i] = postMortem;\n
        } else if (i !== "guid") {\n
          instance[i] = null;\n
        }\n
      }\n
    }\n
    priv = null;\n
    datamap = null;\n
    grid = null;\n
    selection = null;\n
    editorManager = null;\n
    instance = null;\n
    GridSettings = null;\n
  };\n
  function postMortem() {\n
    throw new Error("This method cannot be called because this Handsontable instance has been destroyed");\n
  }\n
  this.getActiveEditor = function() {\n
    return editorManager.getActiveEditor();\n
  };\n
  this.getPlugin = function(pluginName) {\n
    return getPlugin(this, pluginName);\n
  };\n
  this.getInstance = function() {\n
    return instance;\n
  };\n
  this.addHook = function(key, callback) {\n
    Handsontable.hooks.add(key, callback, instance);\n
  };\n
  this.addHookOnce = function(key, callback) {\n
    Handsontable.hooks.once(key, callback, instance);\n
  };\n
  this.removeHook = function(key, callback) {\n
    Handsontable.hooks.remove(key, callback, instance);\n
  };\n
  this.runHooks = function(key, p1, p2, p3, p4, p5, p6) {\n
    return Handsontable.hooks.run(instance, key, p1, p2, p3, p4, p5, p6);\n
  };\n
  this.timeouts = [];\n
  this._registerTimeout = function(handle) {\n
    this.timeouts.push(handle);\n
  };\n
  this._clearTimeouts = function() {\n
    for (var i = 0,\n
        ilen = this.timeouts.length; i < ilen; i++) {\n
      clearTimeout(this.timeouts[i]);\n
    }\n
  };\n
  this.version = Handsontable.version;\n
  Handsontable.hooks.run(instance, \'construct\');\n
};\n
var DefaultSettings = function() {};\n
DefaultSettings.prototype = {\n
  data: void 0,\n
  dataSchema: void 0,\n
  width: void 0,\n
  height: void 0,\n
  startRows: 5,\n
  startCols: 5,\n
  rowHeaders: null,\n
  colHeaders: null,\n
  colWidths: void 0,\n
  columns: void 0,\n
  cells: void 0,\n
  cell: [],\n
  comments: false,\n
  customBorders: false,\n
  minRows: 0,\n
  minCols: 0,\n
  maxRows: Infinity,\n
  maxCols: Infinity,\n
  minSpareRows: 0,\n
  minSpareCols: 0,\n
  allowInsertRow: true,\n
  allowInsertColumn: true,\n
  allowRemoveRow: true,\n
  allowRemoveColumn: true,\n
  multiSelect: true,\n
  fillHandle: true,\n
  fixedRowsTop: 0,\n
  fixedColumnsLeft: 0,\n
  outsideClickDeselects: true,\n
  enterBeginsEditing: true,\n
  enterMoves: {\n
    row: 1,\n
    col: 0\n
  },\n
  tabMoves: {\n
    row: 0,\n
    col: 1\n
  },\n
  autoWrapRow: false,\n
  autoWrapCol: false,\n
  copyRowsLimit: 1000,\n
  copyColsLimit: 1000,\n
  pasteMode: \'overwrite\',\n
  persistentState: false,\n
  currentRowClassName: void 0,\n
  currentColClassName: void 0,\n
  className: void 0,\n
  tableClassName: void 0,\n
  stretchH: \'none\',\n
  isEmptyRow: function(row) {\n
    var col,\n
        colLen,\n
        value,\n
        meta;\n
    for (col = 0, colLen = this.countCols(); col < colLen; col++) {\n
      value = this.getDataAtCell(row, col);\n
      if (value !== \'\' && value !== null && typeof value !== \'undefined\') {\n
        if (typeof value === \'object\') {\n
          meta = this.getCellMeta(row, col);\n
          return isObjectEquals(this.getSchema()[meta.prop], value);\n
        }\n
        return false;\n
      }\n
    }\n
    return true;\n
  },\n
  isEmptyCol: function(col) {\n
    var row,\n
        rowLen,\n
        value;\n
    for (row = 0, rowLen = this.countRows(); row < rowLen; row++) {\n
      value = this.getDataAtCell(row, col);\n
      if (value !== \'\' && value !== null && typeof value !== \'undefined\') {\n
        return false;\n
      }\n
    }\n
    return true;\n
  },\n
  observeDOMVisibility: true,\n
  allowInvalid: true,\n
  invalidCellClassName: \'htInvalid\',\n
  placeholder: false,\n
  placeholderCellClassName: \'htPlaceholder\',\n
  readOnlyCellClassName: \'htDimmed\',\n
  renderer: void 0,\n
  commentedCellClassName: \'htCommentCell\',\n
  fragmentSelection: false,\n
  readOnly: false,\n
  search: false,\n
  type: \'text\',\n
  copyable: true,\n
  editor: void 0,\n
  autoComplete: void 0,\n
  debug: false,\n
  wordWrap: true,\n
  noWordWrapClassName: \'htNoWrap\',\n
  contextMenu: void 0,\n
  dropdownMenu: void 0,\n
  undo: void 0,\n
  columnSorting: void 0,\n
  manualColumnMove: void 0,\n
  manualColumnResize: void 0,\n
  manualRowMove: void 0,\n
  manualRowResize: void 0,\n
  mergeCells: false,\n
  viewportRowRenderingOffset: \'auto\',\n
  viewportColumnRenderingOffset: \'auto\',\n
  groups: void 0,\n
  validator: void 0,\n
  disableVisualSelection: false,\n
  sortIndicator: false,\n
  manualColumnFreeze: void 0,\n
  trimWhitespace: true,\n
  settings: void 0,\n
  source: void 0,\n
  title: void 0,\n
  checkedTemplate: void 0,\n
  uncheckedTemplate: void 0,\n
  format: void 0,\n
  autoColumnSize: void 0,\n
  autoRowSize: void 0\n
};\n
Handsontable.DefaultSettings = DefaultSettings;\n
\n
//# \n
},{"3rdparty/walkontable/src/calculator/viewportColumns":3,"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/cell/range":6,"3rdparty/walkontable/src/selection":18,"dataMap":26,"editorManager":27,"eventManager":40,"helpers/data":43,"helpers/dom/element":44,"helpers/object":49,"helpers/setting":50,"helpers/string":51,"numeral":"numeral","plugins":55,"renderers":87,"tableView":96}],26:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  DataMap: {get: function() {\n
      return DataMap;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__SheetClip__,\n
    $__helpers_47_data__,\n
    $__helpers_47_setting__,\n
    $__helpers_47_object__,\n
    $__helpers_47_array__,\n
    $__multiMap__;\n
var SheetClip = ($__SheetClip__ = require("SheetClip"), $__SheetClip__ && $__SheetClip__.__esModule && $__SheetClip__ || {default: $__SheetClip__}).default;\n
var cellMethodLookupFactory = ($__helpers_47_data__ = require("helpers/data"), $__helpers_47_data__ && $__helpers_47_data__.__esModule && $__helpers_47_data__ || {default: $__helpers_47_data__}).cellMethodLookupFactory;\n
var columnFactory = ($__helpers_47_setting__ = require("helpers/setting"), $__helpers_47_setting__ && $__helpers_47_setting__.__esModule && $__helpers_47_setting__ || {default: $__helpers_47_setting__}).columnFactory;\n
var $__3 = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}),\n
    duckSchema = $__3.duckSchema,\n
    deepExtend = $__3.deepExtend;\n
var $__4 = ($__helpers_47_array__ = require("helpers/array"), $__helpers_47_array__ && $__helpers_47_array__.__esModule && $__helpers_47_array__ || {default: $__helpers_47_array__}),\n
    extendArray = $__4.extendArray,\n
    to2dArray = $__4.to2dArray;\n
var MultiMap = ($__multiMap__ = require("multiMap"), $__multiMap__ && $__multiMap__.__esModule && $__multiMap__ || {default: $__multiMap__}).MultiMap;\n
function DataMap(instance, priv, GridSettings) {\n
  this.instance = instance;\n
  this.priv = priv;\n
  this.GridSettings = GridSettings;\n
  this.dataSource = this.instance.getSettings().data;\n
  if (this.dataSource[0]) {\n
    this.duckSchema = this.recursiveDuckSchema(this.dataSource[0]);\n
  } else {\n
    this.duckSchema = {};\n
  }\n
  this.createMap();\n
}\n
DataMap.prototype.DESTINATION_RENDERER = 1;\n
DataMap.prototype.DESTINATION_CLIPBOARD_GENERATOR = 2;\n
DataMap.prototype.recursiveDuckSchema = function(object) {\n
  return duckSchema(object);\n
};\n
DataMap.prototype.recursiveDuckColumns = function(schema, lastCol, parent) {\n
  var prop,\n
      i;\n
  if (typeof lastCol === \'undefined\') {\n
    lastCol = 0;\n
    parent = \'\';\n
  }\n
  if (typeof schema === "object" && !Array.isArray(schema)) {\n
    for (i in schema) {\n
      if (schema.hasOwnProperty(i)) {\n
        if (schema[i] === null) {\n
          prop = parent + i;\n
          this.colToPropCache.push(prop);\n
          this.propToColCache.set(prop, lastCol);\n
          lastCol++;\n
        } else {\n
          lastCol = this.recursiveDuckColumns(schema[i], lastCol, i + \'.\');\n
        }\n
      }\n
    }\n
  }\n
  return lastCol;\n
};\n
DataMap.prototype.createMap = function() {\n
  var i,\n
      ilen,\n
      schema = this.getSchema();\n
  if (typeof schema === "undefined") {\n
    throw new Error("trying to create `columns` definition but you didnt\' provide `schema` nor `data`");\n
  }\n
  this.colToPropCache = [];\n
  this.propToColCache = new MultiMap();\n
  var columns = this.instance.getSettings().columns;\n
  if (columns) {\n
    for (i = 0, ilen = columns.length; i < ilen; i++) {\n
      if (typeof columns[i].data != \'undefined\') {\n
        this.colToPropCache[i] = columns[i].data;\n
        this.propToColCache.set(columns[i].data, i);\n
      }\n
    }\n
  } else {\n
    this.recursiveDuckColumns(schema);\n
  }\n
};\n
DataMap.prototype.colToProp = function(col) {\n
  col = Handsontable.hooks.run(this.instance, \'modifyCol\', col);\n
  if (this.colToPropCache && typeof this.colToPropCache[col] !== \'undefined\') {\n
    return this.colToPropCache[col];\n
  }\n
  return col;\n
};\n
DataMap.prototype.propToCol = function(prop) {\n
  var col;\n
  if (typeof this.propToColCache.get(prop) !== \'undefined\') {\n
    col = this.propToColCache.get(prop);\n
  } else {\n
    col = prop;\n
  }\n
  col = Handsontable.hooks.run(this.instance, \'modifyCol\', col);\n
  return col;\n
};\n
DataMap.prototype.getSchema = function() {\n
  var schema = this.instance.getSettings().dataSchema;\n
  if (schema) {\n
    if (typeof schema === \'function\') {\n
      return schema();\n
    }\n
    return schema;\n
  }\n
  return this.duckSchema;\n
};\n
DataMap.prototype.createRow = function(index, amount, createdAutomatically) {\n
  var row,\n
      colCount = this.instance.countCols(),\n
      numberOfCreatedRows = 0,\n
      currentIndex;\n
  if (!amount) {\n
    amount = 1;\n
  }\n
  if (typeof index !== \'number\' || index >= this.instance.countRows()) {\n
    index = this.instance.countRows();\n
  }\n
  currentIndex = index;\n
  var maxRows = this.instance.getSettings().maxRows;\n
  while (numberOfCreatedRows < amount && this.instance.countRows() < maxRows) {\n
    if (this.instance.dataType === \'array\') {\n
      row = [];\n
      for (var c = 0; c < colCount; c++) {\n
        row.push(null);\n
      }\n
    } else if (this.instance.dataType === \'function\') {\n
      row = this.instance.getSettings().dataSchema(index);\n
    } else {\n
      row = {};\n
      deepExtend(row, this.getSchema());\n
    }\n
    if (index === this.instance.countRows()) {\n
      this.dataSource.push(row);\n
    } else {\n
      this.dataSource.splice(index, 0, row);\n
    }\n
    numberOfCreatedRows++;\n
    currentIndex++;\n
  }\n
  Handsontable.hooks.run(this.instance, \'afterCreateRow\', index, numberOfCreatedRows, createdAutomatically);\n
  this.instance.forceFullRender = true;\n
  return numberOfCreatedRows;\n
};\n
DataMap.prototype.createCol = function(index, amount, createdAutomatically) {\n
  if (!this.instance.isColumnModificationAllowed()) {\n
    throw new Error("Cannot create new column. When data source in an object, " + "you can only have as much columns as defined in first data row, data schema or in the \'columns\' setting." + "If you want to be able to add new columns, you have to use array datasource.");\n
  }\n
  var rlen = this.instance.countRows(),\n
      data = this.dataSource,\n
      constructor,\n
      numberOfCreatedCols = 0,\n
      currentIndex;\n
  if (!amount) {\n
    amount = 1;\n
  }\n
  currentIndex = index;\n
  var maxCols = this.instance.getSettings().maxCols;\n
  while (numberOfCreatedCols < amount && this.instance.countCols() < maxCols) {\n
    constructor = columnFactory(this.GridSettings, this.priv.columnsSettingConflicts);\n
    if (typeof index !== \'number\' || index >= this.instance.countCols()) {\n
      for (var r = 0; r < rlen; r++) {\n
        if (typeof data[r] === \'undefined\') {\n
          data[r] = [];\n
        }\n
        data[r].push(null);\n
      }\n
      this.priv.columnSettings.push(constructor);\n
    } else {\n
      for (var r = 0; r < rlen; r++) {\n
        data[r].splice(currentIndex, 0, null);\n
      }\n
      this.priv.columnSettings.splice(currentIndex, 0, constructor);\n
    }\n
    numberOfCreatedCols++;\n
    currentIndex++;\n
  }\n
  Handsontable.hooks.run(this.instance, \'afterCreateCol\', index, numberOfCreatedCols, createdAutomatically);\n
  this.instance.forceFullRender = true;\n
  return numberOfCreatedCols;\n
};\n
DataMap.prototype.removeRow = function(index, amount) {\n
  if (!amount) {\n
    amount = 1;\n
  }\n
  if (typeof index !== \'number\') {\n
    index = -amount;\n
  }\n
  index = (this.instance.countRows() + index) % this.instance.countRows();\n
  var logicRows = this.physicalRowsToLogical(index, amount);\n
  var actionWasNotCancelled = Handsontable.hooks.run(this.instance, \'beforeRemoveRow\', index, amount);\n
  if (actionWasNotCancelled === false) {\n
    return;\n
  }\n
  var data = this.dataSource;\n
  var newData = data.filter(function(row, index) {\n
    return logicRows.indexOf(index) == -1;\n
  });\n
  data.length = 0;\n
  Array.prototype.push.apply(data, newData);\n
  Handsontable.hooks.run(this.instance, \'afterRemoveRow\', index, amount);\n
  this.instance.forceFullRender = true;\n
};\n
DataMap.prototype.removeCol = function(index, amount) {\n
  if (this.instance.dataType === \'object\' || this.instance.getSettings().columns) {\n
    throw new Error("cannot remove column with object data source or columns option specified");\n
  }\n
  if (!amount) {\n
    amount = 1;\n
  }\n
  if (typeof index !== \'number\') {\n
    index = -amount;\n
  }\n
  index = (this.instance.countCols() + index) % this.instance.countCols();\n
  var actionWasNotCancelled = Handsontable.hooks.run(this.instance, \'beforeRemoveCol\', index, amount);\n
  if (actionWasNotCancelled === false) {\n
    return;\n
  }\n
  var data = this.dataSource;\n
  for (var r = 0,\n
      rlen = this.instance.countRows(); r < rlen; r++) {\n
    data[r].splice(index, amount);\n
  }\n
  this.priv.columnSettings.splice(index, amount);\n
  Handsontable.hooks.run(this.instance, \'afterRemoveCol\', index, amount);\n
  this.instance.forceFullRender = true;\n
};\n
DataMap.prototype.spliceCol = function(col, index, amount) {\n
  var elements = 4 <= arguments.length ? [].slice.call(arguments, 3) : [];\n
  var colData = this.instance.getDataAtCol(col);\n
  var removed = colData.slice(index, index + amount);\n
  var after = colData.slice(index + amount);\n
  extendArray(elements, after);\n
  var i = 0;\n
  while (i < amount) {\n
    elements.push(null);\n
    i++;\n
  }\n
  to2dArray(elements);\n
  this.instance.populateFromArray(index, col, elements, null, null, \'spliceCol\');\n
  return removed;\n
};\n
DataMap.prototype.spliceRow = function(row, index, amount) {\n
  var elements = 4 <= arguments.length ? [].slice.call(arguments, 3) : [];\n
  var rowData = this.instance.getSourceDataAtRow(row);\n
  var removed = rowData.slice(index, index + amount);\n
  var after = rowData.slice(index + amount);\n
  extendArray(elements, after);\n
  var i = 0;\n
  while (i < amount) {\n
    elements.push(null);\n
    i++;\n
  }\n
  this.instance.populateFromArray(row, index, [elements], null, null, \'spliceRow\');\n
  return removed;\n
};\n
DataMap.prototype.get = function(row, prop) {\n
  row = Handsontable.hooks.run(this.instance, \'modifyRow\', row);\n
  if (typeof prop === \'string\' && prop.indexOf(\'.\') > -1) {\n
    var sliced = prop.split(".");\n
    var out = this.dataSource[row];\n
    if (!out) {\n
      return null;\n
    }\n
    for (var i = 0,\n
        ilen = sliced.length; i < ilen; i++) {\n
      out = out[sliced[i]];\n
      if (typeof out === \'undefined\') {\n
        return null;\n
      }\n
    }\n
    return out;\n
  } else if (typeof prop === \'function\') {\n
    return prop(this.dataSource.slice(row, row + 1)[0]);\n
  } else {\n
    return this.dataSource[row] ? this.dataSource[row][prop] : null;\n
  }\n
};\n
var copyableLookup = cellMethodLookupFactory(\'copyable\', false);\n
DataMap.prototype.getCopyable = function(row, prop) {\n
  if (copyableLookup.call(this.instance, row, this.propToCol(prop))) {\n
    return this.get(row, prop);\n
  }\n
  return \'\';\n
};\n
DataMap.prototype.set = function(row, prop, value, source) {\n
  row = Handsontable.hooks.run(this.instance, \'modifyRow\', row, source || "datamapGet");\n
  if (typeof prop === \'string\' && prop.indexOf(\'.\') > -1) {\n
    var sliced = prop.split(".");\n
    var out = this.dataSource[row];\n
    for (var i = 0,\n
        ilen = sliced.length - 1; i < ilen; i++) {\n
      if (typeof out[sliced[i]] === \'undefined\') {\n
        out[sliced[i]] = {};\n
      }\n
      out = out[sliced[i]];\n
    }\n
    out[sliced[i]] = value;\n
  } else if (typeof prop === \'function\') {\n
    prop(this.dataSource.slice(row, row + 1)[0], value);\n
  } else {\n
    this.dataSource[row][prop] = value;\n
  }\n
};\n
DataMap.prototype.physicalRowsToLogical = function(index, amount) {\n
  var totalRows = this.instance.countRows();\n
  var physicRow = (totalRows + index) % totalRows;\n
  var logicRows = [];\n
  var rowsToRemove = amount;\n
  var row;\n
  while (physicRow < totalRows && rowsToRemove) {\n
    row = Handsontable.hooks.run(this.instance, \'modifyRow\', physicRow);\n
    logicRows.push(row);\n
    rowsToRemove--;\n
    physicRow++;\n
  }\n
  return logicRows;\n
};\n
DataMap.prototype.clear = function() {\n
  for (var r = 0; r < this.instance.countRows(); r++) {\n
    for (var c = 0; c < this.instance.countCols(); c++) {\n
      this.set(r, this.colToProp(c), \'\');\n
    }\n
  }\n
};\n
DataMap.prototype.getAll = function() {\n
  return this.dataSource;\n
};\n
DataMap.prototype.getRange = function(start, end, destination) {\n
  var r,\n
      rlen,\n
      c,\n
      clen,\n
      output = [],\n
      row;\n
  var getFn = destination === this.DESTINATION_CLIPBOARD_GENERATOR ? this.getCopyable : this.get;\n
  rlen = Math.max(start.row, end.row);\n
  clen = Math.max(start.col, end.col);\n
  for (r = Math.min(start.row, end.row); r <= rlen; r++) {\n
    row = [];\n
    for (c = Math.min(start.col, end.col); c <= clen; c++) {\n
      row.push(getFn.call(this, r, this.colToProp(c)));\n
    }\n
    output.push(row);\n
  }\n
  return output;\n
};\n
DataMap.prototype.getText = function(start, end) {\n
  return SheetClip.stringify(this.getRange(start, end, this.DESTINATION_RENDERER));\n
};\n
DataMap.prototype.getCopyableText = function(start, end) {\n
  return SheetClip.stringify(this.getRange(start, end, this.DESTINATION_CLIPBOARD_GENERATOR));\n
};\n
;\n
Handsontable.DataMap = DataMap;\n
\n
//# \n
},{"SheetClip":"SheetClip","helpers/array":41,"helpers/data":43,"helpers/object":49,"helpers/setting":50,"multiMap":53}],27:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  EditorManager: {get: function() {\n
      return EditorManager;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__3rdparty_47_walkontable_47_src_47_cell_47_coords__,\n
    $__helpers_47_unicode__,\n
    $__helpers_47_dom_47_event__,\n
    $__editors__,\n
    $__eventManager__;\n
var WalkontableCellCoords = ($__3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
var $__1 = ($__helpers_47_unicode__ = require("helpers/unicode"), $__helpers_47_unicode__ && $__helpers_47_unicode__.__esModule && $__helpers_47_unicode__ || {default: $__helpers_47_unicode__}),\n
    KEY_CODES = $__1.KEY_CODES,\n
    isMetaKey = $__1.isMetaKey,\n
    isCtrlKey = $__1.isCtrlKey;\n
var $__2 = ($__helpers_47_dom_47_event__ = require("helpers/dom/event"), $__helpers_47_dom_47_event__ && $__helpers_47_dom_47_event__.__esModule && $__helpers_47_dom_47_event__ || {default: $__helpers_47_dom_47_event__}),\n
    stopPropagation = $__2.stopPropagation,\n
    stopImmediatePropagation = $__2.stopImmediatePropagation,\n
    isImmediatePropagationStopped = $__2.isImmediatePropagationStopped;\n
var getEditor = ($__editors__ = require("editors"), $__editors__ && $__editors__.__esModule && $__editors__ || {default: $__editors__}).getEditor;\n
var eventManagerObject = ($__eventManager__ = require("eventManager"), $__eventManager__ && $__eventManager__.__esModule && $__eventManager__ || {default: $__eventManager__}).eventManager;\n
;\n
Handsontable.EditorManager = EditorManager;\n
function EditorManager(instance, priv, selection) {\n
  var _this = this,\n
      destroyed = false,\n
      eventManager,\n
      activeEditor;\n
  eventManager = eventManagerObject(instance);\n
  function moveSelectionAfterEnter(shiftKey) {\n
    var enterMoves = typeof priv.settings.enterMoves === \'function\' ? priv.settings.enterMoves(event) : priv.settings.enterMoves;\n
    if (shiftKey) {\n
      selection.transformStart(-enterMoves.row, -enterMoves.col);\n
    } else {\n
      selection.transformStart(enterMoves.row, enterMoves.col, true);\n
    }\n
  }\n
  function moveSelectionUp(shiftKey) {\n
    if (shiftKey) {\n
      selection.transformEnd(-1, 0);\n
    } else {\n
      selection.transformStart(-1, 0);\n
    }\n
  }\n
  function moveSelectionDown(shiftKey) {\n
    if (shiftKey) {\n
      selection.transformEnd(1, 0);\n
    } else {\n
      selection.transformStart(1, 0);\n
    }\n
  }\n
  function moveSelectionRight(shiftKey) {\n
    if (shiftKey) {\n
      selection.transformEnd(0, 1);\n
    } else {\n
      selection.transformStart(0, 1);\n
    }\n
  }\n
  function moveSelectionLeft(shiftKey) {\n
    if (shiftKey) {\n
      selection.transformEnd(0, -1);\n
    } else {\n
      selection.transformStart(0, -1);\n
    }\n
  }\n
  function onKeyDown(event) {\n
    var ctrlDown,\n
        rangeModifier;\n
    if (!instance.isListening()) {\n
      return;\n
    }\n
    Handsontable.hooks.run(instance, \'beforeKeyDown\', event);\n
    if (destroyed) {\n
      return;\n
    }\n
    if (isImmediatePropagationStopped(event)) {\n
      return;\n
    }\n
    priv.lastKeyCode = event.keyCode;\n
    if (!selection.isSelected()) {\n
      return;\n
    }\n
    ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;\n
    if (activeEditor && !activeEditor.isWaiting()) {\n
      if (!isMetaKey(event.keyCode) && !isCtrlKey(event.keyCode) && !ctrlDown && !_this.isEditorOpened()) {\n
        _this.openEditor("", event);\n
        return;\n
      }\n
    }\n
    rangeModifier = event.shiftKey ? selection.setRangeEnd : selection.setRangeStart;\n
    switch (event.keyCode) {\n
      case KEY_CODES.A:\n
        if (!_this.isEditorOpened() && ctrlDown) {\n
          selection.selectAll();\n
          event.preventDefault();\n
          stopPropagation(event);\n
        }\n
        break;\n
      case KEY_CODES.ARROW_UP:\n
        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {\n
          _this.closeEditorAndSaveChanges(ctrlDown);\n
        }\n
        moveSelectionUp(event.shiftKey);\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.ARROW_DOWN:\n
        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {\n
          _this.closeEditorAndSaveChanges(ctrlDown);\n
        }\n
        moveSelectionDown(event.shiftKey);\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.ARROW_RIGHT:\n
        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {\n
          _this.closeEditorAndSaveChanges(ctrlDown);\n
        }\n
        moveSelectionRight(event.shiftKey);\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.ARROW_LEFT:\n
        if (_this.isEditorOpened() && !activeEditor.isWaiting()) {\n
          _this.closeEditorAndSaveChanges(ctrlDown);\n
        }\n
        moveSelectionLeft(event.shiftKey);\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.TAB:\n
        var tabMoves = typeof priv.settings.tabMoves === \'function\' ? priv.settings.tabMoves(event) : priv.settings.tabMoves;\n
        if (event.shiftKey) {\n
          selection.transformStart(-tabMoves.row, -tabMoves.col);\n
        } else {\n
          selection.transformStart(tabMoves.row, tabMoves.col, true);\n
        }\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.BACKSPACE:\n
      case KEY_CODES.DELETE:\n
        selection.empty(event);\n
        _this.prepareEditor();\n
        event.preventDefault();\n
        break;\n
      case KEY_CODES.F2:\n
        _this.openEditor(null, event);\n
        if (activeEditor) {\n
          activeEditor.enableFullEditMode();\n
        }\n
        event.preventDefault();\n
        break;\n
      case KEY_CODES.ENTER:\n
        if (_this.isEditorOpened()) {\n
          if (activeEditor && activeEditor.state !== Handsontable.EditorState.WAITING) {\n
            _this.closeEditorAndSaveChanges(ctrlDown);\n
          }\n
          moveSelectionAfterEnter(event.shiftKey);\n
        } else {\n
          if (instance.getSettings().enterBeginsEditing) {\n
            _this.openEditor(null, event);\n
            if (activeEditor) {\n
              activeEditor.enableFullEditMode();\n
            }\n
          } else {\n
            moveSelectionAfterEnter(event.shiftKey);\n
          }\n
        }\n
        event.preventDefault();\n
        stopImmediatePropagation(event);\n
        break;\n
      case KEY_CODES.ESCAPE:\n
        if (_this.isEditorOpened()) {\n
          _this.closeEditorAndRestoreOriginalValue(ctrlDown);\n
        }\n
        event.preventDefault();\n
        break;\n
      case KEY_CODES.HOME:\n
        if (event.ctrlKey || event.metaKey) {\n
          rangeModifier(new WalkontableCellCoords(0, priv.selRange.from.col));\n
        } else {\n
          rangeModifier(new WalkontableCellCoords(priv.selRange.from.row, 0));\n
        }\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.END:\n
        if (event.ctrlKey || event.metaKey) {\n
          rangeModifier(new WalkontableCellCoords(instance.countRows() - 1, priv.selRange.from.col));\n
        } else {\n
          rangeModifier(new WalkontableCellCoords(priv.selRange.from.row, instance.countCols() - 1));\n
        }\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.PAGE_UP:\n
        selection.transformStart(-instance.countVisibleRows(), 0);\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
      case KEY_CODES.PAGE_DOWN:\n
        selection.transformStart(instance.countVisibleRows(), 0);\n
        event.preventDefault();\n
        stopPropagation(event);\n
        break;\n
    }\n
  }\n
  function init() {\n
    instance.addHook(\'afterDocumentKeyDown\', onKeyDown);\n
    eventManager.addEventListener(document.documentElement, \'keydown\', function(event) {\n
      instance.runHooks(\'afterDocumentKeyDown\', event);\n
    });\n
    function onDblClick(event, coords, elem) {\n
      if (elem.nodeName == "TD") {\n
        _this.openEditor();\n
        if (activeEditor) {\n
          activeEditor.enableFullEditMode();\n
        }\n
      }\n
    }\n
    instance.view.wt.update(\'onCellDblClick\', onDblClick);\n
    instance.addHook(\'afterDestroy\', function() {\n
      destroyed = true;\n
    });\n
  }\n
  this.destroyEditor = function(revertOriginal) {\n
    this.closeEditor(revertOriginal);\n
  };\n
  this.getActiveEditor = function() {\n
    return activeEditor;\n
  };\n
  this.prepareEditor = function() {\n
    var row,\n
        col,\n
        prop,\n
        td,\n
        originalValue,\n
        cellProperties,\n
        editorClass;\n
    if (activeEditor && activeEditor.isWaiting()) {\n
      this.closeEditor(false, false, function(dataSaved) {\n
        if (dataSaved) {\n
          _this.prepareEditor();\n
        }\n
      });\n
      return;\n
    }\n
    row = priv.selRange.highlight.row;\n
    col = priv.selRange.highlight.col;\n
    prop = instance.colToProp(col);\n
    td = instance.getCell(row, col);\n
    originalValue = instance.getDataAtCell(row, col);\n
    cellProperties = instance.getCellMeta(row, col);\n
    editorClass = instance.getCellEditor(cellProperties);\n
    if (editorClass) {\n
      activeEditor = Handsontable.editors.getEditor(editorClass, instance);\n
      activeEditor.prepare(row, col, prop, td, originalValue, cellProperties);\n
    } else {\n
      activeEditor = void 0;\n
    }\n
  };\n
  this.isEditorOpened = function() {\n
    return activeEditor && activeEditor.isOpened();\n
  };\n
  this.openEditor = function(initialValue, event) {\n
    if (activeEditor && !activeEditor.cellProperties.readOnly) {\n
      activeEditor.beginEditing(initialValue, event);\n
    } else if (activeEditor && activeEditor.cellProperties.readOnly) {\n
      if (event && event.keyCode === KEY_CODES.ENTER) {\n
        moveSelectionAfterEnter();\n
      }\n
    }\n
  };\n
  this.closeEditor = function(restoreOriginalValue, ctrlDown, callback) {\n
    if (!activeEditor) {\n
      if (callback) {\n
        callback(false);\n
      }\n
    } else {\n
      activeEditor.finishEditing(restoreOriginalValue, ctrlDown, callback);\n
    }\n
  };\n
  this.closeEditorAndSaveChanges = function(ctrlDown) {\n
    return this.closeEditor(false, ctrlDown);\n
  };\n
  this.closeEditorAndRestoreOriginalValue = function(ctrlDown) {\n
    return this.closeEditor(true, ctrlDown);\n
  };\n
  init();\n
}\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"editors":28,"eventManager":40,"helpers/dom/event":45,"helpers/unicode":52}],28:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  registerEditor: {get: function() {\n
      return registerEditor;\n
    }},\n
  getEditor: {get: function() {\n
      return getEditor;\n
    }},\n
  hasEditor: {get: function() {\n
      return hasEditor;\n
    }},\n
  getEditorConstructor: {get: function() {\n
      return getEditorConstructor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__helpers_47_string__;\n
var toUpperCaseFirst = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).toUpperCaseFirst;\n
;\n
var registeredEditorNames = {},\n
    registeredEditorClasses = new WeakMap();\n
Handsontable.editors = Handsontable.editors || {};\n
Handsontable.editors.registerEditor = registerEditor;\n
Handsontable.editors.getEditor = getEditor;\n
function RegisteredEditor(editorClass) {\n
  var Clazz,\n
      instances;\n
  instances = {};\n
  Clazz = editorClass;\n
  this.getConstructor = function() {\n
    return editorClass;\n
  };\n
  this.getInstance = function(hotInstance) {\n
    if (!(hotInstance.guid in instances)) {\n
      instances[hotInstance.guid] = new Clazz(hotInstance);\n
    }\n
    return instances[hotInstance.guid];\n
  };\n
}\n
function registerEditor(editorName, editorClass) {\n
  var editor = new RegisteredEditor(editorClass);\n
  if (typeof editorName === \'string\') {\n
    registeredEditorNames[editorName] = editor;\n
    Handsontable.editors[toUpperCaseFirst(editorName) + \'Editor\'] = editorClass;\n
  }\n
  registeredEditorClasses.set(editorClass, editor);\n
}\n
function getEditor(editorName, hotInstance) {\n
  var editor;\n
  if (typeof editorName == \'function\') {\n
    if (!(registeredEditorClasses.get(editorName))) {\n
      registerEditor(null, editorName);\n
    }\n
    editor = registeredEditorClasses.get(editorName);\n
  } else if (typeof editorName == \'string\') {\n
    editor = registeredEditorNames[editorName];\n
  } else {\n
    throw Error(\'Only strings and functions can be passed as "editor" parameter \');\n
  }\n
  if (!editor) {\n
    throw Error(\'No editor registered under name "\' + editorName + \'"\');\n
  }\n
  return editor.getInstance(hotInstance);\n
}\n
function getEditorConstructor(editorName) {\n
  var editor;\n
  if (typeof editorName == \'string\') {\n
    editor = registeredEditorNames[editorName];\n
  } else {\n
    throw Error(\'Only strings and functions can be passed as "editor" parameter \');\n
  }\n
  if (!editor) {\n
    throw Error(\'No editor registered under name "\' + editorName + \'"\');\n
  }\n
  return editor.getConstructor();\n
}\n
function hasEditor(editorName) {\n
  return registeredEditorNames[editorName] ? true : false;\n
}\n
\n
//# \n
},{"helpers/string":51}],29:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  BaseEditor: {get: function() {\n
      return BaseEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_mixed__,\n
    $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__;\n
var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;\n
var WalkontableCellCoords = ($___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
;\n
Handsontable.editors = Handsontable.editors || {};\n
Handsontable.editors.BaseEditor = BaseEditor;\n
Handsontable.EditorState = {\n
  VIRGIN: \'STATE_VIRGIN\',\n
  EDITING: \'STATE_EDITING\',\n
  WAITING: \'STATE_WAITING\',\n
  FINISHED: \'STATE_FINISHED\'\n
};\n
function BaseEditor(instance) {\n
  this.instance = instance;\n
  this.state = Handsontable.EditorState.VIRGIN;\n
  this._opened = false;\n
  this._fullEditMode = false;\n
  this._closeCallback = null;\n
  this.init();\n
}\n
BaseEditor.prototype._fireCallbacks = function(result) {\n
  if (this._closeCallback) {\n
    this._closeCallback(result);\n
    this._closeCallback = null;\n
  }\n
};\n
BaseEditor.prototype.init = function() {};\n
BaseEditor.prototype.getValue = function() {\n
  throw Error(\'Editor getValue() method unimplemented\');\n
};\n
BaseEditor.prototype.setValue = function(newValue) {\n
  throw Error(\'Editor setValue() method unimplemented\');\n
};\n
BaseEditor.prototype.open = function() {\n
  throw Error(\'Editor open() method unimplemented\');\n
};\n
BaseEditor.prototype.close = function() {\n
  throw Error(\'Editor close() method unimplemented\');\n
};\n
BaseEditor.prototype.prepare = function(row, col, prop, td, originalValue, cellProperties) {\n
  this.TD = td;\n
  this.row = row;\n
  this.col = col;\n
  this.prop = prop;\n
  this.originalValue = originalValue;\n
  this.cellProperties = cellProperties;\n
  this.state = Handsontable.EditorState.VIRGIN;\n
};\n
BaseEditor.prototype.extend = function() {\n
  var baseClass = this.constructor;\n
  function Editor() {\n
    baseClass.apply(this, arguments);\n
  }\n
  function inherit(Child, Parent) {\n
    function Bridge() {}\n
    Bridge.prototype = Parent.prototype;\n
    Child.prototype = new Bridge();\n
    Child.prototype.constructor = Child;\n
    return Child;\n
  }\n
  return inherit(Editor, baseClass);\n
};\n
BaseEditor.prototype.saveValue = function(val, ctrlDown) {\n
  var sel,\n
      tmp;\n
  if (ctrlDown) {\n
    sel = this.instance.getSelected();\n
    if (sel[0] > sel[2]) {\n
      tmp = sel[0];\n
      sel[0] = sel[2];\n
      sel[2] = tmp;\n
    }\n
    if (sel[1] > sel[3]) {\n
      tmp = sel[1];\n
      sel[1] = sel[3];\n
      sel[3] = tmp;\n
    }\n
    this.instance.populateFromArray(sel[0], sel[1], val, sel[2], sel[3], \'edit\');\n
  } else {\n
    this.instance.populateFromArray(this.row, this.col, val, null, null, \'edit\');\n
  }\n
};\n
BaseEditor.prototype.beginEditing = function(initialValue, event) {\n
  if (this.state != Handsontable.EditorState.VIRGIN) {\n
    return;\n
  }\n
  this.instance.view.scrollViewport(new WalkontableCellCoords(this.row, this.col));\n
  this.instance.view.render();\n
  this.state = Handsontable.EditorState.EDITING;\n
  initialValue = typeof initialValue == \'string\' ? initialValue : this.originalValue;\n
  this.setValue(stringify(initialValue));\n
  this.open(event);\n
  this._opened = true;\n
  this.focus();\n
  this.instance.view.render();\n
};\n
BaseEditor.prototype.finishEditing = function(restoreOriginalValue, ctrlDown, callback) {\n
  var _this = this,\n
      val;\n
  if (callback) {\n
    var previousCloseCallback = this._closeCallback;\n
    this._closeCallback = function(result) {\n
      if (previousCloseCallback) {\n
        previousCloseCallback(result);\n
      }\n
      callback(result);\n
    };\n
  }\n
  if (this.isWaiting()) {\n
    return;\n
  }\n
  if (this.state == Handsontable.EditorState.VIRGIN) {\n
    this.instance._registerTimeout(setTimeout(function() {\n
      _this._fireCallbacks(true);\n
    }, 0));\n
    return;\n
  }\n
  if (this.state == Handsontable.EditorState.EDITING) {\n
    if (restoreOriginalValue) {\n
      this.cancelChanges();\n
      this.instance.view.render();\n
      return;\n
    }\n
    if (this.instance.getSettings().trimWhitespace) {\n
      val = [[typeof this.getValue() === \'string\' ? String.prototype.trim.call(this.getValue() || \'\') : this.getValue()]];\n
    } else {\n
      val = [[this.getValue()]];\n
    }\n
    this.state = Handsontable.EditorState.WAITING;\n
    this.saveValue(val, ctrlDown);\n
    if (this.instance.getCellValidator(this.cellProperties)) {\n
      this.instance.addHookOnce(\'postAfterValidate\', function(result) {\n
        _this.state = Handsontable.EditorState.FINISHED;\n
        _this.discardEditor(result);\n
      });\n
    } else {\n
      this.state = Handsontable.EditorState.FINISHED;\n
      this.discardEditor(true);\n
    }\n
  }\n
};\n
BaseEditor.prototype.cancelChanges = function() {\n
  this.state = Handsontable.EditorState.FINISHED;\n
  this.discardEditor();\n
};\n
BaseEditor.prototype.discardEditor = function(result) {\n
  if (this.state !== Handsontable.EditorState.FINISHED) {\n
    return;\n
  }\n
  if (result === false && this.cellProperties.allowInvalid !== true) {\n
    this.instance.selectCell(this.row, this.col);\n
    this.focus();\n
    this.state = Handsontable.EditorState.EDITING;\n
    this._fireCallbacks(false);\n
  } else {\n
    this.close();\n
    this._opened = false;\n
    this._fullEditMode = false;\n
    this.state = Handsontable.EditorState.VIRGIN;\n
    this._fireCallbacks(true);\n
  }\n
};\n
BaseEditor.prototype.enableFullEditMode = function() {\n
  this._fullEditMode = true;\n
};\n
BaseEditor.prototype.isInFullEditMode = function() {\n
  return this._fullEditMode;\n
};\n
BaseEditor.prototype.isOpened = function() {\n
  return this._opened;\n
};\n
BaseEditor.prototype.isWaiting = function() {\n
  return this.state === Handsontable.EditorState.WAITING;\n
};\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"helpers/mixed":47}],30:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  AutocompleteEditor: {get: function() {\n
      return AutocompleteEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_unicode__,\n
    $___46__46__47_helpers_47_mixed__,\n
    $___46__46__47_helpers_47_array__,\n
    $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_editors__,\n
    $__handsontableEditor__;\n
var $__0 = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}),\n
    KEY_CODES = $__0.KEY_CODES,\n
    isPrintableChar = $__0.isPrintableChar;\n
var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;\n
var pivot = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).pivot;\n
var $__3 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__3.addClass,\n
    getCaretPosition = $__3.getCaretPosition,\n
    getScrollbarWidth = $__3.getScrollbarWidth,\n
    getSelectionEndPosition = $__3.getSelectionEndPosition,\n
    outerWidth = $__3.outerWidth,\n
    setCaretPosition = $__3.setCaretPosition;\n
var $__4 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditorConstructor = $__4.getEditorConstructor,\n
    registerEditor = $__4.registerEditor;\n
var HandsontableEditor = ($__handsontableEditor__ = require("handsontableEditor"), $__handsontableEditor__ && $__handsontableEditor__.__esModule && $__handsontableEditor__ || {default: $__handsontableEditor__}).HandsontableEditor;\n
var AutocompleteEditor = HandsontableEditor.prototype.extend();\n
AutocompleteEditor.prototype.init = function() {\n
  HandsontableEditor.prototype.init.apply(this, arguments);\n
  this.query = null;\n
  this.choices = [];\n
};\n
AutocompleteEditor.prototype.createElements = function() {\n
  HandsontableEditor.prototype.createElements.apply(this, arguments);\n
  addClass(this.htContainer, \'autocompleteEditor\');\n
  addClass(this.htContainer, window.navigator.platform.indexOf(\'Mac\') !== -1 ? \'htMacScroll\' : \'\');\n
};\n
var skipOne = false;\n
function onBeforeKeyDown(event) {\n
  skipOne = false;\n
  var editor = this.getActiveEditor();\n
  if (isPrintableChar(event.keyCode) || event.keyCode === KEY_CODES.BACKSPACE || event.keyCode === KEY_CODES.DELETE || event.keyCode === KEY_CODES.INSERT) {\n
    var timeOffset = 0;\n
    if (event.keyCode === KEY_CODES.C && (event.ctrlKey || event.metaKey)) {\n
      return;\n
    }\n
    if (!editor.isOpened()) {\n
      timeOffset += 10;\n
    }\n
    editor.instance._registerTimeout(setTimeout(function() {\n
      editor.queryChoices(editor.TEXTAREA.value);\n
      skipOne = true;\n
    }, timeOffset));\n
  }\n
}\n
AutocompleteEditor.prototype.prepare = function() {\n
  this.instance.addHook(\'beforeKeyDown\', onBeforeKeyDown);\n
  HandsontableEditor.prototype.prepare.apply(this, arguments);\n
};\n
AutocompleteEditor.prototype.open = function() {\n
  HandsontableEditor.prototype.open.apply(this, arguments);\n
  var choicesListHot = this.htEditor.getInstance();\n
  var that = this;\n
  var trimDropdown = this.cellProperties.trimDropdown === void 0 ? true : this.cellProperties.trimDropdown;\n
  this.TEXTAREA.style.visibility = \'visible\';\n
  this.focus();\n
  choicesListHot.updateSettings({\n
    \'colWidths\': trimDropdown ? [outerWidth(this.TEXTAREA) - 2] : void 0,\n
    width: trimDropdown ? outerWidth(this.TEXTAREA) + getScrollbarWidth() + 2 : void 0,\n
    afterRenderer: function(TD, row, col, prop, value) {\n
      var caseSensitive = this.getCellMeta(row, col).filteringCaseSensitive === true,\n
          indexOfMatch,\n
          match,\n
          value = stringify(value);\n
      if (value) {\n
        indexOfMatch = caseSensitive ? value.indexOf(this.query) : value.toLowerCase().indexOf(that.query.toLowerCase());\n
        if (indexOfMatch != -1) {\n
          match = value.substr(indexOfMatch, that.query.length);\n
          TD.innerHTML = value.replace(match, \'<strong>\' + match + \'</strong>\');\n
        }\n
      }\n
    },\n
    modifyColWidth: function(width, col) {\n
      return trimDropdown ? width : width + 15;\n
    }\n
  });\n
  this.htEditor.view.wt.wtTable.holder.parentNode.style[\'padding-right\'] = getScrollbarWidth() + 2 + \'px\';\n
  if (skipOne) {\n
    skipOne = false;\n
  }\n
  that.instance._registerTimeout(setTimeout(function() {\n
    that.queryChoices(that.TEXTAREA.value);\n
  }, 0));\n
};\n
AutocompleteEditor.prototype.close = function() {\n
  HandsontableEditor.prototype.close.apply(this, arguments);\n
};\n
AutocompleteEditor.prototype.queryChoices = function(query) {\n
  this.query = query;\n
  if (typeof this.cellProperties.source == \'function\') {\n
    var that = this;\n
    this.cellProperties.source(query, function(choices) {\n
      that.updateChoicesList(choices);\n
    });\n
  } else if (Array.isArray(this.cellProperties.source)) {\n
    var choices;\n
    if (!query || this.cellProperties.filter === false) {\n
      choices = this.cellProperties.source;\n
    } else {\n
      var filteringCaseSensitive = this.cellProperties.filteringCaseSensitive === true;\n
      var lowerCaseQuery = query.toLowerCase();\n
      choices = this.cellProperties.source.filter(function(choice) {\n
        if (filteringCaseSensitive) {\n
          return choice.indexOf(query) != -1;\n
        } else {\n
          return choice.toLowerCase().indexOf(lowerCaseQuery) != -1;\n
        }\n
      });\n
    }\n
    this.updateChoicesList(choices);\n
  } else {\n
    this.updateChoicesList([]);\n
  }\n
};\n
AutocompleteEditor.prototype.updateChoicesList = function(choices) {\n
  var pos = getCaretPosition(this.TEXTAREA),\n
      endPos = getSelectionEndPosition(this.TEXTAREA);\n
  var orderByRelevance = AutocompleteEditor.sortByRelevance(this.getValue(), choices, this.cellProperties.filteringCaseSensitive);\n
  var highlightIndex;\n
  if (this.cellProperties.filter != false) {\n
    var sorted = [];\n
    for (var i = 0,\n
        choicesCount = orderByRelevance.length; i < choicesCount; i++) {\n
      sorted.push(choices[orderByRelevance[i]]);\n
    }\n
    highlightIndex = 0;\n
    choices = sorted;\n
  } else {\n
    highlightIndex = orderByRelevance[0];\n
  }\n
  this.choices = choices;\n
  this.htEditor.loadData(pivot([choices]));\n
 

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAY=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="6" aka="AAAAAAAAAAY=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

 this.updateDropdownHeight();\n
  if (this.cellProperties.strict === true) {\n
    this.highlightBestMatchingChoice(highlightIndex);\n
  }\n
  this.instance.listen();\n
  this.TEXTAREA.focus();\n
  setCaretPosition(this.TEXTAREA, pos, (pos != endPos ? endPos : void 0));\n
};\n
AutocompleteEditor.prototype.updateDropdownHeight = function() {\n
  var currentDropdownWidth = this.htEditor.getColWidth(0) + getScrollbarWidth() + 2;\n
  var trimDropdown = this.cellProperties.trimDropdown === void 0 ? true : this.cellProperties.trimDropdown;\n
  this.htEditor.updateSettings({\n
    height: this.getDropdownHeight(),\n
    width: trimDropdown ? void 0 : currentDropdownWidth\n
  });\n
  this.htEditor.view.wt.wtTable.alignOverlaysWithTrimmingContainer();\n
};\n
AutocompleteEditor.prototype.finishEditing = function(restoreOriginalValue) {\n
  if (!restoreOriginalValue) {\n
    this.instance.removeHook(\'beforeKeyDown\', onBeforeKeyDown);\n
  }\n
  HandsontableEditor.prototype.finishEditing.apply(this, arguments);\n
};\n
AutocompleteEditor.prototype.highlightBestMatchingChoice = function(index) {\n
  if (typeof index === "number") {\n
    this.htEditor.selectCell(index, 0);\n
  } else {\n
    this.htEditor.deselectCell();\n
  }\n
};\n
AutocompleteEditor.sortByRelevance = function(value, choices, caseSensitive) {\n
  var choicesRelevance = [],\n
      currentItem,\n
      valueLength = value.length,\n
      valueIndex,\n
      charsLeft,\n
      result = [],\n
      i,\n
      choicesCount;\n
  if (valueLength === 0) {\n
    for (i = 0, choicesCount = choices.length; i < choicesCount; i++) {\n
      result.push(i);\n
    }\n
    return result;\n
  }\n
  for (i = 0, choicesCount = choices.length; i < choicesCount; i++) {\n
    currentItem = stringify(choices[i]);\n
    if (caseSensitive) {\n
      valueIndex = currentItem.indexOf(value);\n
    } else {\n
      valueIndex = currentItem.toLowerCase().indexOf(value.toLowerCase());\n
    }\n
    if (valueIndex == -1) {\n
      continue;\n
    }\n
    charsLeft = currentItem.length - valueIndex - valueLength;\n
    choicesRelevance.push({\n
      baseIndex: i,\n
      index: valueIndex,\n
      charsLeft: charsLeft,\n
      value: currentItem\n
    });\n
  }\n
  choicesRelevance.sort(function(a, b) {\n
    if (b.index === -1) {\n
      return -1;\n
    }\n
    if (a.index === -1) {\n
      return 1;\n
    }\n
    if (a.index < b.index) {\n
      return -1;\n
    } else if (b.index < a.index) {\n
      return 1;\n
    } else if (a.index === b.index) {\n
      if (a.charsLeft < b.charsLeft) {\n
        return -1;\n
      } else if (a.charsLeft > b.charsLeft) {\n
        return 1;\n
      } else {\n
        return 0;\n
      }\n
    }\n
  });\n
  for (i = 0, choicesCount = choicesRelevance.length; i < choicesCount; i++) {\n
    result.push(choicesRelevance[i].baseIndex);\n
  }\n
  return result;\n
};\n
AutocompleteEditor.prototype.getDropdownHeight = function() {\n
  var firstRowHeight = this.htEditor.getInstance().getRowHeight(0) || 23;\n
  return this.choices.length >= 10 ? 10 * firstRowHeight : this.choices.length * firstRowHeight + 8;\n
};\n
AutocompleteEditor.prototype.allowKeyEventPropagation = function(keyCode) {\n
  var selected = {row: this.htEditor.getSelectedRange() ? this.htEditor.getSelectedRange().from.row : -1};\n
  var allowed = false;\n
  if (keyCode === KEY_CODES.ARROW_DOWN && selected.row < this.htEditor.countRows() - 1) {\n
    allowed = true;\n
  }\n
  if (keyCode === KEY_CODES.ARROW_UP && selected.row > -1) {\n
    allowed = true;\n
  }\n
  return allowed;\n
};\n
;\n
registerEditor(\'autocomplete\', AutocompleteEditor);\n
\n
//# \n
},{"editors":28,"handsontableEditor":34,"helpers/array":41,"helpers/dom/element":44,"helpers/mixed":47,"helpers/unicode":52}],31:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  CheckboxEditor: {get: function() {\n
      return CheckboxEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_editors__,\n
    $___95_baseEditor__,\n
    $___46__46__47_helpers_47_dom_47_element__;\n
var registerEditor = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}).registerEditor;\n
var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;\n
var hasClass = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).hasClass;\n
var CheckboxEditor = function CheckboxEditor() {\n
  $traceurRuntime.superConstructor($CheckboxEditor).apply(this, arguments);\n
};\n
var $CheckboxEditor = CheckboxEditor;\n
($traceurRuntime.createClass)(CheckboxEditor, {\n
  beginEditing: function() {\n
    var checkbox = this.TD.querySelector(\'input[type="checkbox"]\');\n
    if (!hasClass(checkbox, \'htBadValue\')) {\n
      checkbox.click();\n
    }\n
  },\n
  finishEditing: function() {},\n
  init: function() {},\n
  open: function() {},\n
  close: function() {},\n
  getValue: function() {},\n
  setValue: function() {},\n
  focus: function() {}\n
}, {}, BaseEditor);\n
;\n
registerEditor(\'checkbox\', CheckboxEditor);\n
\n
//# \n
},{"_baseEditor":29,"editors":28,"helpers/dom/element":44}],32:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  DateEditor: {get: function() {\n
      return DateEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_helpers_47_object__,\n
    $___46__46__47_eventManager__,\n
    $___46__46__47_editors__,\n
    $___46__46__47_helpers_47_unicode__,\n
    $___46__46__47_helpers_47_dom_47_event__,\n
    $__textEditor__,\n
    $__moment__,\n
    $__pikaday__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    outerHeight = $__0.outerHeight;\n
var deepExtend = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).deepExtend;\n
var EventManager = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).EventManager;\n
var $__3 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__3.getEditor,\n
    registerEditor = $__3.registerEditor;\n
var isMetaKey = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).isMetaKey;\n
var stopPropagation = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}).stopPropagation;\n
var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;\n
var moment = ($__moment__ = require("moment"), $__moment__ && $__moment__.__esModule && $__moment__ || {default: $__moment__}).default;\n
var Pikaday = ($__pikaday__ = require("pikaday"), $__pikaday__ && $__pikaday__.__esModule && $__pikaday__ || {default: $__pikaday__}).default;\n
Handsontable.editors = Handsontable.editors || {};\n
Handsontable.editors.DateEditor = DateEditor;\n
var DateEditor = function DateEditor(hotInstance) {\n
  this.$datePicker = null;\n
  this.datePicker = null;\n
  this.datePickerStyle = null;\n
  this.defaultDateFormat = \'DD/MM/YYYY\';\n
  this.isCellEdited = false;\n
  this.parentDestroyed = false;\n
  $traceurRuntime.superConstructor($DateEditor).call(this, hotInstance);\n
};\n
var $DateEditor = DateEditor;\n
($traceurRuntime.createClass)(DateEditor, {\n
  init: function() {\n
    var $__9 = this;\n
    if (typeof moment !== \'function\') {\n
      throw new Error("You need to include moment.js to your project.");\n
    }\n
    if (typeof Pikaday !== \'function\') {\n
      throw new Error("You need to include Pikaday to your project.");\n
    }\n
    $traceurRuntime.superGet(this, $DateEditor.prototype, "init").call(this);\n
    this.instance.addHook(\'afterDestroy\', (function() {\n
      $__9.parentDestroyed = true;\n
      $__9.destroyElements();\n
    }));\n
  },\n
  createElements: function() {\n
    $traceurRuntime.superGet(this, $DateEditor.prototype, "createElements").call(this);\n
    this.datePicker = document.createElement(\'DIV\');\n
    this.datePickerStyle = this.datePicker.style;\n
    this.datePickerStyle.position = \'absolute\';\n
    this.datePickerStyle.top = 0;\n
    this.datePickerStyle.left = 0;\n
    this.datePickerStyle.zIndex = 9999;\n
    addClass(this.datePicker, \'htDatepickerHolder\');\n
    document.body.appendChild(this.datePicker);\n
    this.$datePicker = new Pikaday(this.getDatePickerConfig());\n
    var eventManager = new EventManager(this);\n
    eventManager.addEventListener(this.datePicker, \'mousedown\', (function(event) {\n
      return stopPropagation(event);\n
    }));\n
    this.hideDatepicker();\n
  },\n
  destroyElements: function() {\n
    this.$datePicker.destroy();\n
  },\n
  prepare: function(row, col, prop, td, originalValue, cellProperties) {\n
    this._opened = false;\n
    $traceurRuntime.superGet(this, $DateEditor.prototype, "prepare").call(this, row, col, prop, td, originalValue, cellProperties);\n
  },\n
  open: function() {\n
    var event = arguments[0] !== (void 0) ? arguments[0] : null;\n
    $traceurRuntime.superGet(this, $DateEditor.prototype, "open").call(this);\n
    this.showDatepicker(event);\n
  },\n
  close: function() {\n
    var $__9 = this;\n
    this._opened = false;\n
    this.instance._registerTimeout(setTimeout((function() {\n
      $__9.instance.selection.refreshBorders();\n
    }), 0));\n
    $traceurRuntime.superGet(this, $DateEditor.prototype, "close").call(this);\n
  },\n
  finishEditing: function() {\n
    var isCancelled = arguments[0] !== (void 0) ? arguments[0] : false;\n
    var ctrlDown = arguments[1] !== (void 0) ? arguments[1] : false;\n
    if (isCancelled) {\n
      var value = this.originalValue;\n
      if (value !== void 0) {\n
        this.setValue(value);\n
      }\n
    }\n
    this.hideDatepicker();\n
    $traceurRuntime.superGet(this, $DateEditor.prototype, "finishEditing").call(this, isCancelled, ctrlDown);\n
  },\n
  showDatepicker: function(event) {\n
    this.$datePicker.config(this.getDatePickerConfig());\n
    var offset = this.TD.getBoundingClientRect();\n
    var dateFormat = this.cellProperties.dateFormat || this.defaultDateFormat;\n
    var datePickerConfig = this.$datePicker.config();\n
    var dateStr;\n
    var isMouseDown = this.instance.view.isMouseDown();\n
    var isMeta = event ? isMetaKey(event.keyCode) : false;\n
    this.datePickerStyle.top = (window.pageYOffset + offset.top + outerHeight(this.TD)) + \'px\';\n
    this.datePickerStyle.left = (window.pageXOffset + offset.left) + \'px\';\n
    this.$datePicker._onInputFocus = function() {};\n
    datePickerConfig.format = dateFormat;\n
    if (this.originalValue) {\n
      dateStr = this.originalValue;\n
      if (moment(dateStr, dateFormat, true).isValid()) {\n
        this.$datePicker.setMoment(moment(dateStr, dateFormat), true);\n
      }\n
      if (!isMeta && !isMouseDown) {\n
        this.setValue(\'\');\n
      }\n
    } else {\n
      if (this.cellProperties.defaultDate) {\n
        dateStr = this.cellProperties.defaultDate;\n
        datePickerConfig.defaultDate = dateStr;\n
        if (moment(dateStr, dateFormat, true).isValid()) {\n
          this.$datePicker.setMoment(moment(dateStr, dateFormat), true);\n
        }\n
        if (!isMeta && !isMouseDown) {\n
          this.setValue(\'\');\n
        }\n
      } else {\n
        this.$datePicker.gotoToday();\n
      }\n
    }\n
    this.datePickerStyle.display = \'block\';\n
    this.$datePicker.show();\n
  },\n
  hideDatepicker: function() {\n
    this.datePickerStyle.display = \'none\';\n
    this.$datePicker.hide();\n
  },\n
  getDatePickerConfig: function() {\n
    var $__9 = this;\n
    var htInput = this.TEXTAREA;\n
    var options = {};\n
    if (this.cellProperties && this.cellProperties.datePickerConfig) {\n
      deepExtend(options, this.cellProperties.datePickerConfig);\n
    }\n
    var origOnSelect = options.onSelect;\n
    var origOnClose = options.onClose;\n
    options.field = htInput;\n
    options.trigger = htInput;\n
    options.container = this.datePicker;\n
    options.bound = false;\n
    options.format = options.format || this.defaultDateFormat;\n
    options.reposition = options.reposition || false;\n
    options.onSelect = (function(dateStr) {\n
      if (!isNaN(dateStr.getTime())) {\n
        dateStr = moment(dateStr).format($__9.cellProperties.dateFormat || $__9.defaultDateFormat);\n
      }\n
      $__9.setValue(dateStr);\n
      $__9.hideDatepicker();\n
      if (origOnSelect) {\n
        origOnSelect();\n
      }\n
    });\n
    options.onClose = (function() {\n
      if (!$__9.parentDestroyed) {\n
        $__9.finishEditing(false);\n
      }\n
      if (origOnClose) {\n
        origOnClose();\n
      }\n
    });\n
    return options;\n
  }\n
}, {}, TextEditor);\n
;\n
registerEditor(\'date\', DateEditor);\n
\n
//# \n
},{"editors":28,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"helpers/unicode":52,"moment":undefined,"pikaday":undefined,"textEditor":39}],33:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  DropdownEditor: {get: function() {\n
      return DropdownEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_editors__,\n
    $__autocompleteEditor__;\n
var $__0 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__0.getEditor,\n
    registerEditor = $__0.registerEditor;\n
var AutocompleteEditor = ($__autocompleteEditor__ = require("autocompleteEditor"), $__autocompleteEditor__ && $__autocompleteEditor__.__esModule && $__autocompleteEditor__ || {default: $__autocompleteEditor__}).AutocompleteEditor;\n
var DropdownEditor = function DropdownEditor() {\n
  $traceurRuntime.superConstructor($DropdownEditor).apply(this, arguments);\n
};\n
var $DropdownEditor = DropdownEditor;\n
($traceurRuntime.createClass)(DropdownEditor, {prepare: function(row, col, prop, td, originalValue, cellProperties) {\n
    $traceurRuntime.superGet(this, $DropdownEditor.prototype, "prepare").call(this, row, col, prop, td, originalValue, cellProperties);\n
    this.cellProperties.filter = false;\n
    this.cellProperties.strict = true;\n
  }}, {}, AutocompleteEditor);\n
;\n
registerEditor(\'dropdown\', DropdownEditor);\n
\n
//# \n
},{"autocompleteEditor":30,"editors":28}],34:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  HandsontableEditor: {get: function() {\n
      return HandsontableEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_unicode__,\n
    $___46__46__47_helpers_47_object__,\n
    $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47_editors__,\n
    $__textEditor__;\n
var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;\n
var extend = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).extend;\n
var setCaretPosition = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).setCaretPosition;\n
var $__3 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),\n
    stopImmediatePropagation = $__3.stopImmediatePropagation,\n
    isImmediatePropagationStopped = $__3.isImmediatePropagationStopped;\n
var $__4 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__4.getEditor,\n
    registerEditor = $__4.registerEditor;\n
var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;\n
var HandsontableEditor = TextEditor.prototype.extend();\n
HandsontableEditor.prototype.createElements = function() {\n
  TextEditor.prototype.createElements.apply(this, arguments);\n
  var DIV = document.createElement(\'DIV\');\n
  DIV.className = \'handsontableEditor\';\n
  this.TEXTAREA_PARENT.appendChild(DIV);\n
  this.htContainer = DIV;\n
  this.htEditor = new Handsontable(DIV, {\n
    autoColumnSize: false,\n
    autoRowSize: false\n
  });\n
  this.assignHooks();\n
};\n
HandsontableEditor.prototype.prepare = function(td, row, col, prop, value, cellProperties) {\n
  TextEditor.prototype.prepare.apply(this, arguments);\n
  var parent = this;\n
  var options = {\n
    startRows: 0,\n
    startCols: 0,\n
    minRows: 0,\n
    minCols: 0,\n
    className: \'listbox\',\n
    copyPaste: false,\n
    autoColumnSize: false,\n
    autoRowSize: false,\n
    cells: function() {\n
      return {readOnly: true};\n
    },\n
    fillHandle: false,\n
    afterOnCellMouseDown: function() {\n
      var value = this.getValue();\n
      if (value !== void 0) {\n
        parent.setValue(value);\n
      }\n
      parent.instance.destroyEditor();\n
    }\n
  };\n
  if (this.cellProperties.handsontable) {\n
    extend(options, cellProperties.handsontable);\n
  }\n
  if (this.htEditor) {\n
    this.htEditor.destroy();\n
  }\n
  this.htEditor = new Handsontable(this.htContainer, options);\n
};\n
var onBeforeKeyDown = function(event) {\n
  if (isImmediatePropagationStopped(event)) {\n
    return;\n
  }\n
  var editor = this.getActiveEditor();\n
  var innerHOT = editor.htEditor.getInstance();\n
  var rowToSelect;\n
  if (event.keyCode == KEY_CODES.ARROW_DOWN) {\n
    if (!innerHOT.getSelected()) {\n
      rowToSelect = 0;\n
    } else {\n
      var selectedRow = innerHOT.getSelected()[0];\n
      var lastRow = innerHOT.countRows() - 1;\n
      rowToSelect = Math.min(lastRow, selectedRow + 1);\n
    }\n
  } else if (event.keyCode == KEY_CODES.ARROW_UP) {\n
    if (innerHOT.getSelected()) {\n
      var selectedRow = innerHOT.getSelected()[0];\n
      rowToSelect = selectedRow - 1;\n
    }\n
  }\n
  if (rowToSelect !== void 0) {\n
    if (rowToSelect < 0) {\n
      innerHOT.deselectCell();\n
    } else {\n
      innerHOT.selectCell(rowToSelect, 0);\n
    }\n
    if (innerHOT.getData().length) {\n
      event.preventDefault();\n
      stopImmediatePropagation(event);\n
      editor.instance.listen();\n
      editor.TEXTAREA.focus();\n
    }\n
  }\n
};\n
HandsontableEditor.prototype.open = function() {\n
  this.instance.addHook(\'beforeKeyDown\', onBeforeKeyDown);\n
  TextEditor.prototype.open.apply(this, arguments);\n
  this.htEditor.render();\n
  if (this.cellProperties.strict) {\n
    this.htEditor.selectCell(0, 0);\n
    this.TEXTAREA.style.visibility = \'hidden\';\n
  } else {\n
    this.htEditor.deselectCell();\n
    this.TEXTAREA.style.visibility = \'visible\';\n
  }\n
  setCaretPosition(this.TEXTAREA, 0, this.TEXTAREA.value.length);\n
};\n
HandsontableEditor.prototype.close = function() {\n
  this.instance.removeHook(\'beforeKeyDown\', onBeforeKeyDown);\n
  this.instance.listen();\n
  TextEditor.prototype.close.apply(this, arguments);\n
};\n
HandsontableEditor.prototype.focus = function() {\n
  this.instance.listen();\n
  TextEditor.prototype.focus.apply(this, arguments);\n
};\n
HandsontableEditor.prototype.beginEditing = function(initialValue) {\n
  var onBeginEditing = this.instance.getSettings().onBeginEditing;\n
  if (onBeginEditing && onBeginEditing() === false) {\n
    return;\n
  }\n
  TextEditor.prototype.beginEditing.apply(this, arguments);\n
};\n
HandsontableEditor.prototype.finishEditing = function(isCancelled, ctrlDown) {\n
  if (this.htEditor.isListening()) {\n
    this.instance.listen();\n
  }\n
  if (this.htEditor.getSelected()) {\n
    var value = this.htEditor.getInstance().getValue();\n
    if (value !== void 0) {\n
      this.setValue(value);\n
    }\n
  }\n
  return TextEditor.prototype.finishEditing.apply(this, arguments);\n
};\n
HandsontableEditor.prototype.assignHooks = function() {\n
  var _this = this;\n
  this.instance.addHook(\'afterDestroy\', function() {\n
    if (_this.htEditor) {\n
      _this.htEditor.destroy();\n
    }\n
  });\n
};\n
;\n
registerEditor(\'handsontable\', HandsontableEditor);\n
\n
//# \n
},{"editors":28,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"helpers/unicode":52,"textEditor":39}],35:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  MobileTextEditor: {get: function() {\n
      return MobileTextEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_unicode__,\n
    $___46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_editors__,\n
    $___95_baseEditor__,\n
    $___46__46__47_eventManager__;\n
var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;\n
var $__1 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),\n
    stopImmediatePropagation = $__1.stopImmediatePropagation,\n
    isImmediatePropagationStopped = $__1.isImmediatePropagationStopped;\n
var $__2 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__2.addClass,\n
    getScrollLeft = $__2.getScrollLeft,\n
    getScrollTop = $__2.getScrollTop,\n
    hasClass = $__2.hasClass,\n
    isChildOf = $__2.isChildOf,\n
    offset = $__2.offset,\n
    outerHeight = $__2.outerHeight,\n
    outerWidth = $__2.outerWidth,\n
    removeClass = $__2.removeClass,\n
    setCaretPosition = $__2.setCaretPosition;\n
var $__3 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__3.getEditor,\n
    registerEditor = $__3.registerEditor;\n
var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;\n
var eventManagerObject = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).eventManager;\n
var MobileTextEditor = BaseEditor.prototype.extend(),\n
    domDimensionsCache = {};\n
var createControls = function() {\n
  this.controls = {};\n
  this.controls.leftButton = document.createElement(\'DIV\');\n
  this.controls.leftButton.className = \'leftButton\';\n
  this.controls.rightButton = document.createElement(\'DIV\');\n
  this.controls.rightButton.className = \'rightButton\';\n
  this.controls.upButton = document.createElement(\'DIV\');\n
  this.controls.upButton.className = \'upButton\';\n
  this.controls.downButton = document.createElement(\'DIV\');\n
  this.controls.downButton.className = \'downButton\';\n
  for (var button in this.controls) {\n
    if (this.controls.hasOwnProperty(button)) {\n
      this.positionControls.appendChild(this.controls[button]);\n
    }\n
  }\n
};\n
MobileTextEditor.prototype.valueChanged = function() {\n
  return this.initValue != this.getValue();\n
};\n
MobileTextEditor.prototype.init = function() {\n
  var that = this;\n
  this.eventManager = eventManagerObject(this.instance);\n
  this.createElements();\n
  this.bindEvents();\n
  this.instance.addHook(\'afterDestroy\', function() {\n
    that.destroy();\n
  });\n
};\n
MobileTextEditor.prototype.getValue = function() {\n
  return this.TEXTAREA.value;\n
};\n
MobileTextEditor.prototype.setValue = function(newValue) {\n
  this.initValue = newValue;\n
  this.TEXTAREA.value = newValue;\n
};\n
MobileTextEditor.prototype.createElements = function() {\n
  this.editorContainer = document.createElement(\'DIV\');\n
  this.editorContainer.className = "htMobileEditorContainer";\n
  this.cellPointer = document.createElement(\'DIV\');\n
  this.cellPointer.className = "cellPointer";\n
  this.moveHandle = document.createElement(\'DIV\');\n
  this.moveHandle.className = "moveHandle";\n
  this.inputPane = document.createElement(\'DIV\');\n
  this.inputPane.className = "inputs";\n
  this.positionControls = document.createElement(\'DIV\');\n
  this.positionControls.className = "positionControls";\n
  this.TEXTAREA = document.createElement(\'TEXTAREA\');\n
  addClass(this.TEXTAREA, \'handsontableInput\');\n
  this.inputPane.appendChild(this.TEXTAREA);\n
  this.editorContainer.appendChild(this.cellPointer);\n
  this.editorContainer.appendChild(this.moveHandle);\n
  this.editorContainer.appendChild(this.inputPane);\n
  this.editorContainer.appendChild(this.positionControls);\n
  createControls.call(this);\n
  document.body.appendChild(this.editorContainer);\n
};\n
MobileTextEditor.prototype.onBeforeKeyDown = function(event) {\n
  var instance = this;\n
  var that = instance.getActiveEditor();\n
  if (event.target !== that.TEXTAREA || isImmediatePropagationStopped(event)) {\n
    return;\n
  }\n
  switch (event.keyCode) {\n
    case KEY_CODES.ENTER:\n
      that.close();\n
      event.preventDefault();\n
      break;\n
    case KEY_CODES.BACKSPACE:\n
      stopImmediatePropagation(event);\n
      break;\n
  }\n
};\n
MobileTextEditor.prototype.open = function() {\n
  this.instance.addHook(\'beforeKeyDown\', this.onBeforeKeyDown);\n
  addClass(this.editorContainer, \'active\');\n
  removeClass(this.cellPointer, \'hidden\');\n
  this.updateEditorPosition();\n
};\n
MobileTextEditor.prototype.focus = function() {\n
  this.TEXTAREA.focus();\n
  setCaretPosition(this.TEXTAREA, this.TEXTAREA.value.length);\n
};\n
MobileTextEditor.prototype.close = function() {\n
  this.TEXTAREA.blur();\n
  this.instance.removeHook(\'beforeKeyDown\', this.onBeforeKeyDown);\n
  removeClass(this.editorContainer, \'active\');\n
};\n
MobileTextEditor.prototype.scrollToView = function() {\n
  var coords = this.instance.getSelectedRange().highlight;\n
  this.instance.view.scrollViewport(coords);\n
};\n
MobileTextEditor.prototype.hideCellPointer = function() {\n
  if (!hasClass(this.cellPointer, \'hidden\')) {\n
    addClass(this.cellPointer, \'hidden\');\n
  }\n
};\n
MobileTextEditor.prototype.updateEditorPosition = function(x, y) {\n
  if (x && y) {\n
    x = parseInt(x, 10);\n
    y = parseInt(y, 10);\n
    this.editorContainer.style.top = y + "px";\n
    this.editorContainer.style.left = x + "px";\n
  } else {\n
    var selection = this.instance.getSelected(),\n
        selectedCell = this.instance.getCell(selection[0], selection[1]);\n
    if (!domDimensionsCache.cellPointer) {\n
      domDimensionsCache.cellPointer = {\n
        height: outerHeight(this.cellPointer),\n
        width: outerWidth(this.cellPointer)\n
      };\n
    }\n
    if (!domDimensionsCache.editorContainer) {\n
      domDimensionsCache.editorContainer = {width: outerWidth(this.editorContainer)};\n
    }\n
    if (selectedCell !== undefined) {\n
      var scrollLeft = this.instance.view.wt.wtOverlays.leftOverlay.trimmingContainer == window ? 0 : getScrollLeft(this.instance.view.wt.wtOverlays.leftOverlay.holder);\n
      var scrollTop = this.instance.view.wt.wtOverlays.topOverlay.trimmingContainer == window ? 0 : getScrollTop(this.instance.view.wt.wtOverlays.topOverlay.holder);\n
      var selectedCellOffset = offset(selectedCell),\n
          selectedCellWidth = outerWidth(selectedCell),\n
          currentScrollPosition = {\n
            x: scrollLeft,\n
            y: scrollTop\n
          };\n
      this.editorContainer.style.top = parseInt(selectedCellOffset.top + outerHeight(selectedCell) - currentScrollPosition.y + domDimensionsCache.cellPointer.height, 10) + "px";\n
      this.editorContainer.style.left = parseInt((window.innerWidth / 2) - (domDimensionsCache.editorContainer.width / 2), 10) + "px";\n
      if (selectedCellOffset.left + selectedCellWidth / 2 > parseInt(this.editorContainer.style.left, 10) + domDimensionsCache.editorContainer.width) {\n
        this.editorContainer.style.left = window.innerWidth - domDimensionsCache.editorContainer.width + "px";\n
      } else if (selectedCellOffset.left + selectedCellWidth / 2 < parseInt(this.editorContainer.style.left, 10) + 20) {\n
        this.editorContainer.style.left = 0 + "px";\n
      }\n
      this.cellPointer.style.left = parseInt(selectedCellOffset.left - (domDimensionsCache.cellPointer.width / 2) - offset(this.editorContainer).left + (selectedCellWidth / 2) - currentScrollPosition.x, 10) + "px";\n
    }\n
  }\n
};\n
MobileTextEditor.prototype.updateEditorData = function() {\n
  var selected = this.instance.getSelected(),\n
      selectedValue = this.instance.getDataAtCell(selected[0], selected[1]);\n
  this.row = selected[0];\n
  this.col = selected[1];\n
  this.setValue(selectedValue);\n
  this.updateEditorPosition();\n
};\n
MobileTextEditor.prototype.prepareAndSave = function() {\n
  var val;\n
  if (!this.valueChanged()) {\n
    return true;\n
  }\n
  if (this.instance.getSettings().trimWhitespace) {\n
    val = [[String.prototype.trim.call(this.getValue())]];\n
  } else {\n
    val = [[this.getValue()]];\n
  }\n
  this.saveValue(val);\n
};\n
MobileTextEditor.prototype.bindEvents = function() {\n
  var that = this;\n
  this.eventManager.addEventListener(this.controls.leftButton, "touchend", function(event) {\n
    that.prepareAndSave();\n
    that.instance.selection.transformStart(0, -1, null, true);\n
    that.updateEditorData();\n
    event.preventDefault();\n
  });\n
  this.eventManager.addEventListener(this.controls.rightButton, "touchend", function(event) {\n
    that.prepareAndSave();\n
    that.instance.selection.transformStart(0, 1, null, true);\n
    that.updateEditorData();\n
    event.preventDefault();\n
  });\n
  this.eventManager.addEventListener(this.controls.upButton, "touchend", function(event) {\n
    that.prepareAndSave();\n
    that.instance.selection.transformStart(-1, 0, null, true);\n
    that.updateEditorData();\n
    event.preventDefault();\n
  });\n
  this.eventManager.addEventListener(this.controls.downButton, "touchend", function(event) {\n
    that.prepareAndSave();\n
    that.instance.selection.transformStart(1, 0, null, true);\n
    that.updateEditorData();\n
    event.preventDefault();\n
  });\n
  this.eventManager.addEventListener(this.moveHandle, "touchstart", function(event) {\n
    if (event.touches.length == 1) {\n
      var touch = event.touches[0],\n
          onTouchPosition = {\n
            x: that.editorContainer.offsetLeft,\n
            y: that.editorContainer.offsetTop\n
          },\n
          onTouchOffset = {\n
            x: touch.pageX - onTouchPosition.x,\n
            y: touch.pageY - onTouchPosition.y\n
          };\n
      that.eventManager.addEventListener(this, "touchmove", function(event) {\n
        var touch = event.touches[0];\n
        that.updateEditorPosition(touch.pageX - onTouchOffset.x, touch.pageY - onTouchOffset.y);\n
        that.hideCellPointer();\n
        event.preventDefault();\n
      });\n
    }\n
  });\n
  this.eventManager.addEventListener(document.body, "touchend", function(event) {\n
    if (!isChildOf(event.target, that.editorContainer) && !isChildOf(event.target, that.instance.rootElement)) {\n
      that.close();\n
    }\n
  });\n
  this.eventManager.addEventListener(this.instance.view.wt.wtOverlays.leftOverlay.holder, "scroll", function(event) {\n
    if (that.instance.view.wt.wtOverlays.leftOverlay.trimmingContainer != window) {\n
      that.hideCellPointer();\n
    }\n
  });\n
  this.eventManager.addEventListener(this.instance.view.wt.wtOverlays.topOverlay.holder, "scroll", function(event) {\n
    if (that.instance.view.wt.wtOverlays.topOverlay.trimmingContainer != window) {\n
      that.hideCellPointer();\n
    }\n
  });\n
};\n
MobileTextEditor.prototype.destroy = function() {\n
  this.eventManager.clear();\n
  this.editorContainer.parentNode.removeChild(this.editorContainer);\n
};\n
;\n
registerEditor(\'mobile\', MobileTextEditor);\n
\n
//# \n
},{"_baseEditor":29,"editors":28,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/unicode":52}],36:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  NumericEditor: {get: function() {\n
      return NumericEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__numeral__,\n
    $___46__46__47_editors__,\n
    $__textEditor__;\n
var numeral = ($__numeral__ = require("numeral"), $__numeral__ && $__numeral__.__esModule && $__numeral__ || {default: $__numeral__}).default;\n
var $__1 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__1.getEditor,\n
    registerEditor = $__1.registerEditor;\n
var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;\n
var NumericEditor = function NumericEditor() {\n
  $traceurRuntime.superConstructor($NumericEditor).apply(this, arguments);\n
};\n
var $NumericEditor = NumericEditor;\n
($traceurRuntime.createClass)(NumericEditor, {beginEditing: function(initialValue) {\n
    if (typeof(initialValue) === \'undefined\' && this.originalValue) {\n
      if (typeof this.cellProperties.language !== \'undefined\') {\n
        numeral.language(this.cellProperties.language);\n
      }\n
      var decimalDelimiter = numeral.languageData().delimiters.decimal;\n
      initialValue = (\'\' + this.originalValue).replace(\'.\', decimalDelimiter);\n
    }\n
    $traceurRuntime.superGet(this, $NumericEditor.prototype, "beginEditing").call(this, initialValue);\n
  }}, {}, TextEditor);\n
;\n
registerEditor(\'numeric\', NumericEditor);\n
\n
//# \n
},{"editors":28,"numeral":"numeral","textEditor":39}],37:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  PasswordEditor: {get: function() {\n
      return PasswordEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_editors__,\n
    $__textEditor__;\n
var empty = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).empty;\n
var $__1 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__1.getEditor,\n
    registerEditor = $__1.registerEditor;\n
var TextEditor = ($__textEditor__ = require("textEditor"), $__textEditor__ && $__textEditor__.__esModule && $__textEditor__ || {default: $__textEditor__}).TextEditor;\n
var PasswordEditor = function PasswordEditor() {\n
  $traceurRuntime.superConstructor($PasswordEditor).apply(this, arguments);\n
};\n
var $PasswordEditor = PasswordEditor;\n
($traceurRuntime.createClass)(PasswordEditor, {createElements: function() {\n
    $traceurRuntime.superGet(this, $PasswordEditor.prototype, "createElements").call(this);\n
    this.TEXTAREA = document.createElement(\'input\');\n
    this.TEXTAREA.setAttribute(\'type\', \'password\');\n
    this.TEXTAREA.className = \'handsontableInput\';\n
    this.textareaStyle = this.TEXTAREA.style;\n
    this.textareaStyle.width = 0;\n
    this.textareaStyle.height = 0;\n
    empty(this.TEXTAREA_PARENT);\n
    this.TEXTAREA_PARENT.appendChild(this.TEXTAREA);\n
  }}, {}, TextEditor);\n
;\n
registerEditor(\'password\', PasswordEditor);\n
\n
//# \n
},{"editors":28,"helpers/dom/element":44,"textEditor":39}],38:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  SelectEditor: {get: function() {\n
      return SelectEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47_helpers_47_unicode__,\n
    $___46__46__47_editors__,\n
    $___95_baseEditor__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    empty = $__0.empty,\n
    fastInnerHTML = $__0.fastInnerHTML,\n
    getComputedStyle = $__0.getComputedStyle,\n
    getCssTransform = $__0.getCssTransform,\n
    getScrollableElement = $__0.getScrollableElement,\n
    offset = $__0.offset,\n
    outerHeight = $__0.outerHeight,\n
    outerWidth = $__0.outerWidth,\n
    resetCssTransform = $__0.resetCssTransform;\n
var stopImmediatePropagation = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;\n
var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;\n
var $__3 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__3.getEditor,\n
    registerEditor = $__3.registerEditor;\n
var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;\n
var SelectEditor = BaseEditor.prototype.extend();\n
SelectEditor.prototype.init = function() {\n
  this.select = document.createElement(\'SELECT\');\n
  addClass(this.select, \'htSelectEditor\');\n
  this.select.style.display = \'none\';\n
  this.instance.rootElement.appendChild(this.select);\n
  this.registerHooks();\n
};\n
SelectEditor.prototype.registerHooks = function() {\n
  var $__5 = this;\n
  this.instance.addHook(\'afterScrollVertically\', (function() {\n
    return $__5.refreshDimensions();\n
  }));\n
  this.instance.addHook(\'afterColumnResize\', (function() {\n
    return $__5.refreshDimensions();\n
  }));\n
  this.instance.addHook(\'afterRowResize\', (function() {\n
    return $__5.refreshDimensions();\n
  }));\n
};\n
SelectEditor.prototype.prepare = function() {\n
  BaseEditor.prototype.prepare.apply(this, arguments);\n
  var selectOptions = this.cellProperties.selectOptions;\n
  var options;\n
  if (typeof selectOptions == \'function\') {\n
    options = this.prepareOptions(selectOptions(this.row, this.col, this.prop));\n
  } else {\n
    options = this.prepareOptions(selectOptions);\n
  }\n
  empty(this.select);\n
  for (var option in options) {\n
    if (options.hasOwnProperty(option)) {\n
      var optionElement = document.createElement(\'OPTION\');\n
      optionElement.value = option;\n
      fastInnerHTML(optionElement, options[option]);\n
      this.select.appendChild(optionElement);\n
    }\n
  }\n
};\n
SelectEditor.prototype.prepareOptions = function(optionsToPrepare) {\n
  var preparedOptions = {};\n
  if (Array.isArray(optionsToPrepare)) {\n
    for (var i = 0,\n
        len = optionsToPrepare.length; i < len; i++) {\n
      preparedOptions[optionsToPrepare[i]] = optionsToPrepare[i];\n
    }\n
  } else if (typeof optionsToPrepare == \'object\') {\n
    preparedOptions = optionsToPrepare;\n
  }\n
  return preparedOptions;\n
};\n
SelectEditor.prototype.getValue = function() {\n
  return this.select.value;\n
};\n
SelectEditor.prototype.setValue = function(value) {\n
  this.select.value = value;\n
};\n
var onBeforeKeyDown = function(event) {\n
  var instance = this;\n
  var editor = instance.getActiveEditor();\n
  switch (event.keyCode) {\n
    case KEY_CODES.ARROW_UP:\n
      var previousOptionIndex = editor.select.selectedIndex - 1;\n
      if (previousOptionIndex >= 0) {\n
        editor.select[previousOptionIndex].selected = true;\n
      }\n
      stopImmediatePropagation(event);\n
      event.preventDefault();\n
      break;\n
    case KEY_CODES.ARROW_DOWN:\n
      var nextOptionIndex = editor.select.selectedIndex + 1;\n
      if (nextOptionIndex <= editor.select.length - 1) {\n
        editor.select[nextOptionIndex].selected = true;\n
      }\n
      stopImmediatePropagation(event);\n
      event.preventDefault();\n
      break;\n
  }\n
};\n
SelectEditor.prototype.checkEditorSection = function() {\n
  if (this.row < this.instance.getSettings().fixedRowsTop) {\n
    if (this.col < this.instance.getSettings().fixedColumnsLeft) {\n
      return \'corner\';\n
    } else {\n
      return \'top\';\n
    }\n
  } else {\n
    if (this.col < this.instance.getSettings().fixedColumnsLeft) {\n
      return \'left\';\n
    }\n
  }\n
};\n
SelectEditor.prototype.open = function() {\n
  this._opened = true;\n
  this.refreshDimensions();\n
  this.select.style.display = \'\';\n
  this.instance.addHook(\'beforeKeyDown\', onBeforeKeyDown);\n
};\n
SelectEditor.prototype.close = function() {\n
  this._opened = false;\n
  this.select.style.display = \'none\';\n
  this.instance.removeHook(\'beforeKeyDown\', onBeforeKeyDown);\n
};\n
SelectEditor.prototype.focus = function() {\n
  this.select.focus();\n
};\n
SelectEditor.prototype.refreshDimensions = function() {\n
  if (this.state !== Handsontable.EditorState.EDITING) {\n
    return;\n
  }\n
  this.TD = this.getEditedCell();\n
  if (!this.TD) {\n
    this.close();\n
    return;\n
  }\n
  var width = outerWidth(this.TD) + 1,\n
      height = outerHeight(this.TD) + 1,\n
      currentOffset = offset(this.TD),\n
      containerOffset = offset(this.instance.rootElement),\n
      scrollableContainer = getScrollableElement(this.TD),\n
      editTop = currentOffset.top - containerOffset.top - 1 - (scrollableContainer.scrollTop || 0),\n
      editLeft = currentOffset.left - containerOffset.left - 1 - (scrollableContainer.scrollLeft || 0),\n
      editorSection = this.checkEditorSection(),\n
      cssTransformOffset;\n
  var settings = this.instance.getSettings();\n
  var rowHeadersCount = settings.rowHeaders ? 1 : 0;\n
  var colHeadersCount = settings.colHeaders ? 1 : 0;\n
  switch (editorSection) {\n
    case \'top\':\n
      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.holder.parentNode);\n
      break;\n
    case \'left\':\n
      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);\n
      break;\n
    case \'corner\':\n
      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode);\n
      break;\n
  }\n
  if (this.instance.getSelected()[0] === 0) {\n
    editTop += 1;\n
  }\n
  if (this.instance.getSelected()[1] === 0) {\n
    editLeft += 1;\n
  }\n
  var selectStyle = this.select.style;\n
  if (cssTransformOffset && cssTransformOffset != -1) {\n
    selectStyle[cssTransformOffset[0]] = cssTransformOffset[1];\n
  } else {\n
    resetCssTransform(this.select);\n
  }\n
  var cellComputedStyle = getComputedStyle(this.TD);\n
  if (parseInt(cellComputedStyle.borderTopWidth, 10) > 0) {\n
    height -= 1;\n
  }\n
  if (parseInt(cellComputedStyle.borderLeftWidth, 10) > 0) {\n
    width -= 1;\n
  }\n
  selectStyle.height = height + \'px\';\n
  selectStyle.minWidth = width + \'px\';\n
  selectStyle.top = editTop + \'px\';\n
  selectStyle.left = editLeft + \'px\';\n
  selectStyle.margin = \'0px\';\n
};\n
SelectEditor.prototype.getEditedCell = function() {\n
  var editorSection = this.checkEditorSection(),\n
      editedCell;\n
  switch (editorSection) {\n
    case \'top\':\n
      editedCell = this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.getCell({\n
        row: this.row,\n
        col: this.col\n
      });\n
      this.select.style.zIndex = 101;\n
      break;\n
    case \'corner\':\n
      editedCell = this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell({\n
        row: this.row,\n
        col: this.col\n
      });\n
      this.select.style.zIndex = 103;\n
      break;\n
    case \'left\':\n
      editedCell = this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.getCell({\n
        row: this.row,\n
        col: this.col\n
      });\n
      this.select.style.zIndex = 102;\n
      break;\n
    default:\n
      editedCell = this.instance.getCell(this.row, this.col);\n
      this.select.style.zIndex = \'\';\n
      break;\n
  }\n
  return editedCell != -1 && editedCell != -2 ? editedCell : void 0;\n
};\n
;\n
registerEditor(\'select\', SelectEditor);\n
\n
//# \n
},{"_baseEditor":29,"editors":28,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/unicode":52}],39:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  TextEditor: {get: function() {\n
      return TextEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $__autoResize__,\n
    $___95_baseEditor__,\n
    $___46__46__47_eventManager__,\n
    $___46__46__47_editors__,\n
    $___46__46__47_helpers_47_unicode__,\n
    $___46__46__47_helpers_47_dom_47_event__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    getCaretPosition = $__0.getCaretPosition,\n
    getComputedStyle = $__0.getComputedStyle,\n
    getCssTransform = $__0.getCssTransform,\n
    getScrollableElement = $__0.getScrollableElement,\n
    innerWidth = $__0.innerWidth,\n
    offset = $__0.offset,\n
    resetCssTransform = $__0.resetCssTransform,\n
    setCaretPosition = $__0.setCaretPosition;\n
var autoResize = ($__autoResize__ = require("autoResize"), $__autoResize__ && $__autoResize__.__esModule && $__autoResize__ || {default: $__autoResize__}).default;\n
var BaseEditor = ($___95_baseEditor__ = require("_baseEditor"), $___95_baseEditor__ && $___95_baseEditor__.__esModule && $___95_baseEditor__ || {default: $___95_baseEditor__}).BaseEditor;\n
var eventManagerObject = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).eventManager;\n
var $__4 = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}),\n
    getEditor = $__4.getEditor,\n
    registerEditor = $__4.registerEditor;\n
var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;\n
var $__6 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),\n
    stopPropagation = $__6.stopPropagation,\n
    stopImmediatePropagation = $__6.stopImmediatePropagation,\n
    isImmediatePropagationStopped = $__6.isImmediatePropagationStopped;\n
var TextEditor = BaseEditor.prototype.extend();\n
TextEditor.prototype.init = function() {\n
  var that = this;\n
  this.createElements();\n
  this.eventManager = eventManagerObject(this);\n
  this.bindEvents();\n
  this.autoResize = autoResize();\n
  this.instance.addHook(\'afterDestroy\', function() {\n
    that.destroy();\n
  });\n
};\n
TextEditor.prototype.getValue = function() {\n
  return this.TEXTAREA.value;\n
};\n
TextEditor.prototype.setValue = function(newValue) {\n
  this.TEXTAREA.value = newValue;\n
};\n
var onBeforeKeyDown = function onBeforeKeyDown(event) {\n
  var instance = this,\n
      that = instance.getActiveEditor(),\n
      ctrlDown;\n
  ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;\n
  if (event.target !== that.TEXTAREA || isImmediatePropagationStopped(event)) {\n
    return;\n
  }\n
  if (event.keyCode === 17 || event.keyCode === 224 || event.keyCode === 91 || event.keyCode === 93) {\n
    stopImmediatePropagation(event);\n
    return;\n
  }\n
  switch (event.keyCode) {\n
    case KEY_CODES.ARROW_RIGHT:\n
      if (that.isInFullEditMode()) {\n
        if ((!that.isWaiting() && !that.allowKeyEventPropagation) || (!that.isWaiting() && that.allowKeyEventPropagation && !that.allowKeyEventPropagation(event.keyCode))) {\n
          stopImmediatePropagation(event);\n
        }\n
      }\n
      break;\n
    case KEY_CODES.ARROW_LEFT:\n
      if (that.isInFullEditMode()) {\n
        if ((!that.isWaiting() && !that.allowKeyEventPropagation) || (!that.isWaiting() && that.allowKeyEventPropagation && !that.allowKeyEventPropagation(event.keyCode))) {\n
          stopImmediatePropagation(event);\n
        }\n
      }\n
      break;\n
    case KEY_CODES.ARROW_UP:\n
    case KEY_CODES.ARROW_DOWN:\n
      if (that.isInFullEditMode()) {\n
        if ((!that.isWaiting() && !that.allowKeyEventPropagation) || (!that.isWaiting() && that.allowKeyEventPropagation && !that.allowKeyEventPropagation(event.keyCode))) {\n
          stopImmediatePropagation(event);\n
        }\n
      }\n
      break;\n
    case KEY_CODES.ENTER:\n
      var selected = that.instance.getSelected();\n
      var isMultipleSelection = !(selected[0] === selected[2] && selected[1] === selected[3]);\n
      if ((ctrlDown && !isMultipleSelection) || event.altKey) {\n
        if (that.isOpened()) {\n
          var caretPosition = getCaretPosition(that.TEXTAREA),\n
              value = that.getValue();\n
          var newValue = value.slice(0, caretPosition) + \'\\n\' + value.slice(caretPosition);\n
          that.setValue(newValue);\n
          setCaretPosition(that.TEXTAREA, caretPosition + 1);\n
        } else {\n
          that.beginEditing(that.originalValue + \'\\n\');\n
        }\n
        stopImmediatePropagation(event);\n
      }\n
      event.preventDefault();\n
      break;\n
    case KEY_CODES.A:\n
    case KEY_CODES.X:\n
    case KEY_CODES.C:\n
    case KEY_CODES.V:\n
      if (ctrlDown) {\n
        stopImmediatePropagation(event);\n
      }\n
      break;\n
    case KEY_CODES.BACKSPACE:\n
    case KEY_CODES.DELETE:\n
    case KEY_CODES.HOME:\n
    case KEY_CODES.END:\n
      stopImmediatePropagation(event);\n
      break;\n
  }\n
  if ([KEY_CODES.ARROW_UP, KEY_CODES.ARROW_RIGHT, KEY_CODES.ARROW_DOWN, KEY_CODES.ARROW_LEFT].indexOf(event.keyCode) === -1) {\n
    that.autoResize.resize(String.fromCharCode(event.keyCode));\n
  }\n
};\n
TextEditor.prototype.open = function() {\n
  this.refreshDimensions();\n
  this.instance.addHook(\'beforeKeyDown\', onBeforeKeyDown);\n
};\n
TextEditor.prototype.close = function() {\n
  this.textareaParentStyle.display = \'none\';\n
  this.autoResize.unObserve();\n
  if (document.activeElement === this.TEXTAREA) {\n
    this.instance.listen();\n
  }\n
  this.instance.removeHook(\'beforeKeyDown\', onBeforeKeyDown);\n
};\n
TextEditor.prototype.focus = function() {\n
  this.TEXTAREA.focus();\n
  setCaretPosition(this.TEXTAREA, this.TEXTAREA.value.length);\n
};\n
TextEditor.prototype.createElements = function() {\n
  this.TEXTAREA = document.createElement(\'TEXTAREA\');\n
  addClass(this.TEXTAREA, \'handsontableInput\');\n
  this.textareaStyle = this.TEXTAREA.style;\n
  this.textareaStyle.width = 0;\n
  this.textareaStyle.height = 0;\n
  this.TEXTAREA_PARENT = document.createElement(\'DIV\');\n
  addClass(this.TEXTAREA_PARENT, \'handsontableInputHolder\');\n
  this.textareaParentStyle = this.TEXTAREA_PARENT.style;\n
  this.textareaParentStyle.top = 0;\n
  this.textareaParentStyle.left = 0;\n
  this.textareaParentStyle.display = \'none\';\n
  this.TEXTAREA_PARENT.appendChild(this.TEXTAREA);\n
  this.instance.rootElement.appendChild(this.TEXTAREA_PARENT);\n
  var that = this;\n
  this.instance._registerTimeout(setTimeout(function() {\n
    that.refreshDimensions();\n
  }, 0));\n
};\n
TextEditor.prototype.checkEditorSection = function() {\n
  if (this.row < this.instance.getSettings().fixedRowsTop) {\n
    if (this.col < this.instance.getSettings().fixedColumnsLeft) {\n
      return \'corner\';\n
    } else {\n
      return \'top\';\n
    }\n
  } else {\n
    if (this.col < this.instance.getSettings().fixedColumnsLeft) {\n
      return \'left\';\n
    }\n
  }\n
};\n
TextEditor.prototype.getEditedCell = function() {\n
  var editorSection = this.checkEditorSection(),\n
      editedCell;\n
  switch (editorSection) {\n
    case \'top\':\n
      editedCell = this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.getCell({\n
        row: this.row,\n
        col: this.col\n
      });\n
      this.textareaParentStyle.zIndex = 101;\n
      break;\n
    case \'corner\':\n
      editedCell = this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.getCell({\n
        row: this.row,\n
        col: this.col\n
      });\n
      this.textareaParentStyle.zIndex = 103;\n
      break;\n
    case \'left\':\n
      editedCell = this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.getCell({\n
        row: this.row,\n
        col: this.col\n
      });\n
      this.textareaParentStyle.zIndex = 102;\n
      break;\n
    default:\n
      editedCell = this.instance.getCell(this.row, this.col);\n
      this.textareaParentStyle.zIndex = "";\n
      break;\n
  }\n
  return editedCell != -1 && editedCell != -2 ? editedCell : void 0;\n
};\n
TextEditor.prototype.refreshDimensions = function() {\n
  if (this.state !== Handsontable.EditorState.EDITING) {\n
    return;\n
  }\n
  this.TD = this.getEditedCell();\n
  if (!this.TD) {\n
    this.close();\n
    return;\n
  }\n
  var currentOffset = offset(this.TD),\n
      containerOffset = offset(this.instance.rootElement),\n
      scrollableContainer = getScrollableElement(this.TD),\n
      editTop = currentOffset.top - containerOffset.top - 1 - (scrollableContainer.scrollTop || 0),\n
      editLeft = currentOffset.left - containerOffset.left - 1 - (scrollableContainer.scrollLeft || 0),\n
      settings = this.instance.getSettings(),\n
      rowHeadersCount = settings.rowHeaders ? 1 : 0,\n
      colHeadersCount = settings.colHeaders ? 1 : 0,\n
      editorSection = this.checkEditorSection(),\n
      backgroundColor = this.TD.style.backgroundColor,\n
      cssTransformOffset;\n
  switch (editorSection) {\n
    case \'top\':\n
      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topOverlay.clone.wtTable.holder.parentNode);\n
      break;\n
    case \'left\':\n
      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);\n
      break;\n
    case \'corner\':\n
      cssTransformOffset = getCssTransform(this.instance.view.wt.wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode);\n
      break;\n
  }\n
  if (this.instance.getSelected()[0] === 0) {\n
    editTop += 1;\n
  }\n
  if (this.instance.getSelected()[1] === 0) {\n
    editLeft += 1;\n
  }\n
  if (cssTransformOffset && cssTransformOffset != -1) {\n
    this.textareaParentStyle[cssTransformOffset[0]] = cssTransformOffset[1];\n
  } else {\n
    resetCssTransform(this.textareaParentStyle);\n
  }\n
  this.textareaParentStyle.top = editTop + \'px\';\n
  this.textareaParentStyle.left = editLeft + \'px\';\n
  var cellTopOffset = this.TD.offsetTop - this.instance.view.wt.wtOverlays.topOverlay.getScrollPosition(),\n
      cellLeftOffset = this.TD.offsetLeft - this.instance.view.wt.wtOverlays.leftOverlay.getScrollPosition();\n
  var width = innerWidth(this.TD) - 8;\n
  var maxWidth = this.instance.view.maximumVisibleElementWidth(cellLeftOffset) - 9;\n
  var height = this.TD.scrollHeight + 1;\n
  var maxHeight = Math.max(this.instance.view.maximumVisibleElementHeight(cellTopOffset) - 2, 23);\n
  var cellComputedStyle = getComputedStyle(this.TD);\n
  this.TEXTAREA.style.fontSize = cellComputedStyle.fontSize;\n
  this.TEXTAREA.style.fontFamily = cellComputedStyle.fontFamily;\n
  this.TEXTAREA.style.backgroundColor = \'\';\n
  this.TEXTAREA.style.backgroundColor = backgroundColor ? backgroundColor : getComputedStyle(this.TEXTAREA).backgroundColor;\n
  this.autoResize.init(this.TEXTAREA, {\n
    minHeight: Math.min(height, maxHeight),\n
    maxHeight: maxHeight,\n
    minWidth: Math.min(width, maxWidth),\n
    maxWidth: maxWidth\n
  }, true);\n
  this.textareaParentStyle.display = \'block\';\n
};\n
TextEditor.prototype.bindEvents = function() {\n
  var editor = this;\n
  this.eventManager.addEventListener(this.TEXTAREA, \'cut\', function(event) {\n
    stopPropagation(event);\n
  });\n
  this.eventManager.addEventListener(this.TEXTAREA, \'paste\', function(event) {\n
    stopPropagation(event);\n
  });\n
  this.instance.addHook(\'afterScrollVertically\', function() {\n
    editor.refreshDimensions();\n
  });\n
  this.instance.addHook(\'afterColumnResize\', function() {\n
    editor.refreshDimensions();\n
    editor.focus();\n
  });\n
  this.instance.addHook(\'afterRowResize\', function() {\n
    editor.refreshDimensions();\n
    editor.focus();\n
  });\n
  this.instance.addHook(\'afterDestroy\', function() {\n
    editor.eventManager.destroy();\n
  });\n
};\n
TextEditor.prototype.destroy = function() {\n
  this.eventManager.destroy();\n
};\n
;\n
registerEditor(\'text\', TextEditor);\n
\n
//# \n
},{"_baseEditor":29,"autoResize":"autoResize","editors":28,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/unicode":52}],40:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  EventManager: {get: function() {\n
      return EventManager;\n
    }},\n
  eventManager: {get: function() {\n
      return eventManager;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__helpers_47_dom_47_element__,\n
    $__helpers_47_browser__;\n
var $__0 = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__}),\n
    polymerWrap = $__0.polymerWrap,\n
    closest = $__0.closest;\n
var isWebComponentSupportedNatively = ($__helpers_47_browser__ = require("helpers/browser"), $__helpers_47_browser__ && $__helpers_47_browser__.__esModule && $__helpers_47_browser__ || {default: $__helpers_47_browser__}).isWebComponentSupportedNatively;\n
var EventManager = function EventManager() {\n
  var context = arguments[0] !== (void 0) ? arguments[0] : null;\n
  this.context = context || this;\n
  if (!this.context.eventListeners) {\n
    this.context.eventListeners = [];\n
  }\n
};\n
($traceurRuntime.createClass)(EventManager, {\n
  addEventListener: function(element, eventName, callback) {\n
    var $__2 = this;\n
    var context = this.context;\n
    function callbackProxy(event) {\n
      if (event.target == void 0 && event.srcElement != void 0) {\n
        if (event.definePoperty) {\n
          event.definePoperty(\'target\', {value: event.srcElement});\n
        } else {\n
          event.target = event.srcElement;\n
        }\n
      }\n
      if (event.preventDefault == void 0) {\n
        if (event.definePoperty) {\n
          event.definePoperty(\'preventDefault\', {value: function() {\n
              this.returnValue = false;\n
            }});\n
        } else {\n
          event.preventDefault = function() {\n
            this.returnValue = false;\n
          };\n
        }\n
      }\n
      event = extendEvent(context, event);\n
      callback.call(this, event);\n
    }\n
    this.context.eventListeners.push({\n
      element: element,\n
      event: eventName,\n
      callback: callback,\n
      callbackProxy: callbackProxy\n
    });\n
    if (window.addEventListener) {\n
      element.addEventListener(eventName, callbackProxy, false);\n
    } else {\n
      element.attachEvent(\'on\' + eventName, callbackProxy);\n
    }\n
    Handsontable.countEventManagerListeners++;\n
    return (function() {\n
      $__2.removeEventListener(element, eventName, callback);\n
    });\n
  },\n
  removeEventListener: function(element, eventName, callback) {\n
    var len = this.context.eventListeners.length;\n
    var tmpEvent;\n
    while (len--) {\n
      tmpEvent = this.context.eventListeners[len];\n
      if (tmpEvent.event == eventName && tmpEvent.element == element) {\n
        if (callback && callback != tmpEvent.callback) {\n
          continue;\n
        }\n
        this.context.eventListeners.splice(len, 1);\n
        if (tmpEvent.element.removeEventListener) {\n
          tmpEvent.element.removeEventListener(tmpEvent.event, tmpEvent.callbackProxy, false);\n
        } else {\n
          tmpEvent.element.detachEvent(\'on\' + tmpEvent.event, tmpEvent.callbackProxy);\n
        }\n
        Handsontable.countEventManagerListeners--;\n
      }\n
    }\n
  },\n
  clearEvents: function() {\n
    if (!this.context) {\n
      return;\n
    }\n
    var len = this.context.eventListeners.length;\n
    while (len--) {\n
      var event = this.context.eventListeners[len];\n
      if (event) {\n
        this.removeEventListener(event.element, event.event, event.callback);\n
      }\n
    }\n
  },\n
  clear: function() {\n
    this.clearEvents();\n
  },\n
  destroy: function() {\n
    this.clearEvents();\n
    this.context = null;\n
  },\n
  fireEvent: function(element, eventName) {\n
    var options = {\n
      bubbles: true,\n
      cancelable: (eventName !== \'mousemove\'),\n
      view: window,\n
      detail: 0,\n
      screenX: 0,\n
      screenY: 0,\n
      clientX: 1,\n
      clientY: 1,\n
      ctrlKey: false,\n
      altKey: false,\n
      shiftKey: false,\n
      metaKey: false,\n
      button: 0,\n
      relatedTarget: undefined\n
    };\n
    var event;\n
    if (document.createEvent) {\n
      event = document.createEvent(\'MouseEvents\');\n
      event.initMouseEvent(eventName, options.bubbles, options.cancelable, options.view, options.detail, options.screenX, options.screenY, options.clientX, options.clientY, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, options.button, options.relatedTarget || document.body.parentNode);\n
    } else {\n
      event = document.createEventObject();\n
    }\n
    if (element.dispatchEvent) {\n
      element.dispatchEvent(event);\n
    } else {\n
      element.fireEvent(\'on\' + eventName, event);\n
    }\n
  }\n
}, {});\n
function extendEvent(context, event) {\n
  var componentName = \'HOT-TABLE\';\n
  var isHotTableSpotted;\n
  var fromElement;\n
  var realTarget;\n
  var target;\n
  var len;\n
  event.isTargetWebComponent = false;\n
  event.realTarget = event.target;\n
  if (!Handsontable.eventManager.isHotTableEnv) {\n
    return event;\n
  }\n
  event = polymerWrap(event);\n
  len = event.path ? event.path.length : 0;\n
  while (len--) {\n
    if (event.path[len].nodeName === componentName) {\n
      isHotTableSpotted = true;\n
    } else if (isHotTableSpotted && event.path[len].shadowRoot) {\n
      target = event.path[len];\n
      break;\n
    }\n
    if (len === 0 && !target) {\n
      target = event.path[len];\n
    }\n
  }\n
  if (!target) {\n
    target = event.target;\n
  }\n
  event.isTargetWebComponent = true;\n
  if (isWebComponentSupportedNatively()) {\n
    event.realTarget = event.srcElement || event.toElement;\n
  } else if (context instanceof Handsontable.Core || context instanceof Walkontable) {\n
    if (context instanceof Handsontable.Core) {\n
      fromElement = context.view.wt.wtTable.TABLE;\n
    } else if (context instanceof Walkontable) {\n
      fromElement = context.wtTable.TABLE.parentNode.parentNode;\n
    }\n
    realTarget = closest(event.target, [componentName], fromElement);\n
    if (realTarget) {\n
      event.realTarget = fromElement.querySelector(componentName) || event.target;\n
    } else {\n
      event.realTarget = event.target;\n
    }\n
  }\n
  Object.defineProperty(event, \'target\', {\n
    get: function() {\n
      return polymerWrap(target);\n
    },\n
    enumerable: true,\n
    configurable: true\n
  });\n
  return event;\n
}\n
;\n
window.Handsontable = window.Handsontable || {};\n
Handsontable.countEventManagerListeners = 0;\n
Handsontable.eventManager = eventManager;\n
function eventManager(context) {\n
  return new EventManager(context);\n
}\n
\n
//# \n
},{"helpers/browser":42,"helpers/dom/element":44}],41:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  to2dArray: {get: function() {\n
      return to2dArray;\n
    }},\n
  extendArray: {get: function() {\n
      return extendArray;\n
    }},\n
  pivot: {get: function() {\n
      return pivot;\n
    }},\n
  arrayFilter: {get: function() {\n
      return arrayFilter;\n
    }},\n
  arrayEach: {get: function() {\n
      return arrayEach;\n
    }},\n
  arraySum: {get: function() {\n
      return arraySum;\n
    }},\n
  arrayAvg: {get: function() {\n
      return arrayAvg;\n
    }},\n
  __esModule: {value: true}\n
});\n
function to2dArray(arr) {\n
  var i = 0,\n
      ilen = arr.length;\n
  while (i < ilen) {\n
    arr[i] = [arr[i]];\n
    i++;\n
  }\n
}\n
function extendArray(arr, extension) {\n
  var i = 0,\n
      ilen = extension.length;\n
  while (i < ilen) {\n
    arr.push(extension[i]);\n
    i++;\n
  }\n
}\n
function pivot(arr) {\n
  var pivotedArr = [];\n
  if (!arr || arr.length === 0 || !arr[0] || arr[0].length === 0) {\n
    return pivotedArr;\n
  }\n
  var rowCount = arr.length;\n
  var colCount = arr[0].length;\n
  for (var i = 0; i < rowCount; i++) {\n
    for (var j = 0; j < colCount; j++)

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAc=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="7" aka="AAAAAAAAAAc=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

 {\n
      if (!pivotedArr[j]) {\n
        pivotedArr[j] = [];\n
      }\n
      pivotedArr[j][i] = arr[i][j];\n
    }\n
  }\n
  return pivotedArr;\n
}\n
function arrayReduce(array, iteratee, accumulator, initFromArray) {\n
  var index = -1,\n
      length = array.length;\n
  if (initFromArray && length) {\n
    accumulator = array[++index];\n
  }\n
  while (++index < length) {\n
    accumulator = iteratee(accumulator, array[index], index, array);\n
  }\n
  return accumulator;\n
}\n
function arrayFilter(array, predicate) {\n
  var index = -1,\n
      length = array.length,\n
      resIndex = -1,\n
      result = [];\n
  while (++index < length) {\n
    var value = array[index];\n
    if (predicate(value, index, array)) {\n
      result[++resIndex] = value;\n
    }\n
  }\n
  return result;\n
}\n
function arrayEach(array, iteratee) {\n
  var index = -1,\n
      length = array.length;\n
  while (++index < length) {\n
    if (iteratee(array[index], index, array) === false) {\n
      break;\n
    }\n
  }\n
  return array;\n
}\n
function arraySum(array) {\n
  return arrayReduce(array, (function(a, b) {\n
    return (a + b);\n
  }), 0);\n
}\n
function arrayAvg(array) {\n
  if (!array.length) {\n
    return 0;\n
  }\n
  return arraySum(array) / array.length;\n
}\n
\n
//# \n
},{}],42:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  isIE8: {get: function() {\n
      return isIE8;\n
    }},\n
  isIE9: {get: function() {\n
      return isIE9;\n
    }},\n
  isSafari: {get: function() {\n
      return isSafari;\n
    }},\n
  isChrome: {get: function() {\n
      return isChrome;\n
    }},\n
  isMobileBrowser: {get: function() {\n
      return isMobileBrowser;\n
    }},\n
  isTouchSupported: {get: function() {\n
      return isTouchSupported;\n
    }},\n
  isWebComponentSupportedNatively: {get: function() {\n
      return isWebComponentSupportedNatively;\n
    }},\n
  hasCaptionProblem: {get: function() {\n
      return hasCaptionProblem;\n
    }},\n
  __esModule: {value: true}\n
});\n
var _isIE8 = !(document.createTextNode(\'test\').textContent);\n
function isIE8() {\n
  return _isIE8;\n
}\n
var _isIE9 = !!(document.documentMode);\n
function isIE9() {\n
  return _isIE9;\n
}\n
var _isSafari = (/Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor));\n
function isSafari() {\n
  return _isSafari;\n
}\n
var _isChrome = (/Chrome/.test(navigator.userAgent) && /Google/.test(navigator.vendor));\n
function isChrome() {\n
  return _isChrome;\n
}\n
function isMobileBrowser(userAgent) {\n
  if (!userAgent) {\n
    userAgent = navigator.userAgent;\n
  }\n
  return (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(userAgent));\n
}\n
function isTouchSupported() {\n
  return (\'ontouchstart\' in window);\n
}\n
function isWebComponentSupportedNatively() {\n
  var test = document.createElement(\'div\');\n
  return test.createShadowRoot && test.createShadowRoot.toString().match(/\\[native code\\]/) ? true : false;\n
}\n
var _hasCaptionProblem;\n
function detectCaptionProblem() {\n
  var TABLE = document.createElement(\'TABLE\');\n
  TABLE.style.borderSpacing = 0;\n
  TABLE.style.borderWidth = 0;\n
  TABLE.style.padding = 0;\n
  var TBODY = document.createElement(\'TBODY\');\n
  TABLE.appendChild(TBODY);\n
  TBODY.appendChild(document.createElement(\'TR\'));\n
  TBODY.firstChild.appendChild(document.createElement(\'TD\'));\n
  TBODY.firstChild.firstChild.innerHTML = \'<tr><td>t<br>t</td></tr>\';\n
  var CAPTION = document.createElement(\'CAPTION\');\n
  CAPTION.innerHTML = \'c<br>c<br>c<br>c\';\n
  CAPTION.style.padding = 0;\n
  CAPTION.style.margin = 0;\n
  TABLE.insertBefore(CAPTION, TBODY);\n
  document.body.appendChild(TABLE);\n
  _hasCaptionProblem = (TABLE.offsetHeight < 2 * TABLE.lastChild.offsetHeight);\n
  document.body.removeChild(TABLE);\n
}\n
function hasCaptionProblem() {\n
  if (_hasCaptionProblem === void 0) {\n
    detectCaptionProblem();\n
  }\n
  return _hasCaptionProblem;\n
}\n
\n
//# \n
},{}],43:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  spreadsheetColumnLabel: {get: function() {\n
      return spreadsheetColumnLabel;\n
    }},\n
  createSpreadsheetData: {get: function() {\n
      return createSpreadsheetData;\n
    }},\n
  createSpreadsheetObjectData: {get: function() {\n
      return createSpreadsheetObjectData;\n
    }},\n
  translateRowsToColumns: {get: function() {\n
      return translateRowsToColumns;\n
    }},\n
  cellMethodLookupFactory: {get: function() {\n
      return cellMethodLookupFactory;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__object__;\n
var getPrototypeOf = ($__object__ = require("object"), $__object__ && $__object__.__esModule && $__object__ || {default: $__object__}).getPrototypeOf;\n
function spreadsheetColumnLabel(index) {\n
  var dividend = index + 1;\n
  var columnLabel = \'\';\n
  var modulo;\n
  while (dividend > 0) {\n
    modulo = (dividend - 1) % 26;\n
    columnLabel = String.fromCharCode(65 + modulo) + columnLabel;\n
    dividend = parseInt((dividend - modulo) / 26, 10);\n
  }\n
  return columnLabel;\n
}\n
function createSpreadsheetData(rowCount, colCount) {\n
  rowCount = typeof rowCount === \'number\' ? rowCount : 100;\n
  colCount = typeof colCount === \'number\' ? colCount : 4;\n
  var rows = [],\n
      i,\n
      j;\n
  for (i = 0; i < rowCount; i++) {\n
    var row = [];\n
    for (j = 0; j < colCount; j++) {\n
      row.push(spreadsheetColumnLabel(j) + (i + 1));\n
    }\n
    rows.push(row);\n
  }\n
  return rows;\n
}\n
function createSpreadsheetObjectData(rowCount, colCount) {\n
  rowCount = typeof rowCount === \'number\' ? rowCount : 100;\n
  colCount = typeof colCount === \'number\' ? colCount : 4;\n
  var rows = [],\n
      i,\n
      j;\n
  for (i = 0; i < rowCount; i++) {\n
    var row = {};\n
    for (j = 0; j < colCount; j++) {\n
      row[\'prop\' + j] = spreadsheetColumnLabel(j) + (i + 1);\n
    }\n
    rows.push(row);\n
  }\n
  return rows;\n
}\n
function translateRowsToColumns(input) {\n
  var i,\n
      ilen,\n
      j,\n
      jlen,\n
      output = [],\n
      olen = 0;\n
  for (i = 0, ilen = input.length; i < ilen; i++) {\n
    for (j = 0, jlen = input[i].length; j < jlen; j++) {\n
      if (j == olen) {\n
        output.push([]);\n
        olen++;\n
      }\n
      output[j].push(input[i][j]);\n
    }\n
  }\n
  return output;\n
}\n
function cellMethodLookupFactory(methodName, allowUndefined) {\n
  allowUndefined = typeof allowUndefined == \'undefined\' ? true : allowUndefined;\n
  return function cellMethodLookup(row, col) {\n
    return (function getMethodFromProperties(properties) {\n
      if (!properties) {\n
        return;\n
      } else if (properties.hasOwnProperty(methodName) && properties[methodName] !== void 0) {\n
        return properties[methodName];\n
      } else if (properties.hasOwnProperty(\'type\') && properties.type) {\n
        var type;\n
        if (typeof properties.type != \'string\') {\n
          throw new Error(\'Cell type must be a string \');\n
        }\n
        type = translateTypeNameToObject(properties.type);\n
        if (type.hasOwnProperty(methodName)) {\n
          return type[methodName];\n
        } else if (allowUndefined) {\n
          return;\n
        }\n
      }\n
      return getMethodFromProperties(getPrototypeOf(properties));\n
    })(typeof row == \'number\' ? this.getCellMeta(row, col) : row);\n
  };\n
  function translateTypeNameToObject(typeName) {\n
    var type = Handsontable.cellTypes[typeName];\n
    if (typeof type == \'undefined\') {\n
      throw new Error(\'You declared cell type "\' + typeName + \'" as a string that is not mapped to a known object. \' + \'Cell type must be an object or a string mapped to an object in Handsontable.cellTypes\');\n
    }\n
    return type;\n
  }\n
}\n
\n
//# \n
},{"object":49}],44:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  closest: {get: function() {\n
      return closest;\n
    }},\n
  isChildOf: {get: function() {\n
      return isChildOf;\n
    }},\n
  isChildOfWebComponentTable: {get: function() {\n
      return isChildOfWebComponentTable;\n
    }},\n
  polymerWrap: {get: function() {\n
      return polymerWrap;\n
    }},\n
  polymerUnwrap: {get: function() {\n
      return polymerUnwrap;\n
    }},\n
  index: {get: function() {\n
      return index;\n
    }},\n
  hasClass: {get: function() {\n
      return hasClass;\n
    }},\n
  addClass: {get: function() {\n
      return addClass;\n
    }},\n
  removeClass: {get: function() {\n
      return removeClass;\n
    }},\n
  removeTextNodes: {get: function() {\n
      return removeTextNodes;\n
    }},\n
  empty: {get: function() {\n
      return empty;\n
    }},\n
  HTML_CHARACTERS: {get: function() {\n
      return HTML_CHARACTERS;\n
    }},\n
  fastInnerHTML: {get: function() {\n
      return fastInnerHTML;\n
    }},\n
  fastInnerText: {get: function() {\n
      return fastInnerText;\n
    }},\n
  isVisible: {get: function() {\n
      return isVisible;\n
    }},\n
  offset: {get: function() {\n
      return offset;\n
    }},\n
  getWindowScrollTop: {get: function() {\n
      return getWindowScrollTop;\n
    }},\n
  getWindowScrollLeft: {get: function() {\n
      return getWindowScrollLeft;\n
    }},\n
  getScrollTop: {get: function() {\n
      return getScrollTop;\n
    }},\n
  getScrollLeft: {get: function() {\n
      return getScrollLeft;\n
    }},\n
  getScrollableElement: {get: function() {\n
      return getScrollableElement;\n
    }},\n
  getTrimmingContainer: {get: function() {\n
      return getTrimmingContainer;\n
    }},\n
  getStyle: {get: function() {\n
      return getStyle;\n
    }},\n
  getComputedStyle: {get: function() {\n
      return getComputedStyle;\n
    }},\n
  outerWidth: {get: function() {\n
      return outerWidth;\n
    }},\n
  outerHeight: {get: function() {\n
      return outerHeight;\n
    }},\n
  innerHeight: {get: function() {\n
      return innerHeight;\n
    }},\n
  innerWidth: {get: function() {\n
      return innerWidth;\n
    }},\n
  addEvent: {get: function() {\n
      return addEvent;\n
    }},\n
  removeEvent: {get: function() {\n
      return removeEvent;\n
    }},\n
  getCaretPosition: {get: function() {\n
      return getCaretPosition;\n
    }},\n
  getSelectionEndPosition: {get: function() {\n
      return getSelectionEndPosition;\n
    }},\n
  setCaretPosition: {get: function() {\n
      return setCaretPosition;\n
    }},\n
  getScrollbarWidth: {get: function() {\n
      return getScrollbarWidth;\n
    }},\n
  setOverlayPosition: {get: function() {\n
      return setOverlayPosition;\n
    }},\n
  getCssTransform: {get: function() {\n
      return getCssTransform;\n
    }},\n
  resetCssTransform: {get: function() {\n
      return resetCssTransform;\n
    }},\n
  isInput: {get: function() {\n
      return isInput;\n
    }},\n
  isOutsideInput: {get: function() {\n
      return isOutsideInput;\n
    }},\n
  requestAnimationFrame: {get: function() {\n
      return requestAnimationFrame;\n
    }},\n
  cancelAnimationFrame: {get: function() {\n
      return cancelAnimationFrame;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_browser__;\n
var $__0 = ($___46__46__47_browser__ = require("../browser"), $___46__46__47_browser__ && $___46__46__47_browser__.__esModule && $___46__46__47_browser__ || {default: $___46__46__47_browser__}),\n
    isIE8 = $__0.isIE8,\n
    isIE9 = $__0.isIE9,\n
    isSafari = $__0.isSafari,\n
    hasCaptionProblem = $__0.hasCaptionProblem;\n
function closest(element, nodes, until) {\n
  while (element != null && element !== until) {\n
    if (element.nodeType === Node.ELEMENT_NODE && (nodes.indexOf(element.nodeName) > -1 || nodes.indexOf(element) > -1)) {\n
      return element;\n
    }\n
    if (element.host && element.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n
      element = element.host;\n
    } else {\n
      element = element.parentNode;\n
    }\n
  }\n
  return null;\n
}\n
function isChildOf(child, parent) {\n
  var node = child.parentNode;\n
  var queriedParents = [];\n
  if (typeof parent === "string") {\n
    queriedParents = Array.prototype.slice.call(document.querySelectorAll(parent), 0);\n
  } else {\n
    queriedParents.push(parent);\n
  }\n
  while (node != null) {\n
    if (queriedParents.indexOf(node) > -1) {\n
      return true;\n
    }\n
    node = node.parentNode;\n
  }\n
  return false;\n
}\n
function isChildOfWebComponentTable(element) {\n
  var hotTableName = \'hot-table\',\n
      result = false,\n
      parentNode;\n
  parentNode = polymerWrap(element);\n
  function isHotTable(element) {\n
    return element.nodeType === Node.ELEMENT_NODE && element.nodeName === hotTableName.toUpperCase();\n
  }\n
  while (parentNode != null) {\n
    if (isHotTable(parentNode)) {\n
      result = true;\n
      break;\n
    } else if (parentNode.host && parentNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n
      result = isHotTable(parentNode.host);\n
      if (result) {\n
        break;\n
      }\n
      parentNode = parentNode.host;\n
    }\n
    parentNode = parentNode.parentNode;\n
  }\n
  return result;\n
}\n
function polymerWrap(element) {\n
  return typeof Polymer !== \'undefined\' && typeof wrap === \'function\' ? wrap(element) : element;\n
}\n
function polymerUnwrap(element) {\n
  return typeof Polymer !== \'undefined\' && typeof unwrap === \'function\' ? unwrap(element) : element;\n
}\n
function index(element) {\n
  var i = 0;\n
  if (element.previousSibling) {\n
    while (element = element.previousSibling) {\n
      ++i;\n
    }\n
  }\n
  return i;\n
}\n
var classListSupport = document.documentElement.classList ? true : false;\n
var _hasClass,\n
    _addClass,\n
    _removeClass;\n
function filterEmptyClassNames(classNames) {\n
  var len = 0,\n
      result = [];\n
  if (!classNames || !classNames.length) {\n
    return result;\n
  }\n
  while (classNames[len]) {\n
    result.push(classNames[len]);\n
    len++;\n
  }\n
  return result;\n
}\n
if (classListSupport) {\n
  var isSupportMultipleClassesArg = (function() {\n
    var element = document.createElement(\'div\');\n
    element.classList.add(\'test\', \'test2\');\n
    return element.classList.contains(\'test2\');\n
  }());\n
  _hasClass = function _hasClass(element, className) {\n
    if (className === \'\') {\n
      return false;\n
    }\n
    return element.classList.contains(className);\n
  };\n
  _addClass = function _addClass(element, className) {\n
    var len = 0;\n
    if (typeof className === \'string\') {\n
      className = className.split(\' \');\n
    }\n
    className = filterEmptyClassNames(className);\n
    if (isSupportMultipleClassesArg) {\n
      element.classList.add.apply(element.classList, className);\n
    } else {\n
      while (className && className[len]) {\n
        element.classList.add(className[len]);\n
        len++;\n
      }\n
    }\n
  };\n
  _removeClass = function _removeClass(element, className) {\n
    var len = 0;\n
    if (typeof className === \'string\') {\n
      className = className.split(\' \');\n
    }\n
    className = filterEmptyClassNames(className);\n
    if (isSupportMultipleClassesArg) {\n
      element.classList.remove.apply(element.classList, className);\n
    } else {\n
      while (className && className[len]) {\n
        element.classList.remove(className[len]);\n
        len++;\n
      }\n
    }\n
  };\n
} else {\n
  var createClassNameRegExp = function createClassNameRegExp(className) {\n
    return new RegExp(\'(\\\\s|^)\' + className + \'(\\\\s|$)\');\n
  };\n
  _hasClass = function _hasClass(element, className) {\n
    return element.className.match(createClassNameRegExp(className)) ? true : false;\n
  };\n
  _addClass = function _addClass(element, className) {\n
    var len = 0,\n
        _className = element.className;\n
    if (typeof className === \'string\') {\n
      className = className.split(\' \');\n
    }\n
    if (_className === \'\') {\n
      _className = className.join(\' \');\n
    } else {\n
      while (className && className[len]) {\n
        if (!createClassNameRegExp(className[len]).test(_className)) {\n
          _className += \' \' + className[len];\n
        }\n
        len++;\n
      }\n
    }\n
    element.className = _className;\n
  };\n
  _removeClass = function _removeClass(element, className) {\n
    var len = 0,\n
        _className = element.className;\n
    if (typeof className === \'string\') {\n
      className = className.split(\' \');\n
    }\n
    while (className && className[len]) {\n
      _className = _className.replace(createClassNameRegExp(className[len]), \' \').trim();\n
      len++;\n
    }\n
    if (element.className !== _className) {\n
      element.className = _className;\n
    }\n
  };\n
}\n
function hasClass(element, className) {\n
  return _hasClass(element, className);\n
}\n
function addClass(element, className) {\n
  return _addClass(element, className);\n
}\n
function removeClass(element, className) {\n
  return _removeClass(element, className);\n
}\n
function removeTextNodes(element, parent) {\n
  if (element.nodeType === 3) {\n
    parent.removeChild(element);\n
  } else if ([\'TABLE\', \'THEAD\', \'TBODY\', \'TFOOT\', \'TR\'].indexOf(element.nodeName) > -1) {\n
    var childs = element.childNodes;\n
    for (var i = childs.length - 1; i >= 0; i--) {\n
      removeTextNodes(childs[i], element);\n
    }\n
  }\n
}\n
function empty(element) {\n
  var child;\n
  while (child = element.lastChild) {\n
    element.removeChild(child);\n
  }\n
}\n
var HTML_CHARACTERS = /(<(.*)>|&(.*);)/;\n
function fastInnerHTML(element, content) {\n
  if (HTML_CHARACTERS.test(content)) {\n
    element.innerHTML = content;\n
  } else {\n
    fastInnerText(element, content);\n
  }\n
}\n
var textContextSupport = document.createTextNode(\'test\').textContent ? true : false;\n
function fastInnerText(element, content) {\n
  var child = element.firstChild;\n
  if (child && child.nodeType === 3 && child.nextSibling === null) {\n
    if (textContextSupport) {\n
      child.textContent = content;\n
    } else {\n
      child.data = content;\n
    }\n
  } else {\n
    empty(element);\n
    element.appendChild(document.createTextNode(content));\n
  }\n
}\n
function isVisible(elem) {\n
  var next = elem;\n
  while (polymerUnwrap(next) !== document.documentElement) {\n
    if (next === null) {\n
      return false;\n
    } else if (next.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n
      if (next.host) {\n
        if (next.host.impl) {\n
          return isVisible(next.host.impl);\n
        } else if (next.host) {\n
          return isVisible(next.host);\n
        } else {\n
          throw new Error("Lost in Web Components world");\n
        }\n
      } else {\n
        return false;\n
      }\n
    } else if (next.style.display === \'none\') {\n
      return false;\n
    }\n
    next = next.parentNode;\n
  }\n
  return true;\n
}\n
function offset(elem) {\n
  var offsetLeft,\n
      offsetTop,\n
      lastElem,\n
      docElem,\n
      box;\n
  docElem = document.documentElement;\n
  if (hasCaptionProblem() && elem.firstChild && elem.firstChild.nodeName === \'CAPTION\') {\n
    box = elem.getBoundingClientRect();\n
    return {\n
      top: box.top + (window.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),\n
      left: box.left + (window.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)\n
    };\n
  }\n
  offsetLeft = elem.offsetLeft;\n
  offsetTop = elem.offsetTop;\n
  lastElem = elem;\n
  while (elem = elem.offsetParent) {\n
    if (elem === document.body) {\n
      break;\n
    }\n
    offsetLeft += elem.offsetLeft;\n
    offsetTop += elem.offsetTop;\n
    lastElem = elem;\n
  }\n
  if (lastElem && lastElem.style.position === \'fixed\') {\n
    offsetLeft += window.pageXOffset || docElem.scrollLeft;\n
    offsetTop += window.pageYOffset || docElem.scrollTop;\n
  }\n
  return {\n
    left: offsetLeft,\n
    top: offsetTop\n
  };\n
}\n
function getWindowScrollTop() {\n
  var res = window.scrollY;\n
  if (res === void 0) {\n
    res = document.documentElement.scrollTop;\n
  }\n
  return res;\n
}\n
function getWindowScrollLeft() {\n
  var res = window.scrollX;\n
  if (res === void 0) {\n
    res = document.documentElement.scrollLeft;\n
  }\n
  return res;\n
}\n
function getScrollTop(element) {\n
  if (element === window) {\n
    return getWindowScrollTop();\n
  } else {\n
    return element.scrollTop;\n
  }\n
}\n
function getScrollLeft(element) {\n
  if (element === window) {\n
    return getWindowScrollLeft();\n
  } else {\n
    return element.scrollLeft;\n
  }\n
}\n
function getScrollableElement(element) {\n
  var el = element.parentNode,\n
      props = [\'auto\', \'scroll\'],\n
      overflow,\n
      overflowX,\n
      overflowY,\n
      computedStyle = \'\',\n
      computedOverflow = \'\',\n
      computedOverflowY = \'\',\n
      computedOverflowX = \'\';\n
  while (el && el.style && document.body !== el) {\n
    overflow = el.style.overflow;\n
    overflowX = el.style.overflowX;\n
    overflowY = el.style.overflowY;\n
    if (overflow == \'scroll\' || overflowX == \'scroll\' || overflowY == \'scroll\') {\n
      return el;\n
    } else if (window.getComputedStyle) {\n
      computedStyle = window.getComputedStyle(el);\n
      computedOverflow = computedStyle.getPropertyValue(\'overflow\');\n
      computedOverflowY = computedStyle.getPropertyValue(\'overflow-y\');\n
      computedOverflowX = computedStyle.getPropertyValue(\'overflow-x\');\n
      if (computedOverflow === \'scroll\' || computedOverflowX === \'scroll\' || computedOverflowY === \'scroll\') {\n
        return el;\n
      }\n
    }\n
    if (el.clientHeight <= el.scrollHeight && (props.indexOf(overflowY) !== -1 || props.indexOf(overflow) !== -1 || props.indexOf(computedOverflow) !== -1 || props.indexOf(computedOverflowY) !== -1)) {\n
      return el;\n
    }\n
    if (el.clientWidth <= el.scrollWidth && (props.indexOf(overflowX) !== -1 || props.indexOf(overflow) !== -1 || props.indexOf(computedOverflow) !== -1 || props.indexOf(computedOverflowX) !== -1)) {\n
      return el;\n
    }\n
    el = el.parentNode;\n
  }\n
  return window;\n
}\n
function getTrimmingContainer(base) {\n
  var el = base.parentNode;\n
  while (el && el.style && document.body !== el) {\n
    if (el.style.overflow !== \'visible\' && el.style.overflow !== \'\') {\n
      return el;\n
    } else if (window.getComputedStyle) {\n
      var computedStyle = window.getComputedStyle(el);\n
      if (computedStyle.getPropertyValue(\'overflow\') !== \'visible\' && computedStyle.getPropertyValue(\'overflow\') !== \'\') {\n
        return el;\n
      }\n
    }\n
    el = el.parentNode;\n
  }\n
  return window;\n
}\n
function getStyle(element, prop) {\n
  if (!element) {\n
    return;\n
  } else if (element === window) {\n
    if (prop === \'width\') {\n
      return window.innerWidth + \'px\';\n
    } else if (prop === \'height\') {\n
      return window.innerHeight + \'px\';\n
    }\n
    return;\n
  }\n
  var styleProp = element.style[prop],\n
      computedStyle;\n
  if (styleProp !== "" && styleProp !== void 0) {\n
    return styleProp;\n
  } else {\n
    computedStyle = getComputedStyle(element);\n
    if (computedStyle[prop] !== "" && computedStyle[prop] !== void 0) {\n
      return computedStyle[prop];\n
    }\n
    return void 0;\n
  }\n
}\n
function getComputedStyle(element) {\n
  return element.currentStyle || document.defaultView.getComputedStyle(element);\n
}\n
function outerWidth(element) {\n
  return element.offsetWidth;\n
}\n
function outerHeight(elem) {\n
  if (hasCaptionProblem() && elem.firstChild && elem.firstChild.nodeName === \'CAPTION\') {\n
    return elem.offsetHeight + elem.firstChild.offsetHeight;\n
  } else {\n
    return elem.offsetHeight;\n
  }\n
}\n
function innerHeight(element) {\n
  return element.clientHeight || element.innerHeight;\n
}\n
function innerWidth(element) {\n
  return element.clientWidth || element.innerWidth;\n
}\n
function addEvent(element, event, callback) {\n
  if (window.addEventListener) {\n
    element.addEventListener(event, callback, false);\n
  } else {\n
    element.attachEvent(\'on\' + event, callback);\n
  }\n
}\n
function removeEvent(element, event, callback) {\n
  if (window.removeEventListener) {\n
    element.removeEventListener(event, callback, false);\n
  } else {\n
    element.detachEvent(\'on\' + event, callback);\n
  }\n
}\n
function getCaretPosition(el) {\n
  if (el.selectionStart) {\n
    return el.selectionStart;\n
  } else if (document.selection) {\n
    el.focus();\n
    var r = document.selection.createRange();\n
    if (r == null) {\n
      return 0;\n
    }\n
    var re = el.createTextRange();\n
    var rc = re.duplicate();\n
    re.moveToBookmark(r.getBookmark());\n
    rc.setEndPoint(\'EndToStart\', re);\n
    return rc.text.length;\n
  }\n
  return 0;\n
}\n
function getSelectionEndPosition(el) {\n
  if (el.selectionEnd) {\n
    return el.selectionEnd;\n
  } else if (document.selection) {\n
    var r = document.selection.createRange();\n
    if (r == null) {\n
      return 0;\n
    }\n
    var re = el.createTextRange();\n
    return re.text.indexOf(r.text) + r.text.length;\n
  }\n
}\n
function setCaretPosition(element, pos, endPos) {\n
  if (endPos === void 0) {\n
    endPos = pos;\n
  }\n
  if (element.setSelectionRange) {\n
    element.focus();\n
    try {\n
      element.setSelectionRange(pos, endPos);\n
    } catch (err) {\n
      var elementParent = element.parentNode;\n
      var parentDisplayValue = elementParent.style.display;\n
      elementParent.style.display = \'block\';\n
      element.setSelectionRange(pos, endPos);\n
      elementParent.style.display = parentDisplayValue;\n
    }\n
  } else if (element.createTextRange) {\n
    var range = element.createTextRange();\n
    range.collapse(true);\n
    range.moveEnd(\'character\', endPos);\n
    range.moveStart(\'character\', pos);\n
    range.select();\n
  }\n
}\n
var cachedScrollbarWidth;\n
function walkontableCalculateScrollbarWidth() {\n
  var inner = document.createElement(\'p\');\n
  inner.style.width = "100%";\n
  inner.style.height = "200px";\n
  var outer = document.createElement(\'div\');\n
  outer.style.position = "absolute";\n
  outer.style.top = "0px";\n
  outer.style.left = "0px";\n
  outer.style.visibility = "hidden";\n
  outer.style.width = "200px";\n
  outer.style.height = "150px";\n
  outer.style.overflow = "hidden";\n
  outer.appendChild(inner);\n
  (document.body || document.documentElement).appendChild(outer);\n
  var w1 = inner.offsetWidth;\n
  outer.style.overflow = \'scroll\';\n
  var w2 = inner.offsetWidth;\n
  if (w1 == w2) {\n
    w2 = outer.clientWidth;\n
  }\n
  (document.body || document.documentElement).removeChild(outer);\n
  return (w1 - w2);\n
}\n
function getScrollbarWidth() {\n
  if (cachedScrollbarWidth === void 0) {\n
    cachedScrollbarWidth = walkontableCalculateScrollbarWidth();\n
  }\n
  return cachedScrollbarWidth;\n
}\n
function setOverlayPosition(overlayElem, left, top) {\n
  if (isIE8() || isIE9()) {\n
    overlayElem.style.top = top;\n
    overlayElem.style.left = left;\n
  } else if (isSafari()) {\n
    overlayElem.style[\'-webkit-transform\'] = \'translate3d(\' + left + \',\' + top + \',0)\';\n
  } else {\n
    overlayElem.style.transform = \'translate3d(\' + left + \',\' + top + \',0)\';\n
  }\n
}\n
function getCssTransform(element) {\n
  var transform;\n
  if (element.style[\'transform\'] && (transform = element.style[\'transform\']) !== \'\') {\n
    return [\'transform\', transform];\n
  } else if (element.style[\'-webkit-transform\'] && (transform = element.style[\'-webkit-transform\']) !== \'\') {\n
    return [\'-webkit-transform\', transform];\n
  }\n
  return -1;\n
}\n
function resetCssTransform(element) {\n
  if (element[\'transform\'] && element[\'transform\'] !== \'\') {\n
    element[\'transform\'] = \'\';\n
  } else if (element[\'-webkit-transform\'] && element[\'-webkit-transform\'] !== \'\') {\n
    element[\'-webkit-transform\'] = \'\';\n
  }\n
}\n
function isInput(element) {\n
  var inputs = [\'INPUT\', \'SELECT\', \'TEXTAREA\'];\n
  return inputs.indexOf(element.nodeName) > -1 || element.contentEditable === \'true\';\n
}\n
function isOutsideInput(element) {\n
  return isInput(element) && element.className.indexOf(\'handsontableInput\') == -1 && element.className.indexOf(\'copyPaste\') == -1;\n
}\n
var lastTime = 0;\n
var vendors = [\'ms\', \'moz\', \'webkit\', \'o\'];\n
var _requestAnimationFrame = window.requestAnimationFrame;\n
var _cancelAnimationFrame = window.cancelAnimationFrame;\n
for (var x = 0; x < vendors.length && !_requestAnimationFrame; ++x) {\n
  _requestAnimationFrame = window[vendors[x] + \'RequestAnimationFrame\'];\n
  _cancelAnimationFrame = window[vendors[x] + \'CancelAnimationFrame\'] || window[vendors[x] + \'CancelRequestAnimationFrame\'];\n
}\n
if (!_requestAnimationFrame) {\n
  _requestAnimationFrame = function(callback) {\n
    var currTime = new Date().getTime();\n
    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n
    var id = window.setTimeout(function() {\n
      callback(currTime + timeToCall);\n
    }, timeToCall);\n
    lastTime = currTime + timeToCall;\n
    return id;\n
  };\n
}\n
if (!_cancelAnimationFrame) {\n
  _cancelAnimationFrame = function(id) {\n
    clearTimeout(id);\n
  };\n
}\n
function requestAnimationFrame(callback) {\n
  return _requestAnimationFrame.call(window, callback);\n
}\n
function cancelAnimationFrame(id) {\n
  _cancelAnimationFrame.call(window, id);\n
}\n
\n
//# \n
},{"../browser":42}],45:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  stopImmediatePropagation: {get: function() {\n
      return stopImmediatePropagation;\n
    }},\n
  isImmediatePropagationStopped: {get: function() {\n
      return isImmediatePropagationStopped;\n
    }},\n
  stopPropagation: {get: function() {\n
      return stopPropagation;\n
    }},\n
  pageX: {get: function() {\n
      return pageX;\n
    }},\n
  pageY: {get: function() {\n
      return pageY;\n
    }},\n
  __esModule: {value: true}\n
});\n
function stopImmediatePropagation(event) {\n
  event.isImmediatePropagationEnabled = false;\n
  event.cancelBubble = true;\n
}\n
function isImmediatePropagationStopped(event) {\n
  return event.isImmediatePropagationEnabled === false;\n
}\n
function stopPropagation(event) {\n
  if (typeof event.stopPropagation === \'function\') {\n
    event.stopPropagation();\n
  } else {\n
    event.cancelBubble = true;\n
  }\n
}\n
function pageX(event) {\n
  if (event.pageX) {\n
    return event.pageX;\n
  }\n
  var scrollLeft = getWindowScrollLeft();\n
  var cursorX = event.clientX + scrollLeft;\n
  return cursorX;\n
}\n
function pageY(event) {\n
  if (event.pageY) {\n
    return event.pageY;\n
  }\n
  var scrollTop = getWindowScrollTop();\n
  var cursorY = event.clientY + scrollTop;\n
  return cursorY;\n
}\n
\n
//# \n
},{}],46:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  proxy: {get: function() {\n
      return proxy;\n
    }},\n
  throttle: {get: function() {\n
      return throttle;\n
    }},\n
  throttleAfterHits: {get: function() {\n
      return throttleAfterHits;\n
    }},\n
  __esModule: {value: true}\n
});\n
function proxy(fun, context) {\n
  return function() {\n
    return fun.apply(context, arguments);\n
  };\n
}\n
function throttle(func) {\n
  var wait = arguments[1] !== (void 0) ? arguments[1] : 200;\n
  var lastCalled = 0;\n
  var result = {lastCallThrottled: true};\n
  var lastTimer = null;\n
  function _throttle() {\n
    var $__0 = this;\n
    var args = arguments;\n
    var stamp = Date.now();\n
    var needCall = false;\n
    result.lastCallThrottled = true;\n
    if (!lastCalled) {\n
      lastCalled = stamp;\n
      needCall = true;\n
    }\n
    var remaining = wait - (stamp - lastCalled);\n
    if (needCall) {\n
      result.lastCallThrottled = false;\n
      func.apply(this, args);\n
    } else {\n
      if (lastTimer) {\n
        clearTimeout(lastTimer);\n
      }\n
      lastTimer = setTimeout((function() {\n
        result.lastCallThrottled = false;\n
        func.apply($__0, args);\n
        lastCalled = 0;\n
        lastTimer = void 0;\n
      }), remaining);\n
    }\n
    return result;\n
  }\n
  return _throttle;\n
}\n
function throttleAfterHits(func) {\n
  var wait = arguments[1] !== (void 0) ? arguments[1] : 200;\n
  var hits = arguments[2] !== (void 0) ? arguments[2] : 10;\n
  var funcThrottle = throttle(func, wait);\n
  var remainHits = hits;\n
  function _clearHits() {\n
    remainHits = hits;\n
  }\n
  function _throttleAfterHits() {\n
    if (remainHits) {\n
      remainHits--;\n
      return func.apply(this, arguments);\n
    }\n
    return funcThrottle.apply(this, arguments);\n
  }\n
  _throttleAfterHits.clearHits = _clearHits;\n
  return _throttleAfterHits;\n
}\n
\n
//# \n
},{}],47:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  stringify: {get: function() {\n
      return stringify;\n
    }},\n
  __esModule: {value: true}\n
});\n
function stringify(value) {\n
  switch (typeof value) {\n
    case \'string\':\n
    case \'number\':\n
      return value + \'\';\n
    case \'object\':\n
      if (value === null) {\n
        return \'\';\n
      } else {\n
        return value.toString();\n
      }\n
      break;\n
    case \'undefined\':\n
      return \'\';\n
    default:\n
      return value.toString();\n
  }\n
}\n
\n
//# \n
},{}],48:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  isNumeric: {get: function() {\n
      return isNumeric;\n
    }},\n
  rangeEach: {get: function() {\n
      return rangeEach;\n
    }},\n
  valueAccordingPercent: {get: function() {\n
      return valueAccordingPercent;\n
    }},\n
  __esModule: {value: true}\n
});\n
function isNumeric(n) {\n
  var t = typeof n;\n
  return t == \'number\' ? !isNaN(n) && isFinite(n) : t == \'string\' ? !n.length ? false : n.length == 1 ? /\\d/.test(n) : /^\\s*[+-]?\\s*(?:(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)|(?:0x[a-f\\d]+))\\s*$/i.test(n) : t == \'object\' ? !!n && typeof n.valueOf() == "number" && !(n instanceof Date) : false;\n
}\n
function rangeEach(rangeFrom, rangeTo, iteratee) {\n
  var index = -1;\n
  if (typeof rangeTo === \'function\') {\n
    iteratee = rangeTo;\n
    rangeTo = rangeFrom;\n
  } else {\n
    index = rangeFrom - 1;\n
  }\n
  while (++index <= rangeTo) {\n
    if (iteratee(index) === false) {\n
      break;\n
    }\n
  }\n
}\n
function valueAccordingPercent(value, percent) {\n
  percent = parseInt(percent.toString().replace(\'%\', \'\'), 10);\n
  percent = parseInt(value * percent / 100);\n
  return percent;\n
}\n
\n
//# \n
},{}],49:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  duckSchema: {get: function() {\n
      return duckSchema;\n
    }},\n
  inherit: {get: function() {\n
      return inherit;\n
    }},\n
  extend: {get: function() {\n
      return extend;\n
    }},\n
  deepExtend: {get: function() {\n
      return deepExtend;\n
    }},\n
  deepClone: {get: function() {\n
      return deepClone;\n
    }},\n
  clone: {get: function() {\n
      return clone;\n
    }},\n
  isObjectEquals: {get: function() {\n
      return isObjectEquals;\n
    }},\n
  isObject: {get: function() {\n
      return isObject;\n
    }},\n
  getPrototypeOf: {get: function() {\n
      return getPrototypeOf;\n
    }},\n
  defineGetter: {get: function() {\n
      return defineGetter;\n
    }},\n
  objectEach: {get: function() {\n
      return objectEach;\n
    }},\n
  __esModule: {value: true}\n
});\n
function duckSchema(object) {\n
  var schema;\n
  if (Array.isArray(object)) {\n
    schema = [];\n
  } else {\n
    schema = {};\n
    objectEach(object, function(value, key) {\n
      if (value && typeof value === \'object\' && !Array.isArray(value)) {\n
        schema[key] = duckSchema(value);\n
      } else if (Array.isArray(value)) {\n
        if (value.length && typeof value[0] === \'object\' && !Array.isArray(value[0])) {\n
          schema[key] = [duckSchema(value[0])];\n
        } else {\n
          schema[key] = [];\n
        }\n
      } else {\n
        schema[key] = null;\n
      }\n
    });\n
  }\n
  return schema;\n
}\n
function inherit(Child, Parent) {\n
  Parent.prototype.constructor = Parent;\n
  Child.prototype = new Parent();\n
  Child.prototype.constructor = Child;\n
  return Child;\n
}\n
function extend(target, extension) {\n
  objectEach(extension, function(value, key) {\n
    target[key] = value;\n
  });\n
}\n
function deepExtend(target, extension) {\n
  objectEach(extension, function(value, key) {\n
    if (extension[key] && typeof extension[key] === \'object\') {\n
      if (!target[key]) {\n
        if (Array.isArray(extension[key])) {\n
          target[key] = [];\n
        } else {\n
          target[key] = {};\n
        }\n
      }\n
      deepExtend(target[key], extension[key]);\n
    } else {\n
      target[key] = extension[key];\n
    }\n
  });\n
}\n
function deepClone(obj) {\n
  if (typeof obj === "object") {\n
    return JSON.parse(JSON.stringify(obj));\n
  }\n
  return obj;\n
}\n
function clone(object) {\n
  var result = {};\n
  objectEach(object, (function(value, key) {\n
    return result[key] = value;\n
  }));\n
  return result;\n
}\n
function isObjectEquals(object1, object2) {\n
  return JSON.stringify(object1) === JSON.stringify(object2);\n
}\n
function isObject(obj) {\n
  return Object.prototype.toString.call(obj) == \'[object Object]\';\n
}\n
function getPrototypeOf(obj) {\n
  var prototype;\n
  if (typeof obj.__proto__ == "object") {\n
    prototype = obj.__proto__;\n
  } else {\n
    var oldConstructor,\n
        constructor = obj.constructor;\n
    if (typeof obj.constructor == "function") {\n
      oldConstructor = constructor;\n
      if (delete obj.constructor) {\n
        constructor = obj.constructor;\n
        obj.constructor = oldConstructor;\n
      }\n
    }\n
    prototype = constructor ? constructor.prototype : null;\n
  }\n
  return prototype;\n
}\n
function defineGetter(object, property, value, options) {\n
  options.value = value;\n
  options.writable = options.writable === false ? false : true;\n
  options.enumerable = options.enumerable === false ? false : true;\n
  options.configurable = options.configurable === false ? false : true;\n
  Object.defineProperty(object, property, options);\n
}\n
function objectEach(object, iteratee) {\n
  for (var key in object) {\n
    if (!object.hasOwnProperty || (object.hasOwnProperty && object.hasOwnProperty(key))) {\n
      if (iteratee(object[key], key, object) === false) {\n
        break;\n
      }\n
    }\n
  }\n
  return object;\n
}\n
\n
//# \n
},{}],50:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  columnFactory: {get: function() {\n
      return columnFactory;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__object__;\n
var inherit = ($__object__ = require("object"), $__object__ && $__object__.__esModule && $__object__ || {default: $__object__}).inherit;\n
function columnFactory(GridSettings, conflictList) {\n
  function ColumnSettings() {}\n
  ;\n
  inherit(ColumnSettings, GridSettings);\n
  for (var i = 0,\n
      len = conflictList.length; i < len; i++) {\n
    ColumnSettings.prototype[conflictList[i]] = void 0;\n
  }\n
  return ColumnSettings;\n
}\n
\n
//# \n
},{"object":49}],51:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  toUpperCaseFirst: {get: function() {\n
      return toUpperCaseFirst;\n
    }},\n
  equalsIgnoreCase: {get: function() {\n
      return equalsIgnoreCase;\n
    }},\n
  randomString: {get: function() {\n
      return randomString;\n
    }},\n
  isPercentValue: {get: function() {\n
      return isPercentValue;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__mixed__;\n
var stringify = ($__mixed__ = require("mixed"), $__mixed__ && $__mixed__.__esModule && $__mixed__ || {default: $__mixed__}).stringify;\n
function toUpperCaseFirst(string) {\n
  return string[0].toUpperCase() + string.substr(1);\n
}\n
function equalsIgnoreCase() {\n
  for (var strings = [],\n
      $__1 = 0; $__1 < arguments.length; $__1++)\n
    strings[$__1] = arguments[$__1];\n
  var unique = [];\n
  var length = strings.length;\n
  while (length--) {\n
    var string = stringify(strings[length]).toLowerCase();\n
    if (unique.indexOf(string) === -1) {\n
      unique.push(string);\n
    }\n
  }\n
  return unique.length === 1;\n
}\n
function randomString() {\n
  function s4() {\n
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n
  }\n
  return s4() + s4() + s4() + s4();\n
}\n
function isPercentValue(value) {\n
  return /^([0-9][0-9]?\\%$)|(^100\\%$)/.test(value);\n
}\n
\n
//# \n
},{"mixed":47}],52:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  KEY_CODES: {get: function() {\n
      return KEY_CODES;\n
    }},\n
  isPrintableChar: {get: function() {\n
      return isPrintableChar;\n
    }},\n
  isMetaKey: {get: function() {\n
      return isMetaKey;\n
    }},\n
  isCtrlKey: {get: function() {\n
      return isCtrlKey;\n
    }},\n
  isKey: {get: function() {\n
      return isKey;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__array__;\n
var arrayEach = ($__array__ = require("array"), $__array__ && $__array__.__esModule && $__array__ || {default: $__array__}).arrayEach;\n
var KEY_CODES = {\n
  MOUSE_LEFT: 1,\n
  MOUSE_RIGHT: 3,\n
  MOUSE_MIDDLE: 2,\n
  BACKSPACE: 8,\n
  COMMA: 188,\n
  INSERT: 45,\n
  DELETE: 46,\n
  END: 35,\n
  ENTER: 13,\n
  ESCAPE: 27,\n
  CONTROL_LEFT: 91,\n
  COMMAND_LEFT: 17,\n
  COMMAND_RIGHT: 93,\n
  ALT: 18,\n
  HOME: 36,\n
  PAGE_DOWN: 34,\n
  PAGE_UP: 33,\n
  PERIOD: 190,\n
  SPACE: 32,\n
  SHIFT: 16,\n
  CAPS_LOCK: 20,\n
  TAB: 9,\n
  ARROW_RIGHT: 39,\n
  ARROW_LEFT: 37,\n
  ARROW_UP: 38,\n
  ARROW_DOWN: 40,\n
  F1: 112,\n
  F2: 113,\n
  F3: 114,\n
  F4: 115,\n
  F5: 116,\n
  F6: 117,\n
  F7: 118,\n
  F8: 119,\n
  F9: 120,\n
  F10: 121,\n
  F11: 122,\n
  F12: 123,\n
  A: 65,\n
  X: 88,\n
  C: 67,\n
  V: 86\n
};\n
function isPrintableChar(keyCode) {\n
  return ((keyCode == 32) || (keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 111) || (keyCode >= 186 && keyCode <= 192) || (keyCode >= 219 && keyCode <= 222) || keyCode >= 226 || (keyCode >= 65 && keyCode <= 90));\n
}\n
function isMetaKey(keyCode) {\n
  var metaKeys = [KEY_CODES.ARROW_DOWN, KEY_CODES.ARROW_UP, KEY_CODES.ARROW_LEFT, KEY_CODES.ARROW_RIGHT, KEY_CODES.HOME, KEY_CODES.END, KEY_CODES.DELETE, KEY_CODES.BACKSPACE, KEY_CODES.F1, KEY_CODES.F2, KEY_CODES.F3, KEY_CODES.F4, KEY_CODES.F5, KEY_CODES.F6, KEY_CODES.F7, KEY_CODES.F8, KEY_CODES.F9, KEY_CODES.F10, KEY_CODES.F11, KEY_CODES.F12, KEY_CODES.TAB, KEY_CODES.PAGE_DOWN, KEY_CODES.PAGE_UP, KEY_CODES.ENTER, KEY_CODES.ESCAPE, KEY_CODES.SHIFT, KEY_CODES.CAPS_LOCK, KEY_CODES.ALT];\n
  return metaKeys.indexOf(keyCode) !== -1;\n
}\n
function isCtrlKey(keyCode) {\n
  return [KEY_CODES.CONTROL_LEFT, 224, KEY_CODES.COMMAND_LEFT, KEY_CODES.COMMAND_RIGHT].indexOf(keyCode) !== -1;\n
}\n
function isKey(keyCode, baseCode) {\n
  var keys = baseCode.split(\'|\');\n
  var result = false;\n
  arrayEach(keys, function(key) {\n
    if (keyCode === KEY_CODES[key]) {\n
      result = true;\n
      return false;\n
    }\n
  });\n
  return result;\n
}\n
\n
//# \n
},{"array":41}],53:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  MultiMap: {get: function() {\n
      return MultiMap;\n
    }},\n
  __esModule: {value: true}\n
});\n
;\n
window.MultiMap = MultiMap;\n
function MultiMap() {\n
  var map = {\n
    arrayMap: [],\n
    weakMap: new WeakMap()\n
  };\n
  return {\n
    \'get\': function(key) {\n
      if (canBeAnArrayMapKey(key)) {\n
        return map.arrayMap[key];\n
      } else if (canBeAWeakMapKey(key)) {\n
        return map.weakMap.get(key);\n
      }\n
    },\n
    \'set\': function(key, value) {\n
      if (canBeAnArrayMapKey(key)) {\n
        map.arrayMap[key] = value;\n
      } else if (canBeAWeakMapKey(key)) {\n
        map.weakMap.set(key, value);\n
      } else {\n
        throw new Error(\'Invalid key type\');\n
      }\n
    },\n
    \'delete\': function(key) {\n
      if (canBeAnArrayMapKey(key)) {\n
        delete map.arrayMap[key];\n
      } else if (canBeAWeakMapKey(key)) {\n
        map.weakMap[\'delete\'](key);\n
      }\n
    }\n
  };\n
  function canBeAnArrayMapKey(obj) {\n
    return obj !== null && !isNaNSymbol(obj) && (typeof obj == \'string\' || typeof obj == \'number\');\n
  }\n
  function canBeAWeakMapKey(obj) {\n
    return obj !== null && (typeof obj == \'object\' || typeof obj == \'function\');\n
  }\n
  function isNaNSymbol(obj) {\n
    return obj !== obj;\n
  }\n
}\n
\n
//# \n
},{}],54:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  Hooks: {get: function() {\n
      return Hooks;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__eventManager__,\n
    $__helpers_47_array__,\n
    $__helpers_47_object__;\n
var REGISTERED_HOOKS = ["afterCellMetaReset", "afterChange", "afterChangesObserved", "afterColumnMove", "afterColumnResize", "afterContextMenuDefaultOptions", "afterContextMenuHide", "afterContextMenuShow", "afterCopyLimit", "afterCreateCol", "afterCreateRow", "afterDeselect", "afterDestroy", "afterDocumentKeyDown", "afterGetCellMeta", "afterGetColHeader", "afterGetRowHeader", "afterInit", "afterIsMultipleSelectionCheck", "afterLoadData", "afterMomentumScroll", "afterOnCellCornerMouseDown", "afterOnCellMouseDown", "afterOnCellMouseOver", "afterRemoveCol", "afterRemoveRow", "afterRender", "afterRenderer", "afterRowMove", "afterRowResize", "afterScrollHorizontally", "afterScrollVertically", "afterSelection", "afterSelectionByProp", "afterSelectionEnd", "afterSelectionEndByProp", "afterSetCellMeta", "afterUpdateSettings", "afterValidate", "beforeAutofill", "beforeCellAlignment", "beforeChange", "beforeChangeRender", "beforeDrawBorders", "beforeGetCellMeta", "beforeInit", "beforeInitWalkontable", "beforeKeyDown", "beforeOnCellMouseDown", "beforeRemoveCol", "beforeRemoveRow", "beforeRender", "beforeSetRangeEnd", "beforeTouchScroll", "beforeValidate", "construct", "init", "modifyCol", "modifyColWidth", "modifyRow", "modifyRowHeight", "persistentStateLoad", "persistentStateReset", "persistentStateSave"];\n
var EventManager = ($__eventManager__ = require("eventManager"), $__eventManager__ && $__eventManager__.__esModule && $__eventManager__ || {default: $__eventManager__}).EventManager;\n
var arrayEach = ($__helpers_47_array__ = require("helpers/array"), $__helpers_47_array__ && $__helpers_47_array__.__esModule && $__helpers_47_array__ || {default: $__helpers_47_array__}).arrayEach;\n
var objectEach = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}).objectEach;\n
var Hooks = function Hooks() {\n
  this.globalBucket = this.createEmptyBucket();\n
};\n
($traceurRuntime.createClass)(Hooks, {\n
  createEmptyBucket: function() {\n
    var bucket = Object.create(null);\n
    arrayEach(REGISTERED_HOOKS, (function(hook) {\n
      return (bucket[hook] = []);\n
    }));\n
    return bucket;\n
  },\n
  getBucket: function() {\n
    var context = arguments[0] !== (void 0) ? arguments[0] : null;\n
    if (context) {\n
      if (!context.pluginHookBucket) {\n
        context.pluginHookBucket = this.createEmptyBucket();\n
      }\n
      return context.pluginHookBucket;\n
    }\n
    return this.globalBucket;\n
  },\n
  add: function(key, callback) {\n
    var context = arguments[2] !== (void 0) ? arguments[2] : null;\n
    var $__3 = this;\n
    if (Array.isArray(callback)) {\n
      arrayEach(callback, (function(c) {\n
        return ($__3.add(key, c, context));\n
      }));\n
    } else {\n
      var bucket = this.getBucket(context);\n
      if (typeof bucket[key] === \'undefined\') {\n
        this.register(key);\n
        bucket[key] = [];\n
      }\n
      callback.skip = false;\n
      if (bucket[key].indexOf(callback) === -1) {\n
        bucket[key].push(callback);\n
      }\n
    }\n
    return this;\n
  },\n
  once: function(key, callback) {\n
    var context = arguments[2] !== (void 0) ? arguments[2] : null;\n
    var $__3 = this;\n
    if (Array.isArray(callback)) {\n
      arrayEach(callback, (function(c) {\n
        return ($__3.once(key, c, context));\n
      }));\n
    } else {\n
      callback.runOnce = true;\n
      this.add(key, callback, context);\n
    }\n
  },\n
  remove: function(key, callback) {\n
    var context = arguments[2] !== (void 0) ? arguments[2] : null;\n
    var bucket = this.getBucket(context);\n
    if (typeof bucket[key] !== \'undefined\') {\n
      if (bucket[key].indexOf(callback) >= 0) {\n
        callback.skip = true;\n
        return true;\n
      }\n
    }\n
    return false;\n
  },\n
  run: function(context, key, p1, p2, p3, p4, p5, p6) {\n
    {\n
      var globalHandlers = this.globalBucket[key];\n
      var index = -1;\n
      var length = globalHandlers ? globalHandlers.length : 0;\n
      if (length) {\n
        while (++index < length) {\n
          if (!globalHandlers[index] || globalHandlers[index].skip) {\n
            continue;\n
          }\n
          var res = globalHandlers[index].call(context, p1, p2, p3, p4, p5, p6);\n
          if (res !== void 0) {\n
            p1 = res;\n
          }\n
          if (globalHandlers[index] && globalHandlers[index].runOnce) {\n
            this.remove(key, globalHandlers[index]);\n
          }\n
        }\n
      }\n
    }\n
    {\n
      var localHandlers = this.getBucket(context)[key];\n
      var index$__5 = -1;\n
      var length$__6 = localHandlers ? localHandlers.length : 0;\n
      if (length$__6) {\n
        while (++index$__5 < length$__6) {\n
          if (!localHandlers[index$__5] || localHandlers[index$__5].skip) {\n
            continue;\n
          }\n
          var res$__7 = localHandlers[index$__5].call(context, p1, p2, p3, p4, p5, p6);\n
          if (res$__7 !== void 0) {\n
            p1 = res$__7;\n
          }\n
          if (localHandlers[index$__5] && localHandlers[index$__5].runOnce) {\n
            this.remove(key, localHandlers[index$__5], context);\n
          }\n
        }\n
      }\n
    }\n
    return p1;\n
  },\n
  destroy: function() {\n
    var context = arguments[0] !== (void 0) ? arguments[0] : null;\n
    objectEach(this.getBucket(context), (function(value, key, bucket) {\n
      return (bucket[key].length = 0);\n
    }));\n
  },\n
  register: function(key) {\n
    if (!this.isRegistered(key)) {\n
      REGISTERED_HOOKS.push(key);\n
    }\n
  },\n
  deregister: function(key) {\n
    if (this.isRegistered(key)) {\n
      REGISTERED_HOOKS.splice(REGISTERED_HOOKS.indexOf(key), 1);\n
    }\n
  },\n
  isRegistered: function(key) {\n
    return REGISTERED_HOOKS.indexOf(key) >= 0;\n
  },\n
  getRegistered: function() {\n
    return REGISTERED_HOOKS;\n
  }\n
}, {});\n
;\n
Handsontable.utils = Handsontable.utils || {};\n
Handsontable.utils.Hooks = Hooks;\n
\n
//# \n
},{"eventManager":40,"helpers/array":41,"helpers/object":49}],55:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  registerPlugin: {get: function() {\n
      return registerPlugin;\n
    }},\n
  getPlugin: {get: function() {\n
      return getPlugin;\n
    }},\n
  getRegistredPluginNames: {get: function() {\n
      return getRegistredPluginNames;\n
    }},\n
  getPluginName: {get: function() {\n
      return getPluginName;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__helpers_47_object__,\n
    $__helpers_47_string__;\n
var objectEach = ($__helpers_47_object__ = require("helpers/object"), $__helpers_47_object__ && $__helpers_47_object__.__esModule && $__helpers_47_object__ || {default: $__helpers_47_object__}).objectEach;\n
var toUpperCaseFirst = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).toUpperCaseFirst;\n
var registeredPlugins = new WeakMap();\n
function registerPlugin(pluginName, PluginClass) {\n
  pluginName = toUpperCaseFirst(pluginName);\n
  Handsontable.hooks.add(\'construct\', function() {\n
    var holder;\n
    if (!registeredPlugins.has(this)) {\n
      registeredPlugins.set(this, {});\n
    }\n
    holder = registeredPlugins.get(this);\n
    if (!holder[pluginName]) {\n
      holder[pluginName] = new PluginClass(this);\n
    }\n
  });\n
  Handsontable.hooks.add(\'afterDestroy\', function() {\n
    var i,\n
        pluginsHolder;\n
    if (registeredPlugins.has(this)) {\n
      pluginsHolder = registeredPlugins.get(this);\n
      for (i in pluginsHolder) {\n
        if (pluginsHolder.hasOwnProperty(i)) {\n
          pluginsHolder[i].destroy();\n
        }\n
      }\n
      registeredPlugins.delete(this);\n
    }\n
  });\n
}\n
function getPlugin(instance, pluginName) {\n
  if (typeof pluginName != \'string\') {\n
    throw Error(\'Only strings can be passed as "plugin" parameter\');\n
  }\n
  var _pluginName = toUpperCaseFirst(pluginName);\n
  if (!registeredPlugins.has(instance) || !registeredPlugins.get(instance)[_pluginName]) {\n
    return void 0;\n
  }\n
  return registeredPlugins.get(instance)[_pluginName];\n
}\n
function getRegistredPluginNames(hotInstance) {\n
  return registeredPlugins.has(hotInstance) ? Object.keys(registeredPlugins.get(hotInstance)) : [];\n
}\n
function getPluginName(hotInstance, plugin) {\n
  var pluginName = null;\n
  if (registeredPlugins.has(hotInstance)) {\n
    objectEach(registeredPlugins.get(hotInstance), (function(pluginInstance, name) {\n
      if (pluginInstance === plugin) {\n
        pluginName = name;\n
      }\n
    }));\n
  }\n
  return pluginName;\n
}\n
;\n
\n
//# \n
},{"helpers/object":49,"helpers/string":51}],56:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  default: {get: function() {\n
      return $__default;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_object__,\n
    $___46__46__47_helpers_47_array__,\n
    $___46__46__47_plugins__;\n
var $__0 = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}),\n
    defineGetter = $__0.defineGetter,\n
    objectEach = $__0.objectEach;\n
var arrayEach = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).arrayEach;\n
var $__2 = ($___46__46__47_plugins__ = require("plugins"), $___46__46__47_plugins__ && $___46__46__47_plugins__.__esModule && $___46__46__47_plugins__ || {default: $___46__46__47_plugins__}),\n
    getRegistredPluginNames = $__2.getRegistredPluginNames,\n
    getPluginName = $__2.getPluginName;\n
var privatePool = new WeakMap();\n
var initializedPlugins = null;\n
var BasePlugin = function BasePlugin(hotInstance) {\n
  var $__3 = this;\n
  defineGetter(this, \'hot\', hotInstance, {writable: false});\n
  privatePool.set(this, {hooks: {}});\n
  initializedPlugins = null;\n
  this.pluginsInitializedCallbacks = [];\n
  this.isPluginsReady = false;\n
  this.pluginName = null;\n
  this.enabled = false;\n
  this.initialized = false;\n
  this.hot.addHook(\'afterPluginsInitialized\', (function() {\n
    return $__3.onAfterPluginsInitialized();\n
  }));\n
  this.hot.addHook(\'afterUpdateSettings\', (function() {\n
    return $__3.onUpdateSettings();\n
  }));\n
  this.hot.addHook(\'beforeInit\', (function() {\n
    return $__3.init();\n
  }));\n
};\n
($traceurRuntime.createClass)(BasePlugin, {\n
  init: function() {\n
    this.pluginName = getPluginName(this.hot, this);\n
    if (this.isEnabled && this.isEnabled()) {\n
      this.enablePlugin();\n
    }\n
    if (!initializedPlugins) {\n
      initializedPlugins = getRegistredPluginNames(this.hot);\n
    }\n
    if (initializedPlugins.indexOf(this.pluginName) >= 0) {\n
      initializedPlugins.splice(initializedPlugins.indexOf(this.pluginName), 1);\n
    }\n
    if (!initializedPlugins.length) {\n
      this.hot.runHooks(\'afterPluginsInitialized\');\n
    }\n
    this.initialized = true;\n
  },\n
  enablePlugin: function() {\n
    this.enabled = true;\n
  },\n
  disablePlugin: function() {\n
    if (this.eventManager) {\n
      this.eventManager.clear();\n
    }\n
    this.clearHooks();\n
    this.enabled = false;\n
  },\n
  addHook: function(name, callback) {\n
    var hooks = privatePool.get(this).hooks[name] = (privatePool.get(this).hooks[name] || []);\n
    this.hot.addHook(name, callback);\n
    hooks.push(callback);\n
    privatePool.get(this).hooks[name] = hooks;\n
  },\n
  removeHooks: function(name) {\n
    var $__3 = this;\n
    arrayEach(privatePool.get(this).hooks[name] || [], (function(callback) {\n
      $__3.hot.removeHook(name, callback);\n
    }));\n
  },\n
  clearHooks: function() {\n
    var $__3 = this;\n
    var hooks = privatePool.get(this).hooks;\n
    objectEach(hooks, (function(callbacks, name) {\n
      return $__3.removeHooks(name);\n
    }));\n
    hooks.length = 0;\n
  },\n
  callOnPluginsReady: function(callback) {\n
    if (this.isPluginsReady) {\n
      this.pluginsInitializedCallbacks.length = 0;\n
      callback();\n
    } else {\n
      this.pluginsInitializedCallbacks.push(callback);\n
    }\n
  },\n
  onAfterPluginsInitialized: function() {\n
    arrayEach(this.pluginsInitializedCallbacks, (function(callback) {\n
      return callback();\n
    }));\n
    this.isPluginsReady = true;\n
  },\n
  onUpdateSettings: function() {\n
    if (this.isEnabled) {\n
      if (this.enabled && !this.isEnabled()) {\n
        this.disablePlugin();\n
      }\n
      if (!this.enabled && this.isEnabled()) {\n
        this.enablePlugin();\n
      }\n
    }\n
  },\n
  destroy: function() {\n
    if (this.eventManager) {\n
      this.eventManager.destroy();\n
    }\n
    this.clearHooks();\n
    delete this.hot;\n
  }\n
}, {});\n
var $__default = BasePlugin;\n
\n
//# \n
},{"helpers/array":41,"helpers/object":49,"plugins":55}],57:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  AutoColumnSize: {get: function() {\n
      return AutoColumnSize;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__95_base__,\n
    $___46__46__47__46__46__47_helpers_47_array__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_utils_47_ghostTable__,\n
    $___46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47_helpers_47_number__,\n
    $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__46__46__47_utils_47_samplesGenerator__,\n
    $___46__46__47__46__46__47_helpers_47_string__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var $__1 = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}),\n
    arrayEach = $__1.arrayEach,\n
    arrayFilter = $__1.arrayFilter;\n
var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    cancelAnimationFrame = $__2.cancelAnimationFrame,\n
    requestAnimationFrame = $__2.requestAnimationFrame,\n
    isVisible = $__2.isVisible;\n
var GhostTable = ($___46__46__47__46__46__47_utils_47_ghostTable__ = require("utils/ghostTable"), $___46__46__47__46__46__47_utils_47_ghostTable__ && $___46__46__47__46__46__47_utils_47_ghostTable__.__esModule && $___46__46__47__46__46__47_utils_47_ghostTable__ || {default: $___46__46__47__46__46__47_utils_47_ghostTable__}).GhostTable;\n
var $__4 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),\n
    isObject = $__4.isObject,\n
    objectEach = $__4.objectEach;\n
var $__5 = ($___46__46__47__46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47__46__46__47_helpers_47_number__ && $___46__46__47__46__46__47_helpers_47_number__.__esModule && $___46__46__47__46__46__47_helpers_47_number__ || {default: $___46__46__47__46__46__47_helpers_47_number__}),\n
    isPercentValue = $__5.isPercentValue,\n
    rangeEach = $__5.rangeEach;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var SamplesGenerator = ($___46__46__47__46__46__47_utils_47_samplesGenerator__ = require("utils/samplesGenerator"), $___46__46__47__46__46__47_utils_47_samplesGenerator__ && $___46__46__47__46__46__47_utils_47_samplesGenerator__.__esModule && $___46__46__47__46__46__47_utils_47_samplesGenerator__ || {default: $___46__46__47__46__46__47_utils_47_samplesGenerator__}).SamplesGenerator;\n
var valueAccordingPercent = ($___46__46__47__46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47__46__46__47_helpers_47_string__ && $___46__46__47__46__46__47_helpers_47_string__.__esModule && $___46__46__47__46__46__47_helpers_47_string__ || {default: $___46__46__47__46__46__47_helpers_47_string__}).valueAccordingPercent;\n
var WalkontableViewportColumnsCalculator = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ = require("3rdparty/walkontable/src/calculator/viewportColumns"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_calculator_47_viewportColumns__}).WalkontableViewportColumnsCalculator;\n
var AutoColumnSize = function AutoColumnSize(hotInstance) {\n
  var $__10 = this;\n
  $traceurRuntime.superConstructor($AutoColumnSize).call(this, hotInstance);\n
  this.widths = [];\n
  this.ghostTable = new GhostTable(this.hot);\n
  this.samplesGenerator = new SamplesGenerator((function(row, col) {\n
    return $__10.hot.getDataAtCell(row, col);\n
  }));\n
  this.firstCalculation = true;\n
  this.inProgress = false;\n
};\n
var $AutoColumnSize = AutoColumnSize;\n
($traceurRuntime.createClass)(AutoColumnSize, {\n
  isEnabled: function() {\n
    return this.hot.getSettings().autoColumnSize !== false && !this.hot.getSettings().colWidths;\n
  },\n
  enablePlugin: function() {\n
    var $__10 = this;\n
    if (this.enabled) {\n
      return;\n
    }\n
    this.addHook(\'afterLoadData\', (function() {\n
      return $__10.onAfterLoadData();\n
    }));\n
    this.addHook(\'beforeChange\', (function(changes) {\n
      return $__10.onBeforeChange(changes);\n
    }));\n
    this.addHook(\'beforeColumnResize\', (function(col, size, isDblClick) {\n
      return $__10.onBeforeColumnResize(col, size, isDblClick);\n
    }));\n
    this.addHook(\'beforeRender\', (function(force) {\n
      return $__10.onBeforeRender(force);\n
    }));\n
    this.addHook(\'modifyColWidth\', (function(width, col) {\n
      return $__10.getColumnWidth(col, width);\n
    }));\n
    $traceurRuntime.superGet(this, $AutoColumnSize.prototype, "enablePlugin").call(this);\n
  },\n
  calculateColumnsWidth: function() {\n
    var colRange = arguments[0] !== (void 0) ? arguments[0] : {\n
      from: 0,\n
      to: this.hot.countCols() - 1\n
    };\n
    var rowRange = arguments[1] !== (void 0) ? arguments[1] : {\n
      from: 0,\n
      to: this.hot.countRows() - 1\n
    };\n
    var force = arguments[2] !== (void 0) ? arguments[2] : false;\n
    var $__10 = this;\n
    if (typeof colRange === \'number\') {\n
      colRange = {\n
        from: colRange,\n
        to: colRange\n
      };\n
    }\n
    if (typeof rowRange === \'number\') {\n
      rowRange = {\n
        from: rowRange,\n
        to: rowRange\n
      };\n
    }\n
    rangeEach(colRange.from, colRange.to, (function(col) {\n
      if (force || ($__10.widths[col] === void 0 && !$__10.hot._getColWidthFromSettings(col))) {\n
        var samples = $__10.samplesGenerator.generateColumnSamples(col, rowRange);\n
        samples.forEach((function(sample, col) {\n
          return $__10.ghostTable.addColumn(col, sample);\n
        }));\n
      }\n
    }));\n
    if (this.ghostTable.columns.length) {\n
      this.ghostTable.getWidths((function(col, width) {\n
        return $__10.widths[col] = width;\n
      }));\n
      this.ghostTable.clean();\n
    }\n
  },\n
  calculateAllColumnsWidth: function() {\n
    var rowRange = arguments[0] !== (void 0) ? arguments[0] : {\n
      from: 0,\n
      to: this.hot.countRows() - 1\n
    };\n
    var $__10 = this;\n
    var current = 0;\n
    var length = this.hot.countCols() - 1;\n
    var timer = null;\n
    this.inProgress = true;\n
    var loop = (function() {\n
      if (!$__10.hot) {\n
        cancelAnimationFrame(timer);\n
        $__10.inProgress = false;\n
        return;\n
      }\n
      $__10.calculateColumnsWidth({\n
        from: current,\n
        to: Math.min(current + $AutoColumnSize.CALCULATION_STEP, length)\n
      }, rowRange);\n
      current = current + $AutoColumnSize.CALCULATION_STEP + 1;\n
      if (current < length) {\n
        timer = requestAnimationFrame(loop);\n
      } else {\n
        cancelAnimationFrame(timer);\n
        $__10.inProgress = false;\n
        $__10.hot.view.wt.wtOverlays.adjustElementsSize(true);\n
        if ($__10.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\n
          $__10.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\n
        }\n
      }\n
    });\n
    if (this.firstCalculation && this.getSyncCalculationLimit()) {\n
      this.calculateColumnsWidth({\n
        from: 0,\n
        to: this.getSyncCalculationLimit()\n
      }, rowRange);\n
      this.firstCalculation = false;\n
      current = this.getSyncCalculationLimit() + 1;\n
    }\n
    if (current < length) {\n
      loop();\n
    } else {\n
      this.inProgress = false;\n
    }\n
  },\n
  recalculateAllColumnsWidth: function() {\n
    if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\n
      this.clearCache();\n
      this.calculateAllColumnsWidth();\n
    }\n
  },\n
  getSyncCalculationLimit: function() {\n
    var limit = $AutoColumnSize.SYNC_CALCULATION_LIMIT;\n
    var colsLimit = this.hot.countCols() - 1;\n
    if (isObject(this.hot.getSettings().autoColumnSize)) {\n
      limit = this.hot.getSettings().autoColumnSize.syncLimit;\n
      if (isPercentValue(limit)) {\n
        limit = valueAccordingPercent(colsLimit, limit);\n
      } else {\n
        limit = limit >> 0;\n
      }\n
    }\n
    return Math.min(limit, colsLimit);\n
  },\n
  getColumnWidth: function(col) {\n
    var defaultWidth = arguments[1];\n
    var keepMinimum = arguments[2] !== (void 0) ? arguments[2] : true;\n
    var width = defaultWidth;\n
    if (width === void 0) {\n
      width = this.widths[col];\n
      if (keepMinimum && typeof width === \'number\') {\n
        width = Math.max(width, WalkontableViewportColumnsCalculator.DEFAULT_WIDTH);\n
      }\n
    }\n
    return width;\n
  },\n
  getFirstVisibleColumn: function() {\n
    var wot = this.hot.view.wt;\n
    if (wot.wtViewport.columnsVisibleCalculator) {\n
      return wot.wtTable.getFirstVisibleColumn();\n
    }\n
    if (wot.wtViewport.columnsRenderCalculator) {\n
      return wot.wtTable.getFirstRenderedColumn();\n
    }\n
    return -1;\n
  },\n
  getLastVisibleColumn: function() {\n
    var wot = this.hot.view.wt;\n
    if (wot.wtViewport.columnsVisibleCalculator) {\n
      return wot.wtTable.getLastVisibleColumn();\n
    }\n
    if (wot.wtViewport.columnsRenderCalculator) {\n
      return wot.wtTable.getLastRenderedColumn();\n
    }\n
    return -1;\n
  },\n
  clearCache: function() {\n
    this.widths.length = 0;\n
  },\n
  isNeedRecalculate: function() {\n
    return arrayFilter(this.widths, (function(item) {\n
      return (item === void 0);\n
    })).length ? true : false;\n
  },\n
  onBeforeRender: function() {\n
    var force = this.hot.renderCall;\n
    this.calculateColumnsWidth({\n
      from: this.getFirstVisibleColumn(),\n
      to: this.getLastVisibleColumn()\n
    }, void 0, force);\n
    if (this.isNeedRecalculate() && !this.inProgress) {\n
      this.calculateAllColumnsWidth();\n
    }\n
  },\n
  onAfterLoadData: function() {\n
    var $__10 = this;\n
    if (this.hot.view) {\n
      this.recalculateAllColumnsWidth();\n
    } else {\n
      setTimeout((function() 

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAg=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="8" aka="AAAAAAAAAAg=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

{\n
        if ($__10.hot) {\n
          $__10.recalculateAllColumnsWidth();\n
        }\n
      }), 0);\n
    }\n
  },\n
  onBeforeChange: function(changes) {\n
    var $__10 = this;\n
    arrayEach(changes, (function(data) {\n
      return $__10.widths[data[1]] = void 0;\n
    }));\n
  },\n
  onBeforeColumnResize: function(col, size, isDblClick) {\n
    if (isDblClick) {\n
      this.calculateColumnsWidth(col, void 0, true);\n
      size = this.getColumnWidth(col, void 0, false);\n
    }\n
    return size;\n
  },\n
  destroy: function() {\n
    this.ghostTable.clean();\n
    $traceurRuntime.superGet(this, $AutoColumnSize.prototype, "destroy").call(this);\n
  }\n
}, {\n
  get CALCULATION_STEP() {\n
    return 50;\n
  },\n
  get SYNC_CALCULATION_LIMIT() {\n
    return 50;\n
  }\n
}, BasePlugin);\n
;\n
registerPlugin(\'autoColumnSize\', AutoColumnSize);\n
\n
//# \n
},{"3rdparty/walkontable/src/calculator/viewportColumns":3,"_base":56,"helpers/array":41,"helpers/dom/element":44,"helpers/number":48,"helpers/object":49,"helpers/string":51,"plugins":55,"utils/ghostTable":97,"utils/samplesGenerator":98}],58:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  AutoRowSize: {get: function() {\n
      return AutoRowSize;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__95_base__,\n
    $___46__46__47__46__46__47_helpers_47_array__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_utils_47_ghostTable__,\n
    $___46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47_helpers_47_number__,\n
    $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__46__46__47_utils_47_samplesGenerator__,\n
    $___46__46__47__46__46__47_helpers_47_string__;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var $__1 = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}),\n
    arrayEach = $__1.arrayEach,\n
    arrayFilter = $__1.arrayFilter;\n
var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    cancelAnimationFrame = $__2.cancelAnimationFrame,\n
    requestAnimationFrame = $__2.requestAnimationFrame,\n
    isVisible = $__2.isVisible;\n
var GhostTable = ($___46__46__47__46__46__47_utils_47_ghostTable__ = require("utils/ghostTable"), $___46__46__47__46__46__47_utils_47_ghostTable__ && $___46__46__47__46__46__47_utils_47_ghostTable__.__esModule && $___46__46__47__46__46__47_utils_47_ghostTable__ || {default: $___46__46__47__46__46__47_utils_47_ghostTable__}).GhostTable;\n
var $__4 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),\n
    isObject = $__4.isObject,\n
    objectEach = $__4.objectEach;\n
var $__5 = ($___46__46__47__46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47__46__46__47_helpers_47_number__ && $___46__46__47__46__46__47_helpers_47_number__.__esModule && $___46__46__47__46__46__47_helpers_47_number__ || {default: $___46__46__47__46__46__47_helpers_47_number__}),\n
    isPercentValue = $__5.isPercentValue,\n
    rangeEach = $__5.rangeEach;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var SamplesGenerator = ($___46__46__47__46__46__47_utils_47_samplesGenerator__ = require("utils/samplesGenerator"), $___46__46__47__46__46__47_utils_47_samplesGenerator__ && $___46__46__47__46__46__47_utils_47_samplesGenerator__.__esModule && $___46__46__47__46__46__47_utils_47_samplesGenerator__ || {default: $___46__46__47__46__46__47_utils_47_samplesGenerator__}).SamplesGenerator;\n
var valueAccordingPercent = ($___46__46__47__46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47__46__46__47_helpers_47_string__ && $___46__46__47__46__46__47_helpers_47_string__.__esModule && $___46__46__47__46__46__47_helpers_47_string__ || {default: $___46__46__47__46__46__47_helpers_47_string__}).valueAccordingPercent;\n
var AutoRowSize = function AutoRowSize(hotInstance) {\n
  var $__9 = this;\n
  $traceurRuntime.superConstructor($AutoRowSize).call(this, hotInstance);\n
  this.heights = [];\n
  this.ghostTable = new GhostTable(this.hot);\n
  this.samplesGenerator = new SamplesGenerator((function(row, col) {\n
    return $__9.hot.getDataAtCell(row, col);\n
  }));\n
  this.firstCalculation = true;\n
  this.inProgress = false;\n
};\n
var $AutoRowSize = AutoRowSize;\n
($traceurRuntime.createClass)(AutoRowSize, {\n
  isEnabled: function() {\n
    return this.hot.getSettings().autoRowSize === true || isObject(this.hot.getSettings().autoRowSize);\n
  },\n
  enablePlugin: function() {\n
    var $__9 = this;\n
    if (this.enabled) {\n
      return;\n
    }\n
    this.addHook(\'afterLoadData\', (function() {\n
      return $__9.onAfterLoadData();\n
    }));\n
    this.addHook(\'beforeChange\', (function(changes) {\n
      return $__9.onBeforeChange(changes);\n
    }));\n
    this.addHook(\'beforeColumnMove\', (function() {\n
      return $__9.recalculateAllRowsHeight();\n
    }));\n
    this.addHook(\'beforeColumnResize\', (function() {\n
      return $__9.recalculateAllRowsHeight();\n
    }));\n
    this.addHook(\'beforeColumnSort\', (function() {\n
      return $__9.clearCache();\n
    }));\n
    this.addHook(\'beforeRender\', (function(force) {\n
      return $__9.onBeforeRender(force);\n
    }));\n
    this.addHook(\'beforeRowMove\', (function(rowStart, rowEnd) {\n
      return $__9.onBeforeRowMove(rowStart, rowEnd);\n
    }));\n
    this.addHook(\'beforeRowResize\', (function(row, size, isDblClick) {\n
      return $__9.onBeforeRowResize(row, size, isDblClick);\n
    }));\n
    this.addHook(\'modifyRowHeight\', (function(height, row) {\n
      return $__9.getRowHeight(row, height);\n
    }));\n
    $traceurRuntime.superGet(this, $AutoRowSize.prototype, "enablePlugin").call(this);\n
  },\n
  disablePlugin: function() {\n
    $traceurRuntime.superGet(this, $AutoRowSize.prototype, "disablePlugin").call(this);\n
  },\n
  calculateRowsHeight: function() {\n
    var rowRange = arguments[0] !== (void 0) ? arguments[0] : {\n
      from: 0,\n
      to: this.hot.countRows() - 1\n
    };\n
    var colRange = arguments[1] !== (void 0) ? arguments[1] : {\n
      from: 0,\n
      to: this.hot.countCols() - 1\n
    };\n
    var force = arguments[2] !== (void 0) ? arguments[2] : false;\n
    var $__9 = this;\n
    if (typeof rowRange === \'number\') {\n
      rowRange = {\n
        from: rowRange,\n
        to: rowRange\n
      };\n
    }\n
    if (typeof colRange === \'number\') {\n
      colRange = {\n
        from: colRange,\n
        to: colRange\n
      };\n
    }\n
    rangeEach(rowRange.from, rowRange.to, (function(row) {\n
      if (force || $__9.heights[row] === void 0) {\n
        var samples = $__9.samplesGenerator.generateRowSamples(row, colRange);\n
        samples.forEach((function(sample, row) {\n
          return $__9.ghostTable.addRow(row, sample);\n
        }));\n
      }\n
    }));\n
    if (this.ghostTable.rows.length) {\n
      this.ghostTable.getHeights((function(row, height) {\n
        return $__9.heights[row] = height;\n
      }));\n
      this.ghostTable.clean();\n
    }\n
  },\n
  calculateAllRowsHeight: function() {\n
    var colRange = arguments[0] !== (void 0) ? arguments[0] : {\n
      from: 0,\n
      to: this.hot.countCols() - 1\n
    };\n
    var $__9 = this;\n
    var current = 0;\n
    var length = this.hot.countRows() - 1;\n
    var timer = null;\n
    this.inProgress = true;\n
    var loop = (function() {\n
      if (!$__9.hot) {\n
        cancelAnimationFrame(timer);\n
        $__9.inProgress = false;\n
        return;\n
      }\n
      $__9.calculateRowsHeight({\n
        from: current,\n
        to: Math.min(current + $AutoRowSize.CALCULATION_STEP, length)\n
      }, colRange);\n
      current = current + $AutoRowSize.CALCULATION_STEP + 1;\n
      if (current < length) {\n
        timer = requestAnimationFrame(loop);\n
      } else {\n
        cancelAnimationFrame(timer);\n
        $__9.inProgress = false;\n
        $__9.hot.view.wt.wtOverlays.adjustElementsSize(true);\n
        if ($__9.hot.view.wt.wtOverlays.leftOverlay.needFullRender) {\n
          $__9.hot.view.wt.wtOverlays.leftOverlay.clone.draw();\n
        }\n
      }\n
    });\n
    if (this.firstCalculation && this.getSyncCalculationLimit()) {\n
      this.calculateRowsHeight({\n
        from: 0,\n
        to: this.getSyncCalculationLimit()\n
      }, colRange);\n
      this.firstCalculation = false;\n
      current = this.getSyncCalculationLimit() + 1;\n
    }\n
    if (current < length) {\n
      loop();\n
    } else {\n
      this.inProgress = false;\n
    }\n
  },\n
  recalculateAllRowsHeight: function() {\n
    if (isVisible(this.hot.view.wt.wtTable.TABLE)) {\n
      this.clearCache();\n
      this.calculateAllRowsHeight();\n
    }\n
  },\n
  getSyncCalculationLimit: function() {\n
    var limit = $AutoRowSize.SYNC_CALCULATION_LIMIT;\n
    var rowsLimit = this.hot.countRows() - 1;\n
    if (isObject(this.hot.getSettings().autoRowSize)) {\n
      limit = this.hot.getSettings().autoRowSize.syncLimit;\n
      if (isPercentValue(limit)) {\n
        limit = valueAccordingPercent(rowsLimit, limit);\n
      } else {\n
        limit = limit >> 0;\n
      }\n
    }\n
    return Math.min(limit, rowsLimit);\n
  },\n
  getRowHeight: function(row) {\n
    var defaultHeight = arguments[1];\n
    var height = defaultHeight;\n
    if (this.heights[row] !== void 0 && this.heights[row] > (defaultHeight || 0)) {\n
      height = this.heights[row];\n
    }\n
    return height;\n
  },\n
  getFirstVisibleRow: function() {\n
    var wot = this.hot.view.wt;\n
    if (wot.wtViewport.rowsVisibleCalculator) {\n
      return wot.wtTable.getFirstVisibleRow();\n
    }\n
    if (wot.wtViewport.rowsRenderCalculator) {\n
      return wot.wtTable.getFirstRenderedRow();\n
    }\n
    return -1;\n
  },\n
  getLastVisibleRow: function() {\n
    var wot = this.hot.view.wt;\n
    if (wot.wtViewport.rowsVisibleCalculator) {\n
      return wot.wtTable.getLastVisibleRow();\n
    }\n
    if (wot.wtViewport.rowsRenderCalculator) {\n
      return wot.wtTable.getLastRenderedRow();\n
    }\n
    return -1;\n
  },\n
  clearCache: function() {\n
    this.heights.length = 0;\n
  },\n
  clearCacheByRange: function(range) {\n
    var $__9 = this;\n
    if (typeof range === \'number\') {\n
      range = {\n
        from: range,\n
        to: range\n
      };\n
    }\n
    rangeEach(Math.min(range.from, range.to), Math.max(range.from, range.to), (function(row) {\n
      return $__9.heights[row] = void 0;\n
    }));\n
  },\n
  isNeedRecalculate: function() {\n
    return arrayFilter(this.heights, (function(item) {\n
      return (item === void 0);\n
    })).length ? true : false;\n
  },\n
  onBeforeRender: function() {\n
    var force = this.hot.renderCall;\n
    this.calculateRowsHeight({\n
      from: this.getFirstVisibleRow(),\n
      to: this.getLastVisibleRow()\n
    }, void 0, force);\n
    if (this.isNeedRecalculate() && !this.inProgress) {\n
      this.calculateAllRowsHeight();\n
    }\n
  },\n
  onBeforeRowMove: function(from, to) {\n
    this.clearCacheByRange({\n
      from: from,\n
      to: to\n
    });\n
    this.calculateAllRowsHeight();\n
  },\n
  onBeforeRowResize: function(row, size, isDblClick) {\n
    if (isDblClick) {\n
      this.calculateRowsHeight(row, void 0, true);\n
      size = this.getRowHeight(row);\n
    }\n
    return size;\n
  },\n
  onAfterLoadData: function() {\n
    var $__9 = this;\n
    if (this.hot.view) {\n
      this.recalculateAllRowsHeight();\n
    } else {\n
      setTimeout((function() {\n
        if ($__9.hot) {\n
          $__9.recalculateAllRowsHeight();\n
        }\n
      }), 0);\n
    }\n
  },\n
  onBeforeChange: function(changes) {\n
    var range = null;\n
    if (changes.length === 1) {\n
      range = changes[0][0];\n
    } else if (changes.length > 1) {\n
      range = {\n
        from: changes[0][0],\n
        to: changes[changes.length - 1][0]\n
      };\n
    }\n
    if (range !== null) {\n
      this.clearCacheByRange(range);\n
    }\n
  },\n
  destroy: function() {\n
    this.ghostTable.clean();\n
    $traceurRuntime.superGet(this, $AutoRowSize.prototype, "destroy").call(this);\n
  }\n
}, {\n
  get CALCULATION_STEP() {\n
    return 50;\n
  },\n
  get SYNC_CALCULATION_LIMIT() {\n
    return 500;\n
  }\n
}, BasePlugin);\n
;\n
registerPlugin(\'autoRowSize\', AutoRowSize);\n
\n
//# \n
},{"_base":56,"helpers/array":41,"helpers/dom/element":44,"helpers/number":48,"helpers/object":49,"helpers/string":51,"plugins":55,"utils/ghostTable":97,"utils/samplesGenerator":98}],59:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  Autofill: {get: function() {\n
      return Autofill;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    offset = $__0.offset,\n
    outerHeight = $__0.outerHeight,\n
    outerWidth = $__0.outerWidth;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
;\n
function getDeltas(start, end, data, direction) {\n
  var rlength = data.length,\n
      clength = data ? data[0].length : 0,\n
      deltas = [],\n
      arr = [],\n
      diffRow,\n
      diffCol,\n
      startValue,\n
      endValue,\n
      delta;\n
  diffRow = end.row - start.row;\n
  diffCol = end.col - start.col;\n
  if ([\'down\', \'up\'].indexOf(direction) !== -1) {\n
    for (var col = 0; col <= diffCol; col++) {\n
      startValue = parseInt(data[0][col], 10);\n
      endValue = parseInt(data[rlength - 1][col], 10);\n
      delta = (direction === \'down\' ? (endValue - startValue) : (startValue - endValue)) / (rlength - 1) || 0;\n
      arr.push(delta);\n
    }\n
    deltas.push(arr);\n
  }\n
  if ([\'right\', \'left\'].indexOf(direction) !== -1) {\n
    for (var row = 0; row <= diffRow; row++) {\n
      startValue = parseInt(data[row][0], 10);\n
      endValue = parseInt(data[row][clength - 1], 10);\n
      delta = (direction === \'right\' ? (endValue - startValue) : (startValue - endValue)) / (clength - 1) || 0;\n
      arr = [];\n
      arr.push(delta);\n
      deltas.push(arr);\n
    }\n
  }\n
  return deltas;\n
}\n
function Autofill(instance) {\n
  var _this = this,\n
      mouseDownOnCellCorner = false,\n
      wtOnCellCornerMouseDown,\n
      wtOnCellMouseOver,\n
      eventManager;\n
  this.instance = instance;\n
  this.addingStarted = false;\n
  eventManager = eventManagerObject(instance);\n
  function mouseUpCallback(event) {\n
    if (!instance.autofill) {\n
      return true;\n
    }\n
    if (instance.autofill.handle && instance.autofill.handle.isDragged) {\n
      if (instance.autofill.handle.isDragged > 1) {\n
        instance.autofill.apply();\n
      }\n
      instance.autofill.handle.isDragged = 0;\n
      mouseDownOnCellCorner = false;\n
    }\n
  }\n
  function mouseMoveCallback(event) {\n
    var tableBottom,\n
        tableRight;\n
    if (!_this.instance.autofill) {\n
      return false;\n
    }\n
    tableBottom = offset(_this.instance.table).top - (window.pageYOffset || document.documentElement.scrollTop) + outerHeight(_this.instance.table);\n
    tableRight = offset(_this.instance.table).left - (window.pageXOffset || document.documentElement.scrollLeft) + outerWidth(_this.instance.table);\n
    if (_this.addingStarted === false && _this.instance.autofill.handle.isDragged > 0 && event.clientY > tableBottom && event.clientX <= tableRight) {\n
      _this.instance.mouseDragOutside = true;\n
      _this.addingStarted = true;\n
    } else {\n
      _this.instance.mouseDragOutside = false;\n
    }\n
    if (_this.instance.mouseDragOutside) {\n
      setTimeout(function() {\n
        _this.addingStarted = false;\n
        _this.instance.alter(\'insert_row\');\n
      }, 200);\n
    }\n
  }\n
  eventManager.addEventListener(document, \'mouseup\', mouseUpCallback);\n
  eventManager.addEventListener(document, \'mousemove\', mouseMoveCallback);\n
  wtOnCellCornerMouseDown = this.instance.view.wt.wtSettings.settings.onCellCornerMouseDown;\n
  this.instance.view.wt.wtSettings.settings.onCellCornerMouseDown = function(event) {\n
    instance.autofill.handle.isDragged = 1;\n
    mouseDownOnCellCorner = true;\n
    wtOnCellCornerMouseDown(event);\n
  };\n
  wtOnCellMouseOver = this.instance.view.wt.wtSettings.settings.onCellMouseOver;\n
  this.instance.view.wt.wtSettings.settings.onCellMouseOver = function(event, coords, TD, wt) {\n
    if (instance.autofill && mouseDownOnCellCorner && !instance.view.isMouseDown() && instance.autofill.handle && instance.autofill.handle.isDragged) {\n
      instance.autofill.handle.isDragged++;\n
      instance.autofill.showBorder(coords);\n
      instance.autofill.checkIfNewRowNeeded();\n
    }\n
    wtOnCellMouseOver(event, coords, TD, wt);\n
  };\n
  this.instance.view.wt.wtSettings.settings.onCellCornerDblClick = function() {\n
    instance.autofill.selectAdjacent();\n
  };\n
}\n
Autofill.prototype.init = function() {\n
  this.handle = {};\n
};\n
Autofill.prototype.disable = function() {\n
  this.handle.disabled = true;\n
};\n
Autofill.prototype.selectAdjacent = function() {\n
  var select,\n
      data,\n
      r,\n
      maxR,\n
      c;\n
  if (this.instance.selection.isMultiple()) {\n
    select = this.instance.view.wt.selections.area.getCorners();\n
  } else {\n
    select = this.instance.view.wt.selections.current.getCorners();\n
  }\n
  data = this.instance.getData();\n
  rows: for (r = select[2] + 1; r < this.instance.countRows(); r++) {\n
    for (c = select[1]; c <= select[3]; c++) {\n
      if (data[r][c]) {\n
        break rows;\n
      }\n
    }\n
    if (!!data[r][select[1] - 1] || !!data[r][select[3] + 1]) {\n
      maxR = r;\n
    }\n
  }\n
  if (maxR) {\n
    this.instance.view.wt.selections.fill.clear();\n
    this.instance.view.wt.selections.fill.add(new WalkontableCellCoords(select[0], select[1]));\n
    this.instance.view.wt.selections.fill.add(new WalkontableCellCoords(maxR, select[3]));\n
    this.apply();\n
  }\n
};\n
Autofill.prototype.apply = function() {\n
  var drag,\n
      select,\n
      start,\n
      end,\n
      _data,\n
      direction,\n
      deltas,\n
      selRange;\n
  this.handle.isDragged = 0;\n
  drag = this.instance.view.wt.selections.fill.getCorners();\n
  if (!drag) {\n
    return;\n
  }\n
  this.instance.view.wt.selections.fill.clear();\n
  if (this.instance.selection.isMultiple()) {\n
    select = this.instance.view.wt.selections.area.getCorners();\n
  } else {\n
    select = this.instance.view.wt.selections.current.getCorners();\n
  }\n
  Handsontable.hooks.run(this.instance, \'afterAutofillApplyValues\', select, drag);\n
  if (drag[0] === select[0] && drag[1] < select[1]) {\n
    direction = \'left\';\n
    start = new WalkontableCellCoords(drag[0], drag[1]);\n
    end = new WalkontableCellCoords(drag[2], select[1] - 1);\n
  } else if (drag[0] === select[0] && drag[3] > select[3]) {\n
    direction = \'right\';\n
    start = new WalkontableCellCoords(drag[0], select[3] + 1);\n
    end = new WalkontableCellCoords(drag[2], drag[3]);\n
  } else if (drag[0] < select[0] && drag[1] === select[1]) {\n
    direction = \'up\';\n
    start = new WalkontableCellCoords(drag[0], drag[1]);\n
    end = new WalkontableCellCoords(select[0] - 1, drag[3]);\n
  } else if (drag[2] > select[2] && drag[1] === select[1]) {\n
    direction = \'down\';\n
    start = new WalkontableCellCoords(select[2] + 1, drag[1]);\n
    end = new WalkontableCellCoords(drag[2], drag[3]);\n
  }\n
  if (start && start.row > -1 && start.col > -1) {\n
    selRange = {\n
      from: this.instance.getSelectedRange().from,\n
      to: this.instance.getSelectedRange().to\n
    };\n
    _data = this.instance.getData(selRange.from.row, selRange.from.col, selRange.to.row, selRange.to.col);\n
    deltas = getDeltas(start, end, _data, direction);\n
    Handsontable.hooks.run(this.instance, \'beforeAutofill\', start, end, _data);\n
    this.instance.populateFromArray(start.row, start.col, _data, end.row, end.col, \'autofill\', null, direction, deltas);\n
    this.instance.selection.setRangeStart(new WalkontableCellCoords(drag[0], drag[1]));\n
    this.instance.selection.setRangeEnd(new WalkontableCellCoords(drag[2], drag[3]));\n
  } else {\n
    this.instance.selection.refreshBorders();\n
  }\n
};\n
Autofill.prototype.showBorder = function(coords) {\n
  var topLeft = this.instance.getSelectedRange().getTopLeftCorner(),\n
      bottomRight = this.instance.getSelectedRange().getBottomRightCorner();\n
  if (this.instance.getSettings().fillHandle !== \'horizontal\' && (bottomRight.row < coords.row || topLeft.row > coords.row)) {\n
    coords = new WalkontableCellCoords(coords.row, bottomRight.col);\n
  } else if (this.instance.getSettings().fillHandle !== \'vertical\') {\n
    coords = new WalkontableCellCoords(bottomRight.row, coords.col);\n
  } else {\n
    return;\n
  }\n
  this.instance.view.wt.selections.fill.clear();\n
  this.instance.view.wt.selections.fill.add(this.instance.getSelectedRange().from);\n
  this.instance.view.wt.selections.fill.add(this.instance.getSelectedRange().to);\n
  this.instance.view.wt.selections.fill.add(coords);\n
  this.instance.view.render();\n
};\n
Autofill.prototype.checkIfNewRowNeeded = function() {\n
  var fillCorners,\n
      selection,\n
      tableRows = this.instance.countRows(),\n
      that = this;\n
  if (this.instance.view.wt.selections.fill.cellRange && this.addingStarted === false) {\n
    selection = this.instance.getSelected();\n
    fillCorners = this.instance.view.wt.selections.fill.getCorners();\n
    if (selection[2] < tableRows - 1 && fillCorners[2] === tableRows - 1) {\n
      this.addingStarted = true;\n
      this.instance._registerTimeout(setTimeout(function() {\n
        that.instance.alter(\'insert_row\');\n
        that.addingStarted = false;\n
      }, 200));\n
    }\n
  }\n
};\n
Handsontable.hooks.add(\'afterInit\', function() {\n
  var autofill = new Autofill(this);\n
  if (typeof this.getSettings().fillHandle !== \'undefined\') {\n
    if (autofill.handle && this.getSettings().fillHandle === false) {\n
      autofill.disable();\n
    } else if (!autofill.handle && this.getSettings().fillHandle !== false) {\n
      this.autofill = autofill;\n
      this.autofill.init();\n
    }\n
  }\n
});\n
Handsontable.Autofill = Autofill;\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"eventManager":40,"helpers/dom/element":44,"plugins":55}],60:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  default: {get: function() {\n
      return $__default;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__95_base__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    closest = $__0.closest,\n
    hasClass = $__0.hasClass,\n
    index = $__0.index,\n
    removeClass = $__0.removeClass;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
Handsontable.hooks.register(\'beforeColumnSort\');\n
Handsontable.hooks.register(\'afterColumnSort\');\n
var ColumnSorting = function ColumnSorting(hotInstance) {\n
  $traceurRuntime.superConstructor($ColumnSorting).call(this, hotInstance);\n
  this.sortIndicators = [];\n
};\n
var $ColumnSorting = ColumnSorting;\n
($traceurRuntime.createClass)(ColumnSorting, {\n
  isEnabled: function() {\n
    return !!(this.hot.getSettings().columnSorting);\n
  },\n
  enablePlugin: function() {\n
    var $__4 = this;\n
    if (this.enabled) {\n
      return;\n
    }\n
    var _this = this;\n
    this.hot.sortIndex = [];\n
    this.hot.sort = function() {\n
      var args = Array.prototype.slice.call(arguments);\n
      return _this.sortByColumn.apply(_this, args);\n
    };\n
    if (typeof this.hot.getSettings().observeChanges === \'undefined\') {\n
      this.enableObserveChangesPlugin();\n
    }\n
    this.bindColumnSortingAfterClick();\n
    this.addHook(\'modifyRow\', (function(row) {\n
      return $__4.translateRow(row);\n
    }));\n
    this.addHook(\'afterUpdateSettings\', (function() {\n
      return $__4.onAfterUpdateSettings();\n
    }));\n
    this.addHook(\'afterGetColHeader\', (function(col, TH) {\n
      return $__4.getColHeader(col, TH);\n
    }));\n
    this.addHook(\'afterCreateRow\', function() {\n
      _this.afterCreateRow.apply(_this, arguments);\n
    });\n
    this.addHook(\'afterRemoveRow\', function() {\n
      _this.afterRemoveRow.apply(_this, arguments);\n
    });\n
    this.addHook(\'afterInit\', (function() {\n
      return $__4.sortBySettings();\n
    }));\n
    this.addHook(\'afterLoadData\', (function() {\n
      $__4.hot.sortIndex = [];\n
      if ($__4.hot.view) {\n
        $__4.sortBySettings();\n
      }\n
    }));\n
    if (this.hot.view) {\n
      this.sortBySettings();\n
    }\n
    $traceurRuntime.superGet(this, $ColumnSorting.prototype, "enablePlugin").call(this);\n
  },\n
  disablePlugin: function() {\n
    this.hot.sort = void 0;\n
    $traceurRuntime.superGet(this, $ColumnSorting.prototype, "disablePlugin").call(this);\n
  },\n
  onAfterUpdateSettings: function() {\n
    this.sortBySettings();\n
  },\n
  sortBySettings: function() {\n
    var sortingSettings = this.hot.getSettings().columnSorting;\n
    var loadedSortingState = this.loadSortingState();\n
    var sortingColumn;\n
    var sortingOrder;\n
    if (typeof loadedSortingState !== \'undefined\') {\n
      sortingColumn = loadedSortingState.sortColumn;\n
      sortingOrder = loadedSortingState.sortOrder;\n
    } else {\n
      sortingColumn = sortingSettings.column;\n
      sortingOrder = sortingSettings.sortOrder;\n
    }\n
    this.sortByColumn(sortingColumn, sortingOrder);\n
  },\n
  setSortingColumn: function(col, order) {\n
    if (typeof col == \'undefined\') {\n
      this.hot.sortColumn = void 0;\n
      this.hot.sortOrder = void 0;\n
      return;\n
    } else if (this.hot.sortColumn === col && typeof order == \'undefined\') {\n
      if (this.hot.sortOrder === false) {\n
        this.hot.sortOrder = void 0;\n
      } else {\n
        this.hot.sortOrder = !this.hot.sortOrder;\n
      }\n
    } else {\n
      this.hot.sortOrder = typeof order != \'undefined\' ? order : true;\n
    }\n
    this.hot.sortColumn = col;\n
  },\n
  sortByColumn: function(col, order) {\n
    this.setSortingColumn(col, order);\n
    if (typeof this.hot.sortColumn == \'undefined\') {\n
      return;\n
    }\n
    Handsontable.hooks.run(this.hot, \'beforeColumnSort\', this.hot.sortColumn, this.hot.sortOrder);\n
    this.sort();\n
    this.hot.render();\n
    this.saveSortingState();\n
    Handsontable.hooks.run(this.hot, \'afterColumnSort\', this.hot.sortColumn, this.hot.sortOrder);\n
  },\n
  saveSortingState: function() {\n
    var sortingState = {};\n
    if (typeof this.hot.sortColumn != \'undefined\') {\n
      sortingState.sortColumn = this.hot.sortColumn;\n
    }\n
    if (typeof this.hot.sortOrder != \'undefined\') {\n
      sortingState.sortOrder = this.hot.sortOrder;\n
    }\n
    if (sortingState.hasOwnProperty(\'sortColumn\') || sortingState.hasOwnProperty(\'sortOrder\')) {\n
      Handsontable.hooks.run(this.hot, \'persistentStateSave\', \'columnSorting\', sortingState);\n
    }\n
  },\n
  loadSortingState: function() {\n
    var storedState = {};\n
    Handsontable.hooks.run(this.hot, \'persistentStateLoad\', \'columnSorting\', storedState);\n
    return storedState.value;\n
  },\n
  bindColumnSortingAfterClick: function() {\n
    if (this.bindedSortEvent) {\n
      return;\n
    }\n
    var eventManager = eventManagerObject(this.hot),\n
        _this = this;\n
    this.bindedSortEvent = true;\n
    eventManager.addEventListener(this.hot.rootElement, \'click\', function(e) {\n
      if (hasClass(e.target, \'columnSorting\')) {\n
        var col = getColumn(e.target);\n
        if (col !== this.lastSortedColumn) {\n
          _this.sortOrderClass = \'ascending\';\n
        } else {\n
          switch (_this.hot.sortOrder) {\n
            case void 0:\n
              _this.sortOrderClass = \'ascending\';\n
              break;\n
            case true:\n
              _this.sortOrderClass = \'descending\';\n
              break;\n
            case false:\n
              _this.sortOrderClass = void 0;\n
          }\n
        }\n
        this.lastSortedColumn = col;\n
        _this.sortByColumn(col);\n
      }\n
    });\n
    function countRowHeaders() {\n
      var THs = _this.hot.view.TBODY.querySelector(\'tr\').querySelectorAll(\'th\');\n
      return THs.length;\n
    }\n
    function getColumn(target) {\n
      var TH = closest(target, \'TH\');\n
      return index(TH) - countRowHeaders();\n
    }\n
  },\n
  enableObserveChangesPlugin: function() {\n
    var _this = this;\n
    this.hot._registerTimeout(setTimeout(function() {\n
      _this.hot.updateSettings({observeChanges: true});\n
    }, 0));\n
  },\n
  defaultSort: function(sortOrder) {\n
    return function(a, b) {\n
      if (typeof a[1] == "string") {\n
        a[1] = a[1].toLowerCase();\n
      }\n
      if (typeof b[1] == "string") {\n
        b[1] = b[1].toLowerCase();\n
      }\n
      if (a[1] === b[1]) {\n
        return 0;\n
      }\n
      if (a[1] === null || a[1] === "") {\n
        return 1;\n
      }\n
      if (b[1] === null || b[1] === "") {\n
        return -1;\n
      }\n
      if (a[1] < b[1]) {\n
        return sortOrder ? -1 : 1;\n
      }\n
      if (a[1] > b[1]) {\n
        return sortOrder ? 1 : -1;\n
      }\n
      return 0;\n
    };\n
  },\n
  dateSort: function(sortOrder) {\n
    return function(a, b) {\n
      if (a[1] === b[1]) {\n
        return 0;\n
      }\n
      if (a[1] === null) {\n
        return 1;\n
      }\n
      if (b[1] === null) {\n
        return -1;\n
      }\n
      var aDate = new Date(a[1]);\n
      var bDate = new Date(b[1]);\n
      if (aDate < bDate) {\n
        return sortOrder ? -1 : 1;\n
      }\n
      if (aDate > bDate) {\n
        return sortOrder ? 1 : -1;\n
      }\n
      return 0;\n
    };\n
  },\n
  sort: function() {\n
    if (typeof this.hot.sortOrder == \'undefined\') {\n
      return;\n
    }\n
    var colMeta,\n
        sortFunction;\n
    this.hot.sortingEnabled = false;\n
    this.hot.sortIndex.length = 0;\n
    var colOffset = this.hot.colOffset();\n
    for (var i = 0,\n
        ilen = this.hot.countRows() - this.hot.getSettings().minSpareRows; i < ilen; i++) {\n
      this.hot.sortIndex.push([i, this.hot.getDataAtCell(i, this.hot.sortColumn + colOffset)]);\n
    }\n
    colMeta = this.hot.getCellMeta(0, this.hot.sortColumn);\n
    this.sortIndicators[this.hot.sortColumn] = colMeta.sortIndicator;\n
    switch (colMeta.type) {\n
      case \'date\':\n
        sortFunction = this.dateSort;\n
        break;\n
      default:\n
        sortFunction = this.defaultSort;\n
    }\n
    this.hot.sortIndex.sort(sortFunction(this.hot.sortOrder));\n
    for (var i = this.hot.sortIndex.length; i < this.hot.countRows(); i++) {\n
      this.hot.sortIndex.push([i, this.hot.getDataAtCell(i, this.hot.sortColumn + colOffset)]);\n
    }\n
    this.hot.sortingEnabled = true;\n
  },\n
  translateRow: function(row) {\n
    if (this.hot.sortingEnabled && (typeof this.hot.sortOrder !== \'undefined\') && this.hot.sortIndex && this.hot.sortIndex.length && this.hot.sortIndex[row]) {\n
      return this.hot.sortIndex[row][0];\n
    }\n
    return row;\n
  },\n
  untranslateRow: function(row) {\n
    if (this.hot.sortingEnabled && this.hot.sortIndex && this.hot.sortIndex.length) {\n
      for (var i = 0; i < this.hot.sortIndex.length; i++) {\n
        if (this.hot.sortIndex[i][0] == row) {\n
          return i;\n
        }\n
      }\n
    }\n
  },\n
  getColHeader: function(col, TH) {\n
    var headerLink = TH.querySelector(\'.colHeader\');\n
    if (this.hot.getSettings().columnSorting && col >= 0) {\n
      addClass(headerLink, \'columnSorting\');\n
    }\n
    removeClass(headerLink, \'descending\');\n
    removeClass(headerLink, \'ascending\');\n
    if (this.sortIndicators[col]) {\n
      if (col === this.hot.sortColumn) {\n
        if (this.sortOrderClass === \'ascending\') {\n
          addClass(headerLink, \'ascending\');\n
        } else if (this.sortOrderClass === \'descending\') {\n
          addClass(headerLink, \'descending\');\n
        }\n
      }\n
    }\n
  },\n
  isSorted: function() {\n
    return typeof this.hot.sortColumn != \'undefined\';\n
  },\n
  afterCreateRow: function(index, amount) {\n
    if (!this.isSorted()) {\n
      return;\n
    }\n
    for (var i = 0; i < this.hot.sortIndex.length; i++) {\n
      if (this.hot.sortIndex[i][0] >= index) {\n
        this.hot.sortIndex[i][0] += amount;\n
      }\n
    }\n
    for (var i = 0; i < amount; i++) {\n
      this.hot.sortIndex.splice(index + i, 0, [index + i, this.hot.getData()[index + i][this.hot.sortColumn + this.hot.colOffset()]]);\n
    }\n
    this.saveSortingState();\n
  },\n
  afterRemoveRow: function(index, amount) {\n
    if (!this.isSorted()) {\n
      return;\n
    }\n
    var physicalRemovedIndex = this.translateRow(index);\n
    this.hot.sortIndex.splice(index, amount);\n
    for (var i = 0; i < this.hot.sortIndex.length; i++) {\n
      if (this.hot.sortIndex[i][0] > physicalRemovedIndex) {\n
        this.hot.sortIndex[i][0] -= amount;\n
      }\n
    }\n
    this.saveSortingState();\n
  }\n
}, {}, BasePlugin);\n
var $__default = ColumnSorting;\n
registerPlugin(\'columnSorting\', ColumnSorting);\n
\n
//# \n
},{"_base":56,"eventManager":40,"helpers/dom/element":44,"plugins":55}],61:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  CommentEditor: {get: function() {\n
      return CommentEditor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__;\n
var addClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).addClass;\n
var CommentEditor = function CommentEditor() {\n
  this.editor = this.createEditor();\n
  this.editorStyle = this.editor.style;\n
  this.editorStyle.position = \'absolute\';\n
  this.editorStyle.zIndex = 100;\n
  this.hide();\n
};\n
var $CommentEditor = CommentEditor;\n
($traceurRuntime.createClass)(CommentEditor, {\n
  setPosition: function(x, y) {\n
    this.editorStyle.left = x + \'px\';\n
    this.editorStyle.top = y + \'px\';\n
  },\n
  show: function() {\n
    this.editorStyle.display = \'block\';\n
  },\n
  hide: function() {\n
    this.editorStyle.display = \'none\';\n
  },\n
  isVisible: function() {\n
    return this.editorStyle.display === \'block\';\n
  },\n
  setValue: function() {\n
    var value = arguments[0] !== (void 0) ? arguments[0] : \'\';\n
    value = value || \'\';\n
    this.getInputElement().value = value;\n
  },\n
  getValue: function() {\n
    return this.getInputElement().value;\n
  },\n
  isFocused: function() {\n
    return document.activeElement === this.getInputElement();\n
  },\n
  focus: function() {\n
    this.getInputElement().focus();\n
  },\n
  createEditor: function() {\n
    var container = document.querySelector(\'.\' + $CommentEditor.CLASS_EDITOR_CONTAINER);\n
    var editor;\n
    var textArea;\n
    if (!container) {\n
      container = document.createElement(\'div\');\n
      addClass(container, $CommentEditor.CLASS_EDITOR_CONTAINER);\n
      document.body.appendChild(container);\n
    }\n
    editor = document.createElement(\'div\');\n
    addClass(editor, $CommentEditor.CLASS_EDITOR);\n
    textArea = document.createElement(\'textarea\');\n
    addClass(textArea, $CommentEditor.CLASS_INPUT);\n
    editor.appendChild(textArea);\n
    container.appendChild(editor);\n
    return editor;\n
  },\n
  getInputElement: function() {\n
    return this.editor.querySelector(\'.\' + $CommentEditor.CLASS_INPUT);\n
  },\n
  destroy: function() {\n
    this.editor.parentNode.removeChild(this.editor);\n
    this.editor = null;\n
    this.editorStyle = null;\n
  }\n
}, {\n
  get CLASS_EDITOR_CONTAINER() {\n
    return \'htCommentsContainer\';\n
  },\n
  get CLASS_EDITOR() {\n
    return \'htComments\';\n
  },\n
  get CLASS_INPUT() {\n
    return \'htCommentTextArea\';\n
  },\n
  get CLASS_CELL() {\n
    return \'htCommentCell\';\n
  }\n
});\n
;\n
\n
//# \n
},{"helpers/dom/element":44}],62:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  Comments: {get: function() {\n
      return Comments;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__,\n
    $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__95_base__,\n
    $__commentEditor__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    closest = $__0.closest,\n
    getWindowScrollLeft = $__0.getWindowScrollLeft,\n
    getWindowScrollTop = $__0.getWindowScrollTop,\n
    hasClass = $__0.hasClass,\n
    offset = $__0.offset;\n
var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;\n
var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
var $__3 = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}),\n
    registerPlugin = $__3.registerPlugin,\n
    getPlugin = $__3.getPlugin;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var CommentEditor = ($__commentEditor__ = require("commentEditor"), $__commentEditor__ && $__commentEditor__.__esModule && $__commentEditor__ || {default: $__commentEditor__}).CommentEditor;\n
var Comments = function Comments(hotInstance) {\n
  $traceurRuntime.superConstructor($Comments).call(this, hotInstance);\n
  this.editor = null;\n
  this.eventManager = null;\n
  this.range = {};\n
  this.mouseDown = false;\n
  this.contextMenuEvent = false;\n
  this.timer = null;\n
};\n
var $Comments = Comments;\n
($traceurRuntime.createClass)(Comments, {\n
  isEnabled: function() {\n
    return this.hot.getSettings().comments;\n
  },\n
  enablePlugin: function() {\n
    var $__6 = this;\n
    if (this.enabled) {\n
      return;\n
    }\n
    if (!this.editor) {\n
      this.editor = new CommentEditor();\n
    }\n
    if (!this.eventManager) {\n
      this.eventManager = new EventManager(this);\n
    }\n
    this.addHook(\'afterContextMenuDefaultOptions\', (function(options) {\n
      return $__6.addToContextMenu(options);\n
    }));\n
    this.addHook(\'afterRenderer\', (function(TD, row, col, prop, value, cellProperties) {\n
      return $__6.onAfterRenderer(TD, cellProperties);\n
    }));\n
    this.addHook(\'afterScrollVertically\', (function() {\n
      return $__6.refreshEditorPosition();\n
    }));\n
    this.addHook(\'afterColumnResize\', (function() {\n
      return $__6.refreshEditorPosition();\n
    }));\n
    this.addHook(\'afterRowResize\', (function() {\n
      return $__6.refreshEditorPosition();\n
    }));\n
    this.registerListeners();\n
    $traceurRuntime.superGet(this, $Comments.prototype, "enablePlugin").call(this);\n
  },\n
  registerListeners: function() {\n
    var $__6 = this;\n
    this.eventManager.addEventListener(document, \'mouseover\', (function(event) {\n
      return $__6.onMouseOver(event);\n
    }));\n
    this.eventManager.addEventListener(document, \'mousedown\', (function(event) {\n
      return $__6.onMouseDown(event);\n
    }));\n
    this.eventManager.addEventListener(document, \'mousemove\', (function(event) {\n
      return $__6.onMouseMove(event);\n
    }));\n
    this.eventManager.addEventListener(document, \'mouseup\', (function(event) {\n
      return $__6.onMouseUp(event);\n
    }));\n
    this.eventManager.addEventListener(this.editor.getInputElement(), \'blur\', (function(event) {\n
      return $__6.onEditorBlur(event);\n
    }));\n
  },\n
  setRange: function(range) {\n
    this.range = range;\n
  },\n
  clearRange: function() {\n
    this.range = {};\n
  },\n
  targetIsCellWithComment: function(event) {\n
    return hasClass(event.target, \'htCommentCell\') && closest(event.target, [this.hot.rootElement]) ? true : false;\n
  },\n
  targetIsCommentTextArea: function(event) {\n
    return this.editor.getInputElement() === event.target;\n
  },\n
  saveComment: function() {\n
    if (!this.range.from) {\n
      throw new Error(\'Before using this method, first set cell range (hot.getPlugin("comment").setRange())\');\n
    }\n
    var comment = this.editor.getValue();\n
    var row = this.range.from.row;\n
    var col = this.range.from.col;\n
    this.hot.setCellMeta(row, col, \'comment\', comment);\n
    this.hot.render();\n
  },\n
  saveCommentAtCell: function(row, col) {\n
    this.setRange({from: new WalkontableCellCoords(row, col)});\n
    this.saveComment();\n
  },\n
  removeComment: function() {\n
    if (!this.range.from) {\n
      throw new Error(\'Before using this method, first set cell range (hot.getPlugin("comment").setRange())\');\n
    }\n
    this.hot.removeCellMeta(this.range.from.row, this.range.from.col, \'comment\');\n
    this.hot.render();\n
    this.hide();\n
  },\n
  removeCommentAtCell: function(row, col) {\n
    this.setRange({from: new WalkontableCellCoords(row, col)});\n
    this.removeComment();\n
  },\n
  show: function() {\n
    if (!this.range.from) {\n
      throw new Error(\'Before using this method, first set cell range (hot.getPlugin("comment").setRange())\');\n
    }\n
    var meta = this.hot.getCellMeta(this.range.from.row, this.range.from.col);\n
    this.refreshEditorPosition(true);\n
    this.editor.setValue(meta.comment || \'\');\n
    this.editor.show();\n
    return true;\n
  },\n
  showAtCell: function(row, col) {\n
    this.setRange({from: new WalkontableCellCoords(row, col)});\n
    return this.show();\n
  },\n
  hide: function() {\n
    this.editor.hide();\n
  },\n
  refreshEditorPosition: function() {\n
    var force = arguments[0] !== (void 0) ? arguments[0] : false;\n
    if (!force && (!this.range.from || !this.editor.isVisible())) {\n
      return;\n
    }\n
    var TD = this.hot.view.wt.wtTable.getCell(this.range.from);\n
    var cellOffset = offset(TD);\n
    var lastColWidth = this.hot.getColWidth(this.range.from.col);\n
    var cellTopOffset = cellOffset.top;\n
    var cellLeftOffset = cellOffset.left;\n
    var verticalCompensation = 0;\n
    var horizontalCompensation = 0;\n
    if (this.hot.view.wt.wtViewport.hasVerticalScroll()) {\n
      cellTopOffset = cellTopOffset - this.hot.view.wt.wtOverlays.topOverlay.getScrollPosition();\n
      verticalCompensation = 20;\n
    }\n
    if (this.hot.view.wt.wtViewport.hasHorizontalScroll()) {\n
      cellLeftOffset = cellLeftOffset - this.hot.view.wt.wtOverlays.leftOverlay.getScrollPosition();\n
      horizontalCompensation = 20;\n
    }\n
    var x = cellLeftOffset + lastColWidth;\n
    var y = cellTopOffset;\n
    var rect = this.hot.view.wt.wtTable.holder.getBoundingClientRect();\n
    var holderPos = {\n
      left: rect.left + getWindowScrollLeft() + horizontalCompensation,\n
      right: rect.right + getWindowScrollLeft() - 15,\n
      top: rect.top + getWindowScrollTop() + verticalCompensation,\n
      bottom: rect.bottom + getWindowScrollTop()\n
    };\n
    if (x <= holderPos.left || x > holderPos.right || y <= holderPos.top || y > holderPos.bottom) {\n
      this.hide();\n
    } else {\n
      this.editor.setPosition(x, y);\n
    }\n
  },\n
  onMouseDown: function(event) {\n
    this.mouseDown = true;\n
    if (!this.hot.view || !this.hot.view.wt) {\n
      return;\n
    }\n
    if (!this.contextMenuEvent && !this.targetIsCommentTextArea(event) && !this.targetIsCellWithComment(event)) {\n
      this.hide();\n
    }\n
    this.contextMenuEvent = false;\n
  },\n
  onMouseOver: function(event) {\n
    if (this.mouseDown || this.editor.isFocused()) {\n
      return;\n
    }\n
    if (this.targetIsCellWithComment(event)) {\n
      var coordinates = this.hot.view.wt.wtTable.getCoords(event.target);\n
      var range = {from: new WalkontableCellCoords(coordinates.row, coordinates.col)};\n
      this.setRange(range);\n
      this.show();\n
    } else if (!this.targetIsCommentTextArea(event) && !this.editor.isFocused()) {\n
      this.hide();\n
    }\n
  },\n
  onMouseMove: function(event) {\n
    var $__6 = this;\n
    if (this.targetIsCommentTextArea(event)) {\n
      this.mouseDown = true;\n
      clearTimeout(this.timer);\n
      this.timer = setTimeout((function() {\n
        $__6.mouseDown = false;\n
      }), 200);\n
    }\n
  },\n
  onMouseUp: function(event) {\n
    this.mouseDown = false;\n
  },\n
  onAfterRenderer: function(TD, cellProperties) {\n
    if (cellProperties.comment) {\n
      addClass(TD, cellProperties.commentedCellClassName);\n
    }\n
  },\n
  onEditorBlur: function(event) {\n
    this.saveComment();\n
  },\n
  checkSelectionCommentsConsistency: function() {\n
    var selected = this.hot.getSelectedRange();\n
    if (!selected) {\n
      return false;\n
    }\n
    var hasComment = false;\n
    var cell = selected.from;\n
    if (this.hot.getCellMeta(cell.row, cell.col).comment) {\n
      hasComment = true;\n
    }\n
    return hasComment;\n
  },\n
  onContextMenuAddComment: function() {\n
    var $__6 = this;\n
    var coords = this.hot.getSelectedRange();\n
    this.contextMenuEvent = true;\n
    this.setRange({from: coords.from});\n
    this.show();\n
    setTimeout((function() {\n
      if ($__6.hot) {\n
        $__6.hot.deselectCell();\n
        $__6.editor.focus();\n
      }\n
    }), 10);\n
  },\n
  onContextMenuRemoveComment: function(key, selection) {\n
    this.contextMenuEvent = true;\n
    this.removeCommentAtCell(selection.start.row, selection.start.col);\n
  },\n
  addToContextMenu: function(defaultOptions) {\n
    var $__6 = this;\n
    defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR, {\n
      key: \'commentsAddEdit\',\n
      name: (function() {\n
        return $__6.checkSelectionCommentsConsistency() ? \'Edit Comment\' : \'Add Comment\';\n
      }),\n
      callback: (function() {\n
        return $__6.onContextMenuAddComment();\n
      }),\n
      disabled: function() {\n
        return this.getSelected() ? false : true;\n
      }\n
    }, {\n
      key: \'commentsRemove\',\n
      name: function() {\n
        return \'Delete Comment\';\n
      },\n
      callback: (function(key, selection) {\n
        return $__6.onContextMenuRemoveComment(key, selection);\n
      }),\n
      disabled: (function() {\n
        return !$__6.checkSelectionCommentsConsistency();\n
      })\n
    });\n
  },\n
  destroy: function() {\n
    if (this.editor) {\n
      this.editor.destroy();\n
    }\n
    $traceurRuntime.superGet(this, $Comments.prototype, "destroy").call(this);\n
  }\n
}, {}, BasePlugin);\n
;\n
registerPlugin(\'comments\', Comments);\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"_base":56,"commentEditor":61,"eventManager":40,"helpers/dom/element":44,"plugins":55}],63:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  CommandExecutor: {get: function() {\n
      return CommandExecutor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_array__;\n
var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;\n
var CommandExecutor = function CommandExecutor(hotInstance) {\n
  this.hot = hotInstance;\n
  this.commands = {};\n
  this.commonCallback = null;\n
};\n
($traceurRuntime.createClass)(CommandExecutor, {\n
  registerCommand: function(name, commandDescriptor) {\n
    this.commands[name] = commandDescriptor;\n
  },\n
  setCommonCallback: function(callback) {\n
    this.commonCallback = callback;\n
  },\n
  execute: function(commandName) {\n
    for (var params = [],\n
        $__3 = 1; $__3 < arguments.length; $__3++)\n
      params[$__3 - 1] = arguments[$__3];\n
    var $__1 = this;\n
    var commandSplit = commandName.split(\':\');\n
    commandName = commandSplit[0];\n
    var subCommandName = commandSplit.length === 2 ? commandSplit[1] : null;\n
    var command = this.commands[commandName];\n
    if (!command) {\n
      throw new Error(("Menu command \'" + commandName + "\' not exists."));\n
    }\n
    if (subCommandName && command.submenu) {\n
      command = findSubCommand(subCommandName, command.submenu.items);\n
    }\n
    if (command.disabled === true) {\n
      return;\n
    }\n
    if (typeof command.disabled == \'function\' && command.disabled.call(this.hot) === true) {\n
      return;\n
    }\n
    if (command.hasOwnProperty(\'submenu\')) {\n
      return;\n
    }\n
    var callbacks = [];\n
    if (typeof command.callback === \'function\') {\n
      callbacks.push(command.callback);\n
    }\n
    if (typeof this.commonCallback === \'function\') {\n
      callbacks.push(this.commonCallback);\n
    }\n
    params.unshift(commandSplit.join(\':\'));\n
    arrayEach(callbacks, (function(callback) {\n
      return callback.apply($__1.hot, params);\n
    }));\n
  }\n
}, {});\n
function findSubCommand(subCommandName, subCommands) {\n
  var command;\n
  arrayEach(subCommands, (function(cmd) {\n
    var cmds = cmd.key ? cmd.key.split(\':\') : null;\n
    if (Array.isArray(cmds) && cmds[1] === subCommandName) {\n
      command = cmd;\n
      return false;\n
    }\n
  }));\n
  return command;\n
}\n
;\n
\n
//# \n
},{"helpers/array":41}],64:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ContextMenu: {get: function() {\n
      return ContextMenu;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__95_base__,\n
    $___46__46__47__46__46__47_helpers_47_array__,\n
    $___46__46__47__46__46__47_helpers_47_object__,\n
    $__commandExecutor__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $__itemsFactory__,\n
    $__menu__,\n
    $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $__predefinedItems__;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;\n
var objectEach = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}).objectEach;\n
var CommandExecutor = ($__commandExecutor__ = require("commandExecutor"), $__commandExecutor__ && $__commandExecutor__.__esModule && $__commandExecutor__ || {default: $__commandExecutor__}).CommandExecutor;\n
var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;\n
var hasClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).hasClass;\n
var ItemsFactory = ($__itemsFactory__ = require("itemsFactory"), $__itemsFactory__ && $__itemsFactory__.__esModule && $__itemsFactory__ || {default: $__itemsFactory__}).ItemsFactory;\n
var Menu = ($__menu__ = require("menu"), $__menu__ && $__menu__.__esModule && $__menu__ || {default: $__menu__}).Menu;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var stopPropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopPropagation;\n
var $__10 = ($__predefinedItems__ = require("predefinedItems"), $__predefinedItems__ && $__predefinedItems__.__esModule && $__predefinedItems__ || {default: $__predefinedItems__}),\n
    ROW_ABOVE = $__10.ROW_ABOVE,\n
    ROW_BELOW = $__10.ROW_BELOW,\n
    COLUMN_LEFT = $__10.COLUMN_LEFT,\n
    COLUMN_RIGHT = $__10.COLUMN_RIGHT,\n
    REMOVE_ROW = $__10.REMOVE_ROW,\n
    REMOVE_COLUMN = $__10.REMOVE_COLUMN,\n
    UNDO = $__10.UNDO,\n
    REDO = $__10.REDO,\n
    READ_ONLY = $__10.READ_ONLY,\n
    ALIGNMENT = $__10.ALIGNMENT,\n
    SEPARATOR = $__10.SEPARATOR,\n
    predefinedItems = $__10.predefinedItems;\n
var ContextMenu = function ContextMenu(hotInstance) {\n
  $traceurRuntime.superConstructor($ContextMenu).call(this, hotInstance);\n
  this.eventManager = new EventManager(this);\n
  this.commandExecutor = new CommandExecutor(this.hot);\n
  this.itemsFactory = null;\n
  this.menu = null;\n
};\n
var $ContextMenu = ContextMenu;\n
($traceurRuntime.createClass)(ContextMenu, {\n
  isEnabled: function() {\n
    return this.hot.getSettings().contextMenu;\n
  },\n
  enablePlugin: function() {\n
    var $__12 = this;\n
    var $__11 = this;\n
    if (this.enabled) {\n
      return;\n
    }\n
    this.itemsFactory = new ItemsFactory(this.hot, $ContextMenu.DEFAULT_ITEMS);\n
    var settings = this.hot.getSettings().contextMenu;\n
    var predefinedItems = {items: this.itemsFactory.getVisibleItems(settings)};\n
    this.registerEvents();\n
    this.callOnPluginsReady((function() {\n
      $__11.hot.runHooks(\'afterContextMenuDefaultOptions\', predefinedItems);\n
      $__11.itemsFactory.setPredefinedItems(predefinedItems.items);\n
      var menuItems = $__11.itemsFactory.getVisibleItems(settings);\n
      $__11.menu = new Menu($__11.hot, {className: \'htContextMenu\'});\n
      $__11.menu.setMenuItems(menuItems);\n
      $__11.addHook(\'menuExecuteCommand\', (function(menu) {\n
        for (var params = [],\n
            $__13 = 1; $__13 < arguments.length; $__13++)\n
          params[$__13 - 1] = arguments[$__13];\n
        if (menu === $__11.menu) {\n
          $__11.executeCommand.apply($__11, params);\n
        }\n
      }));\n
      if (typeof settings.callback === \'function\') {\n
        $__11.commandExecutor.setCommonCallback(settings.callback);\n
      }\n
      $traceurRuntime.superGet($__12, $ContextMenu.prototype, "enablePlugin").call($__12);\n
      arrayEach(menuItems, (function(command) {\n
        return $__11.commandExecutor.registerCommand(command.key, command);\n
      }));\n
    }));\n
  },\n
  disablePlugin: function() {\n
    this.close();\n
    if (this.menu) {\n
      this.menu.destroy();\n
      this.menu = null;\n
    }\n
    $traceurRuntime.superGet(this, $ContextMenu.prototype, "disablePlugin").call(this);\n
  },\n
  registerEvents: function() {\n
    var $__11 = this;\n
    this.eventManager.addEventListener(this.hot.rootElement, \'contextmenu\', (function(event) {\n
      return $__11.onContextMenu(event);\n
    }));\n
  },\n
  open: function(event) {\n
    if (!this.menu) {\n
      return;\n
    }\n
    this.menu.open();\n
    this.menu.setPosition(event);\n
    this.menu.hotMenu.isHotTableEnv = this.hot.isHotTableEnv;\n
    Handsontable.eventManager.isHotTableEnv = this.hot.isHotTableEnv;\n
    this.hot.runHooks(\'afterContextMenuShow\', this.menu.hotMenu);\n
  },\n
  close: function() {\n
    if (!this.menu) {\n
      return;\n
    }\n
    this.menu.close();\n
    this.hot.runHooks(\'afterContextMenuHide\', this.hot);\n
  },\n
  executeCommand: function() {\n
    for (var params = [],\n
        $__13 = 0; $__13 < arguments.length; $__13++)\n
      params[$__13] = arguments[$__13];\n
    this.commandExecutor.execute.apply(this.commandExecutor, params);\n
  },\n
  destroy: function() {\n
    this.close();\n
    if (this.menu) {\n
      this.menu.destroy();\n
    }\n
    $traceurRuntime.superGet(this, $ContextMenu.prototype, "destroy").call(this);\n
  },\n
  onContextMenu: function(event) {\n
    var settings = this.hot.getSettings();\n
    var showRowHeaders = settings.rowHeaders;\n
    var showColHeaders = settings.colHeaders;\n
    function isValidElement(element) {\n
      return element.nodeName === \'TD\' || element.parentNode.nodeName === \'TD\';\n
    }\n
    var element = event.realTarget;\n
    this.close();\n
    event.preventDefault();\n
    stopPropagation(event);\n
    if (!(showRowHeaders || showColHeaders)) {\n
      if (!isValidElement(element) && !(hasClass(element, \'current\') && hasClass(element, \'wtBorder\'))) {\n
        return;\n
      }\n
    } else if (showRowHeaders && showColHeaders) {\n
      var containsCornerHeader = element.parentNode.querySelectorAll(\'.cornerHeader\').length > 0;\n
      if (containsCornerHeader) {\n
        return;\n
      }\n
    }\n
    this.open(event);\n
  }\n
}, {get DEFAULT_ITEMS() {\n
    return [ROW_ABOVE, ROW_BELOW, SEPARATOR, COLUMN_LEFT, COLUMN_RIGHT, SEPARATOR, REMOVE_ROW, REMOVE_COLUMN, SEPARATOR, UNDO, REDO, SEPARATOR, READ_ONLY, SEPARATOR, ALIGNMENT];\n
  }}, BasePlugin);\n
ContextMenu.SEPARATOR = {name: SEPARATOR};\n
Handsontable.hooks.register(\'afterContextMenuDefaultOptions\');\n
Handsontable.hooks.register(\'afterContextMenuShow\');\n
Handsontable.hooks.register(\'afterContextMenuHide\');\n
Handsontable.hooks.register(\'afterContextMenuExecute\');\n
;\n
registerPlugin(\'contextMenu\', ContextMenu);\n
Handsontable.plugins = Handsontable.plugins || {};\n
Handsontable.plugins.ContextMenu = ContextMenu;\n
\n
//# \n
},{"_base":56,"commandExecutor":63,"eventManager":40,"helpers/array":41,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"itemsFactory":66,"menu":67,"plugins":55,"predefinedItems":68}],65:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  Cursor: {get: function() {\n
      return Cursor;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    getWindowScrollLeft = $__0.getWindowScrollLeft,\n
    getWindowScrollTop = $__0.getWindowScrollTop;\n
var $__1 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),\n
    pageX = $__1.pageX,\n
    pageY = $__1.pageY;\n
var Cursor = function Cursor(object) {\n
  var windowScrollTop = getWindowScrollTop();\n
  var windowScrollLeft = getWindowScrollLeft();\n
  var top,\n
      topRelative;\n
  var left,\n
      leftRelative;\n
  var scrollTop,\n
      scrollLeft;\n
  var cellHeight,\n
      cellWidth;\n
  this.type = this.getSourceType(object);\n
  if (this.type === \'literal\') {\n
    top = parseInt(object.top, 10);\n
    left = parseInt(object.left, 10);\n
    cellHeight = object.height;\n
    cellWidth = object.width;\n
  } else if (this.type === \'event\') {\n
    top = parseInt(pageY(object), 10);\n
    left = parseInt(pageX(object), 10);\n
    cellHeight = object.target.clientHeight;\n
    cellWidth = object.target.clientWidth;\n
  }\n
  topRelative = top - windowScrollTop;\n
  leftRelative = left - windowScrollLeft;\n
  scrollTop = windowScrollTop;\n
  scrollLeft = windowScrollLeft;\n
  this.top = top;\n
  this.topRelative = topRelative;\n
  this.left = left;\n
  this.leftRelative = leftRelative;\n
  this.scrollTop = scrollTop;\n
  this.scrollLeft = scrollLeft;\n
  this.cellHeight = cellHeight;\n
  this.cellWidth = cellWidth;\n
};\n
($traceurRuntime.createClass)(Cursor, {\n
  getSourceType: function(object) {\n
    var type = \'literal\';\n
    if (object instanceof Event) {\n
      type = \'event\';\n
    }\n
    return type;\n
  },\n
  fitsAbove: function(element) {\n
    return this.topRelative >= element.offsetHeight;\n
  },\n
  fitsBelow: function(element) {\n
    var viewportHeight = arguments[1] !== (void 0) ? arguments[1] : window.innerHeight;\n
    return this.topRelative + element.offsetHeight <= viewportHeight;\n
  },\n
  fitsOnRight: function(element) {\n
    var viewportWidth = arguments[1] !== (void 0) ? arguments[1] : window.innerWidth;\n
    return this.leftRelative + this.cellWidth + element.offsetWidth <= viewportWidth;\n
  },\n
  fitsOnLeft: function(element) {\n
    return this.leftRelative >= element.offsetWidth;\n
  }\n
}, {});\n
;\n
Handsontable.plugins.utils = Handsontable.plugins.utils || {};\n
Handsontable.plugins.utils.Cursor = Cursor;\n
\n
//# \n
},{"helpers/dom/element":44,"helpers/dom/event":45}],66:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ItemsFactory: {get: function() {\n
      return ItemsFactory;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47_helpers_47_array__,\n
    $__predefinedItems__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),\n
    objectEach = $__0.objectEach,\n
    isObject = $__0.isObject,\n
    extend = $__0.extend;\n
var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;\n
var $__2 = ($__predefinedItems__ = require("predefinedItems"), $__predefinedItems__ && $__predefinedItems__.__esModule && $__predefinedItems__ || {default: $__predefinedItems__}),\n
    SEPARATOR = $__2.SEPARATOR,\n
    ITEMS = $__2.ITEMS,\n
    predefinedItems = $__2.predefinedItems;\n
var ItemsFactory = function ItemsFactory(hotInstance) {\n
  var orderPattern = arguments[1] !== (void 0) ? arguments[1] : null;\n
  this.hot = hotInstance;\n
  this.predefinedItems = predefinedItems();\n
  this.defaultOrderPattern = orderPattern;\n
};\n
($traceurRuntime.createClass)(ItemsFactory, {\n
  setPrede

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAk=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="9" aka="AAAAAAAAAAk=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

finedItems: function(predefinedItems) {\n
    var $__3 = this;\n
    var items = {};\n
    this.defaultOrderPattern.length = 0;\n
    objectEach(predefinedItems, (function(value, key) {\n
      var menuItemKey = \'\';\n
      if (value.name === SEPARATOR) {\n
        items[SEPARATOR] = value;\n
        menuItemKey = SEPARATOR;\n
      } else if (isNaN(parseInt(key, 10))) {\n
        value.key = value.key === void 0 ? key : value.key;\n
        items[key] = value;\n
        menuItemKey = value.key;\n
      } else {\n
        items[value.key] = value;\n
        menuItemKey = value.key;\n
      }\n
      $__3.defaultOrderPattern.push(menuItemKey);\n
    }));\n
    this.predefinedItems = items;\n
  },\n
  getVisibleItems: function() {\n
    var pattern = arguments[0] !== (void 0) ? arguments[0] : null;\n
    var $__3 = this;\n
    var visibleItems = {};\n
    objectEach(this.predefinedItems, (function(value, key) {\n
      if (!value.hidden || value.hidden && !value.hidden.apply($__3.hot)) {\n
        visibleItems[key] = value;\n
      }\n
    }));\n
    return getItems(pattern, this.defaultOrderPattern, visibleItems);\n
  },\n
  getItems: function() {\n
    var pattern = arguments[0] !== (void 0) ? arguments[0] : null;\n
    return getItems(pattern, this.defaultOrderPattern, this.predefinedItems);\n
  }\n
}, {});\n
function getItems() {\n
  var pattern = arguments[0] !== (void 0) ? arguments[0] : null;\n
  var defaultPattern = arguments[1] !== (void 0) ? arguments[1] : [];\n
  var items = arguments[2] !== (void 0) ? arguments[2] : {};\n
  var result = [];\n
  if (pattern && pattern.items) {\n
    pattern = pattern.items;\n
  } else if (!Array.isArray(pattern)) {\n
    pattern = defaultPattern;\n
  }\n
  if (isObject(pattern)) {\n
    objectEach(pattern, (function(value, key) {\n
      var item = items[typeof value === \'string\' ? value : key];\n
      if (!item) {\n
        item = value;\n
      }\n
      if (isObject(value)) {\n
        extend(item, value);\n
      } else if (typeof item === \'string\') {\n
        item = {name: item};\n
      }\n
      if (item.key === void 0) {\n
        item.key = key;\n
      }\n
      result.push(item);\n
    }));\n
  } else {\n
    arrayEach(pattern, (function(name, key) {\n
      var item = items[name];\n
      if (!item && ITEMS.indexOf(name) >= 0) {\n
        return;\n
      }\n
      if (!item) {\n
        item = {\n
          name: name,\n
          key: key + \'\'\n
        };\n
      }\n
      if (isObject(name)) {\n
        extend(item, name);\n
      }\n
      if (item.key === void 0) {\n
        item.key = key;\n
      }\n
      result.push(item);\n
    }));\n
  }\n
  if (result[0].name === SEPARATOR) {\n
    result.shift();\n
  }\n
  return result;\n
}\n
;\n
\n
//# \n
},{"helpers/array":41,"helpers/object":49,"predefinedItems":68}],67:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  Menu: {get: function() {\n
      return Menu;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47_helpers_47_array__,\n
    $__predefinedItems__,\n
    $__cursor__,\n
    $___46__46__47__46__46__47_helpers_47_unicode__,\n
    $__utils__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    empty = $__0.empty,\n
    fastInnerHTML = $__0.fastInnerHTML,\n
    getComputedStyle = $__0.getComputedStyle,\n
    getScrollbarWidth = $__0.getScrollbarWidth,\n
    getWindowScrollLeft = $__0.getWindowScrollLeft,\n
    getWindowScrollTop = $__0.getWindowScrollTop,\n
    hasClass = $__0.hasClass,\n
    removeClass = $__0.removeClass;\n
var $__1 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),\n
    stopPropagation = $__1.stopPropagation,\n
    stopImmediatePropagation = $__1.stopImmediatePropagation,\n
    pageX = $__1.pageX,\n
    pageY = $__1.pageY;\n
var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;\n
var $__3 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),\n
    extend = $__3.extend,\n
    isObject = $__3.isObject,\n
    objectEach = $__3.objectEach;\n
var arrayEach = ($___46__46__47__46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47__46__46__47_helpers_47_array__ && $___46__46__47__46__46__47_helpers_47_array__.__esModule && $___46__46__47__46__46__47_helpers_47_array__ || {default: $___46__46__47__46__46__47_helpers_47_array__}).arrayEach;\n
var $__5 = ($__predefinedItems__ = require("predefinedItems"), $__predefinedItems__ && $__predefinedItems__.__esModule && $__predefinedItems__ || {default: $__predefinedItems__}),\n
    SEPARATOR = $__5.SEPARATOR,\n
    predefinedItems = $__5.predefinedItems;\n
var Cursor = ($__cursor__ = require("cursor"), $__cursor__ && $__cursor__.__esModule && $__cursor__ || {default: $__cursor__}).Cursor;\n
var KEY_CODES = ($___46__46__47__46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47__46__46__47_helpers_47_unicode__ && $___46__46__47__46__46__47_helpers_47_unicode__.__esModule && $___46__46__47__46__46__47_helpers_47_unicode__ || {default: $___46__46__47__46__46__47_helpers_47_unicode__}).KEY_CODES;\n
var $__8 = ($__utils__ = require("utils"), $__utils__ && $__utils__.__esModule && $__utils__ || {default: $__utils__}),\n
    isSeparator = $__8.isSeparator,\n
    isDisabled = $__8.isDisabled,\n
    hasSubMenu = $__8.hasSubMenu,\n
    normalizeSelection = $__8.normalizeSelection;\n
var Menu = function Menu(hotInstance) {\n
  var options = arguments[1] !== (void 0) ? arguments[1] : {\n
    parent: null,\n
    name: null,\n
    className: \'htMenu\'\n
  };\n
  this.hot = hotInstance;\n
  this.options = options;\n
  this.eventManager = new EventManager(this);\n
  this.container = this.createContainer(this.options.name);\n
  this.hotMenu = null;\n
  this.hotSubMenus = {};\n
  this.parentMenu = this.options.parent || null;\n
  this.menuItems = null;\n
  this._afterScrollCallback = null;\n
  this.registerEvents();\n
};\n
var $Menu = Menu;\n
($traceurRuntime.createClass)(Menu, {\n
  registerEvents: function() {\n
    var $__9 = this;\n
    this.eventManager.addEventListener(document.documentElement, \'mousedown\', (function(event) {\n
      return $__9.close();\n
    }));\n
    this.eventManager.addEventListener(this.container, \'mousedown\', (function(event) {\n
      return $__9.executeCommand(event);\n
    }));\n
  },\n
  setMenuItems: function(menuItems) {\n
    this.menuItems = menuItems;\n
  },\n
  isSubMenu: function() {\n
    return this.parentMenu !== null;\n
  },\n
  open: function() {\n
    var $__9 = this;\n
    this.container.removeAttribute(\'style\');\n
    this.container.style.display = \'block\';\n
    var settings = {\n
      data: this.menuItems,\n
      colHeaders: false,\n
      colWidths: [200],\n
      autoRowSize: false,\n
      readOnly: true,\n
      copyPaste: false,\n
      columns: [{\n
        data: \'name\',\n
        renderer: (function(hot, TD, row, col, prop, value) {\n
          return $__9.menuItemRenderer(hot, TD, row, col, prop, value);\n
        })\n
      }],\n
      renderAllRows: true,\n
      beforeKeyDown: (function(event) {\n
        return $__9.onBeforeKeyDown(event);\n
      }),\n
      afterOnCellMouseOver: (function(event, coords, TD) {\n
        return $__9.openSubMenu(coords.row);\n
      })\n
    };\n
    this.hotMenu = new Handsontable.Core(this.container, settings);\n
    this.hotMenu.addHook(\'afterInit\', (function() {\n
      return $__9.onAfterInit();\n
    }));\n
    this.hotMenu.init();\n
    this.hotMenu.listen();\n
    this.blockMainTableCallbacks();\n
  },\n
  close: function() {\n
    var closeParent = arguments[0] !== (void 0) ? arguments[0] : false;\n
    if (!this.isOpened()) {\n
      return;\n
    }\n
    if (closeParent && this.parentMenu) {\n
      this.parentMenu.close();\n
    } else {\n
      this.closeAllSubMenus();\n
      this.container.style.display = \'none\';\n
      this.releaseMainTableCallbacks();\n
      this.hotMenu.destroy();\n
      this.hotMenu = null;\n
      this.hot.listen();\n
    }\n
  },\n
  openSubMenu: function(row) {\n
    var cell = this.hotMenu.getCell(row, 0);\n
    this.closeAllSubMenus();\n
    if (!hasSubMenu(cell)) {\n
      return false;\n
    }\n
    var dataItem = this.hotMenu.getData()[row];\n
    var subMenu = new $Menu(this.hot, {\n
      parent: this,\n
      name: dataItem.name,\n
      className: this.options.className\n
    });\n
    subMenu.setMenuItems(dataItem.submenu.items);\n
    subMenu.open();\n
    subMenu.setPosition(cell.getBoundingClientRect());\n
    this.hotSubMenus[dataItem.key] = subMenu;\n
    return subMenu;\n
  },\n
  closeSubMenu: function(row) {\n
    var dataItem = this.hotMenu.getData()[row];\n
    var menus = this.hotSubMenus[dataItem.key];\n
    if (menus) {\n
      menus.destroy();\n
      this.hotSubMenus[dataItem.key] = null;\n
    }\n
  },\n
  closeAllSubMenus: function() {\n
    var $__9 = this;\n
    arrayEach(this.hotMenu.getData(), (function(value, row) {\n
      return $__9.closeSubMenu(row);\n
    }));\n
    this.hotMenu.listen();\n
  },\n
  destroy: function() {\n
    this.close();\n
    this.parentMenu = null;\n
    this.eventManager.destroy();\n
  },\n
  isOpened: function() {\n
    return this.hotMenu !== null;\n
  },\n
  executeCommand: function(event) {\n
    if (!this.isOpened() || !this.hotMenu.getSelected()) {\n
      return;\n
    }\n
    var selectedItem = this.hotMenu.getData()[this.hotMenu.getSelected()[0]];\n
    var selRange = this.hot.getSelectedRange();\n
    var normalizedSelection = selRange ? normalizeSelection(selRange) : {};\n
    this.hot.runHooks(\'menuExecuteCommand\', this.parentMenu || this, selectedItem.key, normalizedSelection, event);\n
  },\n
  setPosition: function(coords) {\n
    var cursor = new Cursor(coords);\n
    if (cursor.fitsBelow(this.container)) {\n
      this.setPositionBelowCursor(cursor);\n
    } else if (cursor.fitsAbove(this.container)) {\n
      this.setPositionAboveCursor(cursor);\n
    } else {\n
      this.setPositionBelowCursor(cursor);\n
    }\n
    if (cursor.fitsOnRight(this.container)) {\n
      this.setPositionOnRightOfCursor(cursor);\n
    } else {\n
      this.setPositionOnLeftOfCursor(cursor);\n
    }\n
  },\n
  setPositionAboveCursor: function(cursor) {\n
    var top = cursor.top - this.container.offsetHeight;\n
    if (this.isSubMenu()) {\n
      top = window.scrollY + cursor.top + cursor.cellHeight - this.container.offsetHeight + 3;\n
    }\n
    this.container.style.top = top + \'px\';\n
  },\n
  setPositionBelowCursor: function(cursor) {\n
    var top = cursor.top - 1;\n
    if (this.isSubMenu()) {\n
      top = cursor.top + window.scrollY - 1;\n
    }\n
    this.container.style.top = top + \'px\';\n
  },\n
  setPositionOnRightOfCursor: function(cursor) {\n
    var left;\n
    if (this.isSubMenu()) {\n
      left = window.scrollX + 1 + cursor.left + cursor.cellWidth;\n
    } else {\n
      left = 1 + cursor.left;\n
    }\n
    this.container.style.left = left + \'px\';\n
  },\n
  setPositionOnLeftOfCursor: function(cursor) {\n
    this.container.style.left = (cursor.left - this.container.offsetWidth + getScrollbarWidth() + 4) + \'px\';\n
  },\n
  selectFirstCell: function() {\n
    var firstCell = this.hotMenu.getCell(0, 0);\n
    if (isSeparator(firstCell) || isDisabled(firstCell)) {\n
      this.selectNextCell(0, 0);\n
    } else {\n
      this.hotMenu.selectCell(0, 0);\n
    }\n
  },\n
  selectLastCell: function() {\n
    var lastRow = this.hotMenu.countRows() - 1;\n
    var lastCell = this.hotMenu.getCell(lastRow, 0);\n
    if (isSeparator(lastCell) || isDisabled(lastCell)) {\n
      this.selectPrevCell(lastRow, 0);\n
    } else {\n
      this.hotMenu.selectCell(lastRow, 0);\n
    }\n
  },\n
  selectNextCell: function(row, col) {\n
    var nextRow = row + 1;\n
    var nextCell = nextRow < this.hotMenu.countRows() ? this.hotMenu.getCell(nextRow, col) : null;\n
    if (!nextCell) {\n
      return;\n
    }\n
    if (isSeparator(nextCell) || isDisabled(nextCell)) {\n
      this.selectNextCell(nextRow, col);\n
    } else {\n
      this.hotMenu.selectCell(nextRow, col);\n
    }\n
  },\n
  selectPrevCell: function(row, col) {\n
    var prevRow = row - 1;\n
    var prevCell = prevRow >= 0 ? this.hotMenu.getCell(prevRow, col) : null;\n
    if (!prevCell) {\n
      return;\n
    }\n
    if (isSeparator(prevCell) || isDisabled(prevCell)) {\n
      this.selectPrevCell(prevRow, col);\n
    } else {\n
      this.hotMenu.selectCell(prevRow, col);\n
    }\n
  },\n
  menuItemRenderer: function(hot, TD, row, col, prop, value) {\n
    var $__9 = this;\n
    var item = hot.getData()[row];\n
    var wrapper = document.createElement(\'div\');\n
    var isSubMenu = (function(item) {\n
      return item.hasOwnProperty(\'submenu\');\n
    });\n
    var itemIsSeparator = (function(item) {\n
      return new RegExp(SEPARATOR, \'i\').test(item.name);\n
    });\n
    var itemIsDisabled = (function(item) {\n
      return item.disabled === true || (typeof item.disabled == \'function\' && item.disabled.call($__9.hot) === true);\n
    });\n
    if (typeof value === \'function\') {\n
      value = value.call(this.hot);\n
    }\n
    empty(TD);\n
    TD.appendChild(wrapper);\n
    if (itemIsSeparator(item)) {\n
      addClass(TD, \'htSeparator\');\n
    } else {\n
      fastInnerHTML(wrapper, value);\n
    }\n
    if (itemIsDisabled(item)) {\n
      addClass(TD, \'htDisabled\');\n
      this.eventManager.addEventListener(wrapper, \'mouseenter\', (function() {\n
        return hot.deselectCell;\n
      }));\n
    } else if (isSubMenu(item)) {\n
      addClass(TD, \'htSubmenu\');\n
      this.eventManager.addEventListener(wrapper, \'mouseenter\', (function() {\n
        return hot.selectCell(row, col);\n
      }));\n
    } else {\n
      removeClass(TD, \'htSubmenu\');\n
      removeClass(TD, \'htDisabled\');\n
      this.eventManager.addEventListener(wrapper, \'mouseenter\', (function() {\n
        return hot.selectCell(row, col);\n
      }));\n
    }\n
  },\n
  createContainer: function() {\n
    var name = arguments[0] !== (void 0) ? arguments[0] : null;\n
    if (name) {\n
      name = name.replace(/ /g, \'_\');\n
      name = this.options.className + \'Sub_\' + name;\n
    }\n
    var container;\n
    if (name) {\n
      container = document.querySelector(\'.\' + this.options.className + \'.\' + name);\n
    } else {\n
      container = document.querySelector(\'.\' + this.options.className);\n
    }\n
    if (!container) {\n
      container = document.createElement(\'div\');\n
      addClass(container, this.options.className);\n
      if (name) {\n
        addClass(container, name);\n
      }\n
      document.getElementsByTagName(\'body\')[0].appendChild(container);\n
    }\n
    return container;\n
  },\n
  blockMainTableCallbacks: function() {\n
    this._afterScrollCallback = function() {};\n
    this.hot.addHook(\'afterScrollVertically\', this._afterScrollCallback);\n
    this.hot.addHook(\'afterScrollHorizontally\', this._afterScrollCallback);\n
  },\n
  releaseMainTableCallbacks: function() {\n
    if (this._afterScrollCallback) {\n
      this.hot.removeHook(\'afterScrollVertically\', this._afterScrollCallback);\n
      this.hot.removeHook(\'afterScrollHorizontally\', this._afterScrollCallback);\n
      this._afterScrollCallback = null;\n
    }\n
  },\n
  onBeforeKeyDown: function(event) {\n
    var selection = this.hotMenu.getSelected();\n
    var stopEvent = false;\n
    switch (event.keyCode) {\n
      case KEY_CODES.ESCAPE:\n
        this.close();\n
        stopEvent = true;\n
        break;\n
      case KEY_CODES.ENTER:\n
        if (selection) {\n
          if (this.hotMenu.getData()[selection[0]].submenu) {\n
            stopEvent = true;\n
          } else {\n
            this.executeCommand(event);\n
            this.close(true);\n
          }\n
        }\n
        break;\n
      case KEY_CODES.ARROW_DOWN:\n
        if (selection) {\n
          this.selectNextCell(selection[0], selection[1]);\n
        } else {\n
          this.selectFirstCell();\n
        }\n
        stopEvent = true;\n
        break;\n
      case KEY_CODES.ARROW_UP:\n
        if (selection) {\n
          this.selectPrevCell(selection[0], selection[1]);\n
        } else {\n
          this.selectLastCell();\n
        }\n
        stopEvent = true;\n
        break;\n
      case KEY_CODES.ARROW_RIGHT:\n
        if (selection) {\n
          var menu = this.openSubMenu(selection[0]);\n
          if (menu) {\n
            menu.selectFirstCell();\n
          }\n
        }\n
        stopEvent = true;\n
        break;\n
      case KEY_CODES.ARROW_LEFT:\n
        if (selection && this.parentMenu) {\n
          this.parentMenu.closeAllSubMenus();\n
          stopEvent = true;\n
        }\n
        break;\n
    }\n
    if (stopEvent) {\n
      event.preventDefault();\n
      stopImmediatePropagation(event);\n
    }\n
  },\n
  onAfterInit: function() {\n
    var data = this.hotMenu.getSettings().data;\n
    var hiderStyle = this.hotMenu.view.wt.wtTable.hider.style;\n
    var holderStyle = this.hotMenu.view.wt.wtTable.holder.style;\n
    var currentHiderWidth = parseInt(hiderStyle.width, 10);\n
    var realHeight = 0;\n
    arrayEach(data, (function(value) {\n
      return realHeight += value.name === SEPARATOR ? 1 : 26;\n
    }));\n
    holderStyle.width = currentHiderWidth + 22 + \'px\';\n
    holderStyle.height = realHeight + 4 + \'px\';\n
  }\n
}, {});\n
;\n
\n
//# \n
},{"cursor":65,"eventManager":40,"helpers/array":41,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/object":49,"helpers/unicode":52,"predefinedItems":68,"utils":69}],68:[function(require,module,exports){\n
"use strict";\n
var $__4;\n
Object.defineProperties(exports, {\n
  ROW_ABOVE: {get: function() {\n
      return ROW_ABOVE;\n
    }},\n
  ROW_BELOW: {get: function() {\n
      return ROW_BELOW;\n
    }},\n
  COLUMN_LEFT: {get: function() {\n
      return COLUMN_LEFT;\n
    }},\n
  COLUMN_RIGHT: {get: function() {\n
      return COLUMN_RIGHT;\n
    }},\n
  CLEAR_COLUMN: {get: function() {\n
      return CLEAR_COLUMN;\n
    }},\n
  REMOVE_ROW: {get: function() {\n
      return REMOVE_ROW;\n
    }},\n
  REMOVE_COLUMN: {get: function() {\n
      return REMOVE_COLUMN;\n
    }},\n
  UNDO: {get: function() {\n
      return UNDO;\n
    }},\n
  REDO: {get: function() {\n
      return REDO;\n
    }},\n
  READ_ONLY: {get: function() {\n
      return READ_ONLY;\n
    }},\n
  ALIGNMENT: {get: function() {\n
      return ALIGNMENT;\n
    }},\n
  SEPARATOR: {get: function() {\n
      return SEPARATOR;\n
    }},\n
  ITEMS: {get: function() {\n
      return ITEMS;\n
    }},\n
  predefinedItems: {get: function() {\n
      return predefinedItems;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47_helpers_47_number__,\n
    $__utils__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),\n
    objectEach = $__0.objectEach,\n
    clone = $__0.clone;\n
var rangeEach = ($___46__46__47__46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47__46__46__47_helpers_47_number__ && $___46__46__47__46__46__47_helpers_47_number__.__esModule && $___46__46__47__46__46__47_helpers_47_number__ || {default: $___46__46__47__46__46__47_helpers_47_number__}).rangeEach;\n
var $__2 = ($__utils__ = require("utils"), $__utils__ && $__utils__.__esModule && $__utils__ || {default: $__utils__}),\n
    align = $__2.align,\n
    getAlignmentClasses = $__2.getAlignmentClasses,\n
    getValidSelection = $__2.getValidSelection,\n
    checkSelectionConsistency = $__2.checkSelectionConsistency,\n
    markLabelAsSelected = $__2.markLabelAsSelected;\n
var ROW_ABOVE = \'row_above\';\n
var ROW_BELOW = \'row_below\';\n
var COLUMN_LEFT = \'col_left\';\n
var COLUMN_RIGHT = \'col_right\';\n
var CLEAR_COLUMN = \'clear_column\';\n
var REMOVE_ROW = \'remove_row\';\n
var REMOVE_COLUMN = \'remove_col\';\n
var UNDO = \'undo\';\n
var REDO = \'redo\';\n
var READ_ONLY = \'make_read_only\';\n
var ALIGNMENT = \'alignment\';\n
var SEPARATOR = \'---------\';\n
var ITEMS = [ROW_ABOVE, ROW_BELOW, COLUMN_LEFT, COLUMN_RIGHT, CLEAR_COLUMN, REMOVE_ROW, REMOVE_COLUMN, UNDO, REDO, READ_ONLY, ALIGNMENT, SEPARATOR];\n
function predefinedItems() {\n
  var items = {};\n
  objectEach(_predefinedItems, (function(value, key) {\n
    return items[key] = clone(value);\n
  }));\n
  return items;\n
}\n
var _predefinedItems = ($__4 = {}, Object.defineProperty($__4, SEPARATOR, {\n
  value: {name: SEPARATOR},\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, ROW_ABOVE, {\n
  value: {\n
    key: ROW_ABOVE,\n
    name: \'Insert row above\',\n
    callback: function(key, selection) {\n
      this.alter(\'insert_row\', selection.start.row);\n
    },\n
    disabled: function() {\n
      var selected = getValidSelection(this);\n
      if (!selected) {\n
        return true;\n
      }\n
      var entireColumnSelection = [0, selected[1], this.countRows() - 1, selected[1]];\n
      return entireColumnSelection.join(\',\') === selected.join(\',\');\n
    },\n
    hidden: function() {\n
      return !this.getSettings().allowInsertRow;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, ROW_BELOW, {\n
  value: {\n
    key: ROW_BELOW,\n
    name: \'Insert row below\',\n
    callback: function(key, selection) {\n
      this.alter(\'insert_row\', selection.end.row + 1);\n
    },\n
    disabled: function() {\n
      var selected = getValidSelection(this);\n
      if (!selected) {\n
        return true;\n
      }\n
      var entireColumnSelection = [0, selected[1], this.countRows() - 1, selected[1]];\n
      return entireColumnSelection.join(\',\') === selected.join(\',\');\n
    },\n
    hidden: function() {\n
      return !this.getSettings().allowInsertRow;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, COLUMN_LEFT, {\n
  value: {\n
    key: COLUMN_LEFT,\n
    name: \'Insert column on the left\',\n
    callback: function(key, selection) {\n
      this.alter(\'insert_col\', selection.start.col);\n
    },\n
    disabled: function() {\n
      var selected = getValidSelection(this);\n
      if (!selected) {\n
        return true;\n
      }\n
      if (!this.isColumnModificationAllowed()) {\n
        return true;\n
      }\n
      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];\n
      var rowSelected = entireRowSelection.join(\',\') == selected.join(\',\');\n
      return selected[1] < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;\n
    },\n
    hidden: function() {\n
      return !this.getSettings().allowInsertColumn;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, COLUMN_RIGHT, {\n
  value: {\n
    key: COLUMN_RIGHT,\n
    name: \'Insert column on the right\',\n
    callback: function(key, selection) {\n
      this.alter(\'insert_col\', selection.end.col + 1);\n
    },\n
    disabled: function() {\n
      var selected = getValidSelection(this);\n
      if (!selected) {\n
        return true;\n
      }\n
      if (!this.isColumnModificationAllowed()) {\n
        return true;\n
      }\n
      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];\n
      var rowSelected = entireRowSelection.join(\',\') == selected.join(\',\');\n
      return selected[1] < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;\n
    },\n
    hidden: function() {\n
      return !this.getSettings().allowInsertColumn;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, CLEAR_COLUMN, {\n
  value: {\n
    key: CLEAR_COLUMN,\n
    name: \'Clear column\',\n
    callback: function(key, selection) {\n
      var $__3 = this;\n
      var column = selection.start.col;\n
      rangeEach(Math.max(selection.start.row, selection.end.row), (function(row) {\n
        return $__3.setDataAtCell(row, column, \'\');\n
      }));\n
    },\n
    disabled: function() {\n
      var selected = getValidSelection(this);\n
      if (!selected) {\n
        return true;\n
      }\n
      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];\n
      var rowSelected = entireRowSelection.join(\',\') == selected.join(\',\');\n
      return selected[1] < 0 || this.countCols() >= this.getSettings().maxCols || rowSelected;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, REMOVE_ROW, {\n
  value: {\n
    key: REMOVE_ROW,\n
    name: \'Remove row\',\n
    callback: function(key, selection) {\n
      var amount = selection.end.row - selection.start.row + 1;\n
      this.alter(\'remove_row\', selection.start.row, amount);\n
    },\n
    disabled: function() {\n
      var selected = getValidSelection(this);\n
      if (!selected) {\n
        return true;\n
      }\n
      var entireColumnSelection = [0, selected[1], this.countRows() - 1, selected[1]];\n
      return entireColumnSelection.join(\',\') === selected.join(\',\');\n
    },\n
    hidden: function() {\n
      return !this.getSettings().allowRemoveRow;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, REMOVE_COLUMN, {\n
  value: {\n
    key: REMOVE_COLUMN,\n
    name: \'Remove column\',\n
    callback: function(key, selection) {\n
      var amount = selection.end.col - selection.start.col + 1;\n
      this.alter(\'remove_col\', selection.start.col, amount);\n
    },\n
    disabled: function() {\n
      var selected = getValidSelection(this);\n
      if (!selected) {\n
        return true;\n
      }\n
      if (!this.isColumnModificationAllowed()) {\n
        return true;\n
      }\n
      var entireRowSelection = [selected[0], 0, selected[0], this.countCols() - 1];\n
      var rowSelected = entireRowSelection.join(\',\') == selected.join(\',\');\n
      return (selected[1] < 0 || rowSelected);\n
    },\n
    hidden: function() {\n
      return !this.getSettings().allowRemoveColumn;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, UNDO, {\n
  value: {\n
    key: UNDO,\n
    name: \'Undo\',\n
    callback: function() {\n
      this.undo();\n
    },\n
    disabled: function() {\n
      return this.undoRedo && !this.undoRedo.isUndoAvailable();\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, REDO, {\n
  value: {\n
    key: REDO,\n
    name: \'Redo\',\n
    callback: function() {\n
      this.redo();\n
    },\n
    disabled: function() {\n
      return this.undoRedo && !this.undoRedo.isRedoAvailable();\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, READ_ONLY, {\n
  value: {\n
    key: READ_ONLY,\n
    name: function() {\n
      var $__3 = this;\n
      var label = \'Read only\';\n
      var atLeastOneReadOnly = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
        return $__3.getCellMeta(row, col).readOnly;\n
      }));\n
      if (atLeastOneReadOnly) {\n
        label = markLabelAsSelected(label);\n
      }\n
      return label;\n
    },\n
    callback: function() {\n
      var $__3 = this;\n
      var range = this.getSelectedRange();\n
      var atLeastOneReadOnly = checkSelectionConsistency(range, (function(row, col) {\n
        return $__3.getCellMeta(row, col).readOnly;\n
      }));\n
      range.forAll((function(row, col) {\n
        $__3.getCellMeta(row, col).readOnly = atLeastOneReadOnly ? false : true;\n
      }));\n
      this.render();\n
    },\n
    disabled: function() {\n
      return this.getSelectedRange() ? false : true;\n
    }\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__4, ALIGNMENT, {\n
  value: {\n
    key: ALIGNMENT,\n
    name: \'Alignment\',\n
    disabled: function() {\n
      return this.getSelectedRange() ? false : true;\n
    },\n
    submenu: {items: [{\n
        key: (ALIGNMENT + ":left"),\n
        name: function() {\n
          var $__3 = this;\n
          var label = \'Left\';\n
          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
            var className = $__3.getCellMeta(row, col).className;\n
            if (className && className.indexOf(\'htLeft\') !== -1) {\n
              return true;\n
            }\n
          }));\n
          if (hasClass) {\n
            label = markLabelAsSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var $__3 = this;\n
          var range = this.getSelectedRange();\n
          var stateBefore = getAlignmentClasses(range, (function(row, col) {\n
            return $__3.getCellMeta(row, col).className;\n
          }));\n
          var type = \'horizontal\';\n
          var alignment = \'htLeft\';\n
          this.runHooks(\'beforeCellAlignment\', stateBefore, range, type, alignment);\n
          align(range, type, alignment, (function(row, col) {\n
            return $__3.getCellMeta(row, col);\n
          }));\n
          this.render();\n
        },\n
        disabled: false\n
      }, {\n
        key: (ALIGNMENT + ":center"),\n
        name: function() {\n
          var $__3 = this;\n
          var label = \'Center\';\n
          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
            var className = $__3.getCellMeta(row, col).className;\n
            if (className && className.indexOf(\'htCenter\') !== -1) {\n
              return true;\n
            }\n
          }));\n
          if (hasClass) {\n
            label = markLabelAsSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var $__3 = this;\n
          var range = this.getSelectedRange();\n
          var stateBefore = getAlignmentClasses(range, (function(row, col) {\n
            return $__3.getCellMeta(row, col).className;\n
          }));\n
          var type = \'horizontal\';\n
          var alignment = \'htCenter\';\n
          this.runHooks(\'beforeCellAlignment\', stateBefore, range, type, alignment);\n
          align(range, type, alignment, (function(row, col) {\n
            return $__3.getCellMeta(row, col);\n
          }));\n
          this.render();\n
        },\n
        disabled: false\n
      }, {\n
        key: (ALIGNMENT + ":right"),\n
        name: function() {\n
          var $__3 = this;\n
          var label = \'Right\';\n
          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
            var className = $__3.getCellMeta(row, col).className;\n
            if (className && className.indexOf(\'htRight\') !== -1) {\n
              return true;\n
            }\n
          }));\n
          if (hasClass) {\n
            label = markLabelAsSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var $__3 = this;\n
          var range = this.getSelectedRange();\n
          var stateBefore = getAlignmentClasses(range, (function(row, col) {\n
            return $__3.getCellMeta(row, col).className;\n
          }));\n
          var type = \'horizontal\';\n
          var alignment = \'htRight\';\n
          this.runHooks(\'beforeCellAlignment\', stateBefore, range, type, alignment);\n
          align(range, type, alignment, (function(row, col) {\n
            return $__3.getCellMeta(row, col);\n
          }));\n
          this.render();\n
        },\n
        disabled: false\n
      }, {\n
        key: (ALIGNMENT + ":justify"),\n
        name: function() {\n
          var $__3 = this;\n
          var label = \'Justify\';\n
          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
            var className = $__3.getCellMeta(row, col).className;\n
            if (className && className.indexOf(\'htJustify\') !== -1) {\n
              return true;\n
            }\n
          }));\n
          if (hasClass) {\n
            label = markLabelAsSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var $__3 = this;\n
          var range = this.getSelectedRange();\n
          var stateBefore = getAlignmentClasses(range, (function(row, col) {\n
            return $__3.getCellMeta(row, col).className;\n
          }));\n
          var type = \'horizontal\';\n
          var alignment = \'htJustify\';\n
          this.runHooks(\'beforeCellAlignment\', stateBefore, range, type, alignment);\n
          align(range, type, alignment, (function(row, col) {\n
            return $__3.getCellMeta(row, col);\n
          }));\n
          this.render();\n
        },\n
        disabled: false\n
      }, {name: SEPARATOR}, {\n
        key: (ALIGNMENT + ":top"),\n
        name: function() {\n
          var $__3 = this;\n
          var label = \'Top\';\n
          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
            var className = $__3.getCellMeta(row, col).className;\n
            if (className && className.indexOf(\'htTop\') !== -1) {\n
              return true;\n
            }\n
          }));\n
          if (hasClass) {\n
            label = markLabelAsSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var $__3 = this;\n
          var range = this.getSelectedRange();\n
          var stateBefore = getAlignmentClasses(range, (function(row, col) {\n
            return $__3.getCellMeta(row, col).className;\n
          }));\n
          var type = \'vertical\';\n
          var alignment = \'htTop\';\n
          this.runHooks(\'beforeCellAlignment\', stateBefore, range, type, alignment);\n
          align(range, type, alignment, (function(row, col) {\n
            return $__3.getCellMeta(row, col);\n
          }));\n
          this.render();\n
        },\n
        disabled: false\n
      }, {\n
        key: (ALIGNMENT + ":middle"),\n
        name: function() {\n
          var $__3 = this;\n
          var label = \'Middle\';\n
          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
            var className = $__3.getCellMeta(row, col).className;\n
            if (className && className.indexOf(\'htMiddle\') !== -1) {\n
              return true;\n
            }\n
          }));\n
          if (hasClass) {\n
            label = markLabelAsSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var $__3 = this;\n
          var range = this.getSelectedRange();\n
          var stateBefore = getAlignmentClasses(range, (function(row, col) {\n
            return $__3.getCellMeta(row, col).className;\n
          }));\n
          var type = \'vertical\';\n
          var alignment = \'htMiddle\';\n
          this.runHooks(\'beforeCellAlignment\', stateBefore, range, type, alignment);\n
          align(range, type, alignment, (function(row, col) {\n
            return $__3.getCellMeta(row, col);\n
          }));\n
          this.render();\n
        },\n
        disabled: false\n
      }, {\n
        key: (ALIGNMENT + ":bottom"),\n
        name: function() {\n
          var $__3 = this;\n
          var label = \'Bottom\';\n
          var hasClass = checkSelectionConsistency(this.getSelectedRange(), (function(row, col) {\n
            var className = $__3.getCellMeta(row, col).className;\n
            if (className && className.indexOf(\'htBottom\') !== -1) {\n
              return true;\n
            }\n
          }));\n
          if (hasClass) {\n
            label = markLabelAsSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var $__3 = this;\n
          var range = this.getSelectedRange();\n
          var stateBefore = getAlignmentClasses(range, (function(row, col) {\n
            return $__3.getCellMeta(row, col).className;\n
          }));\n
          var type = \'vertical\';\n
          var alignment = \'htBottom\';\n
          this.runHooks(\'beforeCellAlignment\', stateBefore, range, type, alignment);\n
          align(range, type, alignment, (function(row, col) {\n
            return $__3.getCellMeta(row, col);\n
          }));\n
          this.render();\n
        },\n
        disabled: false\n
      }]}\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), $__4);\n
\n
//# \n
},{"helpers/number":48,"helpers/object":49,"utils":69}],69:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  normalizeSelection: {get: function() {\n
      return normalizeSelection;\n
    }},\n
  isSeparator: {get: function() {\n
      return isSeparator;\n
    }},\n
  hasSubMenu: {get: function() {\n
      return hasSubMenu;\n
    }},\n
  isDisabled: {get: function() {\n
      return isDisabled;\n
    }},\n
  getValidSelection: {get: function() {\n
      return getValidSelection;\n
    }},\n
  prepareVerticalAlignClass: {get: function() {\n
      return prepareVerticalAlignClass;\n
    }},\n
  prepareHorizontalAlignClass: {get: function() {\n
      return prepareHorizontalAlignClass;\n
    }},\n
  getAlignmentClasses: {get: function() {\n
      return getAlignmentClasses;\n
    }},\n
  align: {get: function() {\n
      return align;\n
    }},\n
  checkSelectionConsistency: {get: function() {\n
      return checkSelectionConsistency;\n
    }},\n
  markLabelAsSelected: {get: function() {\n
      return markLabelAsSelected;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__;\n
var hasClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).hasClass;\n
function normalizeSelection(selRange) {\n
  return {\n
    start: selRange.getTopLeftCorner(),\n
    end: selRange.getBottomRightCorner()\n
  };\n
}\n
function isSeparator(cell) {\n
  return hasClass(cell, \'htSeparator\');\n
}\n
function hasSubMenu(cell) {\n
  return hasClass(cell, \'htSubmenu\');\n
}\n
function isDisabled(cell) {\n
  return hasClass(cell, \'htDisabled\');\n
}\n
function getValidSelection(hot) {\n
  var selected = hot.getSelected();\n
  if (!selected) {\n
    return null;\n
  }\n
  if (selected[0] < 0) {\n
    return null;\n
  }\n
  if (hot.countRows() >= hot.getSettings().maxRows) {\n
    return null;\n
  }\n
  return selected;\n
}\n
function prepareVerticalAlignClass(className, alignment) {\n
  if (className.indexOf(alignment) != -1) {\n
    return className;\n
  }\n
  className = className.replace(\'htTop\', \'\').replace(\'htMiddle\', \'\').replace(\'htBottom\', \'\').replace(\'  \', \'\');\n
  className += \' \' + alignment;\n
  return className;\n
}\n
function prepareHorizontalAlignClass(className, alignment) {\n
  if (className.indexOf(alignment) != -1) {\n
    return className;\n
  }\n
  className = className.replace(\'htLeft\', \'\').replace(\'htCenter\', \'\').replace(\'htRight\', \'\').replace(\'htJustify\', \'\').replace(\'  \', \'\');\n
  className += \' \' + alignment;\n
  return className;\n
}\n
function getAlignmentClasses(range, callback) {\n
  var classes = {};\n
  for (var row = range.from.row; row <= range.to.row; row++) {\n
    for (var col = range.from.col; col <= range.to.col; col++) {\n
      if (!classes[row]) {\n
        classes[row] = [];\n
      }\n
      classes[row][col] = callback(row, col);\n
    }\n
  }\n
  return classes;\n
}\n
function align(range, type, alignment, cellDescriptor) {\n
  if (range.from.row == range.to.row && range.from.col == range.to.col) {\n
    applyAlignClassName(range.from.row, range.from.col, type, alignment, cellDescriptor);\n
  } else {\n
    for (var row = range.from.row; row <= range.to.row; row++) {\n
      for (var col = range.from.col; col <= range.to.col; col++) {\n
        applyAlignClassName(row, col, type, alignment, cellDescriptor);\n
      }\n
    }\n
  }\n
}\n
function applyAlignClassName(row, col, type, alignment, cellDescriptor) {\n
  var cellMeta = cellDescriptor(row, col);\n
  var className = alignment;\n
  if (cellMeta.className) {\n
    if (type === \'vertical\') {\n
      className = prepareVerticalAlignClass(cellMeta.className, alignment);\n
    } else {\n
      className = prepareHorizontalAlignClass(cellMeta.className, alignment);\n
    }\n
  }\n
  cellMeta.className = className;\n
}\n
function checkSelectionConsistency(range, comparator) {\n
  var result = false;\n
  if (range) {\n
    range.forAll(function(row, col) {\n
      if (comparator(row, col)) {\n
        result = true;\n
        return false;\n
      }\n
    });\n
  }\n
  return result;\n
}\n
function markLabelAsSelected(label) {\n
  return \'<span class="selected">\' + String.fromCharCode(10003) + \'</span>\' + label;\n
}\n
\n
//# \n
},{"helpers/dom/element":44}],70:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ContextMenuCopyPaste: {get: function() {\n
      return ContextMenuCopyPaste;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__95_base__,\n
    $__zeroclipboard__;\n
var removeClass = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}).removeClass;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var ZeroClipboard = ($__zeroclipboard__ = require("zeroclipboard"), $__zeroclipboard__ && $__zeroclipboard__.__esModule && $__zeroclipboard__ || {default: $__zeroclipboard__}).default;\n
var ContextMenuCopyPaste = function ContextMenuCopyPaste(hotInstance) {\n
  var $__5 = this;\n
  $traceurRuntime.superConstructor($ContextMenuCopyPaste).call(this, hotInstance);\n
  this.swfPath = null;\n
  this.hotContextMenu = null;\n
  this.outsideClickDeselectsCache = null;\n
  this.hot.addHook(\'afterContextMenuShow\', (function(htContextMenu) {\n
    return $__5.setupZeroClipboard(htContextMenu);\n
  }));\n
  this.hot.addHook(\'afterInit\', (function() {\n
    return $__5.afterInit();\n
  }));\n
  this.hot.addHook(\'afterContextMenuDefaultOptions\', (function(options) {\n
    return $__5.addToContextMenu(options);\n
  }));\n
};\n
var $ContextMenuCopyPaste = ContextMenuCopyPaste;\n
($traceurRuntime.createClass)(ContextMenuCopyPaste, {\n
  afterInit: function() {\n
    if (!this.hot.getSettings().contextMenuCopyPaste) {\n
      return;\n
    } else if (typeof this.hot.getSettings().contextMenuCopyPaste == \'object\') {\n
      this.swfPath = this.hot.getSettings().contextMenuCopyPaste.swfPath;\n
    }\n
    if (typeof ZeroClipboard === \'undefined\') {\n
      console.error(\'To be able to use the Copy/Paste feature from the context menu, you need to manualy include ZeroClipboard.js file to your website.\');\n
    }\n
    try {\n
      new ActiveXObject(\'ShockwaveFlash.ShockwaveFlash\');\n
    } catch (exception) {\n
      if (\'undefined\' == typeof navigator.mimeTypes[\'application/x-shockwave-flash\']) {\n
        console.error(\'To be able to use the Copy/Paste feature from the context menu, your browser needs to have Flash Plugin installed.\');\n
      }\n
    }\n
    this.prepareZeroClipboard();\n
  },\n
  prepareZeroClipboard: function() {\n
    if (this.swfPath) {\n
      ZeroClipboard.config({swfPath: this.swfPath});\n
    }\n
  },\n
  getCopyValue: function() {\n
    this.hot.copyPaste.setCopyableText();\n
    return this.hot.copyPaste.copyPasteInstance.elTextarea.value;\n
  },\n
  addToContextMenu: function(defaultOptions) {\n
    if (!this.hot.getSettings().contextMenuCopyPaste) {\n
      return;\n
    }\n
    defaultOptions.items.unshift({\n
      key: \'copy\',\n
      name: \'Copy\'\n
    }, {\n
      key: \'paste\',\n
      name: \'Paste\',\n
      callback: function() {\n
        this.copyPaste.triggerPaste();\n
      }\n
    }, Handsontable.plugins.ContextMenu.SEPARATOR);\n
  },\n
  setupZeroClipboard: function(hotContextMenu) {\n
    var $__5 = this;\n
    var data,\n
        zeroClipboardInstance;\n
    if (!this.hot.getSettings().contextMenuCopyPaste) {\n
      return;\n
    }\n
    this.hotContextMenu = hotContextMenu;\n
    data = this.hotContextMenu.getData();\n
    for (var i = 0,\n
        ilen = data.length; i < ilen; i++) {\n
      if (data[i].key === \'copy\') {\n
        zeroClipboardInstance = new ZeroClipboard(this.hotContextMenu.getCell(i, 0));\n
        zeroClipboardInstance.off();\n
        zeroClipboardInstance.on(\'copy\', (function(event) {\n
          var clipboard = event.clipboardData;\n
          clipboard.setData(\'text/plain\', $__5.getCopyValue());\n
          $__5.hot.getSettings().outsideClickDeselects = $__5.outsideClickDeselectsCache;\n
        }));\n
        this.bindEvents();\n
        break;\n
      }\n
    }\n
  },\n
  removeCurrentClass: function() {\n
    if (this.hotContextMenu.rootElement) {\n
      var element = this.hotContextMenu.rootElement.querySelector(\'td.current\');\n
      if (element) {\n
        removeClass(element, \'current\');\n
      }\n
    }\n
    this.outsideClickDeselectsCache = this.hot.getSettings().outsideClickDeselects;\n
    this.hot.getSettings().outsideClickDeselects = false;\n
  },\n
  removeZeroClipboardClass: function() {\n
    if (this.hotContextMenu.rootElement) {\n
      var element = this.hotContextMenu.rootElement.querySelector(\'td.zeroclipboard-is-hover\');\n
      if (element) {\n
        removeClass(element, \'zeroclipboard-is-hover\');\n
      }\n
    }\n
    this.hot.getSettings().outsideClickDeselects = this.outsideClickDeselectsCache;\n
  },\n
  bindEvents: function() {\n
    var $__5 = this;\n
    var eventManager = eventManagerObject(this.hotContextMenu);\n
    eventManager.addEventListener(document, \'mouseenter\', (function() {\n
      return $__5.removeCurrentClass();\n
    }));\n
    eventManager.addEventListener(document, \'mouseleave\', (function() {\n
      return $__5.removeZeroClipboardClass();\n
    }));\n
  }\n
}, {}, BasePlugin);\n
;\n
registerPlugin(\'contextMenuCopyPaste\', ContextMenuCopyPaste);\n
\n
//# \n
},{"_base":56,"eventManager":40,"helpers/dom/element":44,"plugins":55,"zeroclipboard":undefined}],71:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  CopyPastePlugin: {get: function() {\n
      return CopyPastePlugin;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__copyPaste__,\n
    $__SheetClip__,\n
    $___46__46__47__46__46__47_helpers_47_unicode__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_helpers_47_function__,\n
    $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__;\n
var copyPaste = ($__copyPaste__ = require("copyPaste"), $__copyPaste__ && $__copyPaste__.__esModule && $__copyPaste__ || {default: $__copyPaste__}).default;\n
var SheetClip = ($__SheetClip__ = require("SheetClip"), $__SheetClip__ && $__SheetClip__.__esModule && $__SheetClip__ || {default: $__SheetClip__}).default;\n
var $__2 = ($___46__46__47__46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47__46__46__47_helpers_47_unicode__ && $___46__46__47__46__46__47_helpers_47_unicode__.__esModule && $___46__46__47__46__46__47_helpers_47_unicode__ || {default: $___46__46__47__46__46__47_helpers_47_unicode__}),\n
    KEY_CODES = $__2.KEY_CODES,\n
    isCtrlKey = $__2.isCtrlKey;\n
var stopImmediatePropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;\n
var proxy = ($___46__46__47__46__46__47_helpers_47_function__ = require("helpers/function"), $___46__46__47__46__46__47_helpers_47_function__ && $___46__46__47__46__46__47_helpers_47_function__.__esModule && $___46__46__47__46__46__47_helpers_47_function__ || {default: $___46__46__47__46__46__47_helpers_47_function__}).proxy;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableCellRange = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;\n
function CopyPastePlugin(instance) {\n
  var _this = this;\n
  this.copyPasteInstance = copyPaste();\n
  this.copyPasteInstance.onCut(onCut);\n
  this.copyPasteInstance.onPaste(onPaste);\n
  instance.addHook(\'beforeKeyDown\', onBeforeKeyDown);\n
  function onCut() {\n
    if (!instance.isListening()) {\n
      return;\n
    }\n
    instance.selection.empty();\n
  }\n
  function onPaste(str) {\n
    var input,\n
        inputArray,\n
        selected,\n
        coordsFrom,\n
        coordsTo,\n
        cellRange,\n
        topLeftCorner,\n
        bottomRightCorner,\n
        areaStart,\n
        areaEnd;\n
    if (!instance.isListening() || !instance.selection.isSelected()) {\n
      return;\n
    }\n
    input = str;\n
    inputArray = SheetClip.parse(input);\n
    selected = instance.getSelected();\n
    coordsFrom = new WalkontableCellCoords(selected[0], selected[1]);\n
    coordsTo = new WalkontableCellCoords(selected[2], selected[3]);\n
    cellRange = new WalkontableCellRange(coordsFrom, coordsFrom, coordsTo);\n
    topLeftCorner = cellRange.getTopLeftCorner();\n
    bottomRightCorner = cellRange.getBottomRightCorner();\n
    areaStart = topLeftCorner;\n
    areaEnd = new WalkontableCellCoords(Math.max(bottomRightCorner.row, inputArray.length - 1 + topLeftCorner.row), Math.max(bottomRightCorner.col, inputArray[0].length - 1 + topLeftCorner.col));\n
    instance.addHookOnce(\'afterChange\', function(changes, source) {\n
      if (changes && changes.length) {\n
        this.selectCell(areaStart.row, areaStart.col, areaEnd.row, areaEnd.col);\n
      }\n
    });\n
    instance.populateFromArray(areaStart.row, areaStart.col, inputArray, areaEnd.row, areaEnd.col, \'paste\', instance.getSettings().pasteMode);\n
  }\n
  function onBeforeKeyDown(event) {\n
    if (!instance.getSelected()) {\n
      return;\n
    }\n
    if (instance.getActiveEditor() && instance.getActiveEditor().isOpened()) {\n
      return;\n
    }\n
    if (isCtrlKey(event.keyCode)) {\n
      _this.setCopyableText();\n
      stopImmediatePropagation(event);\n
      return;\n
    }\n
    var ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;\n
    if (event.keyCode == KEY_CODES.A && ctrlDown) {\n
      instance._registerTimeout(setTimeout(proxy(_this.setCopyableText, _this), 0));\n
    }\n
  }\n
  this.destroy = function() {\n
    if (this.copyPasteInstance) {\n
      this.copyPasteInstance.removeCallback(onCut);\n
      this.copyPasteInstance.removeCallback(onPaste);\n
      this.copyPasteInstance.destroy();\n
      this.copyPasteInstance = null;\n
    }\n
    instance.removeHook(\'beforeKeyDown\', onBeforeKeyDown);\n
  };\n
  instance.addHook(\'afterDestroy\', proxy(this.destroy, this));\n
  this.triggerPaste = proxy(this.copyPasteInstance.triggerPaste, this.copyPasteInstance);\n
  this.triggerCut = proxy(this.copyPasteInstance.triggerCut, this.copyPasteInstance);\n
  this.setCopyableText = function() {\n
    var settings = instance.getSettings();\n
    var copyRowsLimit = settings.copyRowsLimit;\n
    var copyColsLimit = settings.copyColsLimit;\n
    var selRange = instance.getSelectedRange();\n
    var topLeft = selRange.getTopLeftCorner();\n
    var bottomRight = selRange.getBottomRightCorner();\n
    var startRow = topLeft.row;\n
    var startCol = topLeft.col;\n
    var endRow = bottomRight.row;\n
    var endCol = bottomRight.col;\n
    var finalEndRow = Math.min(endRow, startRow + copyRowsLimit - 1);\n
    var finalEndCol = Math.min(endCol, startCol + copyColsLimit - 1);\n
    instance.copyPaste.copyPasteInstance.copyable(instance.getCopyableData(startRow, startCol, finalEndRow, finalEndCol));\n
    if (endRow !== finalEndRow || endCol !== finalEndCol) {\n
      Handsontable.hooks.run(instance, "afterCopyLimit", endRow - startRow + 1, endCol - startCol + 1, copyRowsLimit, copyColsLimit);\n
    }\n
  };\n
}\n
function init() {\n
  var instance = this,\n
      pluginEnabled = instance.getSettings().copyPaste !== false;\n
  if (pluginEnabled && !instance.copyPaste) {\n
    instance.copyPaste = new CopyPastePlugin(instance);\n
  } else if (!pluginEnabled && instance.copyPaste) {\n
    instance.copyPaste.destroy();\n
    instance.copyPaste = null;\n
  }\n
}\n
Handsontable.hooks.add(\'afterInit\', init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', init);\n
Handsontable.hooks.register(\'afterCopyLimit\');\n
;\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/cell/range":6,"SheetClip":"SheetClip","copyPaste":"copyPaste","helpers/dom/event":45,"helpers/function":46,"helpers/unicode":52,"plugins":55}],72:[function(require,module,exports){\n
"use strict";\n
var $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var WalkontableCellRange = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;\n
var WalkontableSelection = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__ = require("3rdparty/walkontable/src/selection"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_selection__}).WalkontableSelection;\n
function CustomBorders() {}\n
var instance;\n
var checkEnable = function(customBorders) {\n
  if (typeof customBorders === "boolean") {\n
    if (customBorders === true) {\n
      return true;\n
    }\n
  }\n
  if (typeof customBorders === "object") {\n
    if (customBorders.length > 0) {\n
      return true;\n
    }\n
  }\n
  return false;\n
};\n
var init = function() {\n
  if (checkEnable(this.getSettings().customBorders)) {\n
    if (!this.customBorders) {\n
      instance = this;\n
      this.customBorders = new CustomBorders();\n
    }\n
  }\n
};\n
var getSettingIndex = function(className) {\n
  for (var i = 0; i < instance.view.wt.selections.length; i++) {\n
    if (instance.view.wt.selections[i].settings.className == className) {\n
      return i;\n
    }\n
  }\n
  return -1;\n
};\n
var insertBorderIntoSettings = function(border) {\n
  var coordinates = {\n
    row: border.row,\n
    col: border.col\n
  };\n
  var selection = new WalkontableSelection(border, new WalkontableCellRange(coordinates, coordinates, coordinates));\n
  var index = getSettingIndex(border.className);\n
  if (index >= 0) {\n
    instance.view.wt.selections[index] = selection;\n
  } else {\n
    instance.view.wt.selections.push(selection);\n
  }\n
};\n
var prepareBorderFromCustomAdded = function(row, col, borderObj) {\n
  var border = createEmptyBorders(row, col);\n
  border = extendDefaultBorder(border, borderObj);\n
  this.setCellMeta(row, col, \'borders\', border);\n
  insertBorderIntoSettings(border);\n
};\n
var prepareBorderFromCustomAddedRange = function(rowObj) {\n
  var range = rowObj.range;\n
  for (var row = range.from.row; row <= range.to.row; row++) {\n
    for (var col = range.from.col; col <= range.to.col; col++) {\n
      var border = createEmptyBorders(row, col);\n
      var add = 0;\n
      if (row == range.from.row) {\n
        add++;\n
        if (rowObj.hasOwnProperty(\'top\')) {\n
          border.top = rowObj.top;\n
        }\n
      }\n
      if (row == range.to.row) {\n
        add++;\n
        if (rowObj.hasOwnProperty(\'bottom\')) {\n
          border.bottom = rowObj.bottom;\n
        }\n
      }\n
      if (col == range.from.col) {\n
        add++;\n
        if (rowObj.hasOwnProperty(\'left\')) {\n
          border.left = rowObj.left;\n
        }\n
      }\n
      if (col == range.to.col) {\n
        add++;\n
        if (rowObj.hasOwnProperty(\'right\')) {\n
          border.right = rowObj.right;\n
        }\n
      }\n
      if (add > 0) {\n
        this.setCellMeta(row, col, \'borders\', border);\n
        insertBorderIntoSettings(border);\n
      }\n
    }\n
  }\n
};\n
var createClassName = function(row, col) {\n
  return "border_row" + row + "col" + col;\n
};\n
var createDefaultCustomBorder = function() {\n
  return {\n
    width: 1,\n
    color: \'#000\'\n
  };\n
};\n
var createSingleEmptyBorder = function() {\n
  return {hide: true};\n
};\n
var createDefaultHtBorder = function() {\n
  return {\n
    width: 1,\n
    color: \'#000\',\n
    cornerVisible: false\n
  };\n
};\n
var createEmptyBorders = function(row, col) {\n
  return {\n
    className: createClassName(row, col),\n
    border: createDefaultHtBorder(),\n
    row: row,\n
    col: col,\n
    top: createSingleEmptyBorder(),\n
    right: createSingleEmptyBorder(),\n
    bottom: createSingleEmptyBorder(),\n
    left: createSingleEmptyBorder()\n
  };\n
};\n
var extendDefaultBorder = function(defaultBorder, customBorder) {\n
  if (customBorder.hasOwnProperty(\'border\')) {\n
    defaultBorder.border = customBorder.border;\n
  }\n
  if (customBorder.hasOwnProperty(\'top\')) {\n
    defaultBorder.top = customBorder.top;\n
  }\n
  if (customBorder.hasOwnProperty(\'right\')) {\n
    defaultBorder.right = customBorder.right;\n
  }\n
  if (customBorder.hasOwnProperty(\'bottom\')) {\n
    defaultBorder.bottom = customBorder.bottom;\n
  }\n
  if (customBorder.hasOwnProperty(\'left\')) {\n
    defaultBorder.left = customBorder.left;\n
  }\n
  return defaultBorder;\n
};\n
var removeBordersFromDom = function(borderClassName) {\n
  var borders = document.querySelectorAll("." + borderClassName);\n
  for (var i = 0; i < borders.length; i++) {\n
    if (borders[i]) {\n
      if (borders[i].nodeName != \'TD\') {\n
        var parent = borders[i].parentNode;\n
        if (parent.parentNode) {\n
          parent.parentNode.removeChild(parent);\n
        }\n
      }\n
    }\n
  }\n
};\n
var removeAllBorders = function(row, col) {\n
  var borderClassName = createClassName(row, col);\n
  removeBordersFromDom(borderClassName);\n
  this.removeCellMeta(row, col, \'borders\');\n
};\n
var setBorder = function(row, col, place, remove) {\n
  var bordersMeta = this.getCellMeta(row, col).borders;\n
  if (!bordersMeta || bordersMeta.border == undefined) {\n
    bordersMeta = createEmptyBorders(row, col);\n
  }\n
  if (remove) {\n
    bordersMeta[place] = createSingleEmptyBorder();\n
  } else {\n
    bordersMeta[place] = createDefaultCustomBorder();\n
  }\n
  this.setCellMeta(row, col, \'borders\', bordersMeta);\n
  var borderClassName = createClassName(row, col);\n
  removeBordersFromDom(borderClassName);\n
  insertBorderIntoSettings(bordersMeta);\n
  this.render();\n
};\n
var prepareBorder = function(range, place, remove) {\n
  if (range.from.row == range.to.row && range.from.col == range.to.col) {\n
    if (place == "noBorders") {\n
      removeAllBorders.call(this, range.from.row, range.from.col);\n
    } else {\n
      setBorder.call(this, range.from.row, range.from.col, place, remove);\n
    }\n
  } else {\n
    switch (place) {\n
      case "noBorders":\n
        for (var column = range.from.col; column <= range.to.col; column++) {\n
          for (var row = range.from.row; row <= range.to.row; row++) {\n
            removeAllBorders.call(this, row, column);\n
          }\n
        }\n
        break;\n
      case "top":\n
        for (var topCol = range.from.col; topCol <= range.to.col; topCol++) {\n
          setBorder.call(this, range.from.row, topCol, place, remove);\n
        }\n
        break;\n
      case "right":\n
        for (var rowRight = range.from.row; rowRight <= range.to.row; rowRight++) {\n
          setBorder.call(this, rowRight, range.to.col, place);\n
        }\n
        break;\n
      case "bottom":\n
        for (var bottomCol = range.from.col; bottomCol <= range.to.col; bottomCol++) {\n
          setBorder.call(this, range.to.row, bottomCol, place);\n
        }\n
        break;\n
      case "left":\n
        for (var rowLeft = range.from.row; rowLeft <= range.to.row; rowLeft++) {\n
          setBorder.call(this, rowLeft, range.from.col, place);\n
        }\n
        break;\n
    }\n
  }\n
};\n
var checkSelectionBorders = function(hot, direction) {\n
  var atLeastOneHasBorder = false;\n
  hot.getSelectedRange().forAll(function(r, c) {\n
    var metaBorders = hot.getCellMeta(r, c).borders;\n
    if (metaBorders) {\n
      if (direction) {\n
        if (!metaBorders[direction].hasOwnProperty(\'hide\')) {\n
          atLeastOneHasBorder = true;\n
          return false;\n
        }\n
      } else {\n
        atLeastOneHasBorder = true;\n
        return false;\n
      }\n
    }\n
  });\n
  return atLeastOneHasBorder;\n
};\n
var markSelected = function(label) {\n
  return "<span class=\'selected\'>" + String.fromCharCode(10003) + "</span>" + label;\n
};\n
var addBordersOptionsToContextMenu = function(defaultOptions) {\n
  if (!this.getSettings().customBorders) {\n
    return;\n
  }\n
  defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR);\n
  defaultOptions.items.push({\n
    key: \'borders\',\n
    name: \'Borders\',\n
    submenu: {items: [{\n
        key: \'borders:top\',\n
        name: function() {\n
          var label = "Top";\n
          var hasBorder = checkSelectionBorders(this, \'top\');\n
          if (hasBorder) {\n
            label = markSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var hasBorder = checkSelectionBorders(this, \'top\');\n
          prepareBorder.call(this, this.getSelectedRange(), \'top\', hasBorder);\n
        },\n
        disabled: false\n
      }, {\n
        key: \'borders:right\',\n
        name: function() {\n
          var label = \'Right\';\n
          var hasBorder = checkSelectionBorders(this, \'right\');\n
          if (hasBorder) {\n
            label = markSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var hasBorder = checkSelectionBorders(this, \'right\');\n
          prepareBorder.call(this, this.getSelectedRange(), \'right\', hasBorder);\n
        },\n
        disabled: false\n
      }, {\n
        key: \'borders:bottom\',\n
        name: function() {\n
          var label = \'Bottom\';\n
          var hasBorder = checkSelectionBorders(this, \'bottom\');\n
          if (hasBorder) {\n
            label = markSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var hasBorder = checkSelectionBorders(this, \'bottom\');\n
          prepareBorder.call(this, this.getSelectedRange(), \'bottom\', hasBorder);\n
        },\n
        disabled: false\n
      }, {\n
        key: \'borders:left\',\n
        name: function() {\n
          var label = \'Left\';\n
          var hasBorder = checkSelectionBorders(this, \'left\');\n
          if (hasBorder) {\n
            label = markSelected(label);\n
          }\n
          return label;\n
        },\n
        callback: function() {\n
          var hasBorder = checkSelectionBorders(this, \'left\');\n
          prepareBorder.call(this, this.getSelectedRange(), \'left\', hasBorder);\n
        },\n
        disabled: false\n
      }, {\n
        key: \'borders:no_borders\',\n
        name: \'Remove border(s)\',\n
        callback: function() {\n
          prepareBorder.call(this, this.getSelectedRange(), \'noBorders\');\n
        },\n
        disabled: function() {\n
          return !checkSelectionBorders(this);\n
        }\n
      }]}\n
  });\n
};\n
Handsontable.hooks.add(\'beforeInit\', init);\n
Handsontable.hooks.add(\'afterContextMenuDefaultOptions\', addBordersOptionsToContextMenu);\n
Handsontable.hooks.add(\'afterInit\', function() {\n
  var customBorders = this.getSettings().customBorders;\n
  if (customBorders) {\n
    for (var i = 0; i < customBorders.length; i++) {\n
      if (customBorders[i].range) {\n
        prepareBorderFromCustomAddedRange.call(this, customBorders[i]);\n
      } else {\n
       

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAo=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="10" aka="AAAAAAAAAAo=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

 prepareBorderFromCustomAdded.call(this, customBorders[i].row, customBorders[i].col, customBorders[i]);\n
      }\n
    }\n
    this.render();\n
    this.view.wt.draw(true);\n
  }\n
});\n
Handsontable.CustomBorders = CustomBorders;\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/range":6,"3rdparty/walkontable/src/selection":18,"plugins":55}],73:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  DragToScroll: {get: function() {\n
      return DragToScroll;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_plugins__;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
;\n
Handsontable.plugins.DragToScroll = DragToScroll;\n
function DragToScroll() {\n
  this.boundaries = null;\n
  this.callback = null;\n
}\n
DragToScroll.prototype.setBoundaries = function(boundaries) {\n
  this.boundaries = boundaries;\n
};\n
DragToScroll.prototype.setCallback = function(callback) {\n
  this.callback = callback;\n
};\n
DragToScroll.prototype.check = function(x, y) {\n
  var diffX = 0;\n
  var diffY = 0;\n
  if (y < this.boundaries.top) {\n
    diffY = y - this.boundaries.top;\n
  } else if (y > this.boundaries.bottom) {\n
    diffY = y - this.boundaries.bottom;\n
  }\n
  if (x < this.boundaries.left) {\n
    diffX = x - this.boundaries.left;\n
  } else if (x > this.boundaries.right) {\n
    diffX = x - this.boundaries.right;\n
  }\n
  this.callback(diffX, diffY);\n
};\n
var dragToScroll;\n
var instance;\n
var setupListening = function(instance) {\n
  instance.dragToScrollListening = false;\n
  var scrollHandler = instance.view.wt.wtTable.holder;\n
  dragToScroll = new DragToScroll();\n
  if (scrollHandler === window) {\n
    return;\n
  } else {\n
    dragToScroll.setBoundaries(scrollHandler.getBoundingClientRect());\n
  }\n
  dragToScroll.setCallback(function(scrollX, scrollY) {\n
    if (scrollX < 0) {\n
      scrollHandler.scrollLeft -= 50;\n
    } else if (scrollX > 0) {\n
      scrollHandler.scrollLeft += 50;\n
    }\n
    if (scrollY < 0) {\n
      scrollHandler.scrollTop -= 20;\n
    } else if (scrollY > 0) {\n
      scrollHandler.scrollTop += 20;\n
    }\n
  });\n
  instance.dragToScrollListening = true;\n
};\n
Handsontable.hooks.add(\'afterInit\', function() {\n
  var instance = this;\n
  var eventManager = eventManagerObject(this);\n
  eventManager.addEventListener(document, \'mouseup\', function() {\n
    instance.dragToScrollListening = false;\n
  });\n
  eventManager.addEventListener(document, \'mousemove\', function(event) {\n
    if (instance.dragToScrollListening) {\n
      dragToScroll.check(event.clientX, event.clientY);\n
    }\n
  });\n
});\n
Handsontable.hooks.add(\'afterDestroy\', function() {\n
  eventManagerObject(this).clear();\n
});\n
Handsontable.hooks.add(\'afterOnCellMouseDown\', function() {\n
  setupListening(this);\n
});\n
Handsontable.hooks.add(\'afterOnCellCornerMouseDown\', function() {\n
  setupListening(this);\n
});\n
Handsontable.plugins.DragToScroll = DragToScroll;\n
\n
//# \n
},{"eventManager":40,"plugins":55}],74:[function(require,module,exports){\n
"use strict";\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    removeClass = $__0.removeClass,\n
    hasClass = $__0.hasClass,\n
    elementIndex = $__0.index;\n
var stopImmediatePropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
function Grouping(instance) {\n
  var groups = [];\n
  var item = {\n
    id: \'\',\n
    level: 0,\n
    hidden: 0,\n
    rows: [],\n
    cols: []\n
  };\n
  var counters = {\n
    rows: 0,\n
    cols: 0\n
  };\n
  var levels = {\n
    rows: 0,\n
    cols: 0\n
  };\n
  var hiddenRows = [];\n
  var hiddenCols = [];\n
  var classes = {\n
    \'groupIndicatorContainer\': \'htGroupIndicatorContainer\',\n
    \'groupIndicator\': function(direction) {\n
      return \'ht\' + direction + \'Group\';\n
    },\n
    \'groupStart\': \'htGroupStart\',\n
    \'collapseButton\': \'htCollapseButton\',\n
    \'expandButton\': \'htExpandButton\',\n
    \'collapseGroupId\': function(id) {\n
      return \'htCollapse-\' + id;\n
    },\n
    \'collapseFromLevel\': function(direction, level) {\n
      return \'htCollapse\' + direction + \'FromLevel-\' + level;\n
    },\n
    \'clickable\': \'clickable\',\n
    \'levelTrigger\': \'htGroupLevelTrigger\'\n
  };\n
  var compare = function(property, orderDirection) {\n
    return function(item1, item2) {\n
      return typeof(orderDirection) === \'undefined\' || orderDirection === \'asc\' ? item1[property] - item2[property] : item2[property] - item1[property];\n
    };\n
  };\n
  var range = function(from, to) {\n
    var arr = [];\n
    while (from <= to) {\n
      arr.push(from++);\n
    }\n
    return arr;\n
  };\n
  var getRangeGroups = function(dataType, from, to) {\n
    var cells = [],\n
        cell = {\n
          row: null,\n
          col: null\n
        };\n
    if (dataType == "cols") {\n
      while (from <= to) {\n
        cell = {\n
          row: -1,\n
          col: from++\n
        };\n
        cells.push(cell);\n
      }\n
    } else {\n
      while (from <= to) {\n
        cell = {\n
          row: from++,\n
          col: -1\n
        };\n
        cells.push(cell);\n
      }\n
    }\n
    var cellsGroups = getCellsGroups(cells),\n
        totalRows = 0,\n
        totalCols = 0;\n
    for (var i = 0; i < cellsGroups.length; i++) {\n
      totalRows += cellsGroups[i].filter(function(item) {\n
        return item[\'rows\'];\n
      }).length;\n
      totalCols += cellsGroups[i].filter(function(item) {\n
        return item[\'cols\'];\n
      }).length;\n
    }\n
    return {\n
      total: {\n
        rows: totalRows,\n
        cols: totalCols\n
      },\n
      groups: cellsGroups\n
    };\n
  };\n
  var getCellsGroups = function(cells) {\n
    var _groups = [];\n
    for (var i = 0; i < cells.length; i++) {\n
      _groups.push(getCellGroups(cells[i]));\n
    }\n
    return _groups;\n
  };\n
  var getCellGroups = function(coords, groupLevel, groupType) {\n
    var row = coords.row,\n
        col = coords.col;\n
    var tmpRow = (row === -1 ? 0 : row),\n
        tmpCol = (col === -1 ? 0 : col);\n
    var _groups = [];\n
    for (var i = 0; i < groups.length; i++) {\n
      var group = groups[i],\n
          id = group[\'id\'],\n
          level = group[\'level\'],\n
          rows = group[\'rows\'] || [],\n
          cols = group[\'cols\'] || [];\n
      if (_groups.indexOf(id) === -1) {\n
        if (rows.indexOf(tmpRow) !== -1 || cols.indexOf(tmpCol) !== -1) {\n
          _groups.push(group);\n
        }\n
      }\n
    }\n
    if (col === -1) {\n
      _groups = _groups.concat(getColGroups());\n
    } else if (row === -1) {\n
      _groups = _groups.concat(getRowGroups());\n
    }\n
    if (groupLevel) {\n
      _groups = _groups.filter(function(item) {\n
        return item[\'level\'] === groupLevel;\n
      });\n
    }\n
    if (groupType) {\n
      if (groupType === \'cols\') {\n
        _groups = _groups.filter(function(item) {\n
          return item[\'cols\'];\n
        });\n
      } else if (groupType === \'rows\') {\n
        _groups = _groups.filter(function(item) {\n
          return item[\'rows\'];\n
        });\n
      }\n
    }\n
    var tmp = [];\n
    return _groups.filter(function(item) {\n
      if (tmp.indexOf(item.id) === -1) {\n
        tmp.push(item.id);\n
        return item;\n
      }\n
    });\n
  };\n
  var getGroupById = function(id) {\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      if (groups[i].id == id) {\n
        return groups[i];\n
      }\n
    }\n
    return false;\n
  };\n
  var getGroupByRowAndLevel = function(row, level) {\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      if (groups[i].level == level && groups[i].rows && groups[i].rows.indexOf(row) > -1) {\n
        return groups[i];\n
      }\n
    }\n
    return false;\n
  };\n
  var getGroupByColAndLevel = function(col, level) {\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      if (groups[i].level == level && groups[i].cols && groups[i].cols.indexOf(col) > -1) {\n
        return groups[i];\n
      }\n
    }\n
    return false;\n
  };\n
  var getColGroups = function() {\n
    var result = [];\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      if (Array.isArray(groups[i][\'cols\'])) {\n
        result.push(groups[i]);\n
      }\n
    }\n
    return result;\n
  };\n
  var getColGroupsByLevel = function(level) {\n
    var result = [];\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      if (groups[i][\'cols\'] && groups[i][\'level\'] === level) {\n
        result.push(groups[i]);\n
      }\n
    }\n
    return result;\n
  };\n
  var getRowGroups = function() {\n
    var result = [];\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      if (Array.isArray(groups[i][\'rows\'])) {\n
        result.push(groups[i]);\n
      }\n
    }\n
    return result;\n
  };\n
  var getRowGroupsByLevel = function(level) {\n
    var result = [];\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      if (groups[i][\'rows\'] && groups[i][\'level\'] === level) {\n
        result.push(groups[i]);\n
      }\n
    }\n
    return result;\n
  };\n
  var getLastLevelColsInRange = function(rangeGroups) {\n
    var level = 0;\n
    if (rangeGroups.length) {\n
      rangeGroups.forEach(function(items) {\n
        items = items.filter(function(item) {\n
          return item[\'cols\'];\n
        });\n
        if (items.length) {\n
          var sortedGroup = items.sort(compare(\'level\', \'desc\')),\n
              lastLevel = sortedGroup[0].level;\n
          if (level < lastLevel) {\n
            level = lastLevel;\n
          }\n
        }\n
      });\n
    }\n
    return level;\n
  };\n
  var getLastLevelRowsInRange = function(rangeGroups) {\n
    var level = 0;\n
    if (rangeGroups.length) {\n
      rangeGroups.forEach(function(items) {\n
        items = items.filter(function(item) {\n
          return item[\'rows\'];\n
        });\n
        if (items.length) {\n
          var sortedGroup = items.sort(compare(\'level\', \'desc\')),\n
              lastLevel = sortedGroup[0].level;\n
          if (level < lastLevel) {\n
            level = lastLevel;\n
          }\n
        }\n
      });\n
    }\n
    return level;\n
  };\n
  var groupCols = function(from, to) {\n
    var rangeGroups = getRangeGroups("cols", from, to),\n
        lastLevel = getLastLevelColsInRange(rangeGroups.groups);\n
    if (lastLevel === levels.cols) {\n
      levels.cols++;\n
    } else if (lastLevel > levels.cols) {\n
      levels.cols = lastLevel + 1;\n
    }\n
    if (!counters.cols) {\n
      counters.cols = getColGroups().length;\n
    }\n
    counters.cols++;\n
    groups.push({\n
      id: \'c\' + counters.cols,\n
      level: lastLevel + 1,\n
      cols: range(from, to),\n
      hidden: 0\n
    });\n
  };\n
  var groupRows = function(from, to) {\n
    var rangeGroups = getRangeGroups("rows", from, to),\n
        lastLevel = getLastLevelRowsInRange(rangeGroups.groups);\n
    levels.rows = Math.max(levels.rows, lastLevel + 1);\n
    if (!counters.rows) {\n
      counters.rows = getRowGroups().length;\n
    }\n
    counters.rows++;\n
    groups.push({\n
      id: \'r\' + counters.rows,\n
      level: lastLevel + 1,\n
      rows: range(from, to),\n
      hidden: 0\n
    });\n
  };\n
  var showHideGroups = function(hidden, groups) {\n
    var level;\n
    for (var i = 0,\n
        groupsLength = groups.length; i < groupsLength; i++) {\n
      groups[i].hidden = hidden;\n
      level = groups[i].level;\n
      if (!hiddenRows[level]) {\n
        hiddenRows[level] = [];\n
      }\n
      if (!hiddenCols[level]) {\n
        hiddenCols[level] = [];\n
      }\n
      if (groups[i].rows) {\n
        for (var j = 0,\n
            rowsLength = groups[i].rows.length; j < rowsLength; j++) {\n
          if (hidden > 0) {\n
            hiddenRows[level][groups[i].rows[j]] = true;\n
          } else {\n
            hiddenRows[level][groups[i].rows[j]] = void 0;\n
          }\n
        }\n
      } else if (groups[i].cols) {\n
        for (var j = 0,\n
            colsLength = groups[i].cols.length; j < colsLength; j++) {\n
          if (hidden > 0) {\n
            hiddenCols[level][groups[i].cols[j]] = true;\n
          } else {\n
            hiddenCols[level][groups[i].cols[j]] = void 0;\n
          }\n
        }\n
      }\n
    }\n
  };\n
  var nextIndexSharesLevel = function(dimension, currentPosition, level, currentGroupId) {\n
    var nextCellGroupId,\n
        levelsByOrder;\n
    switch (dimension) {\n
      case \'rows\':\n
        nextCellGroupId = getGroupByRowAndLevel(currentPosition + 1, level).id;\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByRows();\n
        break;\n
      case \'cols\':\n
        nextCellGroupId = getGroupByColAndLevel(currentPosition + 1, level).id;\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByCols();\n
        break;\n
    }\n
    return !!(levelsByOrder[currentPosition + 1] && levelsByOrder[currentPosition + 1].indexOf(level) > -1 && currentGroupId == nextCellGroupId);\n
  };\n
  var previousIndexSharesLevel = function(dimension, currentPosition, level, currentGroupId) {\n
    var previousCellGroupId,\n
        levelsByOrder;\n
    switch (dimension) {\n
      case \'rows\':\n
        previousCellGroupId = getGroupByRowAndLevel(currentPosition - 1, level).id;\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByRows();\n
        break;\n
      case \'cols\':\n
        previousCellGroupId = getGroupByColAndLevel(currentPosition - 1, level).id;\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByCols();\n
        break;\n
    }\n
    return !!(levelsByOrder[currentPosition - 1] && levelsByOrder[currentPosition - 1].indexOf(level) > -1 && currentGroupId == previousCellGroupId);\n
  };\n
  var isLastIndexOfTheLine = function(dimension, index, level, currentGroupId) {\n
    if (index === 0) {\n
      return false;\n
    }\n
    var levelsByOrder,\n
        entriesLength,\n
        previousSharesLevel = previousIndexSharesLevel(dimension, index, level, currentGroupId),\n
        nextSharesLevel = nextIndexSharesLevel(dimension, index, level, currentGroupId),\n
        nextIsHidden = false;\n
    switch (dimension) {\n
      case \'rows\':\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByRows();\n
        entriesLength = instance.countRows();\n
        for (var i = 0; i <= levels.rows; i++) {\n
          if (hiddenRows[i] && hiddenRows[i][index + 1]) {\n
            nextIsHidden = true;\n
            break;\n
          }\n
        }\n
        break;\n
      case \'cols\':\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByCols();\n
        entriesLength = instance.countCols();\n
        for (var i = 0; i <= levels.cols; i++) {\n
          if (hiddenCols[i] && hiddenCols[i][index + 1]) {\n
            nextIsHidden = true;\n
            break;\n
          }\n
        }\n
        break;\n
    }\n
    if (previousSharesLevel) {\n
      if (index == entriesLength - 1) {\n
        return true;\n
      } else if (!nextSharesLevel || (nextSharesLevel && nextIsHidden)) {\n
        return true;\n
      } else if (!levelsByOrder[index + 1]) {\n
        return true;\n
      }\n
    }\n
    return false;\n
  };\n
  var isLastHidden = function(dataType) {\n
    var levelAmount;\n
    switch (dataType) {\n
      case \'rows\':\n
        levelAmount = levels.rows;\n
        for (var j = 0; j <= levelAmount; j++) {\n
          if (hiddenRows[j] && hiddenRows[j][instance.countRows() - 1]) {\n
            return true;\n
          }\n
        }\n
        break;\n
      case \'cols\':\n
        levelAmount = levels.cols;\n
        for (var j = 0; j <= levelAmount; j++) {\n
          if (hiddenCols[j] && hiddenCols[j][instance.countCols() - 1]) {\n
            return true;\n
          }\n
        }\n
        break;\n
    }\n
    return false;\n
  };\n
  var isFirstIndexOfTheLine = function(dimension, index, level, currentGroupId) {\n
    var levelsByOrder,\n
        entriesLength,\n
        currentGroup = getGroupById(currentGroupId),\n
        previousAreHidden = false,\n
        arePreviousHidden = function(dimension) {\n
          var hidden = false,\n
              hiddenArr = dimension == \'rows\' ? hiddenRows : hiddenCols;\n
          for (var i = 0; i <= levels[dimension]; i++) {\n
            tempInd = index;\n
            while (currentGroup[dimension].indexOf(tempInd) > -1) {\n
              hidden = !!(hiddenArr[i] && hiddenArr[i][tempInd]);\n
              tempInd--;\n
            }\n
            if (hidden) {\n
              break;\n
            }\n
          }\n
          return hidden;\n
        },\n
        previousSharesLevel = previousIndexSharesLevel(dimension, index, level, currentGroupId),\n
        nextSharesLevel = nextIndexSharesLevel(dimension, index, level, currentGroupId),\n
        tempInd;\n
    switch (dimension) {\n
      case \'rows\':\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByRows();\n
        entriesLength = instance.countRows();\n
        previousAreHidden = arePreviousHidden(dimension);\n
        break;\n
      case \'cols\':\n
        levelsByOrder = Handsontable.Grouping.getGroupLevelsByCols();\n
        entriesLength = instance.countCols();\n
        previousAreHidden = arePreviousHidden(dimension);\n
        break;\n
    }\n
    if (index == entriesLength - 1) {\n
      return false;\n
    } else if (index === 0) {\n
      if (nextSharesLevel) {\n
        return true;\n
      }\n
    } else if (!previousSharesLevel || (previousSharesLevel && previousAreHidden)) {\n
      if (nextSharesLevel) {\n
        return true;\n
      }\n
    } else if (!levelsByOrder[index - 1]) {\n
      if (nextSharesLevel) {\n
        return true;\n
      }\n
    }\n
    return false;\n
  };\n
  var addGroupExpander = function(dataType, index, level, id, elem) {\n
    var previousIndexGroupId;\n
    switch (dataType) {\n
      case \'rows\':\n
        previousIndexGroupId = getGroupByRowAndLevel(index - 1, level).id;\n
        break;\n
      case \'cols\':\n
        previousIndexGroupId = getGroupByColAndLevel(index - 1, level).id;\n
        break;\n
    }\n
    if (!previousIndexGroupId) {\n
      return null;\n
    }\n
    if (index > 0) {\n
      if (previousIndexSharesLevel(dataType, index - 1, level, previousIndexGroupId) && previousIndexGroupId != id) {\n
        var expanderButton = document.createElement(\'DIV\');\n
        addClass(expanderButton, classes.expandButton);\n
        expanderButton.id = \'htExpand-\' + previousIndexGroupId;\n
        expanderButton.appendChild(document.createTextNode(\'+\'));\n
        expanderButton.setAttribute(\'data-level\', level);\n
        expanderButton.setAttribute(\'data-type\', dataType);\n
        expanderButton.setAttribute(\'data-hidden\', "1");\n
        elem.appendChild(expanderButton);\n
        return expanderButton;\n
      }\n
    }\n
    return null;\n
  };\n
  var isCollapsed = function(currentPosition) {\n
    var rowGroups = getRowGroups(),\n
        colGroups = getColGroups();\n
    for (var i = 0,\n
        rowGroupsCount = rowGroups.length; i < rowGroupsCount; i++) {\n
      if (rowGroups[i].rows.indexOf(currentPosition.row) > -1 && rowGroups[i].hidden) {\n
        return true;\n
      }\n
    }\n
    if (currentPosition.col === null) {\n
      return false;\n
    }\n
    for (var i = 0,\n
        colGroupsCount = colGroups.length; i < colGroupsCount; i++) {\n
      if (colGroups[i].cols.indexOf(currentPosition.col) > -1 && colGroups[i].hidden) {\n
        return true;\n
      }\n
    }\n
    return false;\n
  };\n
  return {\n
    getGroups: function() {\n
      return groups;\n
    },\n
    getLevels: function() {\n
      return levels;\n
    },\n
    instance: instance,\n
    baseSpareRows: instance.getSettings().minSpareRows,\n
    baseSpareCols: instance.getSettings().minSpareCols,\n
    getRowGroups: getRowGroups,\n
    getColGroups: getColGroups,\n
    init: function() {\n
      var groupsSetting = instance.getSettings().groups;\n
      if (groupsSetting) {\n
        if (Array.isArray(groupsSetting)) {\n
          Handsontable.Grouping.initGroups(groupsSetting);\n
        }\n
      }\n
    },\n
    initGroups: function(initialGroups) {\n
      var that = this;\n
      groups = [];\n
      initialGroups.forEach(function(item) {\n
        var _group = [],\n
            isRow = false,\n
            isCol = false;\n
        if (Array.isArray(item.rows)) {\n
          _group = item.rows;\n
          isRow = true;\n
        } else if (Array.isArray(item.cols)) {\n
          _group = item.cols;\n
          isCol = true;\n
        }\n
        var from = _group[0],\n
            to = _group[_group.length - 1];\n
        if (isRow) {\n
          groupRows(from, to);\n
        } else if (isCol) {\n
          groupCols(from, to);\n
        }\n
      });\n
    },\n
    resetGroups: function() {\n
      groups = [];\n
      counters = {\n
        rows: 0,\n
        cols: 0\n
      };\n
      levels = {\n
        rows: 0,\n
        cols: 0\n
      };\n
      var allOccurrences;\n
      for (var i in classes) {\n
        if (typeof classes[i] != \'function\') {\n
          allOccurrences = document.querySelectorAll(\'.\' + classes[i]);\n
          for (var j = 0,\n
              occurrencesLength = allOccurrences.length; j < occurrencesLength; j++) {\n
            removeClass(allOccurrences[j], classes[i]);\n
          }\n
        }\n
      }\n
      var otherClasses = [\'htGroupColClosest\', \'htGroupCol\'];\n
      for (var i = 0,\n
          otherClassesLength = otherClasses.length; i < otherClassesLength; i++) {\n
        allOccurrences = document.querySelectorAll(\'.\' + otherClasses[i]);\n
        for (var j = 0,\n
            occurrencesLength = allOccurrences.length; j < occurrencesLength; j++) {\n
          removeClass(allOccurrences[j], otherClasses[i]);\n
        }\n
      }\n
    },\n
    updateGroups: function() {\n
      var groupSettings = this.getSettings().groups;\n
      Handsontable.Grouping.resetGroups();\n
      Handsontable.Grouping.initGroups(groupSettings);\n
    },\n
    afterGetRowHeader: function(row, TH) {\n
      if (!TH.parentNode) {\n
        return;\n
      }\n
      var currentRowHidden = false;\n
      for (var i = 0,\n
          levels = hiddenRows.length; i < levels; i++) {\n
        if (hiddenRows[i] && hiddenRows[i][row] === true) {\n
          currentRowHidden = true;\n
        }\n
      }\n
      if (currentRowHidden) {\n
        addClass(TH.parentNode, \'hidden\');\n
      } else if (!currentRowHidden && hasClass(TH.parentNode, \'hidden\')) {\n
        removeClass(TH.parentNode, \'hidden\');\n
      }\n
    },\n
    afterGetColHeader: function(col, TH) {\n
      var rowHeaders = this.view.wt.wtSettings.getSetting(\'rowHeaders\').length,\n
          thisColgroup = instance.rootElement.querySelectorAll(\'colgroup col:nth-child(\' + parseInt(col + rowHeaders + 1, 10) + \')\');\n
      if (thisColgroup.length === 0) {\n
        return;\n
      }\n
      var currentColHidden = false;\n
      for (var i = 0,\n
          levels = hiddenCols.length; i < levels; i++) {\n
        if (hiddenCols[i] && hiddenCols[i][col] === true) {\n
          currentColHidden = true;\n
        }\n
      }\n
      if (currentColHidden) {\n
        for (var i = 0,\n
            colsAmount = thisColgroup.length; i < colsAmount; i++) {\n
          addClass(thisColgroup[i], \'hidden\');\n
        }\n
      } else if (!currentColHidden && hasClass(thisColgroup[0], \'hidden\')) {\n
        for (var i = 0,\n
            colsAmount = thisColgroup.length; i < colsAmount; i++) {\n
          removeClass(thisColgroup[i], \'hidden\');\n
        }\n
      }\n
    },\n
    groupIndicatorsFactory: function(renderersArr, direction) {\n
      var groupsLevelsList,\n
          getCurrentLevel,\n
          getCurrentGroupId,\n
          dataType,\n
          getGroupByIndexAndLevel,\n
          headersType,\n
          currentHeaderModifier,\n
          createLevelTriggers;\n
      switch (direction) {\n
        case \'horizontal\':\n
          groupsLevelsList = Handsontable.Grouping.getGroupLevelsByCols();\n
          getCurrentLevel = function(elem) {\n
            return Array.prototype.indexOf.call(elem.parentNode.parentNode.childNodes, elem.parentNode) + 1;\n
          };\n
          getCurrentGroupId = function(col, level) {\n
            return getGroupByColAndLevel(col, level).id;\n
          };\n
          dataType = \'cols\';\n
          getGroupByIndexAndLevel = function(col, level) {\n
            return getGroupByColAndLevel(col - 1, level);\n
          };\n
          headersType = "columnHeaders";\n
          currentHeaderModifier = function(headerRenderers) {\n
            if (headerRenderers.length === 1) {\n
              var oldFn = headerRenderers[0];\n
              headerRenderers[0] = function(index, elem, level) {\n
                if (index < -1) {\n
                  makeGroupIndicatorsForLevel()(index, elem, level);\n
                } else {\n
                  removeClass(elem, classes.groupIndicatorContainer);\n
                  oldFn(index, elem, level);\n
                }\n
              };\n
            }\n
            return function() {\n
              return headerRenderers;\n
            };\n
          };\n
          createLevelTriggers = true;\n
          break;\n
        case \'vertical\':\n
          groupsLevelsList = Handsontable.Grouping.getGroupLevelsByRows();\n
          getCurrentLevel = function(elem) {\n
            return elementIndex(elem) + 1;\n
          };\n
          getCurrentGroupId = function(row, level) {\n
            return getGroupByRowAndLevel(row, level).id;\n
          };\n
          dataType = \'rows\';\n
          getGroupByIndexAndLevel = function(row, level) {\n
            return getGroupByRowAndLevel(row - 1, level);\n
          };\n
          headersType = "rowHeaders";\n
          currentHeaderModifier = function(headerRenderers) {\n
            return headerRenderers;\n
          };\n
          break;\n
      }\n
      var createButton = function(parent) {\n
        var button = document.createElement(\'div\');\n
        parent.appendChild(button);\n
        return {\n
          button: button,\n
          addClass: function(className) {\n
            addClass(button, className);\n
          }\n
        };\n
      };\n
      var makeGroupIndicatorsForLevel = function() {\n
        var directionClassname = direction.charAt(0).toUpperCase() + direction.slice(1);\n
        return function(index, elem, level) {\n
          level++;\n
          var child,\n
              collapseButton;\n
          while (child = elem.lastChild) {\n
            elem.removeChild(child);\n
          }\n
          addClass(elem, classes.groupIndicatorContainer);\n
          var currentGroupId = getCurrentGroupId(index, level);\n
          if (index > -1 && (groupsLevelsList[index] && groupsLevelsList[index].indexOf(level) > -1)) {\n
            collapseButton = createButton(elem);\n
            collapseButton.addClass(classes.groupIndicator(directionClassname));\n
            if (isFirstIndexOfTheLine(dataType, index, level, currentGroupId)) {\n
              collapseButton.addClass(classes.groupStart);\n
            }\n
            if (isLastIndexOfTheLine(dataType, index, level, currentGroupId)) {\n
              collapseButton.button.appendChild(document.createTextNode(\'-\'));\n
              collapseButton.addClass(classes.collapseButton);\n
              collapseButton.button.id = classes.collapseGroupId(currentGroupId);\n
              collapseButton.button.setAttribute(\'data-level\', level);\n
              collapseButton.button.setAttribute(\'data-type\', dataType);\n
            }\n
          }\n
          if (createLevelTriggers) {\n
            var rowInd = elementIndex(elem.parentNode);\n
            if (index === -1 || (index < -1 && rowInd === Handsontable.Grouping.getLevels().cols + 1) || (rowInd === 0 && Handsontable.Grouping.getLevels().cols === 0)) {\n
              collapseButton = createButton(elem);\n
              collapseButton.addClass(classes.levelTrigger);\n
              if (index === -1) {\n
                collapseButton.button.id = classes.collapseFromLevel("Cols", level);\n
                collapseButton.button.appendChild(document.createTextNode(level));\n
              } else if (index < -1 && rowInd === Handsontable.Grouping.getLevels().cols + 1 || (rowInd === 0 && Handsontable.Grouping.getLevels().cols === 0)) {\n
                var colInd = elementIndex(elem) + 1;\n
                collapseButton.button.id = classes.collapseFromLevel("Rows", colInd);\n
                collapseButton.button.appendChild(document.createTextNode(colInd));\n
              }\n
            }\n
          }\n
          var expanderButton = addGroupExpander(dataType, index, level, currentGroupId, elem);\n
          if (index > 0) {\n
            var previousGroupObj = getGroupByIndexAndLevel(index - 1, level);\n
            if (expanderButton && previousGroupObj.hidden) {\n
              addClass(expanderButton, classes.clickable);\n
            }\n
          }\n
          updateHeaderWidths();\n
        };\n
      };\n
      renderersArr = currentHeaderModifier(renderersArr);\n
      if (counters[dataType] > 0) {\n
        for (var i = 0; i < levels[dataType] + 1; i++) {\n
          if (!Array.isArray(renderersArr)) {\n
            renderersArr = typeof renderersArr === \'function\' ? renderersArr() : new Array(renderersArr);\n
          }\n
          renderersArr.unshift(makeGroupIndicatorsForLevel());\n
        }\n
      }\n
    },\n
    getGroupLevelsByRows: function() {\n
      var rowGroups = getRowGroups(),\n
          result = [];\n
      for (var i = 0,\n
          groupsLength = rowGroups.length; i < groupsLength; i++) {\n
        if (rowGroups[i].rows) {\n
          for (var j = 0,\n
              groupRowsLength = rowGroups[i].rows.length; j < groupRowsLength; j++) {\n
            if (!result[rowGroups[i].rows[j]]) {\n
              result[rowGroups[i].rows[j]] = [];\n
            }\n
            result[rowGroups[i].rows[j]].push(rowGroups[i].level);\n
          }\n
        }\n
      }\n
      return result;\n
    },\n
    getGroupLevelsByCols: function() {\n
      var colGroups = getColGroups(),\n
          result = [];\n
      for (var i = 0,\n
          groupsLength = colGroups.length; i < groupsLength; i++) {\n
        if (colGroups[i].cols) {\n
          for (var j = 0,\n
              groupColsLength = colGroups[i].cols.length; j < groupColsLength; j++) {\n
            if (!result[colGroups[i].cols[j]]) {\n
              result[colGroups[i].cols[j]] = [];\n
            }\n
            result[colGroups[i].cols[j]].push(colGroups[i].level);\n
          }\n
        }\n
      }\n
      return result;\n
    },\n
    toggleGroupVisibility: function(event, coords, TD) {\n
      if (hasClass(event.target, classes.expandButton) || hasClass(event.target, classes.collapseButton) || hasClass(event.target, classes.levelTrigger)) {\n
        var element = event.target,\n
            elemIdSplit = element.id.split(\'-\');\n
        var groups = [],\n
            id,\n
            level,\n
            type,\n
            hidden;\n
        var prepareGroupData = function(componentElement) {\n
          if (componentElement) {\n
            element = componentElement;\n
          }\n
          elemIdSplit = element.id.split(\'-\');\n
          id = elemIdSplit[1];\n
          level = parseInt(element.getAttribute(\'data-level\'), 10);\n
          type = element.getAttribute(\'data-type\');\n
          hidden = parseInt(element.getAttribute(\'data-hidden\'));\n
          if (isNaN(hidden)) {\n
            hidden = 1;\n
          } else {\n
            hidden = (hidden ? 0 : 1);\n
          }\n
          element.setAttribute(\'data-hidden\', hidden.toString());\n
          groups.push(getGroupById(id));\n
        };\n
        if (element.className.indexOf(classes.levelTrigger) > -1) {\n
          var groupsInLevel,\n
              groupsToExpand = [],\n
              groupsToCollapse = [],\n
              levelType = element.id.indexOf("Rows") > -1 ? "rows" : "cols";\n
          for (var i = 1,\n
              levelsCount = levels[levelType]; i <= levelsCount; i++) {\n
            groupsInLevel = levelType == "rows" ? getRowGroupsByLevel(i) : getColGroupsByLevel(i);\n
            if (i >= parseInt(elemIdSplit[1], 10)) {\n
              for (var j = 0,\n
                  groupCount = groupsInLevel.length; j < groupCount; j++) {\n
                groupsToCollapse.push(groupsInLevel[j]);\n
              }\n
            } else {\n
              for (var j = 0,\n
                  groupCount = groupsInLevel.length; j < groupCount; j++) {\n
                groupsToExpand.push(groupsInLevel[j]);\n
              }\n
            }\n
          }\n
          showHideGroups(true, groupsToCollapse);\n
          showHideGroups(false, groupsToExpand);\n
        } else {\n
          prepareGroupData();\n
          showHideGroups(hidden, groups);\n
        }\n
        type = type || levelType;\n
        var lastHidden = isLastHidden(type),\n
            typeUppercase = type.charAt(0).toUpperCase() + type.slice(1),\n
            spareElements = Handsontable.Grouping[\'baseSpare\' + typeUppercase];\n
        if (lastHidden) {\n
          if (spareElements == 0) {\n
            instance.alter(\'insert_\' + type.slice(0, -1), instance[\'count\' + typeUppercase]());\n
            Handsontable.Grouping["dummy" + type.slice(0, -1)] = true;\n
          }\n
        } else {\n
          if (spareElements == 0) {\n
            if (Handsontable.Grouping["dummy" + type.slice(0, -1)]) {\n
              instance.alter(\'remove_\' + type.slice(0, -1), instance[\'count\' + typeUppercase]() - 1);\n
              Handsontable.Grouping["dummy" + type.slice(0, -1)] = false;\n
            }\n
          }\n
        }\n
        instance.render();\n
        stopImmediatePropagation(event);\n
      }\n
    },\n
    modifySelectionFactory: function(position) {\n
      var instance = this.instance;\n
      var currentlySelected,\n
          nextPosition = new WalkontableCellCoords(0, 0),\n
          nextVisible = function(direction, currentPosition) {\n
            var updateDelta = 0;\n
            switch (direction) {\n
              case \'down\':\n
                while (isCollapsed(currentPosition)) {\n
                  updateDelta++;\n
                  currentPosition.row += 1;\n
                }\n
                break;\n
              case \'up\':\n
                while (isCollapsed(currentPosition)) {\n
                  updateDelta--;\n
                  currentPosition.row -= 1;\n
                }\n
                break;\n
              case \'right\':\n
                while (isCollapsed(currentPosition)) {\n
                  updateDelta++;\n
                  currentPosition.col += 1;\n
                }\n
                break;\n
              case \'left\':\n
                while (isCollapsed(currentPosition)) {\n
                  updateDelta--;\n
                  currentPosition.col -= 1;\n
                }\n
                break;\n
            }\n
            return updateDelta;\n
          },\n
          updateDelta = function(delta, nextPosition) {\n
            if (delta.row > 0) {\n
              if (isCollapsed(nextPosition)) {\n
                delta.row += nextVisible(\'down\', nextPosition);\n
              }\n
            } else if (delta.row < 0) {\n
              if (isCollapsed(nextPosition)) {\n
                delta.row += nextVisible(\'up\', nextPosition);\n
              }\n
            }\n
            if (delta.col > 0) {\n
              if (isCollapsed(nextPosition)) {\n
                delta.col += nextVisible(\'right\', nextPosition);\n
              }\n
            } else if (delta.col < 0) {\n
              if (isCollapsed(nextPosition)) {\n
                delta.col += nextVisible(\'left\', nextPosition);\n
              }\n
            }\n
          };\n
      switch (position) {\n
        case \'start\':\n
          return function(delta) {\n
            currentlySelected = instance.getSelected();\n
            nextPosition.row = currentlySelected[0] + delta.row;\n
            nextPosition.col = currentlySelected[1] + delta.col;\n
            updateDelta(delta, nextPosition);\n
          };\n
          break;\n
        case \'end\':\n
          return function(delta) {\n
            currentlySelected = instance.getSelected();\n
            nextPosition.row = currentlySelected[2] + delta.row;\n
            nextPosition.col = currentlySelected[3] + delta.col;\n
            updateDelta(delta, nextPosition);\n
          };\n
          break;\n
      }\n
    },\n
    modifyRowHeight: function(height, row) {\n
      if (instance.view.wt.wtTable.rowFilter && isCollapsed({\n
        row: row,\n
        col: null\n
      })) {\n
        return 0;\n
      }\n
    },\n
    validateGroups: function() {\n
      var areRangesOverlapping = function(a, b) {\n
        if ((a[0] < b[0] && a[1] < b[1] && b[0] <= a[1]) || (a[0] > b[0] && b[1] < a[1] && a[0] <= b[1])) {\n
          return true;\n
        }\n
      };\n
      var configGroups = instance.getSettings().groups,\n
          cols = [],\n
          rows = [];\n
      for (var i = 0,\n
          groupsLength = configGroups.length; i < groupsLength; i++) {\n
        if (configGroups[i].rows) {\n
          if (configGroups[i].rows.length === 1) {\n
            throw new Error("Grouping error:  Group {" + configGroups[i].rows[0] + "} is invalid. Cannot define single-entry groups.");\n
            return false;\n
          } else if (configGroups[i].rows.length === 0) {\n
            throw new Error("Grouping error:  Cannot define empty groups.");\n
            return false;\n
          }\n
          rows.push(configGroups[i].rows);\n
          for (var j = 0,\n
              rowsLength = rows.length; j < rowsLength; j++) {\n
            if (areRangesOverlapping(configGroups[i].rows, rows[j])) {\n
              throw new Error("Grouping error:  ranges {" + configGroups[i].rows[0] + ", " + configGroups[i].rows[1] + "} and {" + rows[j][0] + ", " + rows[j][1] + "} are overlapping.");\n
              return false;\n
            }\n
          }\n
        } else if (configGroups[i].cols) {\n
          if (configGroups[i].cols.length === 1) {\n
            throw new Error("Grouping error:  Group {" + configGroups[i].cols[0] + "} is invalid. Cannot define single-entry groups.");\n
            return false;\n
          } else if (configGroups[i].cols.length === 0) {\n
            throw new Error("Grouping error:  Cannot define empty groups.");\n
            return false;\n
          }\n
          cols.push(configGroups[i].cols);\n
          for (var j = 0,\n
              colsLength = cols.length; j < colsLength; j++) {\n
            if (areRangesOverlapping(configGroups[i].cols, cols[j])) {\n
              throw new Error("Grouping error:  ranges {" + configGroups[i].cols[0] + ", " + configGroups[i].cols[1] + "} and {" + cols[j][0] + ", " + cols[j][1] + "} are overlapping.");\n
              return false;\n
            }\n
          }\n
        }\n
      }\n
      return true;\n
    },\n
    afterGetRowHeaderRenderers: function(arr) {\n
      Handsontable.Grouping.groupIndicatorsFactory(arr, \'vertical\');\n
    },\n
    afterGetColumnHeaderRenderers: function(arr) {\n
      Handsontable.Grouping.groupIndicatorsFactory(arr, \'horizontal\');\n
    },\n
    hookProxy: function(fn, arg) {\n
      return function() {\n
        if (instance.getSettings().groups) {\n
          return arg ? Handsontable.Grouping[fn](arg).apply(this, arguments) : Handsontable.Grouping[fn].apply(this, arguments);\n
        } else {\n
          return void 0;\n
        }\n
      };\n
    }\n
  };\n
}\n
Grouping.prototype.beforeInit = function() {};\n
var init = function() {\n
  var instance = this,\n
      groupingSetting = !!(instance.getSettings().groups);\n
  if (groupingSetting) {\n
    var headerUpdates = {};\n
    Handsontable.Grouping = new Grouping(instance);\n
    if (!instance.getSettings().rowHeaders) {\n
      headerUpdates.rowHeaders = true;\n
    }\n
    if (!instance.getSettings().colHeaders) {\n
      headerUpdates.colHeaders = true;\n
    }\n
    if (headerUpdates.colHeaders || headerUpdates.rowHeaders) {\n
      instance.updateSettings(headerUpdates);\n
    }\n
    var groupConfigValid = Handsontable.Grouping.validateGroups();\n
    if (!groupConfigValid) {\n
      return;\n
    }\n
    instance.addHook(\'beforeInit\', Handsontable.Grouping.hookProxy(\'init\'));\n
    instance.addHook(\'afterUpdateSettings\', Handsontable.Grouping.hookProxy(\'updateGroups\'));\n
    instance.addHook(\'afterGetColumnHeaderRenderers\', Handsontable.Grouping.hookProxy(\'afterGetColumnHeaderRenderers\'));\n
    instance.addHook(\'afterGetRowHeaderRenderers\', Handsontable.Grouping.hookProxy(\'afterGetRowHeaderRenderers\'));\n
    instance.addHook(\'afterGetRowHeader\', Handsontable.Grouping.hookProxy(\'afterGetRowHeader\'));\n
    instance.addHook(\'afterGetColHeader\', Handsontable.Grouping.hookProxy(\'afterGetColHeader\'));\n
    instance.addHook(\'beforeOnCellMouseDown\', Handsontable.Grouping.hookProxy(\'toggleGroupVisibility\'));\n
    instance.addHook(\'modifyTransformStart\', Handsontable.Grouping.hookProxy(\'modifySelectionFactory\', \'start\'));\n
    instance.addHook(\'modifyTransformEnd\', Handsontable.Grouping.hookProxy(\'modifySelectionFactory\', \'end\'));\n
    instance.addHook(\'modifyRowHeight\', Handsontable.Grouping.hookProxy(\'modifyRowHeight\'));\n
  }\n
};\n
var updateHeaderWidths = function() {\n
  var colgroups = document.querySelectorAll(\'colgroup\');\n
  for (var i = 0,\n
      colgroupsLength = colgroups.length; i < colgroupsLength; i++) {\n
    var rowHeaders = colgroups[i].querySelectorAll(\'col.rowHeader\');\n
    if (rowHeaders.length === 0) {\n
      return;\n
    }\n
    for (var j = 0,\n
        rowHeadersLength = rowHeaders.length + 1; j < rowHeadersLength; j++) {\n
      if (rowHeadersLength == 2) {\n
        return;\n
      }\n
      if (j < Handsontable.Grouping.getLevels().rows + 1) {\n
        if (j == Handsontable.Grouping.getLevels().rows) {\n
          addClass(rowHeaders[j], \'htGroupColClosest\');\n
        } else {\n
          addClass(rowHeaders[j], \'htGroupCol\');\n
        }\n
      }\n
    }\n
  }\n
};\n
Handsontable.hooks.add(\'beforeInit\', init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', function() {\n
  if (this.getSettings().groups && !Handsontable.Grouping) {\n
    init.call(this, arguments);\n
  } else if (!this.getSettings().groups && Handsontable.Grouping) {\n
    Handsontable.Grouping.resetGroups();\n
    Handsontable.Grouping = void 0;\n
  }\n
});\n
Handsontable.plugins.Grouping = Grouping;\n
\n
//# \n
},{"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],75:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ManualColumnFreeze: {get: function() {\n
      return ManualColumnFreeze;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__95_base__,\n
    $___46__46__47__46__46__47_plugins__;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var ManualColumnFreeze = function ManualColumnFreeze(hotInstance) {\n
  $traceurRuntime.superConstructor($ManualColumnFreeze).call(this, hotInstance);\n
};\n
var $ManualColumnFreeze = ManualColumnFreeze;\n
($traceurRuntime.createClass)(ManualColumnFreeze, {\n
  enablePlugin: function() {\n
    var $__2 = this;\n
    if (this.enabled) {\n
      return;\n
    }\n
    this.addHook(\'modifyCol\', (function(col) {\n
      return $__2.onModifyCol(col);\n
    }));\n
    this.addHook(\'afterContextMenuDefaultOptions\', (function(defaultOptions) {\n
      return $__2.addContextMenuEntry(defaultOptions);\n
    }));\n
    $traceurRuntime.superGet(this, $ManualColumnFreeze.prototype, "enablePlugin").call(this);\n
  },\n
  isEnabled: function() {\n
    return !!this.hot.getSettings().manualColumnFreeze;\n
  },\n
  init: function() {\n
    $traceurRuntime.superGet(this, $ManualColumnFreeze.prototype, "init").call(this);\n
    if (typeof this.hot.manualColumnPositionsPluginUsages !== \'undefined\') {\n
      this.hot.manualColumnPositionsPluginUsages.push(\'manualColumnFreeze\');\n
    } else {\n
      this.hot.manualColumnPositionsPluginUsages = [\'manualColumnFreeze\'];\n
    }\n
    this.fixedColumnsCount = this.hot.getSettings().fixedColumnsLeft;\n
  },\n
  onModifyCol: function(col) {\n
    if (this.hot.manualColumnPositionsPluginUsages.length > 1) {\n
      return col;\n
    }\n
    return this.getModifiedColumnIndex(col);\n
  },\n
  getModifiedColumnIndex: function(col) {\n
    return this.hot.manualColumnPositions[col];\n
  },\n
  addContextMenuEntry: function(defaultOptions) {\n
    var _this = this;\n
    defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR, {\n
      key: \'freeze_column\',\n
      name: function() {\n
        var selectedColumn = _this.hot.getSelected()[1];\n
        if (selectedColumn > _this.fixedColumnsCount - 1) {\n
          return \'Freeze this column\';\n
        } else {\n
          return \'Unfreeze this column\';\n
        }\n
      },\n
      disabled: function() {\n
        var selection = _this.hot.getSelected();\n
        return selection[1] !== selection[3];\n
      },\n
      callback: function() {\n
        var selectedColumn = _this.hot.getSelected()[1];\n
        if (selectedColumn > _this.fixedColumnsCount - 1) {\n
          _this.freezeColumn(selectedColumn);\n
        } else {\n
          _this.unfreezeColumn(selectedColumn);\n
        }\n
      }\n
    });\n
  },\n
  freezeColumn: function(col) {\n
    if (col <= this.fixedColumnsCount - 1) {\n
      return;\n
    }\n
    var modifiedColumn = this.getModifiedColumnIndex(col) || col;\n
    this.checkPositionData(modifiedColumn);\n
    this.modifyColumnOrder(modifiedColumn, col, null, \'freeze\');\n
    this.addFixedColumn();\n
    this.hot.view.wt.wtOverlays.leftOverlay.refresh();\n
    this.hot.view.wt.wtOverlays.adjustElementsSize();\n
  },\n
  unfreezeColumn: function(col) {\n
    if (col > this.fixedColumnsCount - 1) {\n
      return;\n
    }\n
    var returnCol = this.getBestColumnReturnPosition(col);\n
    var modifiedColumn = this.getModifiedColumnIndex(col) || col;\n
    this.checkPositionData(modifiedColumn);\n
    this.modifyColumnOrder(modifiedColumn, col, returnCol, \'unfreeze\');\n
    this.removeFixedColumn();\n
    this.hot.view.wt.wtOverlays.leftOverlay.refresh();\n
    this.hot.view.wt.wtOverlays.adjustElementsSize();\n
  },\n
  addFixedColumn: function() {\n
    this.hot.updateSettings({fixedColumnsLeft: this.fixedColumnsCount + 1});\n
    this.fixedColumnsCount++;\n
  },\n
  removeFixedColumn: function() {\n
    this.hot.updateSettings({fixedColumnsLeft: this.fixedColumnsCount - 1});\n
    this.fixedColumnsCount--;\n
  },\n
  checkPositionData: function(col) {\n
    if (!this.hot.manualColumnPositions || this.hot.manualColumnPositions.length === 0) {\n
      if (!this.hot.manualColumnPositions) {\n
        this.hot.manualColumnPositions = [];\n
      }\n
    }\n
    if (col) {\n
      if (!this.hot.manualColumnPositions[col]) {\n
        this.createPositionData(col + 1);\n
      }\n
    } else {\n
      this.createPositionData(this.hot.countCols());\n
    }\n
  },\n
  createPositionData: function(len) {\n
    if (this.hot.manualColumnPositions.length < len) {\n
      for (var i = this.hot.manualColumnPositions.length; i < len; i++) {\n
        this.hot.manualColumnPositions[i] = i;\n
      }\n
    }\n
  },\n
  modifyColumnOrder: function(col, actualCol, returnCol, action) {\n
    if (returnCol == null) {\n
      returnCol = col;\n
    }\n
    if (action === \'freeze\') {\n
      this.hot.manualColumnPositions.splice(this.fixedColumnsCount, 0, this.hot.manualColumnPositions.splice(actualCol, 1)[0]);\n
    } else if (action === \'unfreeze\') {\n
      this.hot.manualColumnPositions.splice(returnCol, 0, this.hot.manualColumnPositions.splice(actualCol, 1)[0]);\n
    }\n
  },\n
  getBestColumnReturnPosition: function(col) {\n
    var i = this.fixedColumnsCount;\n
    var j = this.getModifiedColumnIndex(i);\n
    var initialCol = this.getModifiedColumnIndex(col);\n
    while (j < initialCol) {\n
      i++;\n
      j = this.getModifiedColumnIndex(i);\n
    }\n
    return i - 1;\n
  }\n
}, {}, BasePlugin);\n
;\n
registerPlugin(\'manualColumnFreeze\', ManualColumnFreeze);\n
\n
//# \n
},{"_base":56,"plugins":55}],76:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ManualColumnMove: {get: function() {\n
      return ManualColumnMove;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    hasClass = $__0.hasClass,\n
    removeClass = $__0.removeClass;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),\n
    pageX = $__2.pageX,\n
    pageY = $__2.pageY;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
;\n
function ManualColumnMove() {\n
  var startCol,\n
      endCol,\n
      startX,\n
      startOffset,\n
      currentCol,\n
      instance,\n
      currentTH,\n
      handle = document.createElement(\'DIV\'),\n
      guide = document.createElement(\'DIV\'),\n
      eventManager = eventManagerObject(this);\n
  handle.className = \'manualColumnMover\';\n
  guide.className = \'manualColumnMoverGuide\';\n
  var saveManualColumnPositions = function() {\n
    var instance = this;\n
    Handsontable.hooks.run(instance, \'persistentStateSave\', \'manualColumnPositions\', instance.manualColumnPositions);\n
  };\n
  var loadManualColumnPositions = function() {\n
    var instance = this;\n
    var storedState = {};\n
    Handsontable.hooks.run(instance, \'persistentStateLoad\', \'manualColumnPositions\', storedState);\n
    return storedState.value;\n
  };\n
  function setupHandlePosition(TH) {\n
    instance = this;\n
    currentTH = TH;\n
    var col = this.view.wt.wtTable.getCoords(TH).col;\n
    if (col >= 0) {\n
      currentCol = col;\n
      var box = currentTH.getBoundingClientRect();\n
      startOffset = box.left;\n
      handle.style.top = box.top + \'px\';\n
      handle.style.left = startOffset + \'px\';\n
      instance.rootElement.appendChild(handle);\n
    }\n
  }\n
  function refreshHandlePosition(TH, delta) {\n
    var box = TH.getBoundingClientRect();\n
    var handleWidth = 6;\n
    if (delta > 0) {\n
      handle.style.left = (box.left + box.width - handleWidth) + \'px\';\n
    } else {\n
      handle.style.left = box.left + \'px\';\n
    }\n
  }\n
  function setupGuidePosition() {\n
    var instance = this;\n
    addClass(handle, \'active\');\n
    addClass(guide, \'active\');\n
    var box = currentTH.getBoundingClientRect();\n
    guide.style.width = box.width + \'px\';\n
    guide.style.height = instance.view.maximumVisibleElementHeight(0) + \'px\';\n
    guide.style.top = handle.style.top;\n
    guide.style.left = startOffset + \'px\';\n
    instance.rootElement.appendChild(guide);\n
  }\n
  function refreshGuidePosition(diff) {\n
    guide.style.left = startOffset + diff + \'px\';\n
  }\n
  function hideHandleAndGuide() {\n
    removeClass(handle, \'active\');\n
    removeClass(guide, \'active\');\n
  }\n
  var checkColumnHeader = function(element) {\n
    if (element.tagName != \'BODY\') {\n
      if (element.parentNode.tagName == \'THEAD\') {\n
        return true;\n
      } else {\n
        element = element.parentNode;\n
        return checkColumnHeader(element);\n
      }\n
    }\n
    return false;\n
  };\n
  var getTHFromTargetElement = function(element) {\n
    if (element.tagName != \'TABLE\') {\n
      if (element.tagName == \'TH\') {\n
        return element;\n
      } else {\n
        return getTHFromTargetElement(element.parentNode);\n
      }\n
    }\n
    return null;\n
  };\n
  var bindEvents = function() {\n
    var instance = this;\n
    var pressed;\n
    eventManager.addEventListener(instance.rootElement, \'mouseover\', function(e) {\n
      if (checkColumnHeader(e.target)) {\n
        var th = getTHFromTargetElement(e.target);\n
        if (th) {\n
          if (pressed) {\n
            var col = instance.view.wt.wtTable.getCoords(th).col;\n
            if (col >= 0) {\n
              endCol = col;\n
              refreshHandlePosition(e.target, endCol - startCol);\n
            }\n
          } else {\n
            setupHandlePosition.call(instance, th);\n
          }\n
        }\n
      }\n
    });\n
    eventManager.addEventListener(instance.rootElement, \'mousedown\', function(e) {\n
      if (hasClass(e.target, \'manualColumnMover\')) {\n
        startX = pageX(e);\n
        setupGuidePosition.call(instance);\n
        pressed = instance;\n
        startCol = currentCol;\n
        endCol = currentCol;\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mousemove\', function(e) {\n
      if (pressed) {\n
        refreshGuidePosition(pageX(e) - startX);\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mouseup\', function(e) {\n
      if (pressed) {\n
        hideHandleAndGuide();\n
        pressed = false;\n
        createPositionData(instance.manualColumnPositions, instance.countCols());\n
        instance.manualColumnPositions.splice(endCol, 0, instance.manualColumnPositions.splice(startCol, 1)[0]);\n
        Handsontable.hooks.run(instance, \'beforeColumnMove\', startCol, endCol);\n
        instance.forceFullRender = true;\n
        instance.view.render();\n
        saveManualColumnPositions.call(instance);\n
        Handsontable.hooks.run(instance, \'afterColumnMove\', startCol, endCol);\n
        setupHandlePosition.call(instance, currentTH);\n
      }\n
    });\n
    instance.addHook(\'afterDestroy\', unbindEvents);\n
  };\n
  var unbindEvents = function() {\n
    eventManager.clear();\n
  };\n
  var createPositionData = function(positionArr, len) {\n
    if (positionArr.length < len) {\n
      for (var i = positionArr.length; i < len; i++) {\n
        positionArr[i] = i;\n
      }\n
    }\n
  };\n
  this.beforeInit = function() {\n
    this.manualColumnPositions = [];\n
  };\n
  this.init = function(source) {\n
    var instance = this;\n
    var manualColMoveEnabled = !!(this.getSettings().manualColumnMove);\n
    if (manualColMoveEnabled) {\n
      var initialManualColumnPositions = this.getSettings().manualColumnMove;\n
      var loadedManualColumnPositions = loadManualColumnPositions.call(instance);\n
      if (typeof loadedManualColumnPositions != \'undefined\') {\n
        this.manualColumnPositions = loadedManualColumnPositions;\n
      } else if (Array.isArray(initialManualColumnPositions)) {\n
        this.manualColumnPositions = initialManualColumnPositions;\n
      } else {\n
        this.manualColumnPositions = [];\n
      }\n
      if (source == \'afterInit\') {\n
        if (typeof instance.manualColumnPositionsPluginUsages != \'undefined\') {\n
          instance.manualColumnPositionsPluginUsages.push(\'manualColumnMove\');\n
        } else {\n
          instance.manualColumnPositionsPluginUsages = [\'manualColumnMove\'];\n
        }\n
        bindEvents.call(this);\n
        if (this.manualColumnPositions.length > 0) {\n
          this.forceFullRender = true;\n
          this.render();\n
        }\n
      }\n
    } else {\n
      var pluginUsagesIndex = instance.manualColumnPositionsPluginUsages ? instance.manualColumnPositionsPluginUsages.indexOf(\'manualColumnMove\') : -1;\n
      if (pluginUsagesIndex > -1) {\n
        unbindEvents.call(this);\n
        this.manualColumnPositions = [];\n
        instance.manualColumnPositionsPluginUsages[pluginUsagesIndex] = void 0;\n
      }\n
    }\n
  };\n
  this.modifyCol = function(col) {\n
    if (this.getSettings().manualColumnMove) {\n
      if (typeof this.manualColumnPositions[col] === \'undefined\') {\n
        createPositionData(this.manualColumnPositions, col + 1);\n
      }\n
      return this.manualColumnPositions[col];\n
    }\n
    return col;\n
  };\n
  this.afterRemoveCol = function(index, amount) {\n
    if (!this.getSettings().manualColumnMove) {\n
      return;\n
    }\n
    var rmindx,\n
        colpos = this.manualColumnPositions;\n
    rmindx = colpos.splice(index, amount);\n
    colpos = colpos.map(function(colpos) {\n
      var i,\n
          newpos = colpos;\n
      for (i = 0; i < rmindx.length; i++) {\n
        if (colpos > rmindx[i]) {\n
          newpos--;\n
        }\n
      }\n
      return newpos;\n
    });\n
    this.manualColumnPositions = colpos;\n
  };\n
  this.afterCreateCol = function(index, amount) {\n
    if (!this.getSettings().manualColumnMove) {\n
      return;\n
    }\n
    var colpos = this.manualColumnPositions;\n
    if (!colpos.length) {\n
      return;\n
    }\n
    var addindx = [];\n
    for (var i = 0; i < amount; i++) {\n
      addindx.push(index + i);\n
    }\n
    if (index >= colpos.length) {\n
      colpos.concat(addindx);\n
    } else {\n
      colpos = colpos.map(function(colpos) {\n
        return (colpos >= index) ? (colpos + amount) : colpos;\n
      });\n
      colpos.splice.apply(colpos, [index, 0].concat(addindx));\n
    }\n
    this.manualColumnPositions = colpos;\n
  };\n
}\n
var htManualColumnMove = new ManualColumnMove();\n
Handsontable.hooks.add(\'beforeInit\', htManualColumnMove.beforeInit);\n
Handsontable.hooks.add(\'afterInit\', function() {\n
  htManualColumnMove.init.call(this, \'afterInit\');\n
});\n
Handsontable.hooks.add(\'afterUpdateSettings\', function() {\n
  htManualColumnMove.init.call(this, \'afterUpdateSettings\');\n
});\n
Handsontable.hooks.add(\'modifyCol\', htManualColumnMove.modifyCol);\n
Handsontable.hooks.add(\'afterRemoveCol\', htManualColumnMove.afterRemoveCol);\n
Handsontable.hooks.add(\'afterCreateCol\', htManualColumnMove.afterCreateCol);\n
Handsontable.hooks.register(\'beforeColumnMove\');\n
Handsontable.hooks.register(\'afterColumnMove\');\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],77:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ManualColumnResize: {get: function() {\n
      return ManualColumnResize;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    hasClass = $__0.hasClass,\n
    removeClass = $__0.removeClass;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),\n
    pageX = $__2.pageX,\n
    pageY = $__2.pageY;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
;\n
function ManualColumnResize() {\n
  var currentTH,\n
      currentCol,\n
      currentWidth,\n
      instance,\n
      newSize,\n
      startX,\n
      startWidth,\n
      startOffset,\n
      handle = document.createElement(\'DIV\'),\n
      guide = document.createElement(\'DIV\'),\n
      eventManager = eventManagerObject(this);\n
  handle.className = \'manualColumnResizer\';\n
  guide.className = \'manualColumnResizerGuide\';\n
  var saveManualColumnWidths = function() {\n
    var instance = this;\n
    Handsontable.hooks.run(instance, \'persistentStateSave\', \'manualColumnWidths\', instance.manualColumnWidths);\n
  };\n
  var loadManualColumnWidths = function() {\n
    var instance = this;\n
    var storedState = {};\n
    Handsontable.hooks.run(instance, \'persistentStateLoad\', \'manualColumnWidths\', storedState);\n
    return storedState.value;\n
  };\n
  function setupHandlePosition(TH) {\n
    instance = this;\n
    currentTH = TH;\n
    var col = this.view.wt.wtTable.getCoords(TH).col;\n
    if (col >= 0) {\n
      currentCol = col;\n
      var box = currentTH.getBoundingClientRect();\n
      startOffset = box.left - 6;\n
      startWidth = parseInt(box.width, 10);\n
      handle.style.top = box.top + \'px\';\n
      handle.style.left = startOffset + startWidth + \'px\';\n
      instance.rootElement.appendChild(handle);\n
    }\n
  }\n
  function refreshHandlePosition() {\n
    handle.style.left = startOffset + currentWidth + \'px\';\n
  }\n
  function setupGuidePosition() {\n
    var instance = this;\n
    addClass(handle, \'active\');\n
    addClass(guide, \'active\');\n
    guide.style.top = handle.style.top;\n
    guide.style.left = handle.style.left;\n
    guide.style.height = instance.view.maximumVisibleElementHeight(0) + \'px\';\n
    instance.rootElement.appendChild(guide);\n
  }\n
  function refreshGuidePosition() {\n
    guide.style.left = handle.style.left;\n
  }\n
  function hideHandleAndGuide() {\n
    removeClass(handle, \'active\');\n
    removeClass(guide, \'active\');\n
  }\n
  var checkColumnHeader = function(element) {\n
    if (element.tagName != \'BODY\') {\n
      if (element.parentNode.tagName == \'THEAD\') {\n
        return true;\n
      } else {\n
        element = element.parentNode;\n
        return checkColumnHeader(element);\n
      }\n
    }\n
    return false;\n
  };\n
  var getTHFromTargetElement = function(element) {\n
    if (element.tagName != \'TABLE\') {\n
      if (element.tagName == \'TH\') {\n
        return element;\n
      } else {\n
        return getTHFromTargetElement(element.parentNode);\n
      }\n
    }\n
    return null;\n
  };\n
  var bindEvents = function() {\n
    var instance = this;\n
    var pressed;\n
    var dblclick = 0;\n
    var autoresizeTimeout = null;\n
    eventManager.addEventListener(instance.rootElement, \'mouseover\', function(e) {\n
      if (checkColumnHeader(e.target)) {\n
        var th = getTHFromTargetElement(e.target);\n
        if (th) {\n
          if (!pressed) {\n
            setupHandlePosition.call(instance, th);\n
          }\n
        }\n
      }\n
    });\n
    eventManager.addEventListener(instance.rootElement, \'mousedown\', function(e) {\n
      if (hasClass(e.target, \'manualColumnResizer\')) {\n
        setupGuidePosition.call(instance);\n
        pressed = instance;\n
        if (autoresizeTimeout == null) {\n
          autoresizeTimeout = setTimeout(function() {\n
            if (dblclick >= 2) {\n
              var hookNewSize = Handsontable.hooks.run(instance, \'beforeColumnResize\', currentCol, newSize, true);\n
              if (hookNewSize !== void 0) {\n
                newSize = hookNewSize;\n
              }\n
              setManualSize(currentCol, newSize);\n
              instance.forceFullRender = true;\n
              instance.view.render();\n
              instance.view.wt.wtOverlays.adjustElementsSize(true);\n
              Handsontable.hooks.run(instance, \'afterColumnResize\', currentCol, newSize, true);\n
            }\n
            dblclick = 0;\n
            autoresizeTimeout = null;\n
          }, 500);\n
          instance._registerTimeout(autoresizeTimeout);\n
        }\n
        dblclick++;\n
        startX = pageX(e);\n
        newSize = startWidth;\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mousemove\', function(e) {\n
      if (pressed) {\n
        currentWidth = startWidth + (pageX(e) - startX);\n
        newSize = setManualSize(currentCol, currentWidth);\n
        refreshHandlePosition();\n
        refreshGuidePosition();\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mouseup\', function() {\n
      if (pressed) {\n
        hideHandleAndGuide();\n
        pressed = false;\n
        if (newSize != startWidth) {\n
          Handsontable.hooks.run(instance, \'beforeColumnResize\', currentCol, newSize);\n
          instance.forceFullRender = true;\n
          instance.view.render();\n
          instance.view.wt.wtOverlays.adjustElementsSize(true);\n
          saveManualColumnWidths.call(instance);\n
          Handsontable.hooks.run(instance, \'afterColumnResize\', currentCol, newSize);\n
        }\n
        setupHandlePosition.call(instance, currentTH);\n
      }\n
    });\n
    instance.addHook(\'afterDestroy\', unbindEvents);\n
  };\n
  var unbindEvents = function() {\n
    eventManager.clear();\n
  };\n
  this.init = function(source) {\n
    this.manualColumnWidths = [];\n
    var instance = this;\n
    var manualColumnWidthEnabled = !!(this.getSettings().manualColumnResize);\n
    if (manualColumnWidthEnabled) {\n
      var initialColumnWidths = this.getSettin

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAs=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="11" aka="AAAAAAAAAAs=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

gs().manualColumnResize;\n
      var loadedManualColumnWidths = loadManualColumnWidths.call(instance);\n
      if (typeof instance.manualColumnWidthsPluginUsages != \'undefined\') {\n
        instance.manualColumnWidthsPluginUsages.push(\'manualColumnResize\');\n
      } else {\n
        instance.manualColumnWidthsPluginUsages = [\'manualColumnResize\'];\n
      }\n
      if (typeof loadedManualColumnWidths != \'undefined\') {\n
        this.manualColumnWidths = loadedManualColumnWidths;\n
      } else if (Array.isArray(initialColumnWidths)) {\n
        this.manualColumnWidths = initialColumnWidths;\n
      } else {\n
        this.manualColumnWidths = [];\n
      }\n
      if (!source) {\n
        bindEvents.call(this);\n
      }\n
    } else {\n
      var pluginUsagesIndex = instance.manualColumnWidthsPluginUsages ? instance.manualColumnWidthsPluginUsages.indexOf(\'manualColumnResize\') : -1;\n
      if (pluginUsagesIndex > -1) {\n
        unbindEvents.call(this);\n
        this.manualColumnWidths = [];\n
      }\n
    }\n
  };\n
  var setManualSize = function(col, width) {\n
    width = Math.max(width, 20);\n
    col = Handsontable.hooks.run(instance, \'modifyCol\', col);\n
    instance.manualColumnWidths[col] = width;\n
    return width;\n
  };\n
  this.modifyColWidth = function(width, col) {\n
    col = this.runHooks(\'modifyCol\', col);\n
    if (this.getSettings().manualColumnResize && this.manualColumnWidths[col]) {\n
      return this.manualColumnWidths[col];\n
    }\n
    return width;\n
  };\n
}\n
var htManualColumnResize = new ManualColumnResize();\n
Handsontable.hooks.add(\'init\', htManualColumnResize.init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', function() {\n
  htManualColumnResize.init.call(this, \'afterUpdateSettings\');\n
});\n
Handsontable.hooks.add(\'modifyColWidth\', htManualColumnResize.modifyColWidth);\n
Handsontable.hooks.register(\'afterColumnResize\');\n
Handsontable.hooks.register(\'beforeColumnResize\');\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],78:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ManualRowMove: {get: function() {\n
      return ManualRowMove;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    hasClass = $__0.hasClass,\n
    removeClass = $__0.removeClass;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),\n
    pageX = $__2.pageX,\n
    pageY = $__2.pageY;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
;\n
function ManualRowMove() {\n
  var startRow,\n
      endRow,\n
      startY,\n
      startOffset,\n
      currentRow,\n
      currentTH,\n
      handle = document.createElement(\'DIV\'),\n
      guide = document.createElement(\'DIV\'),\n
      eventManager = eventManagerObject(this);\n
  handle.className = \'manualRowMover\';\n
  guide.className = \'manualRowMoverGuide\';\n
  var saveManualRowPositions = function() {\n
    var instance = this;\n
    Handsontable.hooks.run(instance, \'persistentStateSave\', \'manualRowPositions\', instance.manualRowPositions);\n
  };\n
  var loadManualRowPositions = function() {\n
    var instance = this,\n
        storedState = {};\n
    Handsontable.hooks.run(instance, \'persistentStateLoad\', \'manualRowPositions\', storedState);\n
    return storedState.value;\n
  };\n
  function setupHandlePosition(TH) {\n
    var instance = this;\n
    currentTH = TH;\n
    var row = this.view.wt.wtTable.getCoords(TH).row;\n
    if (row >= 0) {\n
      currentRow = row;\n
      var box = currentTH.getBoundingClientRect();\n
      startOffset = box.top;\n
      handle.style.top = startOffset + \'px\';\n
      handle.style.left = box.left + \'px\';\n
      instance.rootElement.appendChild(handle);\n
    }\n
  }\n
  function refreshHandlePosition(TH, delta) {\n
    var box = TH.getBoundingClientRect();\n
    var handleHeight = 6;\n
    if (delta > 0) {\n
      handle.style.top = (box.top + box.height - handleHeight) + \'px\';\n
    } else {\n
      handle.style.top = box.top + \'px\';\n
    }\n
  }\n
  function setupGuidePosition() {\n
    var instance = this;\n
    addClass(handle, \'active\');\n
    addClass(guide, \'active\');\n
    var box = currentTH.getBoundingClientRect();\n
    guide.style.width = instance.view.maximumVisibleElementWidth(0) + \'px\';\n
    guide.style.height = box.height + \'px\';\n
    guide.style.top = startOffset + \'px\';\n
    guide.style.left = handle.style.left;\n
    instance.rootElement.appendChild(guide);\n
  }\n
  function refreshGuidePosition(diff) {\n
    guide.style.top = startOffset + diff + \'px\';\n
  }\n
  function hideHandleAndGuide() {\n
    removeClass(handle, \'active\');\n
    removeClass(guide, \'active\');\n
  }\n
  var checkRowHeader = function(element) {\n
    if (element.tagName != \'BODY\') {\n
      if (element.parentNode.tagName == \'TBODY\') {\n
        return true;\n
      } else {\n
        element = element.parentNode;\n
        return checkRowHeader(element);\n
      }\n
    }\n
    return false;\n
  };\n
  var getTHFromTargetElement = function(element) {\n
    if (element.tagName != \'TABLE\') {\n
      if (element.tagName == \'TH\') {\n
        return element;\n
      } else {\n
        return getTHFromTargetElement(element.parentNode);\n
      }\n
    }\n
    return null;\n
  };\n
  var bindEvents = function() {\n
    var instance = this;\n
    var pressed;\n
    eventManager.addEventListener(instance.rootElement, \'mouseover\', function(e) {\n
      if (checkRowHeader(e.target)) {\n
        var th = getTHFromTargetElement(e.target);\n
        if (th) {\n
          if (pressed) {\n
            endRow = instance.view.wt.wtTable.getCoords(th).row;\n
            refreshHandlePosition(th, endRow - startRow);\n
          } else {\n
            setupHandlePosition.call(instance, th);\n
          }\n
        }\n
      }\n
    });\n
    eventManager.addEventListener(instance.rootElement, \'mousedown\', function(e) {\n
      if (hasClass(e.target, \'manualRowMover\')) {\n
        startY = pageY(e);\n
        setupGuidePosition.call(instance);\n
        pressed = instance;\n
        startRow = currentRow;\n
        endRow = currentRow;\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mousemove\', function(e) {\n
      if (pressed) {\n
        refreshGuidePosition(pageY(e) - startY);\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mouseup\', function(e) {\n
      if (pressed) {\n
        hideHandleAndGuide();\n
        pressed = false;\n
        createPositionData(instance.manualRowPositions, instance.countRows());\n
        instance.manualRowPositions.splice(endRow, 0, instance.manualRowPositions.splice(startRow, 1)[0]);\n
        Handsontable.hooks.run(instance, \'beforeRowMove\', startRow, endRow);\n
        instance.forceFullRender = true;\n
        instance.view.render();\n
        saveManualRowPositions.call(instance);\n
        Handsontable.hooks.run(instance, \'afterRowMove\', startRow, endRow);\n
        setupHandlePosition.call(instance, currentTH);\n
      }\n
    });\n
    instance.addHook(\'afterDestroy\', unbindEvents);\n
  };\n
  var unbindEvents = function() {\n
    eventManager.clear();\n
  };\n
  var createPositionData = function(positionArr, len) {\n
    if (positionArr.length < len) {\n
      for (var i = positionArr.length; i < len; i++) {\n
        positionArr[i] = i;\n
      }\n
    }\n
  };\n
  this.beforeInit = function() {\n
    this.manualRowPositions = [];\n
  };\n
  this.init = function(source) {\n
    var instance = this;\n
    var manualRowMoveEnabled = !!(instance.getSettings().manualRowMove);\n
    if (manualRowMoveEnabled) {\n
      var initialManualRowPositions = instance.getSettings().manualRowMove;\n
      var loadedManualRowPostions = loadManualRowPositions.call(instance);\n
      if (typeof instance.manualRowPositionsPluginUsages != \'undefined\') {\n
        instance.manualRowPositionsPluginUsages.push(\'manualColumnMove\');\n
      } else {\n
        instance.manualRowPositionsPluginUsages = [\'manualColumnMove\'];\n
      }\n
      if (typeof loadedManualRowPostions != \'undefined\') {\n
        this.manualRowPositions = loadedManualRowPostions;\n
      } else if (Array.isArray(initialManualRowPositions)) {\n
        this.manualRowPositions = initialManualRowPositions;\n
      } else {\n
        this.manualRowPositions = [];\n
      }\n
      if (source === \'afterInit\') {\n
        bindEvents.call(this);\n
        if (this.manualRowPositions.length > 0) {\n
          instance.forceFullRender = true;\n
          instance.render();\n
        }\n
      }\n
    } else {\n
      var pluginUsagesIndex = instance.manualRowPositionsPluginUsages ? instance.manualRowPositionsPluginUsages.indexOf(\'manualColumnMove\') : -1;\n
      if (pluginUsagesIndex > -1) {\n
        unbindEvents.call(this);\n
        instance.manualRowPositions = [];\n
        instance.manualRowPositionsPluginUsages[pluginUsagesIndex] = void 0;\n
      }\n
    }\n
  };\n
  this.modifyRow = function(row) {\n
    var instance = this;\n
    if (instance.getSettings().manualRowMove) {\n
      if (typeof instance.manualRowPositions[row] === \'undefined\') {\n
        createPositionData(this.manualRowPositions, row + 1);\n
      }\n
      return instance.manualRowPositions[row];\n
    }\n
    return row;\n
  };\n
}\n
var htManualRowMove = new ManualRowMove();\n
Handsontable.hooks.add(\'beforeInit\', htManualRowMove.beforeInit);\n
Handsontable.hooks.add(\'afterInit\', function() {\n
  htManualRowMove.init.call(this, \'afterInit\');\n
});\n
Handsontable.hooks.add(\'afterUpdateSettings\', function() {\n
  htManualRowMove.init.call(this, \'afterUpdateSettings\');\n
});\n
Handsontable.hooks.add(\'modifyRow\', htManualRowMove.modifyRow);\n
Handsontable.hooks.register(\'beforeRowMove\');\n
Handsontable.hooks.register(\'afterRowMove\');\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],79:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ManualRowResize: {get: function() {\n
      return ManualRowResize;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    hasClass = $__0.hasClass,\n
    removeClass = $__0.removeClass;\n
var eventManagerObject = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).eventManager;\n
var $__2 = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}),\n
    pageX = $__2.pageX,\n
    pageY = $__2.pageY;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
;\n
function ManualRowResize() {\n
  var currentTH,\n
      currentRow,\n
      currentHeight,\n
      instance,\n
      newSize,\n
      startY,\n
      startHeight,\n
      startOffset,\n
      handle = document.createElement(\'DIV\'),\n
      guide = document.createElement(\'DIV\'),\n
      eventManager = eventManagerObject(this);\n
  handle.className = \'manualRowResizer\';\n
  guide.className = \'manualRowResizerGuide\';\n
  var saveManualRowHeights = function() {\n
    var instance = this;\n
    Handsontable.hooks.run(instance, \'persistentStateSave\', \'manualRowHeights\', instance.manualRowHeights);\n
  };\n
  var loadManualRowHeights = function() {\n
    var instance = this,\n
        storedState = {};\n
    Handsontable.hooks.run(instance, \'persistentStateLoad\', \'manualRowHeights\', storedState);\n
    return storedState.value;\n
  };\n
  function setupHandlePosition(TH) {\n
    instance = this;\n
    currentTH = TH;\n
    var row = this.view.wt.wtTable.getCoords(TH).row;\n
    if (row >= 0) {\n
      currentRow = row;\n
      var box = currentTH.getBoundingClientRect();\n
      startOffset = box.top - 6;\n
      startHeight = parseInt(box.height, 10);\n
      handle.style.left = box.left + \'px\';\n
      handle.style.top = startOffset + startHeight + \'px\';\n
      instance.rootElement.appendChild(handle);\n
    }\n
  }\n
  function refreshHandlePosition() {\n
    handle.style.top = startOffset + currentHeight + \'px\';\n
  }\n
  function setupGuidePosition() {\n
    var instance = this;\n
    addClass(handle, \'active\');\n
    addClass(guide, \'active\');\n
    guide.style.top = handle.style.top;\n
    guide.style.left = handle.style.left;\n
    guide.style.width = instance.view.maximumVisibleElementWidth(0) + \'px\';\n
    instance.rootElement.appendChild(guide);\n
  }\n
  function refreshGuidePosition() {\n
    guide.style.top = handle.style.top;\n
  }\n
  function hideHandleAndGuide() {\n
    removeClass(handle, \'active\');\n
    removeClass(guide, \'active\');\n
  }\n
  var checkRowHeader = function(element) {\n
    if (element.tagName != \'BODY\') {\n
      if (element.parentNode.tagName == \'TBODY\') {\n
        return true;\n
      } else {\n
        element = element.parentNode;\n
        return checkRowHeader(element);\n
      }\n
    }\n
    return false;\n
  };\n
  var getTHFromTargetElement = function(element) {\n
    if (element.tagName != \'TABLE\') {\n
      if (element.tagName == \'TH\') {\n
        return element;\n
      } else {\n
        return getTHFromTargetElement(element.parentNode);\n
      }\n
    }\n
    return null;\n
  };\n
  var bindEvents = function() {\n
    var instance = this;\n
    var pressed;\n
    var dblclick = 0;\n
    var autoresizeTimeout = null;\n
    eventManager.addEventListener(instance.rootElement, \'mouseover\', function(e) {\n
      if (checkRowHeader(e.target)) {\n
        var th = getTHFromTargetElement(e.target);\n
        if (th) {\n
          if (!pressed) {\n
            setupHandlePosition.call(instance, th);\n
          }\n
        }\n
      }\n
    });\n
    eventManager.addEventListener(instance.rootElement, \'mousedown\', function(e) {\n
      if (hasClass(e.target, \'manualRowResizer\')) {\n
        setupGuidePosition.call(instance);\n
        pressed = instance;\n
        if (autoresizeTimeout == null) {\n
          autoresizeTimeout = setTimeout(function() {\n
            if (dblclick >= 2) {\n
              var hookNewSize = Handsontable.hooks.run(instance, \'beforeRowResize\', currentRow, newSize, true);\n
              if (hookNewSize !== void 0) {\n
                newSize = hookNewSize;\n
              }\n
              setManualSize(currentRow, newSize);\n
              instance.forceFullRender = true;\n
              instance.view.render();\n
              Handsontable.hooks.run(instance, \'afterRowResize\', currentRow, newSize, true);\n
            }\n
            dblclick = 0;\n
            autoresizeTimeout = null;\n
          }, 500);\n
          instance._registerTimeout(autoresizeTimeout);\n
        }\n
        dblclick++;\n
        startY = pageY(e);\n
        newSize = startHeight;\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mousemove\', function(e) {\n
      if (pressed) {\n
        currentHeight = startHeight + (pageY(e) - startY);\n
        newSize = setManualSize(currentRow, currentHeight);\n
        refreshHandlePosition();\n
        refreshGuidePosition();\n
      }\n
    });\n
    eventManager.addEventListener(window, \'mouseup\', function(e) {\n
      if (pressed) {\n
        hideHandleAndGuide();\n
        pressed = false;\n
        if (newSize != startHeight) {\n
          Handsontable.hooks.run(instance, \'beforeRowResize\', currentRow, newSize);\n
          instance.forceFullRender = true;\n
          instance.view.render();\n
          saveManualRowHeights.call(instance);\n
          Handsontable.hooks.run(instance, \'afterRowResize\', currentRow, newSize);\n
        }\n
        setupHandlePosition.call(instance, currentTH);\n
      }\n
    });\n
    instance.addHook(\'afterDestroy\', unbindEvents);\n
  };\n
  var unbindEvents = function() {\n
    eventManager.clear();\n
  };\n
  this.init = function(source) {\n
    this.manualRowHeights = [];\n
    var instance = this;\n
    var manualColumnHeightEnabled = !!(this.getSettings().manualRowResize);\n
    if (manualColumnHeightEnabled) {\n
      var initialRowHeights = this.getSettings().manualRowResize;\n
      var loadedManualRowHeights = loadManualRowHeights.call(instance);\n
      if (typeof instance.manualRowHeightsPluginUsages != \'undefined\') {\n
        instance.manualRowHeightsPluginUsages.push(\'manualRowResize\');\n
      } else {\n
        instance.manualRowHeightsPluginUsages = [\'manualRowResize\'];\n
      }\n
      if (typeof loadedManualRowHeights != \'undefined\') {\n
        this.manualRowHeights = loadedManualRowHeights;\n
      } else if (Array.isArray(initialRowHeights)) {\n
        this.manualRowHeights = initialRowHeights;\n
      } else {\n
        this.manualRowHeights = [];\n
      }\n
      if (source === void 0) {\n
        bindEvents.call(this);\n
      }\n
    } else {\n
      var pluginUsagesIndex = instance.manualRowHeightsPluginUsages ? instance.manualRowHeightsPluginUsages.indexOf(\'manualRowResize\') : -1;\n
      if (pluginUsagesIndex > -1) {\n
        unbindEvents.call(this);\n
        this.manualRowHeights = [];\n
        instance.manualRowHeightsPluginUsages[pluginUsagesIndex] = void 0;\n
      }\n
    }\n
  };\n
  var setManualSize = function(row, height) {\n
    row = Handsontable.hooks.run(instance, \'modifyRow\', row);\n
    instance.manualRowHeights[row] = height;\n
    return height;\n
  };\n
  this.modifyRowHeight = function(height, row) {\n
    if (this.getSettings().manualRowResize) {\n
      row = this.runHooks(\'modifyRow\', row);\n
      if (this.manualRowHeights[row] !== void 0) {\n
        return this.manualRowHeights[row];\n
      }\n
    }\n
    return height;\n
  };\n
}\n
var htManualRowResize = new ManualRowResize();\n
Handsontable.hooks.add(\'init\', htManualRowResize.init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', function() {\n
  htManualRowResize.init.call(this, \'afterUpdateSettings\');\n
});\n
Handsontable.hooks.add(\'modifyRowHeight\', htManualRowResize.modifyRowHeight);\n
Handsontable.hooks.register(\'beforeRowResize\');\n
Handsontable.hooks.register(\'afterRowResize\');\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"plugins":55}],80:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  MergeCells: {get: function() {\n
      return MergeCells;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_plugins__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__,\n
    $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var stopImmediatePropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;\n
var WalkontableCellCoords = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableCellRange = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ = require("3rdparty/walkontable/src/cell/range"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_range__}).WalkontableCellRange;\n
var WalkontableTable = ($___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__ = require("3rdparty/walkontable/src/table"), $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__ && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__.__esModule && $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__ || {default: $___46__46__47__46__46__47_3rdparty_47_walkontable_47_src_47_table__}).WalkontableTable;\n
;\n
function CellInfoCollection() {\n
  var collection = [];\n
  collection.getInfo = function(row, col) {\n
    for (var i = 0,\n
        ilen = this.length; i < ilen; i++) {\n
      if (this[i].row <= row && this[i].row + this[i].rowspan - 1 >= row && this[i].col <= col && this[i].col + this[i].colspan - 1 >= col) {\n
        return this[i];\n
      }\n
    }\n
  };\n
  collection.setInfo = function(info) {\n
    for (var i = 0,\n
        ilen = this.length; i < ilen; i++) {\n
      if (this[i].row === info.row && this[i].col === info.col) {\n
        this[i] = info;\n
        return;\n
      }\n
    }\n
    this.push(info);\n
  };\n
  collection.removeInfo = function(row, col) {\n
    for (var i = 0,\n
        ilen = this.length; i < ilen; i++) {\n
      if (this[i].row === row && this[i].col === col) {\n
        this.splice(i, 1);\n
        break;\n
      }\n
    }\n
  };\n
  return collection;\n
}\n
function MergeCells(mergeCellsSetting) {\n
  this.mergedCellInfoCollection = new CellInfoCollection();\n
  if (Array.isArray(mergeCellsSetting)) {\n
    for (var i = 0,\n
        ilen = mergeCellsSetting.length; i < ilen; i++) {\n
      this.mergedCellInfoCollection.setInfo(mergeCellsSetting[i]);\n
    }\n
  }\n
}\n
MergeCells.prototype.canMergeRange = function(cellRange) {\n
  return !cellRange.isSingle();\n
};\n
MergeCells.prototype.mergeRange = function(cellRange) {\n
  if (!this.canMergeRange(cellRange)) {\n
    return;\n
  }\n
  var topLeft = cellRange.getTopLeftCorner();\n
  var bottomRight = cellRange.getBottomRightCorner();\n
  var mergeParent = {};\n
  mergeParent.row = topLeft.row;\n
  mergeParent.col = topLeft.col;\n
  mergeParent.rowspan = bottomRight.row - topLeft.row + 1;\n
  mergeParent.colspan = bottomRight.col - topLeft.col + 1;\n
  this.mergedCellInfoCollection.setInfo(mergeParent);\n
};\n
MergeCells.prototype.mergeOrUnmergeSelection = function(cellRange) {\n
  var info = this.mergedCellInfoCollection.getInfo(cellRange.from.row, cellRange.from.col);\n
  if (info) {\n
    this.unmergeSelection(cellRange.from);\n
  } else {\n
    this.mergeSelection(cellRange);\n
  }\n
};\n
MergeCells.prototype.mergeSelection = function(cellRange) {\n
  this.mergeRange(cellRange);\n
};\n
MergeCells.prototype.unmergeSelection = function(cellRange) {\n
  var info = this.mergedCellInfoCollection.getInfo(cellRange.row, cellRange.col);\n
  this.mergedCellInfoCollection.removeInfo(info.row, info.col);\n
};\n
MergeCells.prototype.applySpanProperties = function(TD, row, col) {\n
  var info = this.mergedCellInfoCollection.getInfo(row, col);\n
  if (info) {\n
    if (info.row === row && info.col === col) {\n
      TD.setAttribute(\'rowspan\', info.rowspan);\n
      TD.setAttribute(\'colspan\', info.colspan);\n
    } else {\n
      TD.removeAttribute(\'rowspan\');\n
      TD.removeAttribute(\'colspan\');\n
      TD.style.display = "none";\n
    }\n
  } else {\n
    TD.removeAttribute(\'rowspan\');\n
    TD.removeAttribute(\'colspan\');\n
  }\n
};\n
MergeCells.prototype.modifyTransform = function(hook, currentSelectedRange, delta) {\n
  var sameRowspan = function(merged, coords) {\n
    if (coords.row >= merged.row && coords.row <= (merged.row + merged.rowspan - 1)) {\n
      return true;\n
    }\n
    return false;\n
  },\n
      sameColspan = function(merged, coords) {\n
        if (coords.col >= merged.col && coords.col <= (merged.col + merged.colspan - 1)) {\n
          return true;\n
        }\n
        return false;\n
      },\n
      getNextPosition = function(newDelta) {\n
        return new WalkontableCellCoords(currentSelectedRange.to.row + newDelta.row, currentSelectedRange.to.col + newDelta.col);\n
      };\n
  var newDelta = {\n
    row: delta.row,\n
    col: delta.col\n
  };\n
  if (hook == \'modifyTransformStart\') {\n
    if (!this.lastDesiredCoords) {\n
      this.lastDesiredCoords = new WalkontableCellCoords(null, null);\n
    }\n
    var currentPosition = new WalkontableCellCoords(currentSelectedRange.highlight.row, currentSelectedRange.highlight.col),\n
        mergedParent = this.mergedCellInfoCollection.getInfo(currentPosition.row, currentPosition.col),\n
        currentRangeContainsMerge;\n
    for (var i = 0,\n
        mergesLength = this.mergedCellInfoCollection.length; i < mergesLength; i++) {\n
      var range = this.mergedCellInfoCollection[i];\n
      range = new WalkontableCellCoords(range.row + range.rowspan - 1, range.col + range.colspan - 1);\n
      if (currentSelectedRange.includes(range)) {\n
        currentRangeContainsMerge = true;\n
        break;\n
      }\n
    }\n
    if (mergedParent) {\n
      var mergeTopLeft = new WalkontableCellCoords(mergedParent.row, mergedParent.col),\n
          mergeBottomRight = new WalkontableCellCoords(mergedParent.row + mergedParent.rowspan - 1, mergedParent.col + mergedParent.colspan - 1),\n
          mergeRange = new WalkontableCellRange(mergeTopLeft, mergeTopLeft, mergeBottomRight);\n
      if (!mergeRange.includes(this.lastDesiredCoords)) {\n
        this.lastDesiredCoords = new WalkontableCellCoords(null, null);\n
      }\n
      newDelta.row = this.lastDesiredCoords.row ? this.lastDesiredCoords.row - currentPosition.row : newDelta.row;\n
      newDelta.col = this.lastDesiredCoords.col ? this.lastDesiredCoords.col - currentPosition.col : newDelta.col;\n
      if (delta.row > 0) {\n
        newDelta.row = mergedParent.row + mergedParent.rowspan - 1 - currentPosition.row + delta.row;\n
      } else if (delta.row < 0) {\n
        newDelta.row = currentPosition.row - mergedParent.row + delta.row;\n
      }\n
      if (delta.col > 0) {\n
        newDelta.col = mergedParent.col + mergedParent.colspan - 1 - currentPosition.col + delta.col;\n
      } else if (delta.col < 0) {\n
        newDelta.col = currentPosition.col - mergedParent.col + delta.col;\n
      }\n
    }\n
    var nextPosition = new WalkontableCellCoords(currentSelectedRange.highlight.row + newDelta.row, currentSelectedRange.highlight.col + newDelta.col),\n
        nextParentIsMerged = this.mergedCellInfoCollection.getInfo(nextPosition.row, nextPosition.col);\n
    if (nextParentIsMerged) {\n
      this.lastDesiredCoords = nextPosition;\n
      newDelta = {\n
        row: nextParentIsMerged.row - currentPosition.row,\n
        col: nextParentIsMerged.col - currentPosition.col\n
      };\n
    }\n
  } else if (hook == \'modifyTransformEnd\') {\n
    for (var i = 0,\n
        mergesLength = this.mergedCellInfoCollection.length; i < mergesLength; i++) {\n
      var currentMerge = this.mergedCellInfoCollection[i],\n
          mergeTopLeft = new WalkontableCellCoords(currentMerge.row, currentMerge.col),\n
          mergeBottomRight = new WalkontableCellCoords(currentMerge.row + currentMerge.rowspan - 1, currentMerge.col + currentMerge.colspan - 1),\n
          mergedRange = new WalkontableCellRange(mergeTopLeft, mergeTopLeft, mergeBottomRight),\n
          sharedBorders = currentSelectedRange.getBordersSharedWith(mergedRange);\n
      if (mergedRange.isEqual(currentSelectedRange)) {\n
        currentSelectedRange.setDirection("NW-SE");\n
      } else if (sharedBorders.length > 0) {\n
        var mergeHighlighted = (currentSelectedRange.highlight.isEqual(mergedRange.from));\n
        if (sharedBorders.indexOf(\'top\') > -1) {\n
          if (currentSelectedRange.to.isSouthEastOf(mergedRange.from) && mergeHighlighted) {\n
            currentSelectedRange.setDirection("NW-SE");\n
          } else if (currentSelectedRange.to.isSouthWestOf(mergedRange.from) && mergeHighlighted) {\n
            currentSelectedRange.setDirection("NE-SW");\n
          }\n
        } else if (sharedBorders.indexOf(\'bottom\') > -1) {\n
          if (currentSelectedRange.to.isNorthEastOf(mergedRange.from) && mergeHighlighted) {\n
            currentSelectedRange.setDirection("SW-NE");\n
          } else if (currentSelectedRange.to.isNorthWestOf(mergedRange.from) && mergeHighlighted) {\n
            currentSelectedRange.setDirection("SE-NW");\n
          }\n
        }\n
      }\n
      var nextPosition = getNextPosition(newDelta),\n
          withinRowspan = sameRowspan(currentMerge, nextPosition),\n
          withinColspan = sameColspan(currentMerge, nextPosition);\n
      if (currentSelectedRange.includesRange(mergedRange) && (mergedRange.includes(nextPosition) || withinRowspan || withinColspan)) {\n
        if (withinRowspan) {\n
          if (newDelta.row < 0) {\n
            newDelta.row -= currentMerge.rowspan - 1;\n
          } else if (newDelta.row > 0) {\n
            newDelta.row += currentMerge.rowspan - 1;\n
          }\n
        }\n
        if (withinColspan) {\n
          if (newDelta.col < 0) {\n
            newDelta.col -= currentMerge.colspan - 1;\n
          } else if (newDelta.col > 0) {\n
            newDelta.col += currentMerge.colspan - 1;\n
          }\n
        }\n
      }\n
    }\n
  }\n
  if (newDelta.row !== 0) {\n
    delta.row = newDelta.row;\n
  }\n
  if (newDelta.col !== 0) {\n
    delta.col = newDelta.col;\n
  }\n
};\n
var beforeInit = function() {\n
  var instance = this;\n
  var mergeCellsSetting = instance.getSettings().mergeCells;\n
  if (mergeCellsSetting) {\n
    if (!instance.mergeCells) {\n
      instance.mergeCells = new MergeCells(mergeCellsSetting);\n
    }\n
  }\n
};\n
var afterInit = function() {\n
  var instance = this;\n
  if (instance.mergeCells) {\n
    instance.view.wt.wtTable.getCell = function(coords) {\n
      if (instance.getSettings().mergeCells) {\n
        var mergeParent = instance.mergeCells.mergedCellInfoCollection.getInfo(coords.row, coords.col);\n
        if (mergeParent) {\n
          coords = mergeParent;\n
        }\n
      }\n
      return WalkontableTable.prototype.getCell.call(this, coords);\n
    };\n
  }\n
};\n
var onBeforeKeyDown = function(event) {\n
  if (!this.mergeCells) {\n
    return;\n
  }\n
  var ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;\n
  if (ctrlDown) {\n
    if (event.keyCode === 77) {\n
      this.mergeCells.mergeOrUnmergeSelection(this.getSelectedRange());\n
      this.render();\n
      stopImmediatePropagation(event);\n
    }\n
  }\n
};\n
var addMergeActionsToContextMenu = function(defaultOptions) {\n
  if (!this.getSettings().mergeCells) {\n
    return;\n
  }\n
  defaultOptions.items.push(Handsontable.plugins.ContextMenu.SEPARATOR);\n
  defaultOptions.items.push({\n
    key: \'mergeCells\',\n
    name: function() {\n
      var sel = this.getSelected();\n
      var info = this.mergeCells.mergedCellInfoCollection.getInfo(sel[0], sel[1]);\n
      if (info) {\n
        return \'Unmerge cells\';\n
      } else {\n
        return \'Merge cells\';\n
      }\n
    },\n
    callback: function() {\n
      this.mergeCells.mergeOrUnmergeSelection(this.getSelectedRange());\n
      this.render();\n
    },\n
    disabled: function() {\n
      return false;\n
    }\n
  });\n
};\n
var afterRenderer = function(TD, row, col, prop, value, cellProperties) {\n
  if (this.mergeCells) {\n
    this.mergeCells.applySpanProperties(TD, row, col);\n
  }\n
};\n
var modifyTransformFactory = function(hook) {\n
  return function(delta) {\n
    var mergeCellsSetting = this.getSettings().mergeCells;\n
    if (mergeCellsSetting) {\n
      var currentSelectedRange = this.getSelectedRange();\n
      this.mergeCells.modifyTransform(hook, currentSelectedRange, delta);\n
      if (hook === "modifyTransformEnd") {\n
        var totalRows = this.countRows();\n
        var totalCols = this.countCols();\n
        if (currentSelectedRange.from.row < 0) {\n
          currentSelectedRange.from.row = 0;\n
        } else if (currentSelectedRange.from.row > 0 && currentSelectedRange.from.row >= totalRows) {\n
          currentSelectedRange.from.row = currentSelectedRange.from - 1;\n
        }\n
        if (currentSelectedRange.from.col < 0) {\n
          currentSelectedRange.from.col = 0;\n
        } else if (currentSelectedRange.from.col > 0 && currentSelectedRange.from.col >= totalCols) {\n
          currentSelectedRange.from.col = totalCols - 1;\n
        }\n
      }\n
    }\n
  };\n
};\n
var beforeSetRangeEnd = function(coords) {\n
  this.lastDesiredCoords = null;\n
  var mergeCellsSetting = this.getSettings().mergeCells;\n
  if (mergeCellsSetting) {\n
    var selRange = this.getSelectedRange();\n
    selRange.highlight = new WalkontableCellCoords(selRange.highlight.row, selRange.highlight.col);\n
    selRange.to = coords;\n
    var rangeExpanded = false;\n
    do {\n
      rangeExpanded = false;\n
      for (var i = 0,\n
          ilen = this.mergeCells.mergedCellInfoCollection.length; i < ilen; i++) {\n
        var cellInfo = this.mergeCells.mergedCellInfoCollection[i];\n
        var mergedCellTopLeft = new WalkontableCellCoords(cellInfo.row, cellInfo.col);\n
        var mergedCellBottomRight = new WalkontableCellCoords(cellInfo.row + cellInfo.rowspan - 1, cellInfo.col + cellInfo.colspan - 1);\n
        var mergedCellRange = new WalkontableCellRange(mergedCellTopLeft, mergedCellTopLeft, mergedCellBottomRight);\n
        if (selRange.expandByRange(mergedCellRange)) {\n
          coords.row = selRange.to.row;\n
          coords.col = selRange.to.col;\n
          rangeExpanded = true;\n
        }\n
      }\n
    } while (rangeExpanded);\n
  }\n
};\n
var beforeDrawAreaBorders = function(corners, className) {\n
  if (className && className == \'area\') {\n
    var mergeCellsSetting = this.getSettings().mergeCells;\n
    if (mergeCellsSetting) {\n
      var selRange = this.getSelectedRange();\n
      var startRange = new WalkontableCellRange(selRange.from, selRange.from, selRange.from);\n
      var stopRange = new WalkontableCellRange(selRange.to, selRange.to, selRange.to);\n
      for (var i = 0,\n
          ilen = this.mergeCells.mergedCellInfoCollection.length; i < ilen; i++) {\n
        var cellInfo = this.mergeCells.mergedCellInfoCollection[i];\n
        var mergedCellTopLeft = new WalkontableCellCoords(cellInfo.row, cellInfo.col);\n
        var mergedCellBottomRight = new WalkontableCellCoords(cellInfo.row + cellInfo.rowspan - 1, cellInfo.col + cellInfo.colspan - 1);\n
        var mergedCellRange = new WalkontableCellRange(mergedCellTopLeft, mergedCellTopLeft, mergedCellBottomRight);\n
        if (startRange.expandByRange(mergedCellRange)) {\n
          corners[0] = startRange.from.row;\n
          corners[1] = startRange.from.col;\n
        }\n
        if (stopRange.expandByRange(mergedCellRange)) {\n
          corners[2] = stopRange.from.row;\n
          corners[3] = stopRange.from.col;\n
        }\n
      }\n
    }\n
  }\n
};\n
var afterGetCellMeta = function(row, col, cellProperties) {\n
  var mergeCellsSetting = this.getSettings().mergeCells;\n
  if (mergeCellsSetting) {\n
    var mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(row, col);\n
    if (mergeParent && (mergeParent.row != row || mergeParent.col != col)) {\n
      cellProperties.copyable = false;\n
    }\n
  }\n
};\n
var afterViewportRowCalculatorOverride = function(calc) {\n
  var mergeCellsSetting = this.getSettings().mergeCells;\n
  if (mergeCellsSetting) {\n
    var colCount = this.countCols();\n
    var mergeParent;\n
    for (var c = 0; c < colCount; c++) {\n
      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(calc.startRow, c);\n
      if (mergeParent) {\n
        if (mergeParent.row < calc.startRow) {\n
          calc.startRow = mergeParent.row;\n
          return afterViewportRowCalculatorOverride.call(this, calc);\n
        }\n
      }\n
      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(calc.endRow, c);\n
      if (mergeParent) {\n
        var mergeEnd = mergeParent.row + mergeParent.rowspan - 1;\n
        if (mergeEnd > calc.endRow) {\n
          calc.endRow = mergeEnd;\n
          return afterViewportRowCalculatorOverride.call(this, calc);\n
        }\n
      }\n
    }\n
  }\n
};\n
var afterViewportColumnCalculatorOverride = function(calc) {\n
  var mergeCellsSetting = this.getSettings().mergeCells;\n
  if (mergeCellsSetting) {\n
    var rowCount = this.countRows();\n
    var mergeParent;\n
    for (var r = 0; r < rowCount; r++) {\n
      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(r, calc.startColumn);\n
      if (mergeParent) {\n
        if (mergeParent.col < calc.startColumn) {\n
          calc.startColumn = mergeParent.col;\n
          return afterViewportColumnCalculatorOverride.call(this, calc);\n
        }\n
      }\n
      mergeParent = this.mergeCells.mergedCellInfoCollection.getInfo(r, calc.endColumn);\n
      if (mergeParent) {\n
        var mergeEnd = mergeParent.col + mergeParent.colspan - 1;\n
        if (mergeEnd > calc.endColumn) {\n
          calc.endColumn = mergeEnd;\n
          return afterViewportColumnCalculatorOverride.call(this, calc);\n
        }\n
      }\n
    }\n
  }\n
};\n
var isMultipleSelection = function(isMultiple) {\n
  if (isMultiple && this.mergeCells) {\n
    var mergedCells = this.mergeCells.mergedCellInfoCollection,\n
        selectionRange = this.getSelectedRange();\n
    for (var group in mergedCells) {\n
      if (selectionRange.highlight.row == mergedCells[group].row && selectionRange.highlight.col == mergedCells[group].col && selectionRange.to.row == mergedCells[group].row + mergedCells[group].rowspan - 1 && selectionRange.to.col == mergedCells[group].col + mergedCells[group].colspan - 1) {\n
        return false;\n
      }\n
    }\n
  }\n
  return isMultiple;\n
};\n
function afterAutofillApplyValues(select, drag) {\n
  var mergeCellsSetting = this.getSettings().mergeCells;\n
  if (!mergeCellsSetting || this.selection.isMultiple()) {\n
    return;\n
  }\n
  var info = this.mergeCells.mergedCellInfoCollection.getInfo(select[0], select[1]);\n
  if (info) {\n
    select[0] = info.row;\n
    select[1] = info.col;\n
    select[2] = info.row + info.rowspan - 1;\n
    select[3] = info.col + info.colspan - 1;\n
  }\n
}\n
Handsontable.hooks.add(\'beforeInit\', beforeInit);\n
Handsontable.hooks.add(\'afterInit\', afterInit);\n
Handsontable.hooks.add(\'beforeKeyDown\', onBeforeKeyDown);\n
Handsontable.hooks.add(\'modifyTransformStart\', modifyTransformFactory(\'modifyTransformStart\'));\n
Handsontable.hooks.add(\'modifyTransformEnd\', modifyTransformFactory(\'modifyTransformEnd\'));\n
Handsontable.hooks.add(\'beforeSetRangeEnd\', beforeSetRangeEnd);\n
Handsontable.hooks.add(\'beforeDrawBorders\', beforeDrawAreaBorders);\n
Handsontable.hooks.add(\'afterIsMultipleSelection\', isMultipleSelection);\n
Handsontable.hooks.add(\'afterRenderer\', afterRenderer);\n
Handsontable.hooks.add(\'afterContextMenuDefaultOptions\', addMergeActionsToContextMenu);\n
Handsontable.hooks.add(\'afterGetCellMeta\', afterGetCellMeta);\n
Handsontable.hooks.add(\'afterViewportRowCalculatorOverride\', afterViewportRowCalculatorOverride);\n
Handsontable.hooks.add(\'afterViewportColumnCalculatorOverride\', afterViewportColumnCalculatorOverride);\n
Handsontable.hooks.add(\'afterAutofillApplyValues\', afterAutofillApplyValues);\n
Handsontable.MergeCells = MergeCells;\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/cell/range":6,"3rdparty/walkontable/src/table":20,"helpers/dom/event":45,"plugins":55}],81:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  MultipleSelectionHandles: {get: function() {\n
      return MultipleSelectionHandles;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__95_base__,\n
    $___46__46__47__46__46__47_eventManager__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    getWindowScrollTop = $__0.getWindowScrollTop,\n
    hasClass = $__0.hasClass,\n
    getWindowScrollLeft = $__0.getWindowScrollLeft;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var EventManager = ($___46__46__47__46__46__47_eventManager__ = require("eventManager"), $___46__46__47__46__46__47_eventManager__ && $___46__46__47__46__46__47_eventManager__.__esModule && $___46__46__47__46__46__47_eventManager__ || {default: $___46__46__47__46__46__47_eventManager__}).EventManager;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var MultipleSelectionHandles = function MultipleSelectionHandles(hotInstance) {\n
  $traceurRuntime.superConstructor($MultipleSelectionHandles).call(this, hotInstance);\n
  this.dragged = [];\n
  this.eventManager = null;\n
  this.lastSetCell = null;\n
};\n
var $MultipleSelectionHandles = MultipleSelectionHandles;\n
($traceurRuntime.createClass)(MultipleSelectionHandles, {\n
  isEnabled: function() {\n
    return Handsontable.mobileBrowser;\n
  },\n
  enablePlugin: function() {\n
    if (this.enabled) {\n
      return;\n
    }\n
    if (!this.eventManager) {\n
      this.eventManager = new EventManager(this);\n
    }\n
    this.registerListeners();\n
    $traceurRuntime.superGet(this, $MultipleSelectionHandles.prototype, "enablePlugin").call(this);\n
  },\n
  registerListeners: function() {\n
    var _this = this;\n
    function removeFromDragged(query) {\n
      if (_this.dragged.length === 1) {\n
        _this.dragged.splice(0, _this.dragged.length);\n
        return true;\n
      }\n
      var entryPosition = _this.dragged.indexOf(query);\n
      if (entryPosition == -1) {\n
        return false;\n
      } else if (entryPosition === 0) {\n
        _this.dragged = _this.dragged.slice(0, 1);\n
      } else if (entryPosition == 1) {\n
        _this.dragged = _this.dragged.slice(-1);\n
      }\n
    }\n
    this.eventManager.addEventListener(this.hot.rootElement, \'touchstart\', function(event) {\n
      var selectedRange;\n
      if (hasClass(event.target, "topLeftSelectionHandle-HitArea")) {\n
        selectedRange = _this.hot.getSelectedRange();\n
        _this.dragged.push("topLeft");\n
        _this.touchStartRange = {\n
          width: selectedRange.getWidth(),\n
          height: selectedRange.getHeight(),\n
          direction: selectedRange.getDirection()\n
        };\n
        event.preventDefault();\n
        return false;\n
      } else if (hasClass(event.target, "bottomRightSelectionHandle-HitArea")) {\n
        selectedRange = _this.hot.getSelectedRange();\n
        _this.dragged.push("bottomRight");\n
        _this.touchStartRange = {\n
          width: selectedRange.getWidth(),\n
          height: selectedRange.getHeight(),\n
          direction: selectedRange.getDirection()\n
        };\n
        event.preventDefault();\n
        return false;\n
      }\n
    });\n
    this.eventManager.addEventListener(this.hot.rootElement, \'touchend\', function(event) {\n
      if (hasClass(event.target, "topLeftSelectionHandle-HitArea")) {\n
        removeFromDragged.call(_this, "topLeft");\n
        _this.touchStartRange = void 0;\n
        event.preventDefault();\n
        return false;\n
      } else if (hasClass(event.target, "bottomRightSelectionHandle-HitArea")) {\n
        removeFromDragged.call(_this, "bottomRight");\n
        _this.touchStartRange = void 0;\n
        event.preventDefault();\n
        return false;\n
      }\n
    });\n
    this.eventManager.addEventListener(this.hot.rootElement, \'touchmove\', function(event) {\n
      var scrollTop = getWindowScrollTop(),\n
          scrollLeft = getWindowScrollLeft(),\n
          endTarget,\n
          targetCoords,\n
          selectedRange,\n
          rangeWidth,\n
          rangeHeight,\n
          rangeDirection,\n
          newRangeCoords;\n
      if (_this.dragged.length === 0) {\n
        return;\n
      }\n
      endTarget = document.elementFromPoint(event.touches[0].screenX - scrollLeft, event.touches[0].screenY - scrollTop);\n
      if (!endTarget || endTarget === _this.lastSetCell) {\n
        return;\n
      }\n
      if (endTarget.nodeName == "TD" || endTarget.nodeName == "TH") {\n
        targetCoords = _this.hot.getCoords(endTarget);\n
        if (targetCoords.col == -1) {\n
          targetCoords.col = 0;\n
        }\n
        selectedRange = _this.hot.getSelectedRange();\n
        rangeWidth = selectedRange.getWidth();\n
        rangeHeight = selectedRange.getHeight();\n
        rangeDirection = selectedRange.getDirection();\n
        if (rangeWidth == 1 && rangeHeight == 1) {\n
          _this.hot.selection.setRangeEnd(targetCoords);\n
        }\n
        newRangeCoords = _this.getCurrentRangeCoords(selectedRange, targetCoords, _this.touchStartRange.direction, rangeDirection, _this.dragged[0]);\n
        if (newRangeCoords.start !== null) {\n
          _this.hot.selection.setRangeStart(newRangeCoords.start);\n
        }\n
        _this.hot.selection.setRangeEnd(newRangeCoords.end);\n
        _this.lastSetCell = endTarget;\n
      }\n
      event.preventDefault();\n
    });\n
  },\n
  getCurrentRangeCoords: function(selectedRange, currentTouch, touchStartDirection, currentDirection, draggedHandle) {\n
    var topLeftCorner = selectedRange.getTopLeftCorner(),\n
        bottomRightCorner = selectedRange.getBottomRightCorner(),\n
        bottomLeftCorner = selectedRange.getBottomLeftCorner(),\n
        topRightCorner = selectedRange.getTopRightCorner();\n
    var newCoords = {\n
      start: null,\n
      end: null\n
    };\n
    switch (touchStartDirection) {\n
      case "NE-SW":\n
        switch (currentDirection) {\n
          case "NE-SW":\n
          case "NW-SE":\n
            if (draggedHandle == "topLeft") {\n
              newCoords = {\n
                start: new WalkontableCellCoords(currentTouch.row, selectedRange.highlight.col),\n
                end: new WalkontableCellCoords(bottomLeftCorner.row, currentTouch.col)\n
              };\n
            } else {\n
              newCoords = {\n
                start: new WalkontableCellCoords(selectedRange.highlight.row, currentTouch.col),\n
                end: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col)\n
              };\n
            }\n
            break;\n
          case "SE-NW":\n
            if (draggedHandle == "bottomRight") {\n
              newCoords = {\n
                start: new WalkontableCellCoords(bottomRightCorner.row, currentTouch.col),\n
                end: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col)\n
              };\n
            }\n
            break;\n
        }\n
        break;\n
      case "NW-SE":\n
        switch (currentDirection) {\n
          case "NE-SW":\n
            if (draggedHandle == "topLeft") {\n
              newCoords = {\n
                start: currentTouch,\n
                end: bottomLeftCorner\n
              };\n
            } else {\n
              newCoords.end = currentTouch;\n
            }\n
            break;\n
          case "NW-SE":\n
            if (draggedHandle == "topLeft") {\n
              newCoords = {\n
                start: currentTouch,\n
                end: bottomRightCorner\n
              };\n
            } else {\n
              newCoords.end = currentTouch;\n
            }\n
            break;\n
          case "SE-NW":\n
            if (draggedHandle == "topLeft") {\n
              newCoords = {\n
                start: currentTouch,\n
                end: topLeftCorner\n
              };\n
            } else {\n
              newCoords.end = currentTouch;\n
            }\n
            break;\n
          case "SW-NE":\n
            if (draggedHandle == "topLeft") {\n
              newCoords = {\n
                start: currentTouch,\n
                end: topRightCorner\n
              };\n
            } else {\n
              newCoords.end = currentTouch;\n
            }\n
            break;\n
        }\n
        break;\n
      case "SW-NE":\n
        switch (currentDirection) {\n
          case "NW-SE":\n
            if (draggedHandle == "bottomRight") {\n
              newCoords = {\n
                start: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col),\n
                end: new WalkontableCellCoords(bottomLeftCorner.row, currentTouch.col)\n
              };\n
            } else {\n
              newCoords = {\n
                start: new WalkontableCellCoords(topLeftCorner.row, currentTouch.col),\n
                end: new WalkontableCellCoords(currentTouch.row, bottomRightCorner.col)\n
              };\n
            }\n
            break;\n
          case "SW-NE":\n
            if (draggedHandle == "topLeft") {\n
              newCoords = {\n
                start: new WalkontableCellCoords(selectedRange.highlight.row, currentTouch.col),\n
                end: new WalkontableCellCoords(currentTouch.row, bottomRightCorner.col)\n
              };\n
            } else {\n
              newCoords = {\n
                start: new WalkontableCellCoords(currentTouch.row, topLeftCorner.col),\n
                end: new WalkontableCellCoords(topLeftCorner.row, currentTouch.col)\n
              };\n
            }\n
            break;\n
          case "SE-NW":\n
            if (draggedHandle == "bottomRight") {\n
              newCoords = {\n
                start: new WalkontableCellCoords(currentTouch.row, topRightCorner.col),\n
                end: new WalkontableCellCoords(topLeftCorner.row, currentTouch.col)\n
              };\n
            } else if (draggedHandle == "topLeft") {\n
              newCoords = {\n
                start: bottomLeftCorner,\n
                end: currentTouch\n
              };\n
            }\n
            break;\n
        }\n
        break;\n
      case "SE-NW":\n
        switch (currentDirection) {\n
          case "NW-SE":\n
          case "NE-SW":\n
          case "SW-NE":\n
            if (draggedHandle == "topLeft") {\n
              newCoords.end = currentTouch;\n
            }\n
            break;\n
          case "SE-NW":\n
            if (draggedHandle == "topLeft") {\n
              newCoords.end = currentTouch;\n
            } else {\n
              newCoords = {\n
                start: currentTouch,\n
                end: topLeftCorner\n
              };\n
            }\n
            break;\n
        }\n
        break;\n
    }\n
    return newCoords;\n
  },\n
  isDragged: function() {\n
    return this.dragged.length > 0;\n
  }\n
}, {}, BasePlugin);\n
;\n
registerPlugin(\'multipleSelectionHandles\', MultipleSelectionHandles);\n
\n
//# \n
},{"_base":56,"eventManager":40,"helpers/dom/element":44,"plugins":55}],82:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  ObserveChanges: {get: function() {\n
      return ObserveChanges;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_plugins__,\n
    $__jsonpatch__;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var jsonpatch = ($__jsonpatch__ = require("jsonpatch"), $__jsonpatch__ && $__jsonpatch__.__esModule && $__jsonpatch__ || {default: $__jsonpatch__}).default;\n
;\n
function ObserveChanges() {}\n
Handsontable.hooks.add(\'afterLoadData\', init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', init);\n
Handsontable.hooks.register(\'afterChangesObserved\');\n
function init() {\n
  var instance = this;\n
  var pluginEnabled = instance.getSettings().observeChanges;\n
  if (pluginEnabled) {\n
    if (instance.observer) {\n
      destroy.call(instance);\n
    }\n
    createObserver.call(instance);\n
    bindEvents.call(instance);\n
  } else if (!pluginEnabled) {\n
    destroy.call(instance);\n
  }\n
}\n
function createObserver() {\n
  var instance = this;\n
  instance.observeChangesActive = true;\n
  instance.pauseObservingChanges = function() {\n
    instance.observeChangesActive = false;\n
  };\n
  instance.resumeObservingChanges = function() {\n
    instance.observeChangesActive = true;\n
  };\n
  instance.observedData = instance.getData();\n
  instance.observer = jsonpatch.observe(instance.observedData, function(patches) {\n
    if (instance.observeChangesActive) {\n
      runHookForOperation.call(instance, patches);\n
      instance.render();\n
    }\n
    instance.runHooks(\'afterChangesObserved\');\n
  });\n
}\n
function runHookForOperation(rawPatches) {\n
  var instance = this;\n
  var patches = cleanPatches(rawPatches);\n
  for (var i = 0,\n
      len = patches.length; i < len; i++) {\n
    var patch = patches[i];\n
    var parsedPath = parsePath(patch.path);\n
    switch (patch.op) {\n
      case \'add\':\n
        if (isNaN(parsedPath.col)) {\n
          instance.runHooks(\'afterCreateRow\', parsedPath.row);\n
        } else {\n
          instance.runHooks(\'afterCreateCol\', parsedPath.col);\n
        }\n
        break;\n
      case \'remove\':\n
        if (isNaN(parsedPath.col)) {\n
          instance.runHooks(\'afterRemoveRow\', parsedPath.row, 1);\n
        } else {\n
          instance.runHooks(\'afterRemoveCol\', parsedPath.col, 1);\n
        }\n
        break;\n
      case \'replace\':\n
        instance.runHooks(\'afterChange\', [parsedPath.row, parsedPath.col, null, patch.value], \'external\');\n
        break;\n
    }\n
  }\n
  function cleanPatches(rawPatches) {\n
    var patches;\n
    patches = removeLengthRelatedPatches(rawPatches);\n
    patches = removeMultipleAddOrRemoveColPatches(patches);\n
    return patches;\n
  }\n
  function removeMultipleAddOrRemoveColPatches(rawPatches) {\n
    var newOrRemovedColumns = [];\n
    return rawPatches.filter(function(patch) {\n
      var parsedPath = parsePath(patch.path);\n
      if ([\'add\', \'remove\'].indexOf(patch.op) != -1 && !isNaN(parsedPath.col)) {\n
        if (newOrRemovedColumns.indexOf(parsedPath.col) != -1) {\n
          return false;\n
        } else {\n
          newOrRemovedColumns.push(parsedPath.col);\n
        }\n
      }\n
      return true;\n
    });\n
  }\n
  function removeLengthRelatedPatches(rawPatches) {\n
    return rawPatches.filter(function(patch) {\n
      return !/[/]length/ig.test(patch.path);\n
    });\n
  }\n
  function parsePath(path) {\n
    var match = path.match(/^\\/(\\d+)\\/?(.*)?$/);\n
    return {\n
      row: parseInt(match[1], 10),\n
      col: /^\\d*$/.test(match[2]) ? parseInt(match[2], 10) : match[2]\n
    };\n
  }\n
}\n
function destroy() {\n
  var instance = this;\n
  if (instance.observer) {\n
    destroyObserver.call(instance);\n
    unbindEvents.call(instance);\n
  }\n
}\n
function destroyObserver() {\n
  var instance = this;\n
  jsonpatch.unobserve(instance.observedData, instance.observer);\n
  delete instance.observedData;\n
  delete instance.observeChangesActive;\n
  delete instance.pauseObservingChanges;\n
  delete instance.resumeObservingChanges;\n
}\n
function bindEvents() {\n
  var instance = this;\n
  instance.addHook(\'afterDestroy\', destroy);\n
  instance.addHook(\'afterCreateRow\', afterTableAlter);\n
  instance.addHook(\'afterRemoveRow\', afterTableAlter);\n
  instance.addHook(\'afterCreateCol\', afterTableAlter);\n
  instance.addHook(\'afterRemoveCol\', afterTableAlter);\n
  instance.addHook(\'afterChange\', function(changes, source) {\n
    if (source != \'loadData\') {\n
      afterTableAlter.call(this);\n
    }\n
  });\n
}\n
function unbindEvents() {\n
  var instance = this;\n
  instance.removeHook(\'afterDestroy\', destroy);\n
  instance.removeHook(\'afterCreateRow\', afterTableAlter);\n
  instance.removeHook(\'afterRemoveRow\', afterTableAlter);\n
  instance.removeHook(\'afterCreateCol\', afterTableAlter);\n
  instance.removeHook(\'afterRemoveCol\', afterTableAlter);\n
  instance.removeHook(\'afterChange\', afterTableAlter);\n
}\n
function afterTableAlter() {\n
  var instance = this;\n
  instance.pauseObservingChanges();\n
  instance.addHookOnce(\'afterChangesObserved\', function() {\n
    instance.resumeObservingChanges();\n
  });\n
}\n
\n
//# \n
},{"jsonpatch":"jsonpatch","plugins":55}],83:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  HandsontablePersistentState: {get: function() {\n
      return HandsontablePersistentState;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_plugins__;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
;\n
function Storage(prefix) {\n
  var savedKeys;\n
  var saveSavedKeys = function() {\n
    window.localStorage[prefix + \'__\' + \'persistentStateKeys\'] = JSON.stringify(savedKeys);\n
  };\n
  var loadSavedKeys = function() {\n
    var keysJSON = window.localStorage[prefix + \'__\' + \'persistentStateKeys\'];\n
    var keys = typeof keysJSON == \'string\' ? JSON.parse(keysJSON) : void 0;\n
    savedKeys = keys ? keys : [];\n
  };\n
  var clearSavedKeys = function() {\n
    savedKeys = [];\n
    saveSavedKeys();\n
  };\n
  loadSavedKeys();\n
  this.saveValue = function(key, value) {\n
    window.localStorage[prefix + \'_\' + key] = JSON.stringify(value);\n
    if (savedKeys.indexOf(key) == -1) {\n
      savedKeys.push(key);\n
      saveSavedKeys();\n
    }\n
  };\n
  this.loadValue = function(key, defaultValue) {\n
    key = typeof key != \'undefined\' ? key : defaultValue;\n
    var value = window.localStorage[prefix + \'_\' + key];\n
    return typeof value == "undefined" ? void 0 : JSON.parse(value);\n
  };\n
  this.reset = function(key) {\n
    window.localStorage.removeItem(prefix + \'_\' + key);\n
  };\n
  this.resetAll = function() {\n
    for (var index = 0; index < savedKeys.length; index++) {\n
      window.localStorage.removeItem(prefix + \'_\' + savedKeys[index]);\n
    }\n
    clearSavedKeys();\n
  };\n
}\n
function HandsontablePersistentState() {\n
  var plugin = this;\n
  this.init = function() {\n
    var instance = this,\n
        pluginSettings = instance.getSettings().persistentState;\n
    plugin.enabled = !!(pluginSettings);\n
    if (!plugin.enabled) {\n
      removeHooks.call(instance);\n
      return;\n
    }\n
    if (!instance.storage) {\n
      instance.storage = new Storage(instance.rootElement.id);\n
    }\n
    instance.resetState = plugin.resetValue;\n
    addHooks.call(instance);\n
  };\n
  this.saveValue = function(key, value) {\n
    var instance = this;\n
    instance.storage.saveValue(key, value);\n
  };\n
  this.loadValue = function(key, saveTo) {\n
    var instance = this;\n
    saveTo.value = instance.storage.loadValue(key);\n
  };\n
  this.resetValue = function(key) {\n
    var instance = this;\n
    if (typeof key != \'undefined\') {\n
      instance.storage.reset(key);\n
    } else {\n
      instance.storage.resetAll();\n
    }\n
  };\n
  var hooks = {\n
    \'persistentStateSave\': plugin.saveValue,\n
    \'persistentStateLoad\': plugin.loadValue,\n
    \'persistentStateReset\': plugin.resetValue\n
  };\n
  for (var hookName in hooks) {\n
    if (hooks.hasOwnProperty(hookName)) {\n
      Handsontable.hooks.register(hookName);\n
    }\n
  }\n
  function addHooks() {\n
    var instance = this;\n
    for (var hookName in hooks) {\n
      if (hooks.hasOwnProperty(hookName)) {\n
        instance.addHook(hookName, hooks[hookName]);\n
      }\n
    }\n
  }\n
  function removeHooks() {\n
    var instance = this;\n
    for (var hookName in hooks) {\n
      if (hooks.hasOwnProperty(hookName)) {\n
        instance.removeHook(hookName, hooks[hookName]);\n
      }\n
    }\n
  }\n
}\n
var htPersistentState = new HandsontablePersistentState();\n
Handsontable.hooks.add(\'beforeInit\', htPersistentState.init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', htPersistentState.init);\n
\n
//# \n
},{"plugins":55}],84:[function(require,module,exports){\n
"use strict";\n
var $___46__46__47__46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47__46__46__47_renderers__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    removeClass = $__0.removeClass;\n
var $__1 = ($___46__46__47__46__46__47_renderers__ = require("renderers"), $___46__46__47__46__46__47_renderers__ && $___46__46__47__46__46__47_renderers__.__esModule && $___46__46__47__46__46__47_renderers__ || {default: $___46__46__47__46__46__47_renderers__}),\n
    registerRenderer = $__1.registerRenderer,\n
    getRenderer = $__1.getRenderer;\n
Handsontable.Search = function Search(instance) {\n
  this.query = function(queryStr, callback, queryMethod) {\n
    var rowCount = instance.countRows();\n
    var colCount = instance.countCols();\n
    var queryResult = [];\n
    if (!callback) {\n
      callback = Handsontable.Search.global.getDefaultCallback();\n
    }\n
    if (!queryMethod) {\n
      queryMethod = Handsontable.Search.global.getDefaultQueryMethod();\n
    }\n
    for (var rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n
      for (var colIndex = 0; colIndex < colCount; colIndex++) {\n
        var cellData = instance.getDataAtCell(rowIndex, colIndex);\n
        var cellProperties = instance.getCellMeta(rowIndex, colIndex);\n
        var cellCallback = cellProperties.search.callback || callback;\n
        var cellQueryMethod = cellProperties.search.queryMethod || queryMethod;\n
        var testResult = cellQueryMethod(queryStr, cellData);\n
        if (testResult) {\n
          var singleResult = {\n
            row: rowIndex,\n
            col: colIndex,\n
            data: cellData\n
          };\n
          queryResult.push(singleResult);\n
        }\n
        if (cellCallback) {\n
          cellCallback(instance, rowIndex, colIndex, cellData, testResult);\n
        }\n
      }\n
    }\n
    return queryResult;\n
  };\n
};\n
Handsontable.Search.DEFAULT_CALLBACK = function(instance, row, col, data, testResult) {\n
  instance.getCellMeta(row, col).isSearchResult = testResult;\n
};\n
Handsontable.Search.DEFAULT_QUERY_METHOD = function(query, value) {\n
  if (typeof query == \'undefined\' || query == null || !query.toLowerCase || query.length === 0) {\n
    return false;\n
  }\n
  if (typeof value == \'undefined\' || value == null) {\n
    return false;\n
  }\n
  return value.toString().toLowerCase().indexOf(query.toLowerCase()) != -1;\n
};\n
Handsontable.Search.DEFAULT_SEARCH_RESULT_CLASS = \'htSearchResult\';\n
Handsontable.Search.global = (function() {\n
  var defaultCallback = Handsontable.Search.DEFAULT_CALLBACK;\n
  var defaultQueryMethod = Handsontable.Search.DEFAULT_QUERY_METHOD;\n
  var defaultSearchResultClass = Handsontable.Search.DEFAULT_SEARCH_RESULT_CLASS;\n
  return {\n
    getDefaultCallback: function() {\n
      return defaultCallback;\n
    },\n
    setDefaultCallback: function(newDefaultCallback) {\n
      defaultCallback = newDefaultCallback;\n
    },\n
    getDefaultQueryMethod: function() {\n
      return defaultQueryMethod;\n
    },\n
    setDefaultQueryMethod: function(newDefaultQueryMethod) {\n
      defaultQueryMethod = newDefaultQueryMethod;\n
    },\n
    getDefaultSearchResultClass: function() {\n
      return defaultSearchResultClass;\n
    },\n
    setDefaultSearchResultClass: function(newSearchResultClass) {\n
      defaultSearchResultClass = newSearchResultClass;\n
    }\n
  };\n
})();\n
Handsontable.SearchCellDecorator = function(instance, TD, row, col, prop, value, cellProperties) {\n
  var searchResultClass = (cellProperties.search !== null && typeof cellProperties.search == \'object\' && cellProperties.search.searchResultClass) || Handsontable.Search.global.getDefaultSearchResultClass();\n
  if (cellProperties.isSearchResult) {\n
    addClass(TD, searchResultClass);\n
  } else {\n
    removeClass(TD, searchResultClass);\n
  }\n
};\n
var originalBaseRenderer = getRenderer(\'base\');\n
registerRenderer(\'base\', function(instance, TD, row, col, prop, value, cellProperties) {\n
  originalBaseRenderer.apply(this, arguments);\n
  Handsontable.SearchCellDecorator.apply(this, arguments);\n
});\n
function init() {\n
  var instance = this;\n
  var pluginEnabled = !!instance.getSettings().search;\n
  if (pluginEnabled) {\n
    instance.search = new Handsontable.Search(instance);\n
  } else {\n
    delete instance.search;\n
  }\n
}\n
Handsontable.hooks.add(\'afterInit\', init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', init);\n
\n
//# \n
},{"helpers/dom/element":44,"renderers":87}],85:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  TouchScroll: {get: function() {\n
      return TouchScroll;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47__46__46__47_helpers_47_dom_47_elemen

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAw=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="12" aka="AAAAAAAAAAw=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

t__,\n
    $___46__46__47__95_base__,\n
    $___46__46__47__46__46__47_plugins__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47__46__46__47_helpers_47_dom_47_element__ && $___46__46__47__46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    removeClass = $__0.removeClass;\n
var BasePlugin = ($___46__46__47__95_base__ = require("_base"), $___46__46__47__95_base__ && $___46__46__47__95_base__.__esModule && $___46__46__47__95_base__ || {default: $___46__46__47__95_base__}).default;\n
var registerPlugin = ($___46__46__47__46__46__47_plugins__ = require("plugins"), $___46__46__47__46__46__47_plugins__ && $___46__46__47__46__46__47_plugins__.__esModule && $___46__46__47__46__46__47_plugins__ || {default: $___46__46__47__46__46__47_plugins__}).registerPlugin;\n
var TouchScroll = function TouchScroll(hotInstance) {\n
  var $__3 = this;\n
  $traceurRuntime.superConstructor($TouchScroll).call(this, hotInstance);\n
  this.hot.addHook(\'afterInit\', (function() {\n
    return $__3.afterInit();\n
  }));\n
  this.hot.addHook(\'afterUpdateSettings\', (function() {\n
    return $__3.onAfterUpdateSettings();\n
  }));\n
  this.scrollbars = [];\n
  this.clones = [];\n
};\n
var $TouchScroll = TouchScroll;\n
($traceurRuntime.createClass)(TouchScroll, {\n
  afterInit: function() {\n
    this.registerEvents();\n
    this.onAfterUpdateSettings();\n
  },\n
  onAfterUpdateSettings: function() {\n
    var _this = this;\n
    this.hot.addHookOnce(\'afterRender\', function() {\n
      var wtOverlays = _this.hot.view.wt.wtOverlays;\n
      _this.scrollbars = [];\n
      _this.scrollbars.push(wtOverlays.topOverlay);\n
      _this.scrollbars.push(wtOverlays.leftOverlay);\n
      if (wtOverlays.topLeftCornerOverlay) {\n
        _this.scrollbars.push(wtOverlays.topLeftCornerOverlay);\n
      }\n
      _this.clones = [];\n
      if (wtOverlays.topOverlay.needFullRender) {\n
        _this.clones.push(wtOverlays.topOverlay.clone.wtTable.holder.parentNode);\n
      }\n
      if (wtOverlays.leftOverlay.needFullRender) {\n
        _this.clones.push(wtOverlays.leftOverlay.clone.wtTable.holder.parentNode);\n
      }\n
      if (wtOverlays.topLeftCornerOverlay) {\n
        _this.clones.push(wtOverlays.topLeftCornerOverlay.clone.wtTable.holder.parentNode);\n
      }\n
    });\n
  },\n
  registerEvents: function() {\n
    var $__3 = this;\n
    this.hot.addHook(\'beforeTouchScroll\', (function() {\n
      return $__3.onBeforeTouchScroll();\n
    }));\n
    this.hot.addHook(\'afterMomentumScroll\', (function() {\n
      return $__3.onAfterMomentumScroll();\n
    }));\n
  },\n
  onBeforeTouchScroll: function() {\n
    Handsontable.freezeOverlays = true;\n
    for (var i = 0,\n
        cloneCount = this.clones.length; i < cloneCount; i++) {\n
      addClass(this.clones[i], \'hide-tween\');\n
    }\n
  },\n
  onAfterMomentumScroll: function() {\n
    Handsontable.freezeOverlays = false;\n
    var _that = this;\n
    for (var i = 0,\n
        cloneCount = this.clones.length; i < cloneCount; i++) {\n
      removeClass(this.clones[i], \'hide-tween\');\n
    }\n
    for (var i$__5 = 0,\n
        cloneCount$__6 = this.clones.length; i$__5 < cloneCount$__6; i$__5++) {\n
      addClass(this.clones[i$__5], \'show-tween\');\n
    }\n
    setTimeout(function() {\n
      for (var i = 0,\n
          cloneCount = _that.clones.length; i < cloneCount; i++) {\n
        removeClass(_that.clones[i], \'show-tween\');\n
      }\n
    }, 400);\n
    for (var i$__7 = 0,\n
        cloneCount$__8 = this.scrollbars.length; i$__7 < cloneCount$__8; i$__7++) {\n
      this.scrollbars[i$__7].refresh();\n
      this.scrollbars[i$__7].resetFixedPosition();\n
    }\n
    this.hot.view.wt.wtOverlays.syncScrollWithMaster();\n
  }\n
}, {}, BasePlugin);\n
;\n
registerPlugin(\'touchScroll\', TouchScroll);\n
\n
//# \n
},{"_base":56,"helpers/dom/element":44,"plugins":55}],86:[function(require,module,exports){\n
"use strict";\n
var $___46__46__47__46__46__47_helpers_47_object__,\n
    $___46__46__47__46__46__47_helpers_47_dom_47_event__;\n
var $__0 = ($___46__46__47__46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47__46__46__47_helpers_47_object__ && $___46__46__47__46__46__47_helpers_47_object__.__esModule && $___46__46__47__46__46__47_helpers_47_object__ || {default: $___46__46__47__46__46__47_helpers_47_object__}),\n
    inherit = $__0.inherit,\n
    deepClone = $__0.deepClone;\n
var stopImmediatePropagation = ($___46__46__47__46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47__46__46__47_helpers_47_dom_47_event__ && $___46__46__47__46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47__46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47__46__46__47_helpers_47_dom_47_event__}).stopImmediatePropagation;\n
Handsontable.UndoRedo = function(instance) {\n
  var plugin = this;\n
  this.instance = instance;\n
  this.doneActions = [];\n
  this.undoneActions = [];\n
  this.ignoreNewActions = false;\n
  instance.addHook("afterChange", function(changes, origin) {\n
    if (changes) {\n
      var action = new Handsontable.UndoRedo.ChangeAction(changes);\n
      plugin.done(action);\n
    }\n
  });\n
  instance.addHook("afterCreateRow", function(index, amount, createdAutomatically) {\n
    if (createdAutomatically) {\n
      return;\n
    }\n
    var action = new Handsontable.UndoRedo.CreateRowAction(index, amount);\n
    plugin.done(action);\n
  });\n
  instance.addHook("beforeRemoveRow", function(index, amount) {\n
    var originalData = plugin.instance.getData();\n
    index = (originalData.length + index) % originalData.length;\n
    var removedData = originalData.slice(index, index + amount);\n
    var action = new Handsontable.UndoRedo.RemoveRowAction(index, removedData);\n
    plugin.done(action);\n
  });\n
  instance.addHook("afterCreateCol", function(index, amount, createdAutomatically) {\n
    if (createdAutomatically) {\n
      return;\n
    }\n
    var action = new Handsontable.UndoRedo.CreateColumnAction(index, amount);\n
    plugin.done(action);\n
  });\n
  instance.addHook("beforeRemoveCol", function(index, amount) {\n
    var originalData = plugin.instance.getData();\n
    index = (plugin.instance.countCols() + index) % plugin.instance.countCols();\n
    var removedData = [];\n
    for (var i = 0,\n
        len = originalData.length; i < len; i++) {\n
      removedData[i] = originalData[i].slice(index, index + amount);\n
    }\n
    var headers;\n
    if (Array.isArray(instance.getSettings().colHeaders)) {\n
      headers = instance.getSettings().colHeaders.slice(index, index + removedData.length);\n
    }\n
    var action = new Handsontable.UndoRedo.RemoveColumnAction(index, removedData, headers);\n
    plugin.done(action);\n
  });\n
  instance.addHook("beforeCellAlignment", function(stateBefore, range, type, alignment) {\n
    var action = new Handsontable.UndoRedo.CellAlignmentAction(stateBefore, range, type, alignment);\n
    plugin.done(action);\n
  });\n
};\n
Handsontable.UndoRedo.prototype.done = function(action) {\n
  if (!this.ignoreNewActions) {\n
    this.doneActions.push(action);\n
    this.undoneActions.length = 0;\n
  }\n
};\n
Handsontable.UndoRedo.prototype.undo = function() {\n
  if (this.isUndoAvailable()) {\n
    var action = this.doneActions.pop();\n
    this.ignoreNewActions = true;\n
    var that = this;\n
    action.undo(this.instance, function() {\n
      that.ignoreNewActions = false;\n
      that.undoneActions.push(action);\n
    });\n
  }\n
};\n
Handsontable.UndoRedo.prototype.redo = function() {\n
  if (this.isRedoAvailable()) {\n
    var action = this.undoneActions.pop();\n
    this.ignoreNewActions = true;\n
    var that = this;\n
    action.redo(this.instance, function() {\n
      that.ignoreNewActions = false;\n
      that.doneActions.push(action);\n
    });\n
  }\n
};\n
Handsontable.UndoRedo.prototype.isUndoAvailable = function() {\n
  return this.doneActions.length > 0;\n
};\n
Handsontable.UndoRedo.prototype.isRedoAvailable = function() {\n
  return this.undoneActions.length > 0;\n
};\n
Handsontable.UndoRedo.prototype.clear = function() {\n
  this.doneActions.length = 0;\n
  this.undoneActions.length = 0;\n
};\n
Handsontable.UndoRedo.Action = function() {};\n
Handsontable.UndoRedo.Action.prototype.undo = function() {};\n
Handsontable.UndoRedo.Action.prototype.redo = function() {};\n
Handsontable.UndoRedo.ChangeAction = function(changes) {\n
  this.changes = changes;\n
};\n
inherit(Handsontable.UndoRedo.ChangeAction, Handsontable.UndoRedo.Action);\n
Handsontable.UndoRedo.ChangeAction.prototype.undo = function(instance, undoneCallback) {\n
  var data = deepClone(this.changes),\n
      emptyRowsAtTheEnd = instance.countEmptyRows(true),\n
      emptyColsAtTheEnd = instance.countEmptyCols(true);\n
  for (var i = 0,\n
      len = data.length; i < len; i++) {\n
    data[i].splice(3, 1);\n
  }\n
  instance.addHookOnce(\'afterChange\', undoneCallback);\n
  instance.setDataAtRowProp(data, null, null, \'undo\');\n
  for (var i = 0,\n
      len = data.length; i < len; i++) {\n
    if (instance.getSettings().minSpareRows && data[i][0] + 1 + instance.getSettings().minSpareRows === instance.countRows() && emptyRowsAtTheEnd == instance.getSettings().minSpareRows) {\n
      instance.alter(\'remove_row\', parseInt(data[i][0] + 1, 10), instance.getSettings().minSpareRows);\n
      instance.undoRedo.doneActions.pop();\n
    }\n
    if (instance.getSettings().minSpareCols && data[i][1] + 1 + instance.getSettings().minSpareCols === instance.countCols() && emptyColsAtTheEnd == instance.getSettings().minSpareCols) {\n
      instance.alter(\'remove_col\', parseInt(data[i][1] + 1, 10), instance.getSettings().minSpareCols);\n
      instance.undoRedo.doneActions.pop();\n
    }\n
  }\n
};\n
Handsontable.UndoRedo.ChangeAction.prototype.redo = function(instance, onFinishCallback) {\n
  var data = deepClone(this.changes);\n
  for (var i = 0,\n
      len = data.length; i < len; i++) {\n
    data[i].splice(2, 1);\n
  }\n
  instance.addHookOnce(\'afterChange\', onFinishCallback);\n
  instance.setDataAtRowProp(data, null, null, \'redo\');\n
};\n
Handsontable.UndoRedo.CreateRowAction = function(index, amount) {\n
  this.index = index;\n
  this.amount = amount;\n
};\n
inherit(Handsontable.UndoRedo.CreateRowAction, Handsontable.UndoRedo.Action);\n
Handsontable.UndoRedo.CreateRowAction.prototype.undo = function(instance, undoneCallback) {\n
  var rowCount = instance.countRows(),\n
      minSpareRows = instance.getSettings().minSpareRows;\n
  if (this.index >= rowCount && this.index - minSpareRows < rowCount) {\n
    this.index -= minSpareRows;\n
  }\n
  instance.addHookOnce(\'afterRemoveRow\', undoneCallback);\n
  instance.alter(\'remove_row\', this.index, this.amount);\n
};\n
Handsontable.UndoRedo.CreateRowAction.prototype.redo = function(instance, redoneCallback) {\n
  instance.addHookOnce(\'afterCreateRow\', redoneCallback);\n
  instance.alter(\'insert_row\', this.index + 1, this.amount);\n
};\n
Handsontable.UndoRedo.RemoveRowAction = function(index, data) {\n
  this.index = index;\n
  this.data = data;\n
};\n
inherit(Handsontable.UndoRedo.RemoveRowAction, Handsontable.UndoRedo.Action);\n
Handsontable.UndoRedo.RemoveRowAction.prototype.undo = function(instance, undoneCallback) {\n
  var spliceArgs = [this.index, 0];\n
  Array.prototype.push.apply(spliceArgs, this.data);\n
  Array.prototype.splice.apply(instance.getData(), spliceArgs);\n
  instance.addHookOnce(\'afterRender\', undoneCallback);\n
  instance.render();\n
};\n
Handsontable.UndoRedo.RemoveRowAction.prototype.redo = function(instance, redoneCallback) {\n
  instance.addHookOnce(\'afterRemoveRow\', redoneCallback);\n
  instance.alter(\'remove_row\', this.index, this.data.length);\n
};\n
Handsontable.UndoRedo.CreateColumnAction = function(index, amount) {\n
  this.index = index;\n
  this.amount = amount;\n
};\n
inherit(Handsontable.UndoRedo.CreateColumnAction, Handsontable.UndoRedo.Action);\n
Handsontable.UndoRedo.CreateColumnAction.prototype.undo = function(instance, undoneCallback) {\n
  instance.addHookOnce(\'afterRemoveCol\', undoneCallback);\n
  instance.alter(\'remove_col\', this.index, this.amount);\n
};\n
Handsontable.UndoRedo.CreateColumnAction.prototype.redo = function(instance, redoneCallback) {\n
  instance.addHookOnce(\'afterCreateCol\', redoneCallback);\n
  instance.alter(\'insert_col\', this.index + 1, this.amount);\n
};\n
Handsontable.UndoRedo.CellAlignmentAction = function(stateBefore, range, type, alignment) {\n
  this.stateBefore = stateBefore;\n
  this.range = range;\n
  this.type = type;\n
  this.alignment = alignment;\n
};\n
Handsontable.UndoRedo.CellAlignmentAction.prototype.undo = function(instance, undoneCallback) {\n
  if (!instance.getPlugin(\'contextMenu\').isEnabled()) {\n
    return;\n
  }\n
  for (var row = this.range.from.row; row <= this.range.to.row; row++) {\n
    for (var col = this.range.from.col; col <= this.range.to.col; col++) {\n
      instance.setCellMeta(row, col, \'className\', this.stateBefore[row][col] || \' htLeft\');\n
    }\n
  }\n
  instance.addHookOnce(\'afterRender\', undoneCallback);\n
  instance.render();\n
};\n
Handsontable.UndoRedo.CellAlignmentAction.prototype.redo = function(instance, undoneCallback) {\n
  if (!instance.getPlugin(\'contextMenu\').isEnabled()) {\n
    return;\n
  }\n
  instance.selectCell(this.range.from.row, this.range.from.col, this.range.to.row, this.range.to.col);\n
  instance.getPlugin(\'contextMenu\').executeCommand(\'alignment:\' + this.alignment.replace(\'ht\', \'\').toLowerCase());\n
  instance.addHookOnce(\'afterRender\', undoneCallback);\n
  instance.render();\n
};\n
Handsontable.UndoRedo.RemoveColumnAction = function(index, data, headers) {\n
  this.index = index;\n
  this.data = data;\n
  this.amount = this.data[0].length;\n
  this.headers = headers;\n
};\n
inherit(Handsontable.UndoRedo.RemoveColumnAction, Handsontable.UndoRedo.Action);\n
Handsontable.UndoRedo.RemoveColumnAction.prototype.undo = function(instance, undoneCallback) {\n
  var row,\n
      spliceArgs;\n
  for (var i = 0,\n
      len = instance.getData().length; i < len; i++) {\n
    row = instance.getSourceDataAtRow(i);\n
    spliceArgs = [this.index, 0];\n
    Array.prototype.push.apply(spliceArgs, this.data[i]);\n
    Array.prototype.splice.apply(row, spliceArgs);\n
  }\n
  if (typeof this.headers != \'undefined\') {\n
    spliceArgs = [this.index, 0];\n
    Array.prototype.push.apply(spliceArgs, this.headers);\n
    Array.prototype.splice.apply(instance.getSettings().colHeaders, spliceArgs);\n
  }\n
  instance.addHookOnce(\'afterRender\', undoneCallback);\n
  instance.render();\n
};\n
Handsontable.UndoRedo.RemoveColumnAction.prototype.redo = function(instance, redoneCallback) {\n
  instance.addHookOnce(\'afterRemoveCol\', redoneCallback);\n
  instance.alter(\'remove_col\', this.index, this.amount);\n
};\n
function init() {\n
  var instance = this;\n
  var pluginEnabled = typeof instance.getSettings().undo == \'undefined\' || instance.getSettings().undo;\n
  if (pluginEnabled) {\n
    if (!instance.undoRedo) {\n
      instance.undoRedo = new Handsontable.UndoRedo(instance);\n
      exposeUndoRedoMethods(instance);\n
      instance.addHook(\'beforeKeyDown\', onBeforeKeyDown);\n
      instance.addHook(\'afterChange\', onAfterChange);\n
    }\n
  } else {\n
    if (instance.undoRedo) {\n
      delete instance.undoRedo;\n
      removeExposedUndoRedoMethods(instance);\n
      instance.removeHook(\'beforeKeyDown\', onBeforeKeyDown);\n
      instance.removeHook(\'afterChange\', onAfterChange);\n
    }\n
  }\n
}\n
function onBeforeKeyDown(event) {\n
  var instance = this;\n
  var ctrlDown = (event.ctrlKey || event.metaKey) && !event.altKey;\n
  if (ctrlDown) {\n
    if (event.keyCode === 89 || (event.shiftKey && event.keyCode === 90)) {\n
      instance.undoRedo.redo();\n
      stopImmediatePropagation(event);\n
    } else if (event.keyCode === 90) {\n
      instance.undoRedo.undo();\n
      stopImmediatePropagation(event);\n
    }\n
  }\n
}\n
function onAfterChange(changes, source) {\n
  var instance = this;\n
  if (source == \'loadData\') {\n
    return instance.undoRedo.clear();\n
  }\n
}\n
function exposeUndoRedoMethods(instance) {\n
  instance.undo = function() {\n
    return instance.undoRedo.undo();\n
  };\n
  instance.redo = function() {\n
    return instance.undoRedo.redo();\n
  };\n
  instance.isUndoAvailable = function() {\n
    return instance.undoRedo.isUndoAvailable();\n
  };\n
  instance.isRedoAvailable = function() {\n
    return instance.undoRedo.isRedoAvailable();\n
  };\n
  instance.clearUndo = function() {\n
    return instance.undoRedo.clear();\n
  };\n
}\n
function removeExposedUndoRedoMethods(instance) {\n
  delete instance.undo;\n
  delete instance.redo;\n
  delete instance.isUndoAvailable;\n
  delete instance.isRedoAvailable;\n
  delete instance.clearUndo;\n
}\n
Handsontable.hooks.add(\'afterInit\', init);\n
Handsontable.hooks.add(\'afterUpdateSettings\', init);\n
\n
//# \n
},{"helpers/dom/event":45,"helpers/object":49}],87:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  registerRenderer: {get: function() {\n
      return registerRenderer;\n
    }},\n
  getRenderer: {get: function() {\n
      return getRenderer;\n
    }},\n
  hasRenderer: {get: function() {\n
      return hasRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__helpers_47_string__;\n
var toUpperCaseFirst = ($__helpers_47_string__ = require("helpers/string"), $__helpers_47_string__ && $__helpers_47_string__.__esModule && $__helpers_47_string__ || {default: $__helpers_47_string__}).toUpperCaseFirst;\n
var registeredRenderers = {};\n
Handsontable.renderers = Handsontable.renderers || {};\n
Handsontable.renderers.registerRenderer = registerRenderer;\n
Handsontable.renderers.getRenderer = getRenderer;\n
function registerRenderer(rendererName, rendererFunction) {\n
  var registerName;\n
  registeredRenderers[rendererName] = rendererFunction;\n
  registerName = toUpperCaseFirst(rendererName) + \'Renderer\';\n
  Handsontable.renderers[registerName] = rendererFunction;\n
  Handsontable[registerName] = rendererFunction;\n
}\n
function getRenderer(rendererName) {\n
  if (typeof rendererName == \'function\') {\n
    return rendererName;\n
  }\n
  if (typeof rendererName != \'string\') {\n
    throw Error(\'Only strings and functions can be passed as "renderer" parameter\');\n
  }\n
  if (!(rendererName in registeredRenderers)) {\n
    throw Error(\'No editor registered under name "\' + rendererName + \'"\');\n
  }\n
  return registeredRenderers[rendererName];\n
}\n
function hasRenderer(rendererName) {\n
  return rendererName in registeredRenderers;\n
}\n
;\n
\n
//# \n
},{"helpers/string":51}],88:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  cellDecorator: {get: function() {\n
      return cellDecorator;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_renderers__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    removeClass = $__0.removeClass;\n
var registerRenderer = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}).registerRenderer;\n
;\n
registerRenderer(\'base\', cellDecorator);\n
Handsontable.renderers.cellDecorator = cellDecorator;\n
function cellDecorator(instance, TD, row, col, prop, value, cellProperties) {\n
  if (cellProperties.className) {\n
    if (TD.className) {\n
      TD.className = TD.className + " " + cellProperties.className;\n
    } else {\n
      TD.className = cellProperties.className;\n
    }\n
  }\n
  if (cellProperties.readOnly) {\n
    addClass(TD, cellProperties.readOnlyCellClassName);\n
  }\n
  if (cellProperties.valid === false && cellProperties.invalidCellClassName) {\n
    addClass(TD, cellProperties.invalidCellClassName);\n
  } else {\n
    removeClass(TD, cellProperties.invalidCellClassName);\n
  }\n
  if (cellProperties.wordWrap === false && cellProperties.noWordWrapClassName) {\n
    addClass(TD, cellProperties.noWordWrapClassName);\n
  }\n
  if (!value && cellProperties.placeholder) {\n
    addClass(TD, cellProperties.placeholderCellClassName);\n
  }\n
}\n
\n
//# \n
},{"helpers/dom/element":44,"renderers":87}],89:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  autocompleteRenderer: {get: function() {\n
      return autocompleteRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_eventManager__,\n
    $___46__46__47_renderers__,\n
    $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    hasClass = $__0.hasClass;\n
var eventManagerObject = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).eventManager;\n
var $__2 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),\n
    getRenderer = $__2.getRenderer,\n
    registerRenderer = $__2.registerRenderer;\n
var WalkontableCellCoords = ($___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $___46__46__47_3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
var clonableWRAPPER = document.createElement(\'DIV\');\n
clonableWRAPPER.className = \'htAutocompleteWrapper\';\n
var clonableARROW = document.createElement(\'DIV\');\n
clonableARROW.className = \'htAutocompleteArrow\';\n
clonableARROW.appendChild(document.createTextNode(String.fromCharCode(9660)));\n
var wrapTdContentWithWrapper = function(TD, WRAPPER) {\n
  WRAPPER.innerHTML = TD.innerHTML;\n
  dom.empty(TD);\n
  TD.appendChild(WRAPPER);\n
};\n
function autocompleteRenderer(instance, TD, row, col, prop, value, cellProperties) {\n
  var WRAPPER = clonableWRAPPER.cloneNode(true);\n
  var ARROW = clonableARROW.cloneNode(true);\n
  getRenderer(\'text\')(instance, TD, row, col, prop, value, cellProperties);\n
  TD.appendChild(ARROW);\n
  addClass(TD, \'htAutocomplete\');\n
  if (!TD.firstChild) {\n
    TD.appendChild(document.createTextNode(String.fromCharCode(160)));\n
  }\n
  if (!instance.acArrowListener) {\n
    var eventManager = eventManagerObject(instance);\n
    instance.acArrowListener = function(event) {\n
      if (hasClass(event.target, \'htAutocompleteArrow\')) {\n
        instance.view.wt.getSetting(\'onCellDblClick\', null, new WalkontableCellCoords(row, col), TD);\n
      }\n
    };\n
    eventManager.addEventListener(instance.rootElement, \'mousedown\', instance.acArrowListener);\n
    instance.addHookOnce(\'afterDestroy\', function() {\n
      eventManager.destroy();\n
    });\n
  }\n
}\n
;\n
registerRenderer(\'autocomplete\', autocompleteRenderer);\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"eventManager":40,"helpers/dom/element":44,"renderers":87}],90:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  checkboxRenderer: {get: function() {\n
      return checkboxRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_helpers_47_string__,\n
    $___46__46__47_eventManager__,\n
    $___46__46__47_renderers__,\n
    $___46__46__47_helpers_47_unicode__,\n
    $___46__46__47_helpers_47_dom_47_event__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    empty = $__0.empty,\n
    addClass = $__0.addClass,\n
    hasClass = $__0.hasClass;\n
var equalsIgnoreCase = ($___46__46__47_helpers_47_string__ = require("helpers/string"), $___46__46__47_helpers_47_string__ && $___46__46__47_helpers_47_string__.__esModule && $___46__46__47_helpers_47_string__ || {default: $___46__46__47_helpers_47_string__}).equalsIgnoreCase;\n
var EventManager = ($___46__46__47_eventManager__ = require("eventManager"), $___46__46__47_eventManager__ && $___46__46__47_eventManager__.__esModule && $___46__46__47_eventManager__ || {default: $___46__46__47_eventManager__}).EventManager;\n
var $__3 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),\n
    getRenderer = $__3.getRenderer,\n
    registerRenderer = $__3.registerRenderer;\n
var KEY_CODES = ($___46__46__47_helpers_47_unicode__ = require("helpers/unicode"), $___46__46__47_helpers_47_unicode__ && $___46__46__47_helpers_47_unicode__.__esModule && $___46__46__47_helpers_47_unicode__ || {default: $___46__46__47_helpers_47_unicode__}).KEY_CODES;\n
var $__5 = ($___46__46__47_helpers_47_dom_47_event__ = require("helpers/dom/event"), $___46__46__47_helpers_47_dom_47_event__ && $___46__46__47_helpers_47_dom_47_event__.__esModule && $___46__46__47_helpers_47_dom_47_event__ || {default: $___46__46__47_helpers_47_dom_47_event__}),\n
    stopPropagation = $__5.stopPropagation,\n
    stopImmediatePropagation = $__5.stopImmediatePropagation,\n
    isImmediatePropagationStopped = $__5.isImmediatePropagationStopped;\n
var isListeningKeyDownEvent = new WeakMap();\n
var BAD_VALUE_CLASS = \'htBadValue\';\n
function checkboxRenderer(instance, TD, row, col, prop, value, cellProperties) {\n
  var eventManager = new EventManager(instance);\n
  var input = createInput();\n
  if (typeof cellProperties.checkedTemplate === \'undefined\') {\n
    cellProperties.checkedTemplate = true;\n
  }\n
  if (typeof cellProperties.uncheckedTemplate === \'undefined\') {\n
    cellProperties.uncheckedTemplate = false;\n
  }\n
  empty(TD);\n
  if (value === cellProperties.checkedTemplate || equalsIgnoreCase(value, cellProperties.checkedTemplate)) {\n
    input.checked = true;\n
    TD.appendChild(input);\n
  } else if (value === cellProperties.uncheckedTemplate || equalsIgnoreCase(value, cellProperties.uncheckedTemplate)) {\n
    TD.appendChild(input);\n
  } else if (value === null) {\n
    addClass(input, \'noValue\');\n
    TD.appendChild(input);\n
  } else {\n
    input.style.display = \'none\';\n
    addClass(input, BAD_VALUE_CLASS);\n
    TD.appendChild(input);\n
    TD.appendChild(document.createTextNode(\'#bad-value#\'));\n
  }\n
  if (cellProperties.readOnly) {\n
    eventManager.addEventListener(input, \'click\', preventDefault);\n
  } else {\n
    eventManager.addEventListener(input, \'mousedown\', stopPropagation);\n
    eventManager.addEventListener(input, \'mouseup\', stopPropagation);\n
    eventManager.addEventListener(input, \'change\', (function(event) {\n
      instance.setDataAtRowProp(row, prop, event.target.checked ? cellProperties.checkedTemplate : cellProperties.uncheckedTemplate);\n
    }));\n
  }\n
  if (!isListeningKeyDownEvent.has(instance)) {\n
    isListeningKeyDownEvent.set(instance, true);\n
    instance.addHook(\'beforeKeyDown\', onBeforeKeyDown);\n
  }\n
  function onBeforeKeyDown(event) {\n
    var allowedKeys = [KEY_CODES.SPACE, KEY_CODES.ENTER, KEY_CODES.DELETE, KEY_CODES.BACKSPACE];\n
    if (allowedKeys.indexOf(event.keyCode) !== -1 && !isImmediatePropagationStopped(event)) {\n
      eachSelectedCheckboxCell(function() {\n
        stopImmediatePropagation(event);\n
        event.preventDefault();\n
      });\n
    }\n
    if (event.keyCode == KEY_CODES.SPACE || event.keyCode == KEY_CODES.ENTER) {\n
      toggleSelected();\n
    }\n
    if (event.keyCode == KEY_CODES.DELETE || event.keyCode == KEY_CODES.BACKSPACE) {\n
      toggleSelected(false);\n
    }\n
  }\n
  function toggleSelected() {\n
    var checked = arguments[0] !== (void 0) ? arguments[0] : null;\n
    eachSelectedCheckboxCell(function(checkboxes) {\n
      for (var i = 0,\n
          len = checkboxes.length; i < len; i++) {\n
        if (hasClass(checkboxes[i], BAD_VALUE_CLASS) && checked === null) {\n
          return;\n
        }\n
        toggleCheckbox(checkboxes[i], checked);\n
      }\n
    });\n
  }\n
  function toggleCheckbox(checkbox) {\n
    var checked = arguments[1] !== (void 0) ? arguments[1] : null;\n
    if (checked === null) {\n
      checkbox.checked = !checkbox.checked;\n
    } else {\n
      checkbox.checked = checked;\n
    }\n
    eventManager.fireEvent(checkbox, \'change\');\n
  }\n
  function eachSelectedCheckboxCell(callback) {\n
    var selRange = instance.getSelectedRange();\n
    var topLeft = selRange.getTopLeftCorner();\n
    var bottomRight = selRange.getBottomRightCorner();\n
    for (var row = topLeft.row; row <= bottomRight.row; row++) {\n
      for (var col = topLeft.col; col <= bottomRight.col; col++) {\n
        var cell = instance.getCell(row, col);\n
        var cellProperties$__6 = instance.getCellMeta(row, col);\n
        var checkboxes = cell.querySelectorAll(\'input[type=checkbox]\');\n
        if (checkboxes.length > 0 && !cellProperties$__6.readOnly) {\n
          callback(checkboxes);\n
        }\n
      }\n
    }\n
  }\n
}\n
;\n
registerRenderer(\'checkbox\', checkboxRenderer);\n
function createInput() {\n
  var input = document.createElement(\'INPUT\');\n
  input.className = \'htCheckboxRendererInput\';\n
  input.type = \'checkbox\';\n
  input.setAttribute(\'autocomplete\', \'off\');\n
  return input.cloneNode(false);\n
}\n
function preventDefault(event) {\n
  event.preventDefault();\n
}\n
\n
//# \n
},{"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45,"helpers/string":51,"helpers/unicode":52,"renderers":87}],91:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  htmlRenderer: {get: function() {\n
      return htmlRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_renderers__;\n
var fastInnerHTML = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).fastInnerHTML;\n
var $__1 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),\n
    getRenderer = $__1.getRenderer,\n
    registerRenderer = $__1.registerRenderer;\n
function htmlRenderer(instance, TD, row, col, prop, value, cellProperties) {\n
  getRenderer(\'base\').apply(this, arguments);\n
  fastInnerHTML(TD, value);\n
}\n
;\n
registerRenderer(\'html\', htmlRenderer);\n
\n
//# \n
},{"helpers/dom/element":44,"renderers":87}],92:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  numericRenderer: {get: function() {\n
      return numericRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__numeral__,\n
    $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_renderers__,\n
    $___46__46__47_helpers_47_number__;\n
var numeral = ($__numeral__ = require("numeral"), $__numeral__ && $__numeral__.__esModule && $__numeral__ || {default: $__numeral__}).default;\n
var addClass = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).addClass;\n
var $__2 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),\n
    getRenderer = $__2.getRenderer,\n
    registerRenderer = $__2.registerRenderer;\n
var isNumeric = ($___46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47_helpers_47_number__ && $___46__46__47_helpers_47_number__.__esModule && $___46__46__47_helpers_47_number__ || {default: $___46__46__47_helpers_47_number__}).isNumeric;\n
function numericRenderer(instance, TD, row, col, prop, value, cellProperties) {\n
  if (isNumeric(value)) {\n
    if (typeof cellProperties.language !== \'undefined\') {\n
      numeral.language(cellProperties.language);\n
    }\n
    value = numeral(value).format(cellProperties.format || \'0\');\n
    addClass(TD, \'htNumeric\');\n
  }\n
  getRenderer(\'text\')(instance, TD, row, col, prop, value, cellProperties);\n
}\n
;\n
registerRenderer(\'numeric\', numericRenderer);\n
\n
//# \n
},{"helpers/dom/element":44,"helpers/number":48,"numeral":"numeral","renderers":87}],93:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  passwordRenderer: {get: function() {\n
      return passwordRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_renderers__;\n
var fastInnerHTML = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}).fastInnerHTML;\n
var $__1 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),\n
    getRenderer = $__1.getRenderer,\n
    registerRenderer = $__1.registerRenderer;\n
function passwordRenderer(instance, TD, row, col, prop, value, cellProperties) {\n
  getRenderer(\'text\').apply(this, arguments);\n
  value = TD.innerHTML;\n
  var hash;\n
  var hashLength = cellProperties.hashLength || value.length;\n
  var hashSymbol = cellProperties.hashSymbol || \'*\';\n
  for (hash = \'\'; hash.split(hashSymbol).length - 1 < hashLength; hash += hashSymbol) {}\n
  fastInnerHTML(TD, hash);\n
}\n
;\n
registerRenderer(\'password\', passwordRenderer);\n
\n
//# \n
},{"helpers/dom/element":44,"renderers":87}],94:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  textRenderer: {get: function() {\n
      return textRenderer;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_helpers_47_mixed__,\n
    $___46__46__47_renderers__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    empty = $__0.empty,\n
    fastInnerText = $__0.fastInnerText;\n
var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;\n
var $__2 = ($___46__46__47_renderers__ = require("renderers"), $___46__46__47_renderers__ && $___46__46__47_renderers__.__esModule && $___46__46__47_renderers__ || {default: $___46__46__47_renderers__}),\n
    getRenderer = $__2.getRenderer,\n
    registerRenderer = $__2.registerRenderer;\n
function textRenderer(instance, TD, row, col, prop, value, cellProperties) {\n
  getRenderer(\'base\').apply(this, arguments);\n
  if (!value && cellProperties.placeholder) {\n
    value = cellProperties.placeholder;\n
  }\n
  var escaped = stringify(value);\n
  if (!instance.getSettings().trimWhitespace) {\n
    escaped = escaped.replace(/ /g, String.fromCharCode(160));\n
  }\n
  if (cellProperties.rendererTemplate) {\n
    empty(TD);\n
    var TEMPLATE = document.createElement(\'TEMPLATE\');\n
    TEMPLATE.setAttribute(\'bind\', \'{{}}\');\n
    TEMPLATE.innerHTML = cellProperties.rendererTemplate;\n
    HTMLTemplateElement.decorate(TEMPLATE);\n
    TEMPLATE.model = instance.getSourceDataAtRow(row);\n
    TD.appendChild(TEMPLATE);\n
  } else {\n
    fastInnerText(TD, escaped);\n
  }\n
}\n
;\n
registerRenderer(\'text\', textRenderer);\n
\n
//# \n
},{"helpers/dom/element":44,"helpers/mixed":47,"renderers":87}],95:[function(require,module,exports){\n
"use strict";\n
(function(global) {\n
  \'use strict\';\n
  if (global.$traceurRuntime) {\n
    return;\n
  }\n
  var $Object = Object;\n
  var $TypeError = TypeError;\n
  var $create = $Object.create;\n
  var $defineProperties = $Object.defineProperties;\n
  var $defineProperty = $Object.defineProperty;\n
  var $freeze = $Object.freeze;\n
  var $getOwnPropertyDescriptor = $Object.getOwnPropertyDescriptor;\n
  var $getOwnPropertyNames = $Object.getOwnPropertyNames;\n
  var $keys = $Object.keys;\n
  var $hasOwnProperty = $Object.prototype.hasOwnProperty;\n
  var $preventExtensions = Object.preventExtensions;\n
  var $seal = Object.seal;\n
  var $isExtensible = Object.isExtensible;\n
  function nonEnum(value) {\n
    return {\n
      configurable: true,\n
      enumerable: false,\n
      value: value,\n
      writable: true\n
    };\n
  }\n
  var method = nonEnum;\n
  var counter = 0;\n
  function newUniqueString() {\n
    return \'__$\' + Math.floor(Math.random() * 1e9) + \'$\' + ++counter + \'$__\';\n
  }\n
  var symbolInternalProperty = newUniqueString();\n
  var symbolDescriptionProperty = newUniqueString();\n
  var symbolDataProperty = newUniqueString();\n
  var symbolValues = $create(null);\n
  var privateNames = $create(null);\n
  function isPrivateName(s) {\n
    return privateNames[s];\n
  }\n
  function createPrivateName() {\n
    var s = newUniqueString();\n
    privateNames[s] = true;\n
    return s;\n
  }\n
  function isShimSymbol(symbol) {\n
    return typeof symbol === \'object\' && symbol instanceof SymbolValue;\n
  }\n
  function typeOf(v) {\n
    if (isShimSymbol(v))\n
      return \'symbol\';\n
    return typeof v;\n
  }\n
  function Symbol(description) {\n
    var value = new SymbolValue(description);\n
    if (!(this instanceof Symbol))\n
      return value;\n
    throw new TypeError(\'Symbol cannot be new\\\'ed\');\n
  }\n
  $defineProperty(Symbol.prototype, \'constructor\', nonEnum(Symbol));\n
  $defineProperty(Symbol.prototype, \'toString\', method(function() {\n
    var symbolValue = this[symbolDataProperty];\n
    if (!getOption(\'symbols\'))\n
      return symbolValue[symbolInternalProperty];\n
    if (!symbolValue)\n
      throw TypeError(\'Conversion from symbol to string\');\n
    var desc = symbolValue[symbolDescriptionProperty];\n
    if (desc === undefined)\n
      desc = \'\';\n
    return \'Symbol(\' + desc + \')\';\n
  }));\n
  $defineProperty(Symbol.prototype, \'valueOf\', method(function() {\n
    var symbolValue = this[symbolDataProperty];\n
    if (!symbolValue)\n
      throw TypeError(\'Conversion from symbol to string\');\n
    if (!getOption(\'symbols\'))\n
      return symbolValue[symbolInternalProperty];\n
    return symbolValue;\n
  }));\n
  function SymbolValue(description) {\n
    var key = newUniqueString();\n
    $defineProperty(this, symbolDataProperty, {value: this});\n
    $defineProperty(this, symbolInternalProperty, {value: key});\n
    $defineProperty(this, symbolDescriptionProperty, {value: description});\n
    freeze(this);\n
    symbolValues[key] = this;\n
  }\n
  $defineProperty(SymbolValue.prototype, \'constructor\', nonEnum(Symbol));\n
  $defineProperty(SymbolValue.prototype, \'toString\', {\n
    value: Symbol.prototype.toString,\n
    enumerable: false\n
  });\n
  $defineProperty(SymbolValue.prototype, \'valueOf\', {\n
    value: Symbol.prototype.valueOf,\n
    enumerable: false\n
  });\n
  var hashProperty = createPrivateName();\n
  var hashPropertyDescriptor = {value: undefined};\n
  var hashObjectProperties = {\n
    hash: {value: undefined},\n
    self: {value: undefined}\n
  };\n
  var hashCounter = 0;\n
  function getOwnHashObject(object) {\n
    var hashObject = object[hashProperty];\n
    if (hashObject && hashObject.self === object)\n
      return hashObject;\n
    if ($isExtensible(object)) {\n
      hashObjectProperties.hash.value = hashCounter++;\n
      hashObjectProperties.self.value = object;\n
      hashPropertyDescriptor.value = $create(null, hashObjectProperties);\n
      $defineProperty(object, hashProperty, hashPropertyDescriptor);\n
      return hashPropertyDescriptor.value;\n
    }\n
    return undefined;\n
  }\n
  function freeze(object) {\n
    getOwnHashObject(object);\n
    return $freeze.apply(this, arguments);\n
  }\n
  function preventExtensions(object) {\n
    getOwnHashObject(object);\n
    return $preventExtensions.apply(this, arguments);\n
  }\n
  function seal(object) {\n
    getOwnHashObject(object);\n
    return $seal.apply(this, arguments);\n
  }\n
  freeze(SymbolValue.prototype);\n
  function isSymbolString(s) {\n
    return symbolValues[s] || privateNames[s];\n
  }\n
  function toProperty(name) {\n
    if (isShimSymbol(name))\n
      return name[symbolInternalProperty];\n
    return name;\n
  }\n
  function removeSymbolKeys(array) {\n
    var rv = [];\n
    for (var i = 0; i < array.length; i++) {\n
      if (!isSymbolString(array[i])) {\n
        rv.push(array[i]);\n
      }\n
    }\n
    return rv;\n
  }\n
  function getOwnPropertyNames(object) {\n
    return removeSymbolKeys($getOwnPropertyNames(object));\n
  }\n
  function keys(object) {\n
    return removeSymbolKeys($keys(object));\n
  }\n
  function getOwnPropertySymbols(object) {\n
    var rv = [];\n
    var names = $getOwnPropertyNames(object);\n
    for (var i = 0; i < names.length; i++) {\n
      var symbol = symbolValues[names[i]];\n
      if (symbol) {\n
        rv.push(symbol);\n
      }\n
    }\n
    return rv;\n
  }\n
  function getOwnPropertyDescriptor(object, name) {\n
    return $getOwnPropertyDescriptor(object, toProperty(name));\n
  }\n
  function hasOwnProperty(name) {\n
    return $hasOwnProperty.call(this, toProperty(name));\n
  }\n
  function getOption(name) {\n
    return global.traceur && global.traceur.options[name];\n
  }\n
  function defineProperty(object, name, descriptor) {\n
    if (isShimSymbol(name)) {\n
      name = name[symbolInternalProperty];\n
    }\n
    $defineProperty(object, name, descriptor);\n
    return object;\n
  }\n
  function polyfillObject(Object) {\n
    $defineProperty(Object, \'defineProperty\', {value: defineProperty});\n
    $defineProperty(Object, \'getOwnPropertyNames\', {value: getOwnPropertyNames});\n
    $defineProperty(Object, \'getOwnPropertyDescriptor\', {value: getOwnPropertyDescriptor});\n
    $defineProperty(Object.prototype, \'hasOwnProperty\', {value: hasOwnProperty});\n
    $defineProperty(Object, \'freeze\', {value: freeze});\n
    $defineProperty(Object, \'preventExtensions\', {value: preventExtensions});\n
    $defineProperty(Object, \'seal\', {value: seal});\n
    $defineProperty(Object, \'keys\', {value: keys});\n
  }\n
  function exportStar(object) {\n
    for (var i = 1; i < arguments.length; i++) {\n
      var names = $getOwnPropertyNames(arguments[i]);\n
      for (var j = 0; j < names.length; j++) {\n
        var name = names[j];\n
        if (isSymbolString(name))\n
          continue;\n
        (function(mod, name) {\n
          $defineProperty(object, name, {\n
            get: function() {\n
              return mod[name];\n
            },\n
            enumerable: true\n
          });\n
        })(arguments[i], names[j]);\n
      }\n
    }\n
    return object;\n
  }\n
  function isObject(x) {\n
    return x != null && (typeof x === \'object\' || typeof x === \'function\');\n
  }\n
  function toObject(x) {\n
    if (x == null)\n
      throw $TypeError();\n
    return $Object(x);\n
  }\n
  function checkObjectCoercible(argument) {\n
    if (argument == null) {\n
      throw new TypeError(\'Value cannot be converted to an Object\');\n
    }\n
    return argument;\n
  }\n
  function polyfillSymbol(global, Symbol) {\n
    if (!global.Symbol) {\n
      global.Symbol = Symbol;\n
      Object.getOwnPropertySymbols = getOwnPropertySymbols;\n
    }\n
    if (!global.Symbol.iterator) {\n
      global.Symbol.iterator = Symbol(\'Symbol.iterator\');\n
    }\n
  }\n
  function setupGlobals(global) {\n
    polyfillSymbol(global, Symbol);\n
    global.Reflect = global.Reflect || {};\n
    global.Reflect.global = global.Reflect.global || global;\n
    polyfillObject(global.Object);\n
  }\n
  setupGlobals(global);\n
  global.$traceurRuntime = {\n
    checkObjectCoercible: checkObjectCoercible,\n
    createPrivateName: createPrivateName,\n
    defineProperties: $defineProperties,\n
    defineProperty: $defineProperty,\n
    exportStar: exportStar,\n
    getOwnHashObject: getOwnHashObject,\n
    getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n
    getOwnPropertyNames: $getOwnPropertyNames,\n
    isObject: isObject,\n
    isPrivateName: isPrivateName,\n
    isSymbolString: isSymbolString,\n
    keys: $keys,\n
    setupGlobals: setupGlobals,\n
    toObject: toObject,\n
    toProperty: toProperty,\n
    typeof: typeOf\n
  };\n
})(window);\n
(function() {\n
  \'use strict\';\n
  var $toProperty = $traceurRuntime.toProperty;\n
  function spread() {\n
    var rv = [],\n
        j = 0,\n
        iterResult;\n
    for (var i = 0; i < arguments.length; i++) {\n
      var valueToSpread = $traceurRuntime.checkObjectCoercible(arguments[i]);\n
      if (typeof valueToSpread[$toProperty(Symbol.iterator)] !== \'function\') {\n
        throw new TypeError(\'Cannot spread non-iterable object.\');\n
      }\n
      var iter = valueToSpread[$toProperty(Symbol.iterator)]();\n
      while (!(iterResult = iter.next()).done) {\n
        rv[j++] = iterResult.value;\n
      }\n
    }\n
    return rv;\n
  }\n
  $traceurRuntime.spread = spread;\n
})();\n
(function() {\n
  \'use strict\';\n
  var $Object = Object;\n
  var $TypeError = TypeError;\n
  var $create = $Object.create;\n
  var $defineProperties = $traceurRuntime.defineProperties;\n
  var $defineProperty = $traceurRuntime.defineProperty;\n
  var $getOwnPropertyDescriptor = $traceurRuntime.getOwnPropertyDescriptor;\n
  var $getPrototypeOf = Object.getPrototypeOf;\n
  var $toProperty = $traceurRuntime.toProperty;\n
  var $__0 = Object,\n
      getOwnPropertyNames = $__0.getOwnPropertyNames,\n
      getOwnPropertySymbols = $__0.getOwnPropertySymbols;\n
  function superDescriptor(homeObject, name) {\n
    var proto = $getPrototypeOf(homeObject);\n
    do {\n
      var result = $getOwnPropertyDescriptor(proto, name);\n
      if (result)\n
        return result;\n
      proto = $getPrototypeOf(proto);\n
    } while (proto);\n
    return undefined;\n
  }\n
  function superConstructor(ctor) {\n
    return ctor.__proto__;\n
  }\n
  function superCall(self, homeObject, name, args) {\n
    return superGet(self, homeObject, name).apply(self, args);\n
  }\n
  function superGet(self, homeObject, name) {\n
    var descriptor = superDescriptor(homeObject, name);\n
    if (descriptor) {\n
      if (!descriptor.get)\n
        return descriptor.value;\n
      return descriptor.get.call(self);\n
    }\n
    return undefined;\n
  }\n
  function superSet(self, homeObject, name, value) {\n
    var descriptor = superDescriptor(homeObject, name);\n
    if (descriptor && descriptor.set) {\n
      descriptor.set.call(self, value);\n
      return value;\n
    }\n
    throw $TypeError(("super has no setter \'" + name + "\'."));\n
  }\n
  function getDescriptors(object) {\n
    var descriptors = {};\n
    var names = getOwnPropertyNames(object);\n
    for (var i = 0; i < names.length; i++) {\n
      var name = names[i];\n
      descriptors[name] = $getOwnPropertyDescriptor(object, name);\n
    }\n
    var symbols = getOwnPropertySymbols(object);\n
    for (var i = 0; i < symbols.length; i++) {\n
      var symbol = symbols[i];\n
      descriptors[$toProperty(symbol)] = $getOwnPropertyDescriptor(object, $toProperty(symbol));\n
    }\n
    return descriptors;\n
  }\n
  function createClass(ctor, object, staticObject, superClass) {\n
    $defineProperty(object, \'constructor\', {\n
      value: ctor,\n
      configurable: true,\n
      enumerable: false,\n
      writable: true\n
    });\n
    if (arguments.length > 3) {\n
      if (typeof superClass === \'function\')\n
        ctor.__proto__ = superClass;\n
      ctor.prototype = $create(getProtoParent(superClass), getDescriptors(object));\n
    } else {\n
      ctor.prototype = object;\n
    }\n
    $defineProperty(ctor, \'prototype\', {\n
      configurable: false,\n
      writable: false\n
    });\n
    return $defineProperties(ctor, getDescriptors(staticObject));\n
  }\n
  function getProtoParent(superClass) {\n
    if (typeof superClass === \'function\') {\n
      var prototype = superClass.prototype;\n
      if ($Object(prototype) === prototype || prototype === null)\n
        return superClass.prototype;\n
      throw new $TypeError(\'super prototype must be an Object or null\');\n
    }\n
    if (superClass === null)\n
      return null;\n
    throw new $TypeError(("Super expression must either be null or a function, not " + typeof superClass + "."));\n
  }\n
  function defaultSuperCall(self, homeObject, args) {\n
    if ($getPrototypeOf(homeObject) !== null)\n
      superCall(self, homeObject, \'constructor\', args);\n
  }\n
  $traceurRuntime.createClass = createClass;\n
  $traceurRuntime.defaultSuperCall = defaultSuperCall;\n
  $traceurRuntime.superCall = superCall;\n
  $traceurRuntime.superConstructor = superConstructor;\n
  $traceurRuntime.superGet = superGet;\n
  $traceurRuntime.superSet = superSet;\n
})();\n
\n
//# \n
},{}],96:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  TableView: {get: function() {\n
      return TableView;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $__helpers_47_dom_47_element__,\n
    $__eventManager__,\n
    $__helpers_47_dom_47_event__,\n
    $__3rdparty_47_walkontable_47_src_47_cell_47_coords__,\n
    $__3rdparty_47_walkontable_47_src_47_selection__,\n
    $__3rdparty_47_walkontable_47_src_47_core__;\n
var $__0 = ($__helpers_47_dom_47_element__ = require("helpers/dom/element"), $__helpers_47_dom_47_element__ && $__helpers_47_dom_47_element__.__esModule && $__helpers_47_dom_47_element__ || {default: $__helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    empty = $__0.empty,\n
    fastInnerHTML = $__0.fastInnerHTML,\n
    fastInnerText = $__0.fastInnerText,\n
    getScrollbarWidth = $__0.getScrollbarWidth,\n
    hasClass = $__0.hasClass,\n
    isChildOf = $__0.isChildOf,\n
    isInput = $__0.isInput,\n
    isOutsideInput = $__0.isOutsideInput;\n
var eventManagerObject = ($__eventManager__ = require("eventManager"), $__eventManager__ && $__eventManager__.__esModule && $__eventManager__ || {default: $__eventManager__}).eventManager;\n
var $__2 = ($__helpers_47_dom_47_event__ = require("helpers/dom/event"), $__helpers_47_dom_47_event__ && $__helpers_47_dom_47_event__.__esModule && $__helpers_47_dom_47_event__ || {default: $__helpers_47_dom_47_event__}),\n
    stopPropagation = $__2.stopPropagation,\n
    isImmediatePropagationStopped = $__2.isImmediatePropagationStopped;\n
var WalkontableCellCoords = ($__3rdparty_47_walkontable_47_src_47_cell_47_coords__ = require("3rdparty/walkontable/src/cell/coords"), $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__.__esModule && $__3rdparty_47_walkontable_47_src_47_cell_47_coords__ || {default: $__3rdparty_47_walkontable_47_src_47_cell_47_coords__}).WalkontableCellCoords;\n
var WalkontableSelection = ($__3rdparty_47_walkontable_47_src_47_selection__ = require("3rdparty/walkontable/src/selection"), $__3rdparty_47_walkontable_47_src_47_selection__ && $__3rdparty_47_walkontable_47_src_47_selection__.__esModule && $__3rdparty_47_walkontable_47_src_47_selection__ || {default: $__3rdparty_47_walkontable_47_src_47_selection__}).WalkontableSelection;\n
var Walkontable = ($__3rdparty_47_walkontable_47_src_47_core__ = require("3rdparty/walkontable/src/core"), $__3rdparty_47_walkontable_47_src_47_core__ && $__3rdparty_47_walkontable_47_src_47_core__.__esModule && $__3rdparty_47_walkontable_47_src_47_core__ || {default: $__3rdparty_47_walkontable_47_src_47_core__}).Walkontable;\n
Handsontable.TableView = TableView;\n
function TableView(instance) {\n
  var that = this;\n
  this.eventManager = eventManagerObject(instance);\n
  this.instance = instance;\n
  this.settings = instance.getSettings();\n
  var originalStyle = instance.rootElement.getAttribute(\'style\');\n
  if (originalStyle) {\n
    instance.rootElement.setAttribute(\'data-originalstyle\', originalStyle);\n
  }\n
  addClass(instance.rootElement, \'handsontable\');\n
  var table = document.createElement(\'TABLE\');\n
  addClass(table, \'htCore\');\n
  if (instance.getSettings().tableClassName) {\n
    addClass(table, instance.getSettings().tableClassName);\n
  }\n
  this.THEAD = document.createElement(\'THEAD\');\n
  table.appendChild(this.THEAD);\n
  this.TBODY = document.createElement(\'TBODY\');\n
  table.appendChild(this.TBODY);\n
  instance.table = table;\n
  instance.container.insertBefore(table, instance.container.firstChild);\n
  this.eventManager.addEventListener(instance.rootElement, \'mousedown\', function(event) {\n
    if (!that.isTextSelectionAllowed(event.target)) {\n
      clearTextSelection();\n
      event.preventDefault();\n
      window.focus();\n
    }\n
  });\n
  this.eventManager.addEventListener(document.documentElement, \'keyup\', function(event) {\n
    if (instance.selection.isInProgress() && !event.shiftKey) {\n
      instance.selection.finish();\n
    }\n
  });\n
  var isMouseDown;\n
  this.isMouseDown = function() {\n
    return isMouseDown;\n
  };\n
  this.eventManager.addEventListener(document.documentElement, \'mouseup\', function(event) {\n
    if (instance.selection.isInProgress() && event.which === 1) {\n
      instance.selection.finish();\n
    }\n
    isMouseDown = false;\n
    if (isOutsideInput(document.activeElement)) {\n
      instance.unlisten();\n
    }\n
  });\n
  this.eventManager.addEventListener(document.documentElement, \'mousedown\', function(event) {\n
    var next = event.target;\n
    var eventX = event.x || event.clientX;\n
    var eventY = event.y || event.clientY;\n
    if (isMouseDown || !instance.rootElement) {\n
      return;\n
    }\n
    if (next !== instance.view.wt.wtTable.holder) {\n
      while (next !== document.documentElement) {\n
        if (next === null) {\n
          if (event.isTargetWebComponent) {\n
            break;\n
          }\n
          return;\n
        }\n
        if (next === instance.rootElement) {\n
          return;\n
        }\n
        next = next.parentNode;\n
      }\n
    } else {\n
      var scrollbarWidth = getScrollbarWidth();\n
      if (document.elementFromPoint(eventX + scrollbarWidth, eventY) !== instance.view.wt.wtTable.holder || document.elementFromPoint(eventX, eventY + scrollbarWidth) !== instance.view.wt.wtTable.holder) {\n
        return;\n
      }\n
    }\n
    if (that.settings.outsideClickDeselects) {\n
      instance.deselectCell();\n
    } else {\n
      instance.destroyEditor();\n
    }\n
  });\n
  this.eventManager.addEventListener(table, \'selectstart\', function(event) {\n
    if (that.settings.fragmentSelection) {\n
      return;\n
    }\n
    event.preventDefault();\n
  });\n
  var clearTextSelection = function() {\n
    if (window.getSelection) {\n
      if (window.getSelection().empty) {\n
        window.getSelection().empty();\n
      } else if (window.getSelection().removeAllRanges) {\n
        window.getSelection().removeAllRanges();\n
      }\n
    } else if (document.selection) {\n
      document.selection.empty();\n
    }\n
  };\n
  var selections = [new WalkontableSelection({\n
    className: \'current\',\n
    border: {\n
      width: 2,\n
      color: \'#5292F7\',\n
      cornerVisible: function() {\n
        return that.settings.fillHandle && !that.isCellEdited() && !instance.selection.isMultiple();\n
      },\n
      multipleSelectionHandlesVisible: function() {\n
        return !that.isCellEdited() && !instance.selection.isMultiple();\n
      }\n
    }\n
  }), new WalkontableSelection({\n
    className: \'area\',\n
    border: {\n
      width: 1,\n
      color: \'#89AFF9\',\n
      cornerVisible: function() {\n
        return that.settings.fillHandle && !that.isCellEdited() && instance.selection.isMultiple();\n
      },\n
      multipleSelectionHandlesVisible: function() {\n
        return !that.isCellEdited() && instance.selection.isMultiple();\n
      }\n
    }\n
  }), new WalkontableSelection({\n
    className: \'highlight\',\n
    highlightRowClassName: that.settings.currentRowClassName,\n
    highlightColumnClassName: that.settings.currentColClassName\n
  }), new WalkontableSelection({\n
    className: \'fill\',\n
    border: {\n
      width: 1,\n
      color: \'red\'\n
    }\n
  })];\n
  selections.current = selections[0];\n
  selections.area = selections[1];\n
  selections.highlight = selections[2];\n
  selections.fill = selections[3];\n
  var walkontableConfig = {\n
    debug: function() {\n
      return that.settings.debug;\n
    },\n
    externalRowCalculator: this.instance.getPlugin(\'autoRowSize\') && this.instance.getPlugin(\'autoRowSize\').isEnabled(),\n
    table: table,\n
    stretchH: this.settings.stretchH,\n
    data: instance.getDataAtCell,\n
    totalRows: instance.countRows,\n
    totalColumns: instance.countCols,\n
    fixedColumnsLeft: function() {\n
      return that.settings.fixedColumnsLeft;\n
    },\n
    fixedRowsTop: function() {\n
      return that.settings.fixedRowsTop;\n
    },\n
    renderAllRows: that.settings.renderAllRows,\n
    rowHeaders: function() {\n
      var arr = [];\n
      if (instance.hasRowHeaders()) {\n
        arr.push(function(index, TH) {\n
          that.appendRowHeader(index, TH);\n
        });\n
      }\n
      Handsontable.hooks.run(instance, \'afterGetRowHeaderRenderers\', arr);\n
      return arr;\n
    },\n
    columnHeaders: function() {\n
      var arr = [];\n
      if (instance.hasColHeaders()) {\n
        arr.push(function(index, TH) {\n
          that.appendColHeader(index, TH);\n
        });\n
      }\n
      Handsontable.hooks.run(instance, \'afterGetColumnHeaderRenderers\', arr);\n
      return arr;\n
    },\n
    columnWidth: instance.getColWidth,\n
    rowHeight: instance.getRowHeight,\n
    cellRenderer: function(row, col, TD) {\n
      var prop = that.instance.colToProp(col),\n
          cellProperties = that.instance.getCellMeta(row, col),\n
          renderer = that.instance.getCellRenderer(cellProperties);\n
      var value = that.instance.getDataAtRowProp(row, prop);\n
      renderer(that.instance, TD, row, col, prop, value, cellProperties);\n
      Handsontable.hooks.run(that.instance, \'afterRenderer\', TD, row, col, prop, value, cellProperties);\n
    },\n
    selections: selections,\n
    hideBorderOnMouseDownOver: function() {\n
      return that.settings.fragmentSelection;\n
    },\n
    onCellMouseDown: function(event, coords, TD, wt) {\n
      instance.listen();\n
      that.activeWt = wt;\n
      isMouseDown = true;\n
      Handsontable.hooks.run(instance, \'beforeOnCellMouseDown\', event, coords, TD);\n
      if (!isImmediatePropagationStopped(event)) {\n
        if (event.button === 2 && instance.selection.inInSelection(coords)) {} else if (event.shiftKey) {\n
          if (coords.row >= 0 && coords.col >= 0) {\n
            instance.selection.setRangeEnd(coords);\n
          }\n
        } else {\n
          if ((coords.row < 0 || coords.col < 0) && (coords.row >= 0 || coords.col >= 0)) {\n
            if (coords.row < 0) {\n
              instance.selectCell(0, coords.col, instance.countRows() - 1, coords.col);\n
              instance.selection.setSelectedHeaders(false, true);\n
            }\n
            if (coords.col < 0) {\n
              instance.selectCell(coords.row, 0, coords.row, instance.countCols() - 1);\n
              instance.selection.setSelectedHeaders(true, false);\n
            }\n
          } else {\n
            coords.row = coords.row < 0 ? 0 : coords.row;\n
            coords.col = coords.col < 0 ? 0 : coords.col;\n
            instance.selection.setRangeStart(coords);\n
          }\n
        }\n
        Handsontable.hooks.run(instance, \'afterOnCellMouseDown\', event, coords, TD);\n
        that.activeWt = that.wt;\n
      }\n
    },\n
    onCellMouseOver: function(event, coords, TD, wt) {\n
      that.activeWt = wt;\n
      if (coords.row >= 0 && coords.col >= 0) {\n
        if (isMouseDown) {\n
          instance.selection.setRangeEnd(coords);\n
        }\n
      } else {\n
        if (isMouseDown) {\n
          if (coords.row < 0) {\n
            instance.selection.setRangeEnd(new WalkontableCellCoords(instance.countRows() - 1, coords.col));\n
            instance.selection.setSelectedHeaders(false, true);\n
          }\n
          if (coords.col < 0) {\n
            instance.selection.setRangeEnd(new WalkontableCellCoords(coords.row, instance.countCols() - 1));\n
            instance.selection.setSelectedHeaders(true, false);\n
          }\n
        }\n
      }\n
      Handsontable.hooks.run(instance, \'afterOnCellMouseOver\', event, coords, TD);\n
      that.activeWt = that.wt;\n
    },\n
    onCellCornerMouseDown: function(event) {\n
      event.preventDefault();\n
      Handsontable.hooks.run(instance, \'afterOnCellCornerMouseDown\', event);\n
    },\n
    beforeDraw: function(force) {\n
      that.beforeRender(force);\n
    },\n
    onDraw: function(force) {\n
      that.onDraw(force);\n
    },\n
    onScrollVertically: function() {\n
      instance.runHooks(\'afterScrollVertically\');\n
    },\n
    onScrollHorizontally: function() {\n
      instance.runHooks(\'afterScrollHorizontally\');\n
    },\n
    onBeforeDrawBorders: function(corners, borderClassName) {\n
      instance.runHooks(\'beforeDrawBorders\', corners, borderClassName);\n
    },\n
    onBeforeTouchScroll: function() {\n
      instance.runHooks(\'beforeTouchScroll\');\n
    },\n
    onAfterMomentumScroll: function() {\n
      instance.runHooks(\'afterMomentumScroll\');\n
    },\n
    viewportRowCalculatorOverride: function(calc) {\n
      var rows = instance.countRows();\n
      var viewportOffset = that.settings.viewportRowRenderingOffset;\n
      if (viewportOffset === \'auto\' && that.settings.fixedRowsTop) {\n
        viewportOffset = 10;\n
      }\n
      if (typeof viewportOffset === \'number\') {\n
        calc.startRow = Math.max(calc.startRow - viewportOffset, 0);\n
        calc.endRow = Math.min(calc.endRow + viewportOffset, rows - 1);\n
      }\n
      if (viewportOffset === \'auto\') {\n
        var center = calc.startRow + calc.endRow - calc.startRow;\n
        var offset = Math.ceil(center / rows * 12);\n
        calc.startRow = Math.max(calc.startRow - offset, 0);\n
        calc.endRow = Math.min(calc.endRow + offset, rows - 1);\n
      }\n
      instance.runHooks(\'afterViewportRowCalculatorOverride\', calc);\n
    },\n
    viewportColumnCalculatorOverride: function(calc) {\n
      var cols = instance.countCols();\n
      var viewportOffset = that.settings.viewportColumnRenderingOffset;\n
      if (viewportOffset === \'auto\' && that.settings.fixedColumnsLeft) {\n
        viewportOffset = 10;\n
      }\n
      if (typeof viewportOffset === \'number\') {\n
        calc.startColumn = Math.max(calc.startColumn - viewportOffset, 0);\n
        calc.endColumn = Math.min(calc.endColumn + viewportOffset, cols - 1);\n
      }\n
      if (viewportOffset === \'auto\') {\n
        var center = calc.startColumn + calc.endColumn - calc.startColumn;\n
        var offset = Math.ceil(center / cols * 12);\n
        calc.startRow = Math.max(calc.startColumn - offset, 0);\n
        calc.endColumn = Math.min(calc.endColumn + offset, cols - 1);\n
      }\n
      instance.runHooks(\'afterViewportColumnCalculatorOverride\', calc);\n
    }\n
  };\n
  Handsontable.hooks.run(instance, \'beforeInitWalkontable\', walkontableConfig);\n
  this.wt = new Walkontable(walkontableConfig);\n
  this.activeWt = this.wt;\n
  this.eventManager.addEventListener(that.wt.wtTable.spreader, \'mousedown\', function(event) {\n
    if (event.target === that.wt.wtTable.spreader && event.which === 3) {\n
      stopPropagation(event);\n
    }\n
  });\n
  this.eventManager.addEventListener(that.wt.wtTable.spreader, \'contextmenu\', function(event) {\n
    if (event.target === that.wt.wtTable.spreader && event.which === 3) {\n
      stopPropagation(event);\n
    }\n
  });\n
  this.eventManager.addEventListener(document.documentElement, \'click\', function() {\n
    if (that.settings.observeDOMVisibility) {\n
      if (that.wt.drawInterrupted) {\n
        that.instance.forceFullRender = true;\n
        that.render();\n
      }\n
    }\n
  });\n
}\n
TableView.prototype.isTextSelectionAllowed = function(el) {\n
  if (isInput(el)) {\n
    return true;\n
  }\n
  if (this.settings.fragmentSelection && isChildOf(el, this.TBODY)) {\n
    return true;\n
  }\n
  return false;\n
};\n
TableView.prototype.isCellEdited = function() {\n
  var activeEditor = this.instance.getActiveEditor();\n
  return activeEditor && activeEditor.isOpened();\n
};\n
TableView.prototype.beforeRender = function(force) {\n
  if (force) {\n
    Handsontable.hooks.run(this.instance, \'beforeRender\', this.instance.forceFullRender);\n
  }\n
};\n
TableView.prototype.onDraw = function(force) {\n
  if (force) {\n
    Handsontable.hooks.run(this.instance, \'afterRender\', this.instance.forceFullRender);\n
  }\n
};\n
TableView.prototype.render = function() {\n
  this.wt.draw(!this.instance.forceFullRender);\n
  this.instance.forceFullRender = false;\n
  this.instance.renderCall = false;\n
};\n
TableView.prototype.getCellAtCoords = function(coords, topmost) {\n
  var td = this.wt.getCell(coords, topmost);\n
  if (td < 0) {\n
    return null;\n
  } else {\n
    return td;\n
  }\n
};\n
TableView.prototype.scrollViewport = function(coords) {\n
  this.wt.scrollViewport(coords);\n
};\n
TableView.prototype.appendRowHeader = function(row, TH) {\n
  if (TH.firstChild) {\n
    var container = TH.firstChild;\n
    if (!hasClass(container, \'relative\')) {\n
      empty(TH);\n
      this.appendRowHeader(row, TH);\n
      return;\n
    }\n
    this.updateCellHeader(container.querySelector(\'.rowHeader\'), row, this.instance.getRowHeader);\n
  } else {\n
    var div = document.createElement(\'div\');\n
    var span = document.createElement(\'span\');\n
    div.className = \'relative\';\n
    span.className = \'rowHeader\';\n
    this.updateCellHeader(span, row, this.instance.getRowHeader);\n
    div.appendChild(span);\n
    TH.appendChild(div);\n
  }\n
  Handsontable.hooks.run(this.instance, \'afterGetRowHeader\', row, TH);\n
};\n
TableView.prototype.appendColHeader = function(col, TH) {\n
  if (TH.firstChild) {\n
    var container = TH.firstChild;\n
    if (!hasClass(container, \'relative\')) {\n
      empty(TH);\n
      this.appendRowHeader(col, TH);\n
      return;\n
    }\n
    this.updateCellHeader(container.querySelector(\'.colHeader\'), col, this.instance.getColHeader);\n
  } else {\n
    var div = document.createElement(\'div\');\n
    var span = document.createElement(\'span\');\n
    div.className = \'relative\';\n
    span.className = \'colHeader\';\n
    this.updateCellHeader(span, col, this.instance.getColHeader);\n
    div.appendChild(span);\n
    TH.appendChild(div);\n
  }\n
  Handsontable.hooks.run(this

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAA0=</string> </persistent>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="13" aka="AAAAAAAAAA0=">
    <pickle>
      <global name="Pdata" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

.instance, \'afterGetColHeader\', col, TH);\n
};\n
TableView.prototype.updateCellHeader = function(element, index, content) {\n
  if (index > -1) {\n
    fastInnerHTML(element, content(index));\n
  } else {\n
    fastInnerText(element, String.fromCharCode(160));\n
    addClass(element, \'cornerHeader\');\n
  }\n
};\n
TableView.prototype.maximumVisibleElementWidth = function(leftOffset) {\n
  var workspaceWidth = this.wt.wtViewport.getWorkspaceWidth();\n
  var maxWidth = workspaceWidth - leftOffset;\n
  return maxWidth > 0 ? maxWidth : 0;\n
};\n
TableView.prototype.maximumVisibleElementHeight = function(topOffset) {\n
  var workspaceHeight = this.wt.wtViewport.getWorkspaceHeight();\n
  var maxHeight = workspaceHeight - topOffset;\n
  return maxHeight > 0 ? maxHeight : 0;\n
};\n
TableView.prototype.mainViewIsActive = function() {\n
  return this.wt === this.activeWt;\n
};\n
TableView.prototype.destroy = function() {\n
  this.wt.destroy();\n
  this.eventManager.destroy();\n
};\n
;\n
\n
//# \n
},{"3rdparty/walkontable/src/cell/coords":5,"3rdparty/walkontable/src/core":7,"3rdparty/walkontable/src/selection":18,"eventManager":40,"helpers/dom/element":44,"helpers/dom/event":45}],97:[function(require,module,exports){\n
"use strict";\n
Object.defineProperties(exports, {\n
  GhostTable: {get: function() {\n
      return GhostTable;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_helpers_47_array__,\n
    $___46__46__47_helpers_47_object__,\n
    $___46__46__47_helpers_47_number__,\n
    $___46__46__47_helpers_47_mixed__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    outerHeight = $__0.outerHeight,\n
    outerWidth = $__0.outerWidth;\n
var arrayEach = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).arrayEach;\n
var objectEach = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).objectEach;\n
var rangeEach = ($___46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47_helpers_47_number__ && $___46__46__47_helpers_47_number__.__esModule && $___46__46__47_helpers_47_number__ || {default: $___46__46__47_helpers_47_number__}).rangeEach;\n
var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;\n
var GhostTable = function GhostTable(hotInstance) {\n
  this.hot = hotInstance;\n
  this.container = null;\n
  this.injected = false;\n
  this.rows = [];\n
  this.columns = [];\n
  this.samples = null;\n
};\n
($traceurRuntime.createClass)(GhostTable, {\n
  addRow: function(row, samples) {\n
    if (this.columns.length) {\n
      throw new Error(\'Doesn\\\'t support multi-dimensional table\');\n
    }\n
    if (!this.rows.length) {\n
      this.container = this.createContainer(this.hot.rootElement.className);\n
    }\n
    var rowObject = {row: row};\n
    this.rows.push(rowObject);\n
    this.samples = samples;\n
    this.table = this.createTable(this.hot.table.className);\n
    this.table.colGroup.appendChild(this.createColGroupsCol());\n
    this.table.tr.appendChild(this.createRow(row));\n
    this.container.container.appendChild(this.table.fragment);\n
    rowObject.table = this.table.table;\n
  },\n
  addColumn: function(column, samples) {\n
    if (this.rows.length) {\n
      throw new Error(\'Doesn\\\'t support multi-dimensional table\');\n
    }\n
    if (!this.columns.length) {\n
      this.container = this.createContainer(this.hot.rootElement.className);\n
    }\n
    var columnObject = {col: column};\n
    this.columns.push(columnObject);\n
    this.samples = samples;\n
    this.table = this.createTable(this.hot.table.className);\n
    if (this.hot.getColHeader(column) !== null) {\n
      this.hot.view.appendColHeader(column, this.table.th);\n
    }\n
    this.table.tBody.appendChild(this.createCol(column));\n
    this.container.container.appendChild(this.table.fragment);\n
    columnObject.table = this.table.table;\n
  },\n
  getHeights: function(callback) {\n
    if (!this.injected) {\n
      this.injectTable();\n
    }\n
    arrayEach(this.rows, (function(row) {\n
      callback(row.row, outerHeight(row.table) - 1);\n
    }));\n
  },\n
  getWidths: function(callback) {\n
    if (!this.injected) {\n
      this.injectTable();\n
    }\n
    arrayEach(this.columns, (function(column) {\n
      callback(column.col, outerWidth(column.table));\n
    }));\n
  },\n
  createColGroupsCol: function() {\n
    var $__5 = this;\n
    var d = document;\n
    var fragment = d.createDocumentFragment();\n
    fragment.appendChild(this.createColElement(-1));\n
    this.samples.forEach((function(sample) {\n
      arrayEach(sample.strings, (function(string) {\n
        fragment.appendChild($__5.createColElement(string.col));\n
      }));\n
    }));\n
    return fragment;\n
  },\n
  createRow: function(row) {\n
    var $__5 = this;\n
    var d = document;\n
    var fragment = d.createDocumentFragment();\n
    var th = d.createElement(\'th\');\n
    if (this.hot.getRowHeader(row) !== null) {\n
      this.hot.view.appendRowHeader(row, th);\n
    }\n
    fragment.appendChild(th);\n
    this.samples.forEach((function(sample) {\n
      arrayEach(sample.strings, (function(string) {\n
        var column = string.col;\n
        var cellProperties = $__5.hot.getCellMeta(row, column);\n
        cellProperties.col = column;\n
        cellProperties.row = row;\n
        var renderer = $__5.hot.getCellRenderer(cellProperties);\n
        var td = d.createElement(\'td\');\n
        renderer($__5.hot, td, row, column, $__5.hot.colToProp(column), string.value, cellProperties);\n
        fragment.appendChild(td);\n
      }));\n
    }));\n
    return fragment;\n
  },\n
  createCol: function(column) {\n
    var $__5 = this;\n
    var d = document;\n
    var fragment = d.createDocumentFragment();\n
    this.samples.forEach((function(sample) {\n
      arrayEach(sample.strings, (function(string) {\n
        var row = string.row;\n
        var cellProperties = $__5.hot.getCellMeta(row, column);\n
        cellProperties.col = column;\n
        cellProperties.row = row;\n
        var renderer = $__5.hot.getCellRenderer(cellProperties);\n
        var td = d.createElement(\'td\');\n
        var tr = d.createElement(\'tr\');\n
        renderer($__5.hot, td, row, column, $__5.hot.colToProp(row), string.value, cellProperties);\n
        tr.appendChild(td);\n
        fragment.appendChild(tr);\n
      }));\n
    }));\n
    return fragment;\n
  },\n
  clean: function() {\n
    this.rows.length = 0;\n
    this.columns.length = 0;\n
    if (this.samples) {\n
      this.samples.clear();\n
    }\n
    this.samples = null;\n
    this.removeTable();\n
  },\n
  injectTable: function() {\n
    var parent = arguments[0] !== (void 0) ? arguments[0] : null;\n
    if (!this.injected) {\n
      (parent || this.hot.rootElement).appendChild(this.container.fragment);\n
      this.injected = true;\n
    }\n
  },\n
  removeTable: function() {\n
    if (this.injected && this.container.container.parentNode) {\n
      this.container.container.parentNode.removeChild(this.container.container);\n
      this.container = null;\n
      this.injected = false;\n
    }\n
  },\n
  createColElement: function(column) {\n
    var d = document;\n
    var col = d.createElement(\'col\');\n
    col.style.width = this.hot.view.wt.wtTable.getStretchedColumnWidth(column) + \'px\';\n
    return col;\n
  },\n
  createTable: function() {\n
    var className = arguments[0] !== (void 0) ? arguments[0] : \'\';\n
    var d = document;\n
    var fragment = d.createDocumentFragment();\n
    var table = d.createElement(\'table\');\n
    var tHead = d.createElement(\'thead\');\n
    var tBody = d.createElement(\'tbody\');\n
    var colGroup = d.createElement(\'colgroup\');\n
    var tr = d.createElement(\'tr\');\n
    var th = d.createElement(\'th\');\n
    if (this.isVertical()) {\n
      table.appendChild(colGroup);\n
    }\n
    if (this.isHorizontal()) {\n
      tr.appendChild(th);\n
      tHead.appendChild(tr);\n
      table.style.tableLayout = \'auto\';\n
      table.style.width = \'auto\';\n
    }\n
    table.appendChild(tHead);\n
    if (this.isVertical()) {\n
      tBody.appendChild(tr);\n
    }\n
    table.appendChild(tBody);\n
    addClass(table, className);\n
    fragment.appendChild(table);\n
    return {\n
      fragment: fragment,\n
      table: table,\n
      tHead: tHead,\n
      tBody: tBody,\n
      colGroup: colGroup,\n
      tr: tr,\n
      th: th\n
    };\n
  },\n
  createContainer: function() {\n
    var className = arguments[0] !== (void 0) ? arguments[0] : \'\';\n
    var d = document;\n
    var fragment = d.createDocumentFragment();\n
    var container = d.createElement(\'div\');\n
    className = \'htGhostTable htAutoSize \' + className.trim();\n
    addClass(container, className);\n
    fragment.appendChild(container);\n
    return {\n
      fragment: fragment,\n
      container: container\n
    };\n
  },\n
  isVertical: function() {\n
    return this.rows.length && !this.columns.length ? true : false;\n
  },\n
  isHorizontal: function() {\n
    return this.columns.length && !this.rows.length ? true : false;\n
  }\n
}, {});\n
;\n
Handsontable.utils = Handsontable.utils || {};\n
Handsontable.utils.GhostTable = GhostTable;\n
\n
//# \n
},{"helpers/array":41,"helpers/dom/element":44,"helpers/mixed":47,"helpers/number":48,"helpers/object":49}],98:[function(require,module,exports){\n
"use strict";\n
var $__7;\n
Object.defineProperties(exports, {\n
  SamplesGenerator: {get: function() {\n
      return SamplesGenerator;\n
    }},\n
  __esModule: {value: true}\n
});\n
var $___46__46__47_helpers_47_dom_47_element__,\n
    $___46__46__47_helpers_47_array__,\n
    $___46__46__47_helpers_47_object__,\n
    $___46__46__47_helpers_47_number__,\n
    $___46__46__47_helpers_47_mixed__;\n
var $__0 = ($___46__46__47_helpers_47_dom_47_element__ = require("helpers/dom/element"), $___46__46__47_helpers_47_dom_47_element__ && $___46__46__47_helpers_47_dom_47_element__.__esModule && $___46__46__47_helpers_47_dom_47_element__ || {default: $___46__46__47_helpers_47_dom_47_element__}),\n
    addClass = $__0.addClass,\n
    outerHeight = $__0.outerHeight,\n
    outerWidth = $__0.outerWidth;\n
var arrayEach = ($___46__46__47_helpers_47_array__ = require("helpers/array"), $___46__46__47_helpers_47_array__ && $___46__46__47_helpers_47_array__.__esModule && $___46__46__47_helpers_47_array__ || {default: $___46__46__47_helpers_47_array__}).arrayEach;\n
var objectEach = ($___46__46__47_helpers_47_object__ = require("helpers/object"), $___46__46__47_helpers_47_object__ && $___46__46__47_helpers_47_object__.__esModule && $___46__46__47_helpers_47_object__ || {default: $___46__46__47_helpers_47_object__}).objectEach;\n
var rangeEach = ($___46__46__47_helpers_47_number__ = require("helpers/number"), $___46__46__47_helpers_47_number__ && $___46__46__47_helpers_47_number__.__esModule && $___46__46__47_helpers_47_number__ || {default: $___46__46__47_helpers_47_number__}).rangeEach;\n
var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;\n
var SamplesGenerator = function SamplesGenerator(dataFactory) {\n
  this.samples = null;\n
  this.dataFactory = dataFactory;\n
};\n
var $SamplesGenerator = SamplesGenerator;\n
($traceurRuntime.createClass)(SamplesGenerator, ($__7 = {}, Object.defineProperty($__7, "generateRowSamples", {\n
  value: function(rowRange, colRange) {\n
    return this.generateSamples(\'row\', colRange, rowRange);\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__7, "generateColumnSamples", {\n
  value: function(colRange, rowRange) {\n
    return this.generateSamples(\'col\', rowRange, colRange);\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__7, "generateSamples", {\n
  value: function(type, range, specifierRange) {\n
    var $__5 = this;\n
    var samples = new Map();\n
    if (typeof specifierRange === \'number\') {\n
      specifierRange = {\n
        from: specifierRange,\n
        to: specifierRange\n
      };\n
    }\n
    rangeEach(specifierRange.from, specifierRange.to, (function(index) {\n
      var sample = $__5.generateSample(type, range, index);\n
      samples.set(index, sample);\n
    }));\n
    return samples;\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), Object.defineProperty($__7, "generateSample", {\n
  value: function(type, range, specifierValue) {\n
    var $__5 = this;\n
    var samples = new Map();\n
    rangeEach(range.from, range.to, (function(index) {\n
      var $__7;\n
      var value;\n
      if (type === \'row\') {\n
        value = $__5.dataFactory(specifierValue, index);\n
      } else if (type === \'col\') {\n
        value = $__5.dataFactory(index, specifierValue);\n
      } else {\n
        throw new Error(\'Unsupported sample type\');\n
      }\n
      if (!Array.isArray(value)) {\n
        value = stringify(value);\n
      }\n
      var len = value.length;\n
      if (!samples.has(len)) {\n
        samples.set(len, {\n
          needed: $SamplesGenerator.SAMPLE_COUNT,\n
          strings: []\n
        });\n
      }\n
      var sample = samples.get(len);\n
      if (sample.needed) {\n
        sample.strings.push(($__7 = {}, Object.defineProperty($__7, "value", {\n
          value: value,\n
          configurable: true,\n
          enumerable: true,\n
          writable: true\n
        }), Object.defineProperty($__7, type === \'row\' ? \'col\' : \'row\', {\n
          value: index,\n
          configurable: true,\n
          enumerable: true,\n
          writable: true\n
        }), $__7));\n
        sample.needed--;\n
      }\n
    }));\n
    return samples;\n
  },\n
  configurable: true,\n
  enumerable: true,\n
  writable: true\n
}), $__7), {get SAMPLE_COUNT() {\n
    return 3;\n
  }});\n
;\n
Handsontable.utils = Handsontable.utils || {};\n
Handsontable.utils.SamplesGenerator = SamplesGenerator;\n
\n
//# \n
},{"helpers/array":41,"helpers/dom/element":44,"helpers/mixed":47,"helpers/number":48,"helpers/object":49}],99:[function(require,module,exports){\n
"use strict";\n
var $___46__46__47_helpers_47_mixed__;\n
var stringify = ($___46__46__47_helpers_47_mixed__ = require("helpers/mixed"), $___46__46__47_helpers_47_mixed__ && $___46__46__47_helpers_47_mixed__.__esModule && $___46__46__47_helpers_47_mixed__ || {default: $___46__46__47_helpers_47_mixed__}).stringify;\n
Handsontable.AutocompleteValidator = function(value, callback) {\n
  if (this.strict && this.source) {\n
    if (typeof this.source === \'function\') {\n
      this.source(value, process(value, callback));\n
    } else {\n
      process(value, callback)(this.source);\n
    }\n
  } else {\n
    callback(true);\n
  }\n
};\n
function process(value, callback) {\n
  var originalVal = value;\n
  var lowercaseVal = typeof originalVal === \'string\' ? originalVal.toLowerCase() : null;\n
  return function(source) {\n
    var found = false;\n
    for (var s = 0,\n
        slen = source.length; s < slen; s++) {\n
      if (originalVal === source[s]) {\n
        found = true;\n
        break;\n
      } else if (lowercaseVal === stringify(source[s]).toLowerCase()) {\n
        found = true;\n
        break;\n
      }\n
    }\n
    callback(found);\n
  };\n
}\n
\n
//# \n
},{"helpers/mixed":47}],100:[function(require,module,exports){\n
"use strict";\n
var $__moment__,\n
    $___46__46__47_editors__;\n
var moment = ($__moment__ = require("moment"), $__moment__ && $__moment__.__esModule && $__moment__ || {default: $__moment__}).default;\n
var getEditor = ($___46__46__47_editors__ = require("editors"), $___46__46__47_editors__ && $___46__46__47_editors__.__esModule && $___46__46__47_editors__ || {default: $___46__46__47_editors__}).getEditor;\n
Handsontable.DateValidator = function(value, callback) {\n
  var valid = true;\n
  var dateEditor = getEditor(\'date\', this.instance);\n
  if (value === null) {\n
    value = \'\';\n
  }\n
  var isValidDate = moment(new Date(value)).isValid();\n
  var isValidFormat = moment(value, this.dateFormat || dateEditor.defaultDateFormat, true).isValid();\n
  if (!isValidDate) {\n
    valid = false;\n
  }\n
  if (!isValidDate && isValidFormat) {\n
    valid = true;\n
  }\n
  if (isValidDate && !isValidFormat) {\n
    if (this.correctFormat === true) {\n
      var correctedValue = correctFormat(value, this.dateFormat);\n
      this.instance.setDataAtCell(this.row, this.col, correctedValue, \'dateValidator\');\n
      valid = true;\n
    } else {\n
      valid = false;\n
    }\n
  }\n
  callback(valid);\n
};\n
var correctFormat = function correctFormat(value, dateFormat) {\n
  var date = moment(new Date(value));\n
  var year = date.format(\'YYYY\');\n
  var yearNow = moment().format(\'YYYY\');\n
  if (year.substr(0, 2) !== yearNow.substr(0, 2)) {\n
    if (!value.match(new RegExp(year))) {\n
      date.year(year.replace(year.substr(0, 2), yearNow.substr(0, 2)));\n
    }\n
  } else if (year.length > 4) {\n
    date.year((date.year() + \'\').substr(0, 4));\n
  }\n
  return date.format(dateFormat);\n
};\n
\n
//# \n
},{"editors":28,"moment":undefined}],101:[function(require,module,exports){\n
"use strict";\n
Handsontable.NumericValidator = function(value, callback) {\n
  if (value === null) {\n
    value = \'\';\n
  }\n
  callback(/^-?\\d*(\\.|\\,)?\\d*$/.test(value));\n
};\n
\n
//# \n
},{}],"SheetClip":[function(require,module,exports){\n
"use strict";\n
(function(global) {\n
  "use strict";\n
  function countQuotes(str) {\n
    return str.split(\'"\').length - 1;\n
  }\n
  var SheetClip = {\n
    parse: function(str) {\n
      var r,\n
          rLen,\n
          rows,\n
          arr = [],\n
          a = 0,\n
          c,\n
          cLen,\n
          multiline,\n
          last;\n
      rows = str.split(\'\\n\');\n
      if (rows.length > 1 && rows[rows.length - 1] === \'\') {\n
        rows.pop();\n
      }\n
      for (r = 0, rLen = rows.length; r < rLen; r += 1) {\n
        rows[r] = rows[r].split(\'\\t\');\n
        for (c = 0, cLen = rows[r].length; c < cLen; c += 1) {\n
          if (!arr[a]) {\n
            arr[a] = [];\n
          }\n
          if (multiline && c === 0) {\n
            last = arr[a].length - 1;\n
            arr[a][last] = arr[a][last] + \'\\n\' + rows[r][0];\n
            if (multiline && (countQuotes(rows[r][0]) & 1)) {\n
              multiline = false;\n
              arr[a][last] = arr[a][last].substring(0, arr[a][last].length - 1).replace(/""/g, \'"\');\n
            }\n
          } else {\n
            if (c === cLen - 1 && rows[r][c].indexOf(\'"\') === 0 && (countQuotes(rows[r][c]) & 1)) {\n
              arr[a].push(rows[r][c].substring(1).replace(/""/g, \'"\'));\n
              multiline = true;\n
            } else {\n
              arr[a].push(rows[r][c].replace(/""/g, \'"\'));\n
              multiline = false;\n
            }\n
          }\n
        }\n
        if (!multiline) {\n
          a += 1;\n
        }\n
      }\n
      return arr;\n
    },\n
    stringify: function(arr) {\n
      var r,\n
          rLen,\n
          c,\n
          cLen,\n
          str = \'\',\n
          val;\n
      for (r = 0, rLen = arr.length; r < rLen; r += 1) {\n
        cLen = arr[r].length;\n
        for (c = 0; c < cLen; c += 1) {\n
          if (c > 0) {\n
            str += \'\\t\';\n
          }\n
          val = arr[r][c];\n
          if (typeof val === \'string\') {\n
            if (val.indexOf(\'\\n\') > -1) {\n
              str += \'"\' + val.replace(/"/g, \'""\') + \'"\';\n
            } else {\n
              str += val;\n
            }\n
          } else if (val === null || val === void 0) {\n
            str += \'\';\n
          } else {\n
            str += val;\n
          }\n
        }\n
        str += \'\\n\';\n
      }\n
      return str;\n
    }\n
  };\n
  if (typeof exports !== \'undefined\') {\n
    exports.parse = SheetClip.parse;\n
    exports.stringify = SheetClip.stringify;\n
  } else {\n
    global.SheetClip = SheetClip;\n
  }\n
}(window));\n
\n
//# \n
},{}],"autoResize":[function(require,module,exports){\n
"use strict";\n
function autoResize() {\n
  var defaults = {\n
    minHeight: 200,\n
    maxHeight: 300,\n
    minWidth: 100,\n
    maxWidth: 300\n
  },\n
      el,\n
      body = document.body,\n
      text = document.createTextNode(\'\'),\n
      span = document.createElement(\'SPAN\'),\n
      observe = function(element, event, handler) {\n
        if (window.attachEvent) {\n
          element.attachEvent(\'on\' + event, handler);\n
        } else {\n
          element.addEventListener(event, handler, false);\n
        }\n
      },\n
      unObserve = function(element, event, handler) {\n
        if (window.removeEventListener) {\n
          element.removeEventListener(event, handler, false);\n
        } else {\n
          element.detachEvent(\'on\' + event, handler);\n
        }\n
      },\n
      resize = function(newChar) {\n
        var width,\n
            scrollHeight;\n
        if (!newChar) {\n
          newChar = "";\n
        } else if (!/^[a-zA-Z \\.,\\\\\\/\\|0-9]$/.test(newChar)) {\n
          newChar = ".";\n
        }\n
        if (text.textContent !== void 0) {\n
          text.textContent = el.value + newChar;\n
        } else {\n
          text.data = el.value + newChar;\n
        }\n
        span.style.fontSize = Handsontable.Dom.getComputedStyle(el).fontSize;\n
        span.style.fontFamily = Handsontable.Dom.getComputedStyle(el).fontFamily;\n
        span.style.whiteSpace = "pre";\n
        body.appendChild(span);\n
        width = span.clientWidth + 2;\n
        body.removeChild(span);\n
        el.style.height = defaults.minHeight + \'px\';\n
        if (defaults.minWidth > width) {\n
          el.style.width = defaults.minWidth + \'px\';\n
        } else if (width > defaults.maxWidth) {\n
          el.style.width = defaults.maxWidth + \'px\';\n
        } else {\n
          el.style.width = width + \'px\';\n
        }\n
        scrollHeight = el.scrollHeight ? el.scrollHeight - 1 : 0;\n
        if (defaults.minHeight > scrollHeight) {\n
          el.style.height = defaults.minHeight + \'px\';\n
        } else if (defaults.maxHeight < scrollHeight) {\n
          el.style.height = defaults.maxHeight + \'px\';\n
          el.style.overflowY = \'visible\';\n
        } else {\n
          el.style.height = scrollHeight + \'px\';\n
        }\n
      },\n
      delayedResize = function() {\n
        window.setTimeout(resize, 0);\n
      },\n
      extendDefaults = function(config) {\n
        if (config && config.minHeight) {\n
          if (config.minHeight == \'inherit\') {\n
            defaults.minHeight = el.clientHeight;\n
          } else {\n
            var minHeight = parseInt(config.minHeight);\n
            if (!isNaN(minHeight)) {\n
              defaults.minHeight = minHeight;\n
            }\n
          }\n
        }\n
        if (config && config.maxHeight) {\n
          if (config.maxHeight == \'inherit\') {\n
            defaults.maxHeight = el.clientHeight;\n
          } else {\n
            var maxHeight = parseInt(config.maxHeight);\n
            if (!isNaN(maxHeight)) {\n
              defaults.maxHeight = maxHeight;\n
            }\n
          }\n
        }\n
        if (config && config.minWidth) {\n
          if (config.minWidth == \'inherit\') {\n
            defaults.minWidth = el.clientWidth;\n
          } else {\n
            var minWidth = parseInt(config.minWidth);\n
            if (!isNaN(minWidth)) {\n
              defaults.minWidth = minWidth;\n
            }\n
          }\n
        }\n
        if (config && config.maxWidth) {\n
          if (config.maxWidth == \'inherit\') {\n
            defaults.maxWidth = el.clientWidth;\n
          } else {\n
            var maxWidth = parseInt(config.maxWidth);\n
            if (!isNaN(maxWidth)) {\n
              defaults.maxWidth = maxWidth;\n
            }\n
          }\n
        }\n
        if (!span.firstChild) {\n
          span.className = "autoResize";\n
          span.style.display = \'inline-block\';\n
          span.appendChild(text);\n
        }\n
      },\n
      init = function(el_, config, doObserve) {\n
        el = el_;\n
        extendDefaults(config);\n
        if (el.nodeName == \'TEXTAREA\') {\n
          el.style.resize = \'none\';\n
          el.style.overflowY = \'\';\n
          el.style.height = defaults.minHeight + \'px\';\n
          el.style.minWidth = defaults.minWidth + \'px\';\n
          el.style.maxWidth = defaults.maxWidth + \'px\';\n
          el.style.overflowY = \'hidden\';\n
        }\n
        if (doObserve) {\n
          observe(el, \'change\', resize);\n
          observe(el, \'cut\', delayedResize);\n
          observe(el, \'paste\', delayedResize);\n
          observe(el, \'drop\', delayedResize);\n
          observe(el, \'keydown\', delayedResize);\n
        }\n
        resize();\n
      };\n
  return {\n
    init: function(el_, config, doObserve) {\n
      init(el_, config, doObserve);\n
    },\n
    unObserve: function() {\n
      unObserve(el, \'change\', resize);\n
      unObserve(el, \'cut\', delayedResize);\n
      unObserve(el, \'paste\', delayedResize);\n
      unObserve(el, \'drop\', delayedResize);\n
      unObserve(el, \'keydown\', delayedResize);\n
    },\n
    resize: resize\n
  };\n
}\n
if (typeof exports !== \'undefined\') {\n
  module.exports = autoResize;\n
}\n
\n
//# \n
},{}],"copyPaste":[function(require,module,exports){\n
"use strict";\n
var instance;\n
function copyPaste() {\n
  if (!instance) {\n
    instance = new CopyPasteClass();\n
  } else if (instance.hasBeenDestroyed()) {\n
    instance.init();\n
  }\n
  instance.refCounter++;\n
  return instance;\n
}\n
if (typeof exports !== \'undefined\') {\n
  module.exports = copyPaste;\n
}\n
function CopyPasteClass() {\n
  this.refCounter = 0;\n
  this.init();\n
}\n
CopyPasteClass.prototype.init = function() {\n
  var style,\n
      parent;\n
  this.copyCallbacks = [];\n
  this.cutCallbacks = [];\n
  this.pasteCallbacks = [];\n
  parent = document.body;\n
  if (document.getElementById(\'CopyPasteDiv\')) {\n
    this.elDiv = document.getElementById(\'CopyPasteDiv\');\n
    this.elTextarea = this.elDiv.firstChild;\n
  } else {\n
    this.elDiv = document.createElement(\'div\');\n
    this.elDiv.id = \'CopyPasteDiv\';\n
    style = this.elDiv.style;\n
    style.position = \'fixed\';\n
    style.top = \'-10000px\';\n
    style.left = \'-10000px\';\n
    parent.appendChild(this.elDiv);\n
    this.elTextarea = document.createElement(\'textarea\');\n
    this.elTextarea.className = \'copyPaste\';\n
    this.elTextarea.onpaste = function(event) {\n
      var clipboardContents,\n
          temp;\n
      if (\'WebkitAppearance\' in document.documentElement.style) {\n
        clipboardContents = event.clipboardData.getData("Text");\n
        if (navigator.userAgent.indexOf(\'Safari\') !== -1 && navigator.userAgent.indexOf(\'Chrome\') === -1) {\n
          temp = clipboardContents.split(\'\\n\');\n
          if (temp[temp.length - 1] === \'\') {\n
            temp.pop();\n
          }\n
          clipboardContents = temp.join(\'\\n\');\n
        }\n
        this.value = clipboardContents;\n
        return false;\n
      }\n
    };\n
    style = this.elTextarea.style;\n
    style.width = \'10000px\';\n
    style.height = \'10000px\';\n
    style.overflow = \'hidden\';\n
    this.elDiv.appendChild(this.elTextarea);\n
    if (typeof style.opacity !== \'undefined\') {\n
      style.opacity = 0;\n
    }\n
  }\n
  this.onKeyDownRef = this.onKeyDown.bind(this);\n
  document.documentElement.addEventListener(\'keydown\', this.onKeyDownRef, false);\n
};\n
CopyPasteClass.prototype.onKeyDown = function(event) {\n
  var _this = this,\n
      isCtrlDown = false;\n
  function isActiveElementEditable() {\n
    var element = document.activeElement;\n
    if (element.shadowRoot && element.shadowRoot.activeElement) {\n
      element = element.shadowRoot.activeElement;\n
    }\n
    return [\'INPUT\', \'SELECT\', \'TEXTAREA\'].indexOf(element.nodeName) > -1 || element.contentEditable === \'true\';\n
  }\n
  if (event.metaKey) {\n
    isCtrlDown = true;\n
  } else if (event.ctrlKey && navigator.userAgent.indexOf(\'Mac\') === -1) {\n
    isCtrlDown = true;\n
  }\n
  if (isCtrlDown) {\n
    if (document.activeElement !== this.elTextarea && (this.getSelectionText() !== \'\' || isActiveElementEditable())) {\n
      return;\n
    }\n
    this.selectNodeText(this.elTextarea);\n
    setTimeout(function() {\n
      if (document.activeElement !== _this.elTextarea) {\n
        _this.selectNodeText(_this.elTextarea);\n
      }\n
    }, 0);\n
  }\n
  if (isCtrlDown && (event.keyCode === 67 || event.keyCode === 86 || event.keyCode === 88)) {\n
    if (event.keyCode === 88) {\n
      setTimeout(function() {\n
        _this.triggerCut(event);\n
      }, 0);\n
    } else if (event.keyCode === 86) {\n
      setTimeout(function() {\n
        _this.triggerPaste(event);\n
      }, 0);\n
    }\n
  }\n
};\n
CopyPasteClass.prototype.selectNodeText = function(element) {\n
  if (element) {\n
    element.select();\n
  }\n
};\n
CopyPasteClass.prototype.getSelectionText = function() {\n
  var text = \'\';\n
  if (window.getSelection) {\n
    text = window.getSelection().toString();\n
  } else if (document.selection && document.selection.type !== \'Control\') {\n
    text = document.selection.createRange().text;\n
  }\n
  return text;\n
};\n
CopyPasteClass.prototype.copyable = function(string) {\n
  if (typeof string !== \'string\' && string.toString === void 0) {\n
    throw new Error(\'copyable requires string parameter\');\n
  }\n
  this.elTextarea.value = string;\n
  this.selectNodeText(this.elTextarea);\n
};\n
CopyPasteClass.prototype.onCut = function(callback) {\n
  this.cutCallbacks.push(callback);\n
};\n
CopyPasteClass.prototype.onPaste = function(callback) {\n
  this.pasteCallbacks.push(callback);\n
};\n
CopyPasteClass.prototype.removeCallback = function(callback) {\n
  var i,\n
      len;\n
  for (i = 0, len = this.copyCallbacks.length; i < len; i++) {\n
    if (this.copyCallbacks[i] === callback) {\n
      this.copyCallbacks.splice(i, 1);\n
      return true;\n
    }\n
  }\n
  for (i = 0, len = this.cutCallbacks.length; i < len; i++) {\n
    if (this.cutCallbacks[i] === callback) {\n
      this.cutCallbacks.splice(i, 1);\n
      return true;\n
    }\n
  }\n
  for (i = 0, len = this.pasteCallbacks.length; i < len; i++) {\n
    if (this.pasteCallbacks[i] === callback) {\n
      this.pasteCallbacks.splice(i, 1);\n
      return true;\n
    }\n
  }\n
  return false;\n
};\n
CopyPasteClass.prototype.triggerCut = function(event) {\n
  var _this = this;\n
  if (_this.cutCallbacks) {\n
    setTimeout(function() {\n
      for (var i = 0,\n
          len = _this.cutCallbacks.length; i < len; i++) {\n
        _this.cutCallbacks[i](event);\n
      }\n
    }, 50);\n
  }\n
};\n
CopyPasteClass.prototype.triggerPaste = function(event, string) {\n
  var _this = this;\n
  if (_this.pasteCallbacks) {\n
    setTimeout(function() {\n
      var val = string || _this.elTextarea.value;\n
      for (var i = 0,\n
          len = _this.pasteCallbacks.length; i < len; i++) {\n
        _this.pasteCallbacks[i](val, event);\n
      }\n
    }, 50);\n
  }\n
};\n
CopyPasteClass.prototype.destroy = function() {\n
  if (!this.hasBeenDestroyed() && --this.refCounter === 0) {\n
    if (this.elDiv && this.elDiv.parentNode) {\n
      this.elDiv.parentNode.removeChild(this.elDiv);\n
      this.elDiv = null;\n
      this.elTextarea = null;\n
    }\n
    document.documentElement.removeEventListener(\'keydown\', this.onKeyDownRef);\n
    this.onKeyDownRef = null;\n
  }\n
};\n
CopyPasteClass.prototype.hasBeenDestroyed = function() {\n
  return !this.refCounter;\n
};\n
\n
//# \n
},{}],"es6collections":[function(require,module,exports){\n
"use strict";\n
(function(exports) {\n
  \'use strict\';\n
  var i;\n
  var defineProperty = Object.defineProperty,\n
      is = function(a, b) {\n
        return isNaN(a) ? isNaN(b) : a === b;\n
      };\n
  if (typeof WeakMap == \'undefined\') {\n
    exports.WeakMap = createCollection({\n
      \'delete\': sharedDelete,\n
      clear: sharedClear,\n
      get: sharedGet,\n
      has: mapHas,\n
      set: sharedSet\n
    }, true);\n
  }\n
  if (typeof Map == \'undefined\') {\n
    exports.Map = createCollection({\n
      \'delete\': sharedDelete,\n
      has: mapHas,\n
      get: sharedGet,\n
      set: sharedSet,\n
      keys: sharedKeys,\n
      values: sharedValues,\n
      entries: mapEntries,\n
      forEach: sharedForEach,\n
      clear: sharedClear\n
    });\n
  }\n
  if (typeof Set == \'undefined\') {\n
    exports.Set = createCollection({\n
      has: setHas,\n
      add: sharedAdd,\n
      \'delete\': sharedDelete,\n
      clear: sharedClear,\n
      keys: sharedValues,\n
      values: sharedValues,\n
      entries: setEntries,\n
      forEach: sharedForEach\n
    });\n
  }\n
  if (typeof WeakSet == \'undefined\') {\n
    exports.WeakSet = createCollection({\n
      \'delete\': sharedDelete,\n
      add: sharedAdd,\n
      clear: sharedClear,\n
      has: setHas\n
    }, true);\n
  }\n
  function createCollection(proto, objectOnly) {\n
    function Collection(a) {\n
      if (!this || this.constructor !== Collection)\n
        return new Collection(a);\n
      this._keys = [];\n
      this._values = [];\n
      this._itp = [];\n
      this.objectOnly = objectOnly;\n
      if (a)\n
        init.call(this, a);\n
    }\n
    if (!objectOnly) {\n
      defineProperty(proto, \'size\', {get: sharedSize});\n
    }\n
    proto.constructor = Collection;\n
    Collection.prototype = proto;\n
    return Collection;\n
  }\n
  function init(a) {\n
    var i;\n
    if (this.add)\n
      a.forEach(this.add, this);\n
    else\n
      a.forEach(function(a) {\n
        this.set(a[0], a[1]);\n
      }, this);\n
  }\n
  function sharedDelete(key) {\n
    if (this.has(key)) {\n
      this._keys.splice(i, 1);\n
      this._values.splice(i, 1);\n
      this._itp.forEach(function(p) {\n
        if (i < p[0])\n
          p[0]--;\n
      });\n
    }\n
    return -1 < i;\n
  }\n
  ;\n
  function sharedGet(key) {\n
    return this.has(key) ? this._values[i] : undefined;\n
  }\n
  function has(list, key) {\n
    if (this.objectOnly && key !== Object(key))\n
      throw new TypeError("Invalid value used as weak collection key");\n
    if (key != key || key === 0)\n
      for (i = list.length; i-- && !is(list[i], key); ) {}\n
    else\n
      i = list.indexOf(key);\n
    return -1 < i;\n
  }\n
  function setHas(value) {\n
    return has.call(this, this._values, value);\n
  }\n
  function mapHas(value) {\n
    return has.call(this, this._keys, value);\n
  }\n
  function sharedSet(key, value) {\n
    this.has(key) ? this._values[i] = value : this._values[this._keys.push(key) - 1] = value;\n
    return this;\n
  }\n
  function sharedAdd(value) {\n
    if (!this.has(value))\n
      this._values.push(value);\n
    return this;\n
  }\n
  function sharedClear() {\n
    this._values.length = 0;\n
  }\n
  function sharedKeys() {\n
    return sharedIterator(this._itp, this._keys);\n
  }\n
  function sharedValues() {\n
    return sharedIterator(this._itp, this._values);\n
  }\n
  function mapEntries() {\n
    return sharedIterator(this._itp, this._keys, this._values);\n
  }\n
  function setEntries() {\n
    return sharedIterator(this._itp, this._values, this._values);\n
  }\n
  function sharedIterator(itp, array, array2) {\n
    var p = [0],\n
        done = false;\n
    itp.push(p);\n
    return {next: function() {\n
        var v,\n
            k = p[0];\n
        if (!done && k < array.length) {\n
          v = array2 ? [array[k], array2[k]] : array[k];\n
          p[0]++;\n
        } else {\n
          done = true;\n
          itp.splice(itp.indexOf(p), 1);\n
        }\n
        return {\n
          done: done,\n
          value: v\n
        };\n
      }};\n
  }\n
  function sharedSize() {\n
    return this._values.length;\n
  }\n
  function sharedForEach(callback, context) {\n
    var it = this.entries();\n
    for (; ; ) {\n
      var r = it.next();\n
      if (r.done)\n
        break;\n
      callback.call(context, r.value[1], r.value[0], this);\n
    }\n
  }\n
})(typeof exports != \'undefined\' && typeof global != \'undefined\' ? global : window);\n
\n
//# \n
},{}],"jsonpatch":[function(require,module,exports){\n
"use strict";\n
var jsonpatch;\n
(function(jsonpatch) {\n
  var objOps = {\n
    add: function(obj, key) {\n
      obj[key] = this.value;\n
      return true;\n
    },\n
    remove: function(obj, key) {\n
      delete obj[key];\n
      return true;\n
    },\n
    replace: function(obj, key) {\n
      obj[key] = this.value;\n
      return true;\n
    },\n
    move: function(obj, key, tree) {\n
      var temp = {\n
        op: "_get",\n
        path: this.from\n
      };\n
      apply(tree, [temp]);\n
      apply(tree, [{\n
        op: "remove",\n
        path: this.from\n
      }]);\n
      apply(tree, [{\n
        op: "add",\n
        path: this.path,\n
        value: temp.value\n
      }]);\n
      return true;\n
    },\n
    copy: function(obj, key, tree) {\n
      var temp = {\n
        op: "_get",\n
        path: this.from\n
      };\n
      apply(tree, [temp]);\n
      apply(tree, [{\n
        op: "add",\n
        path: this.path,\n
        value: temp.value\n
      }]);\n
      return true;\n
    },\n
    test: function(obj, key) {\n
      return (JSON.stringify(obj[key]) === JSON.stringify(this.value));\n
    },\n
    _get: function(obj, key) {\n
      this.value = obj[key];\n
    }\n
  };\n
  var arrOps = {\n
    add: function(arr, i) {\n
      arr.splice(i, 0, this.value);\n
      return true;\n
    },\n
    remove: function(arr, i) {\n
      arr.splice(i, 1);\n
      return true;\n
    },\n
    replace: function(arr, i) {\n
      arr[i] = this.value;\n
      return true;\n
    },\n
    move: objOps.move,\n
    copy: objOps.copy,\n
    test: objOps.test,\n
    _get: objOps._get\n
  };\n
  var observeOps = {\n
    add: function(patches, path) {\n
      var patch = {\n
        op: "add",\n
        path: path + escapePathComponent(this.name),\n
        value: this.object[this.name]\n
      };\n
      patches.push(patch);\n
    },\n
    \'delete\': function(patches, path) {\n
      var patch = {\n
        op: "remove",\n
        path: path + escapePathComponent(this.name)\n
      };\n
      patches.push(patch);\n
    },\n
    update: function(patches, path) {\n
      var patch = {\n
        op: "replace",\n
        path: path + escapePathComponent(this.name),\n
        value: this.object[this.name]\n
      };\n
      patches.push(patch);\n
    }\n
  };\n
  function escapePathComponent(str) {\n
    if (str.indexOf(\'/\') === -1 && str.indexOf(\'~\') === -1) {\n
      return str;\n
    }\n
    return str.replace(/~/g, \'~0\').replace(/\\//g, \'~1\');\n
  }\n
  function _getPathRecursive(root, obj) {\n
    var found;\n
    for (var key in root) {\n
      if (root.hasOwnProperty(key)) {\n
        if (root[key] === obj) {\n
          return escapePathComponent(key) + \'/\';\n
        } else if (typeof root[key] === \'object\') {\n
          found = _getPathRecursive(root[key], obj);\n
          if (found != \'\') {\n
            return escapePathComponent(key) + \'/\' + found;\n
          }\n
        }\n
      }\n
    }\n
    return \'\';\n
  }\n
  function getPath(root, obj) {\n
    if (root === obj) {\n
      return \'/\';\n
    }\n
    var path = _getPathRecursive(root, obj);\n
    if (path === \'\') {\n
      throw new Error("Object not found in root");\n
    }\n
    return \'/\' + path;\n
  }\n
  var beforeDict = [];\n
  jsonpatch.intervals;\n
  var Mirror = (function() {\n
    function Mirror(obj) {\n
      this.observers = [];\n
      this.obj = obj;\n
    }\n
    return Mirror;\n
  })();\n
  var ObserverInfo = (function() {\n
    function ObserverInfo(callback, observer) {\n
      this.callback = callback;\n
      this.observer = observer;\n
    }\n
    return ObserverInfo;\n
  })();\n
  function getMirror(obj) {\n
    for (var i = 0,\n
        ilen = beforeDict.length; i < ilen; i++) {\n
      if (beforeDict[i].obj === obj) {\n
        return beforeDict[i];\n
      }\n
    }\n
  }\n
  function removeMirror(obj) {\n
    for (var i = 0,\n
        ilen = beforeDict.length; i < ilen; i++) {\n
      if (beforeDict[i] === obj) {\n
        beforeDict.splice(i, 1);\n
      }\n
    }\n
  }\n
  function getObserverFromMirror(mirror, callback) {\n
    for (var j = 0,\n
        jlen = mirror.observers.length; j < jlen; j++) {\n
      if (mirror.observers[j].callback === callback) {\n
        return mirror.observers[j].observer;\n
      }\n
    }\n
  }\n
  function removeObserverFromMirror(mirror, observer) {\n
    for (var j = 0,\n
        jlen = mirror.observers.length; j < jlen; j++) {\n
      if (mirror.observers[j].observer === observer) {\n
        mirror.observers.splice(j, 1);\n
        if (!mirror.observers.length) {\n
          removeMirror(mirror);\n
        }\n
        return;\n
      }\n
    }\n
  }\n
  function unobserve(root, observer) {\n
    generate(observer);\n
    if (Object.observe) {\n
      _unobserve(observer, root);\n
    } else {\n
      clearTimeout(observer.next);\n
    }\n
    var mirror = getMirror(root);\n
    removeObserverFromMirror(mirror, observer);\n
  }\n
  jsonpatch.unobserve = unobserve;\n
  function observe(obj, callback) {\n
    var patches = [];\n
    var root = obj;\n
    var observer;\n
    var mirror = getMirror(obj);\n
    if (!mirror) {\n
      mirror = new Mirror(obj);\n
      beforeDict.push(mirror);\n
    } else {\n
      observer = getObserverFromMirror(mirror, callback);\n
    }\n
    if (observer) {\n
      return observer;\n
    }\n
    if (Object.observe) {\n
      observer = function(arr) {\n
        _unobserve(observer, obj);\n
        _observe(observer, obj);\n
        var a = 0,\n
            alen = arr.length;\n
        while (a < alen) {\n
          if (!(arr[a].name === \'length\' && _isArray(arr[a].object)) && !(arr[a].name === \'__Jasmine_been_here_before__\')) {\n
            var type = arr[a].type;\n
            switch (type) {\n
              case \'new\':\n
                type = \'add\';\n
                break;\n
              case \'deleted\':\n
                type = \'delete\';\n
                break;\n
              case \'updated\':\n
                type = \'update\';\n
                break;\n
            }\n
            observeOps[type].call(arr[a], patches, getPath(root, arr[a].object));\n
          }\n
          a++;\n
        }\n
        if (patches) {\n
          if (callback) {\n
            callback(patches);\n
          }\n
        }\n
        observer.patches = patches;\n
        patches = [];\n
      };\n
    } else {\n
      observer = {};\n
      mirror.value = JSON.parse(JSON.stringify(obj));\n
      if (callback) {\n
        observer.callback = callback;\n
        observer.next = null;\n
        var intervals = this.intervals || [100, 1000, 10000, 60000];\n
        var currentInterval = 0;\n
        var dirtyCheck = function() {\n
          generate(observer);\n
        };\n
        var fastCheck = function() {\n
          clearTimeout(observer.next);\n
          observer.next = setTimeout(function() {\n
            dirtyCheck();\n
            currentInterval = 0;\n
            observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n
          }, 0);\n
        };\n
        var slowCheck = function() {\n
          dirtyCheck();\n
          if (currentInterval == intervals.length) {\n
            currentInterval = intervals.length - 1;\n
          }\n
          observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n
        };\n
        if (typeof window !== \'undefined\') {\n
          if (window.addEventListener) {\n
            window.addEventListener(\'mousedown\', fastCheck);\n
            window.addEventListener(\'mouseup\', fastCheck);\n
            window.addEventListener(\'keydown\', fastCheck);\n
          } else {\n
            window.attachEvent(\'onmousedown\', fastCheck);\n
            window.attachEvent(\'onmouseup\', fastCheck);\n
            window.attachEvent(\'onkeydown\', fastCheck);\n
          }\n
        }\n
        observer.next = setTimeout(slowCheck, intervals[currentInterval++]);\n
      }\n
    }\n
    observer.patches = patches;\n
    observer.object = obj;\n
    mirror.observers.push(new ObserverInfo(callback, observer));\n
    return _observe(observer, obj);\n
  }\n
  jsonpatch.observe = observe;\n
  function _observe(observer, obj) {\n
    if (Object.observe) {\n
      Object.observe(obj, observer);\n
      for (var key in obj) {\n
        if (obj.hasOwnProperty(key)) {\n
          var v = obj[key];\n
          if (v && typeof(v) === "object") {\n
            _observe(observer, v);\n
          }\n
        }\n
      }\n
    }\n
    return observer;\n
  }\n
  function _unobserve(observer, obj) {\n
    if (Object.observe) {\n
      Object.unobserve(obj, observer);\n
      for (var key in obj) {\n
        if (obj.hasOwnProperty(key)) {\n
          var v = obj[key];\n
          if (v && typeof(v) === "object") {\n
            _unobserve(observer, v);\n
          }\n
        }\n
      }\n
    }\n
    return observer;\n
  }\n
  function generate(observer) {\n
    if (Object.observe) {\n
      Object.deliverChangeRecords(observer);\n
    } else {\n
      var mirror;\n
      for (var i = 0,\n
          ilen = beforeDict.length; i < ilen; i++) {\n
        if (beforeDict[i].obj === observer.object) {\n
          mirror = beforeDict[i];\n
          break;\n
        }\n
      }\n
      if (mirror) {\n
        _generate(mirror.value, observer.object, observer.patches, "");\n
      }\n
    }\n
    var temp = observer.patches;\n
    if (temp.length > 0) {\n
      observer.patches = [];\n
      if (observer.callback) {\n
        observer.callback(temp);\n
      }\n
    }\n
    return temp;\n
  }\n
  jsonpatch.generate = generate;\n
  var _objectKeys;\n
  if (Object.keys) {\n
    _objectKeys = Object.keys;\n
  } else {\n
    _objectKeys = function(obj) {\n
      var keys = [];\n
      for (var o in obj) {\n
        if (obj.hasOwnProperty(o)) {\n
          keys.push(o);\n
        }\n
      }\n
      return keys;\n
    };\n
  }\n
  function _generate(mirror, obj, patches, path) {\n
    var newKeys = _objectKeys(obj);\n
    var oldKeys = _objectKeys(mirror);\n
    var changed = false;\n
    var deleted = false;\n
    for (var t = oldKeys.length - 1; t >= 0; t--) {\n
      var key = oldKeys[t];\n
      var oldVal = mirror[key];\n
      if (obj.hasOwnProperty(key)) {\n
        var newVal = obj[key];\n
        if (oldVal instanceof Object) {\n
          _generate(oldVal, newVal, patches, path + "/" + escapePathComponent(key));\n
        } else {\n
          if (oldVal != newVal) {\n
            changed = true;\n
            patches.push({\n
              op: "replace",\n
              path: path + "/" + escapePathComponent(key),\n
              value: newVal\n
            });\n
            mirror[key] = newVal;\n
          }\n
        }\n
      } else {\n
        patches.push({\n
          op: "remove",\n
          path: path + "/" + escapePathComponent(key)\n
        });\n
        delete mirror[key];\n
        deleted = true;\n
      }\n
    }\n
    if (!deleted && newKeys.length == oldKeys.length) {\n
      return;\n
    }\n
    for (var t = 0; t < newKeys.length; t++) {\n
      var key = newKeys[t];\n
      if (!mirror.hasOwnProperty(key)) {\n
        patches.push({\n
          op: "add",\n
          path: path + "/" + escapePathComponent(key),\n
          value: obj[key]\n
        });\n
        mirror[key] = JSON.parse(JSON.stringify(obj[key]));\n
      }\n
    }\n
  }\n
  var _isArray;\n
  if (Array.isArray) {\n
    _isArray = Array.isArray;\n
  } else {\n
    _isArray = function(obj) {\n
      return obj.push && typeof obj.length === \'number\';\n
    };\n
  }\n
  function apply(tree, patches) {\n
    var result = false,\n
        p = 0,\n
        plen = patches.length,\n
        patch;\n
    while (p < plen) {\n
      patch = patches[p];\n
      var keys = patch.path.split(\'/\');\n
      var obj = tree;\n
      var t = 1;\n
      var len = keys.length;\n
      while (true) {\n
        if (_isArray(obj)) {\n
          var index = parseInt(keys[t], 10);\n
          t++;\n
          if (t >= len) {\n
            result = arrOps[patch.op].call(patch, obj, index, tree);\n
            break;\n
          }\n
          obj = obj[index];\n
        } else {\n
          var key = keys[t];\n
          if (key.indexOf(\'~\') != -1) {\n
            key = key.replace(/~1/g, \'/\').replace(/~0/g, \'~\');\n
          }\n
          t++;\n
          if (t >= len) {\n
            result = objOps[patch.op].call(patch, obj, key, tree);\n
            break;\n
          }\n
          obj = obj[key];\n
        }\n
      }\n
      p++;\n
    }\n
    return result;\n
  }\n
  jsonpatch.apply = apply;\n
})(jsonpatch || (jsonpatch = {}));\n
if (typeof exports !== "undefined") {\n
  exports.apply = jsonpatch.apply;\n
  exports.observe = jsonpatch.observe;\n
  exports.unobserve = jsonpatch.unobserve;\n
  exports.generate = jsonpatch.generate;\n
}\n
\n
//# \n
},{}],"numeral":[function(require,module,exports){\n
"use strict";\n
(function() {\n
  var numeral,\n
      VERSION = \'1.5.3\',\n
      languages = {},\n
      currentLanguage = \'en\',\n
      zeroFormat = null,\n
      defaultFormat = \'0,0\',\n
      hasModule = (typeof module !== \'undefined\' && module.exports);\n
  function Numeral(number) {\n
    this._value = number;\n
  }\n
  function toFixed(value, precision, roundingFunction, optionals) {\n
    var power = Math.pow(10, precision),\n
        optionalsRegExp,\n
        output;\n
    output = (roundingFunction(value * power) / power).toFixed(precision);\n
    if (optionals) {\n
      optionalsRegExp = new RegExp(\'0{1,\' + optionals + \'}$\');\n
      output = output.replace(optionalsRegExp, \'\');\n
    }\n
    return output;\n
  }\n
  function formatNumeral(n, format, roundingFunction) {\n
    var output;\n
    if (format.indexOf(\'$\') > -1) {\n
      output = formatCurrency(n, format, roundingFunction);\n
    } else if (format.indexOf(\'%\') > -1) {\n
      output = formatPercentage(n, format, roundingFunction);\n
    } else if (format.indexOf(\':\') > -1) {\n
      output = formatTime(n, format);\n
    } else {\n
      output = formatNumber(n._value, format, roundingFunction);\n
    }\n
    return output;\n
  }\n
  function unformatNumeral(n, string) {\n
    var stringOriginal = string,\n
        thousandRegExp,\n
        millionRegExp,\n
        billionRegExp,\n
        trillionRegExp,\n
        suffixes = [\'KB\', \'MB\', \'GB\', \'TB\', \'PB\', \'EB\', \'ZB\', \'YB\'],\n
        bytesMultiplier = false,\n
        power;\n
    if (string.indexOf(\':\') > -1) {\n
      n._value = unformatTime(string);\n
    } else {\n
      if (string === zeroFormat) {\n
        n._value = 0;\n
      } else {\n
        if (languages[currentLanguage].delimiters.decimal !== \'.\') {\n
          string = string.replace(/\\./g, \'\').replace(languages[currentLanguage].delimiters.decimal, \'.\');\n
        }\n
        thousandRegExp = new RegExp(\'[^a-zA-Z]\' + languages[currentLanguage].abbreviations.thousand + \'(?:\\\\)|(\\\\\' + languages[currentLanguage].currency.symbol + \')?(?:\\\\))?)?$\');\n
        millionRegExp = new RegExp(\'[^a-zA-Z]\' + languages[currentLanguage].abbreviations.million + \'(?:\\\\)|(\\\\\' + languages[currentLanguage].currency.symbol + \')?(?:\\\\))?)?$\');\n
        billionRegExp = new RegExp(\'[^a-zA-Z]\' + languages[currentLanguage].abbreviations.billion + \'(?:\\\\)|(\\\\\' + languages[currentLanguage].currency.symbol + \')?(?:\\\\))?)?$\');\n
        trillionRegExp = new RegExp(\'[^a-zA-Z]\' + languages[currentLanguage].abbreviations.trillion + \'(?:\\\\)|(\\\\\' + languages[currentLanguage].currency.symbol + \')?(?:\\\\))?)?$\');\n
        for (power = 0; power <= suffixes.length; power++) {\n
          bytesMultiplier = (string.indexOf(suffixes[power]) > -1) ? Math.pow(1024, power + 1) : false;\n
          if (bytesMultiplier) {\n
            break;\n
          }\n
        }\n
        n._value = ((bytesMultiplier) ? bytesMultiplier : 1) * ((stringOriginal.match(thousandRegExp)) ? Math.pow(10, 3) : 1) * ((stringOriginal.match(millionRegExp)) ? Math.pow(10, 6) : 1) * ((stringOriginal.match(billionRegExp)) ? Math.pow(10, 9) : 1) * ((stringOriginal.match(trillionRegExp)) ? Math.pow(10, 12) : 1) * ((string.indexOf(\'%\') > -1) ? 0.01 : 1) * (((string.split(\'-\').length + Math.min(string.split(\'(\').length - 1, string.split(\')\').length - 1)) % 2) ? 1 : -1) * Number(string.replace(/[^0-9\\.]+/g, \'\'));\n
        n._value = (bytesMultiplier) ? Math.ceil(n._value) : n._value;\n
      }\n
    }\n
    return n._value;\n
  }\n
  function formatCurrency(n, format, roundingFunction) {\n
    var symbolIndex = format.indexOf(\'$\'),\n
        openParenIndex = format.indexOf(\'(\'),\n
        minusSignIndex = format.indexOf(\'-\'),\n
        space = \'\',\n
        spliceIndex,\n
        output;\n
    if (format.indexOf(\' $\') > -1) {\n
      space = \' \';\n
      format = format.replace(\' $\', \'\');\n
    } else if (format.indexOf(\'$ \') > -1) {\n
      space = \' \';\n
      format = format.replace(\'$ \', \'\');\n
    } else {\n
      format = format.replace(\'$\', \'\');\n
    }\n
    output = formatNumber(n._value, format, roundingFunction);\n
    if (symbolIndex <= 1) {\n
      if (output.indexOf(\'(\') > -1 || output.indexOf(\'-\') > -1) {\n
        output = output.split(\'\');\n
        spliceIndex = 1;\n
        if (symbolIndex < openParenIndex || symbolIndex < minusSignIndex) {\n
          spliceIndex = 0;\n
        }\n
        output.splice(spliceIndex, 0, languages[currentLanguage].currency.symbol + space);\n
        output = output.join(\'\');\n
      } else {\n
        output = languages[currentLanguage].currency.symbol + space + output;\n
      }\n
    } else {\n
      if (output.indexOf(\')\') > -1) {\n
        output = output.split(\'\');\n
        output.splice(-1, 0, space + languages[currentLanguage].currency.symbol);\n
        output = output.join(\'\');\n
      } else {\n
        output = output + space + languages[currentLanguage].currency.symbol;\n
      }\n
    }\n
    return output;\n
  }\n
  function formatPercentage(n, format, roundingFunction) {\n
    var space = \'\',\n
        output,\n
        value = n._value * 100;\n
    if (format.indexOf(\' %\') > -1) {\n
      space = \' \';\n
      format = format.replace(\' %\', \'\');\n
    } else {\n
      format = format.replace(\'%\', \'\');\n
    }\n
    output = formatNumber(value, format, roundingFunction);\n
    if (output.indexOf(\')\') > -1) {\n
      output = output.split(\'\');\n
      output.splice(-1, 0, space + \'%\');\n
      output = output.join(\'\');\n
    } else {\n
      output = output + space + \'%\';\n
    }\n
    return output;\n
  }\n
  function formatTime(n) {\n
    var hours = Math.floor(n._value / 60 / 60),\n
        minutes = Math.floor((n._value - (hours * 60 * 60)) / 60),\n
        seconds = Math.round(n._value - (hours * 60 * 60) - (minutes * 60));\n
    return hours + \':\' + ((minutes < 10) ? \'0\' + minutes : minutes) + \':\' + ((seconds < 10) ? \'0\' + seconds : seconds);\n
  }\n
  function unformatTime(string) {\n
    var timeArray = string.split(\':\'),\n
        seconds = 0;\n
    if (timeArray.length === 3) {\n
      seconds = seconds + (Number(timeArray[0]) * 60 * 60);\n
      seconds = seconds + (Number(timeArray[1]) * 60);\n
      seconds = seconds + Number(timeArray[2]);\n
    } else if (timeArray.length === 2) {\n
      seconds = seconds + (Number(timeArray[0]) * 60);\n
      seconds = seconds + Number(timeArray[1]);\n
    }\n
    return Number(seconds);\n
  }\n
  function formatNumber(value, format, roundingFunction) {\n
    var negP = false,\n
        signed = false,\n
        optDec = false,\n
        abbr = \'\',\n
        abbrK = false,\n
        abbrM = false,\n
        abbrB = false,\n
        abbrT = false,\n
        abbrForce = false,\n
        bytes = \'\',\n
        ord = \'\',\n
        abs = Math.abs(value),\n
        suffixes = [\'B\', \'KB\', \'MB\', \'GB\', \'TB\', \'PB\', \'EB\', \'ZB\', \'YB\'],\n
        min,\n
        max,\n
        power,\n
        w,\n
        precision,\n
        thousands,\n
        d = \'\',\n
        neg = false;\n
    if (value === 0 && zeroFormat !== null) {\n
      return zeroFormat;\n
    } else {\n
      if (format.indexOf(\'(\') > -1) {\n
        negP = true;\n
        format = format.slice(1, -1);\n
      } else if (format.indexOf(\'+\') > -1) {\n
        signed = true;\n
        format = format.replace(/\\+/g, \'\');\n
      }\n
      if (format.indexOf(\'a\') > -1) {\n
        abbrK = format.indexOf(\'aK\') >= 0;\n
        abbrM = format.indexOf(\'aM\') >= 0;\n
        abbrB = format.indexOf(\'aB\') >= 0;\n
        abbrT = format.indexOf(\'aT\') >= 0;\n
        abbrForce = abbrK || abbrM || abbrB || abbrT;\n
        if (format.indexOf(\' a\') > -1) {\n
          abbr = \' \';\n
          format = format.replace(\' a\', \'\');\n
        } else {\n
          format = format.replace(\'a\', \'\');\n
        }\n
        if (abs >= Math.pow(10, 12) && !abbrForce || abbrT) {\n
          abbr = abbr + languages[currentLanguage].abbreviations.trillion;\n
          value = value / Math.pow(10, 12);\n
        } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9) && !abbrForce || abbrB) {\n
          abbr = abbr + languages[currentLanguage].abbreviations.billion;\n
          value = value / Math.pow(10, 9);\n
        } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6) && !abbrForce || abbrM) {\n
          abbr = abbr + languages[currentLanguage].abbreviations.million;\n
          value = value / Math.pow(10, 6);\n
        } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3) && !abbrForce || abbrK) {\n
          abbr = abbr + languages[currentLanguage].abbreviations.thousand;\n
          value = value / Math.pow(10, 3);\n
        }\n
      }\n
      if (format.indexOf(\'b\') > -1) {\n
        if (format.indexOf(\' b\') > -1) {\n
          bytes = \' \';\n
          format = format.replace(\' b\', \'\');\n
        } else {\n
          format = format.replace(\'b\', \'\');\n
        }\n
        for (power = 0; power <= suffixes.length; power++) {\n
          min = Math.pow(1024, power);\n
          max = Math.pow(1024, power + 1);\n
          if (value >= min && value < max) {\n
            bytes = bytes + suffixes[power];\n
            if (min > 0) {\n
              value = value / min;\n
            }\n
            break;\n
          }\n
        }\n
      }\n
      if (format.indexOf(\'o\') > -1) {\n
        if (format.indexOf(\' o\') > -1) {\n
          ord = \' \';\n
          format = format.replace(\' o\', \'\');\n
        } else {\n
          format = format.replace(\'o\', \'\');\n
        }\n
        ord = ord + languages[currentLanguage].ordinal(value);\n
      }\n
      if (format.indexOf(\'[.]\') > -1) {\n
        optDec = true;\n
        format = format.replace(\'[.]\', \'.\');\n
      }\n
      w = value.toString().split(\'.\')[0];\n
      precision = format.split(\'.\')[1];\n
      thousands = format.indexOf(\',\');\n
      if (precision) {\n
        if (precision.indexOf(\'[\') > -1) {\n
          precision = precision.replace(\']\', \'\');\n
          precision = precision.split(\'[\');\n
          d = toFixed(value, (precision[0].length + precision[1].length), roundingFunction, precision[1].length);\n
        } else {\n
          d = toFixed(value, precision.length, roundingFunction);\n
        }\n
        w = d.split(\'.\')[0];\n
        if (d.split(\'.\')[1].length) {\n
          d = languages[currentLanguage].delimiters.decimal + d.split(\'.\')[1];\n
        } else {\n
          d = \'\';\n
        }\n
        if (optDec && Number(d.slice(1)) === 0) {\n
          d = \'\';\n
        }\n
      } else {\n
        w = toFixed(value, null, roundingFunction);\n
      }\n
      if (w.indexOf(\'-\') > -1) {\n
        w = w.slice(1);\n
        neg = true;\n
      }\n
      if (thousands > -1) {\n
        w = w.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \'$1\' + languages[currentLanguage].delimiters.thousands);\n
      }\n
      if (format.indexOf(\'.\') === 0) {\n
        w = \'\';\n
      }\n
      return ((negP && neg) ? \'(\' : \'\') + ((!negP && neg) ? \'-\' : \'\') + ((!neg && signed) ? \'+\' : \'\') + w + d + ((ord) ? ord : \'\') + ((abbr) ? abbr : \'\') + ((bytes) ? bytes : \'\') + ((negP && neg) ? \')\' : \'\');\n
    }\n
  }\n
  numeral = function(input) {\n
    if (numeral.isNumeral(input)) {\n
      input = input.value();\n
    } else if (input === 0 || typeof input === \'undefined\') {\n
      input = 0;\n
    } else if (!Number(input)) {\n
      input = numeral.fn.unformat(input);\n
    }\n
    return new Numeral(Number(input));\n
  };\n
  numeral.version = VERSION;\n
  numeral.isNumeral = function(obj) {\n
    return obj instanceof Numeral;\n
  };\n
  numeral.language = function(key, values) {\n
    if (!key) {\n
      return currentLanguage;\n
    }\n
    if (key && !values) {\n
      if (!languages[key]) {\n
        throw new Error(\'Unknown language : \' + key);\n
      }\n
      currentLanguage = key;\n
    }\n
    if (values || !languages[key]) {\n
      loadLanguage(key, values);\n
    }\n
    return numeral;\n
  };\n
  numeral.languageData = function(key) {\n
    if (!key) {\n
      return languages[currentLanguage];\n
    }\n
    if (!languages[key]) {\n
      throw new Error(\'Unknown language : \' + key);\n
    }\n
    return languages[key];\n
  };\n
  numeral.language(\'en\', {\n
    delimiters: {\n
      thousands: \',\',\n
      decimal: \'.\'\n
    },\n
    abbreviations: {\n
      thousand: \'k\',\n
      million: \'m\',\n
      billion: \'b\',\n
      trillion: \'t\'\n
    },\n
    ordinal: function(number) {\n
      var b = number % 10;\n
      return (~~(number % 100 / 10) === 1) ? \'th\' : (b === 1) ? \'st\' : (b === 2) ? \'nd\' : (b === 3) ? \'rd\' : \'th\';\n
    },\n
    currency: {symbol: \'$\'}\n
  });\n
  numeral.zeroFormat = function(format) {\n
    zeroFormat = typeof(format) === \'string\' ? format : null;\n
  };\n
  numeral.defaultFormat = function(format) {\n
    defaultFormat = typeof(format) === \'string\' ? format : \'0.0\';\n
  };\n
  numeral.validate = function(val, culture) {\n
    var _decimalSep,\n
        _thousandSep,\n
        _currSymbol,\n
        _valArray,\n
        _abbrObj,\n
        _thousandRegEx,\n
        languageData,\n
        temp;\n
    if (typeof val !== \'string\') {\n
      val += \'\';\n
      if (console.warn) {\n
        console.warn(\'Numeral.js: Value is not string. It has been co-erced to: \', val);\n
      }\n
    }\n
    val = val.trim();\n
    if (val === \'\') {\n
      return false;\n
    }\n
    val = val.replace(/^[+-]?/, \'\');\n
    try {\n
      languageData = numeral.languageData(culture);\n
    } catch (e) {\n
      languageData = numeral.languageData(numeral.language());\n
    }\n
    _currSymbol = languageData.currency.symbol;\n
    _abbrObj = languageData.abbreviations;\n
    _decimalSep = languageData.delimiters.decimal;\n
    if (languageData.delimiters.thousands === \'.\') {\n
      _thousandSep = \'\\\\.\';\n
    } else {\n
      _thousandSep = languageData.delimiters.thousands;\n
    }\n
    temp = val.match(/^[^\\d\\.\\,]+/);\n
    if (temp !== null) {\n
      val = val.substr(1);\n
      if (temp[0] !== _currSymbol) {\n
        return false;\n
      }\n
    }\n
    temp = val.match(/[^\\d]+$/);\n
    if (temp !== null) {\n
      val = val.slice(0, -1);\n
      if (temp[0] !== _abbrObj.thousand && temp[0] !== _abbrObj.million && temp[0] !== _abbrObj.billion && temp[0] !== _abbrObj.trillion) {\n
        return false;\n
      }\n
    }\n
    if (!!val.match(/^\\d+$/)) {\n
      return true;\n
    }\n
    _thousandRegEx = new RegExp(_thousandSep + \'{2}\');\n
    if (!val.match(/[^\\d.,]/g)) {\n
      _valArray = val.split(_decimalSep);\n
      if (_valArray.length > 2) {\n
        return false;\n
      } else {\n
        if (_valArray.length < 2) {\n
          return (!!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx));\n
        } else {\n
          if (_valArray[0] === \'\') {\n
            return (!_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/));\n
          } else if (_valArray[0].length === 1) {\n
            return (!!_valArray[0].match(/^\\d+$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/));\n
          } else {\n
            return (!!_valArray[0].match(/^\\d+.*\\d$/) && !_valArray[0].match(_thousandRegEx) && !!_valArray[1].match(/^\\d+$/));\n
          }\n
        }\n
      }\n
    }\n
    return false;\n
  };\n
  function loadLanguage(key, values) {\n
    languages[key] = values;\n
  }\n
  if (\'function\' !== typeof Array.prototype.reduce) {\n
    Array.prototype.reduce = function(callback, opt_initialValue) {\n
      \'use strict\';\n
      if (null === this || \'undefined\' === typeof this) {\n
        throw new TypeError(\'Array.prototype.reduce called on null or undefined\');\n
      }\n
      if (\'function\' !== typeof callback) {\n
        throw new TypeError(callback + \' is not a function\');\n
      }\n
      var index,\n
          value,\n
          length = this.length >>> 0,\n
          isValueSet = false;\n
      if (1 < arguments.length) {\n
        value = opt_initialValue;\n
        isValueSet = true;\n
      }\n
      for (index = 0; length > index; ++index) {\n
        if (this.hasOwnProperty(index)) {\n
          if (isValueSet) {\n
            value = callback(value, this[index], index, this);\n
          } else {\n
            value = this[index];\n
            isValueSet = true;\n
          }\n
        }\n
      }\n
      if (!isValueSet) {\n
        throw new TypeError(\'Reduce of empty array with no initial value\');\n
      }\n
      return value;\n
    };\n
  }\n
  function multiplier(x) {\n
    var parts = x.toString().split(\'.\');\n
    if (parts.length < 2) {\n
      return 1;\n
    }\n
    return Math.pow(10, parts[1].length);\n
  }\n
  function correctionFactor() {\n
    var args = Array.prototype.slice.call(arguments);\n
    return args.reduce(function(prev, next) {\n
      var mp = multiplier(prev),\n
          mn = multiplier(next);\n
      return mp > mn ? mp : mn;\n
    }, -Infinity);\n
  }\n
  numeral.fn = Numeral.prototype = {\n
    clone: function() {\n
      return numeral(this);\n
    },\n
    format: function(inputString, roundingFunction) {\n
      return formatNumeral(this, inputString ? inputString : defaultFormat, (roundingFunction !== undefined) ? roundingFunction : Math.round);\n
    },\n
    unformat: function(inputString) {\n
      if (Object.prototype.toString.call(inputString) === \'[object Number]\') {\n
        return inputString;\n
      }\n
      return unformatNumeral(this, inputString ? inputString : defaultFormat);\n
    },\n
    value: function() {\n
      return this._value;\n
    },\n
    valueOf: function() {\n
      return this._value;\n
    },\n
    set: function(value) {\n
      this._value = Number(value);\n
      return this;\n
    },\n
    add: function(value) {\n
      var corrFactor = correctionFactor.call(null, this._value, value);\n
      function cback(accum, curr, currI, O) {\n
        return accum + corrFactor * curr;\n
      }\n
      this._value = [this._value, value].reduce(cback, 0) / corrFactor;\n
      return this;\n
    },\n
    subtract: function(value) {\n
      var corrFactor = correctionFactor.call(null, this._value, value);\n
      function cback(accum, curr, currI, O) {\n
        return accum - corrFactor * curr;\n
      }\n
      this._value = [value].reduce(cback, this._value * corrFactor) / corrFactor;\n
      return this;\n
    },\n
    multiply: function(value) {\n
      function cback(accum, curr, currI, O) {\n
        var corrFactor = correctionFactor(accum, curr);\n
        return (accum * corrFactor) * (curr * corrFactor) / (corrFactor * corrFactor);\n
      }\n
      this._value = [this._value, value].reduce(cback, 1);\n
      return this;\n
    },\n
    divide: function(value) {\n
      function cback(accum, curr, currI, O) {\n
        var corrFactor = correctionFactor(accum, curr);\n
        return (accum * corrFactor) / (curr * corrFactor);\n
      }\n
      this._value = [this._value, value].reduce(cback);\n
      return this;\n
    },\n
    difference: function(value) {\n
      return Math.abs(numeral(this._value).subtract(value).value());\n
    }\n
  };\n
  if (hasModule) {\n
    module.exports = numeral;\n
  }\n
  if (typeof ender === \'undefined\') {\n
    this[\'numeral\'] = numeral;\n
  }\n
  if (typeof define === \'function\' && define.amd) {\n
    define([], function() {\n
      return numeral;\n
    });\n
  }\n
}).call(window);\n
\n
//# \n
},{}]},{},[23,57,58,59,60,82,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,83,84,85,86,99,100,101,89,90,91,92,93,94,30,34,31,32,39,33,35,36,37,38])("numeral")\n
});

]]></string> </value>
        </item>
        <item>
            <key> <string>next</string> </key>
            <value>
              <none/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
