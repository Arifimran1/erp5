<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41272585.1</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>viewportRows.spec.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string>describe(\'WalkontableViewportRowsCalculator\', function () {\n
  function allRows20() {\n
    return 20;\n
  }\n
\n
  it("should render first 5 rows in unscrolled container", function () {\n
    var calc = new WalkontableViewportRowsCalculator(100, 0, 1000, allRows20);\n
    expect(calc.startRow).toBe(0);\n
    expect(calc.startPosition).toBe(0);\n
    expect(calc.endRow).toBe(4);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(100, 0, 1000, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(0);\n
    expect(visibleCalc.endRow).toBe(4);\n
  });\n
\n
  it("should render 6 rows, starting from 3 in container scrolled to half of fourth row", function () {\n
    var calc = new WalkontableViewportRowsCalculator(100, 70, 1000, allRows20);\n
    expect(calc.startRow).toBe(3);\n
    expect(calc.startPosition).toBe(60);\n
    expect(calc.endRow).toBe(8);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(100, 70, 1000, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(4);\n
    expect(visibleCalc.endRow).toBe(7);\n
  });\n
\n
  it("should render 10 rows, starting from 1 in container scrolled to half of fourth row (with render overrides)", function () {\n
    var overrideFn = function (calc) {\n
      calc.startRow -= 2;\n
      calc.endRow += 2;\n
    };\n
\n
    var calc = new WalkontableViewportRowsCalculator(100, 70, 1000, allRows20, overrideFn);\n
    expect(calc.startRow).toBe(1);\n
    expect(calc.startPosition).toBe(20);\n
    expect(calc.endRow).toBe(10);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(100, 70, 1000, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(4);\n
    expect(visibleCalc.endRow).toBe(7);\n
  });\n
\n
  it("should return number of rendered rows", function () {\n
    var calc = new WalkontableViewportRowsCalculator(100, 50, 1000, allRows20);\n
    expect(calc.count).toBe(6);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(100, 50, 1000, allRows20, null, true);\n
    expect(visibleCalc.count).toBe(4);\n
  });\n
\n
  it("should render all rows if their size is smaller than viewport", function () {\n
    var calc = new WalkontableViewportRowsCalculator(200, 0, 8, allRows20);\n
    expect(calc.startRow).toBe(0);\n
    expect(calc.endRow).toBe(7);\n
    expect(calc.count).toBe(8);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(200, 0, 8, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(0);\n
    expect(visibleCalc.endRow).toBe(7);\n
    expect(visibleCalc.count).toBe(8);\n
  });\n
\n
  it("should render all rows if their size is exactly the viewport", function () {\n
    var calc = new WalkontableViewportRowsCalculator(200, 0, 10, allRows20);\n
    expect(calc.startRow).toBe(0);\n
    expect(calc.endRow).toBe(9);\n
    expect(calc.count).toBe(10);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(200, 0, 10, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(0);\n
    expect(visibleCalc.endRow).toBe(9);\n
    expect(visibleCalc.count).toBe(10);\n
  });\n
\n
  it("should render all rows if their size is slightly larger than viewport", function () {\n
    var calc = new WalkontableViewportRowsCalculator(199, 0, 10, allRows20);\n
    expect(calc.startRow).toBe(0);\n
    expect(calc.endRow).toBe(9);\n
    expect(calc.count).toBe(10);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(199, 0, 10, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(0);\n
    expect(visibleCalc.endRow).toBe(8);\n
    expect(visibleCalc.count).toBe(9);\n
  });\n
\n
  it("should set null values if total rows is 0", function () {\n
    var calc = new WalkontableViewportRowsCalculator(200, 0, 0, allRows20);\n
    expect(calc.startRow).toBe(null);\n
    expect(calc.startPosition).toBe(null);\n
    expect(calc.endRow).toBe(null);\n
    expect(calc.count).toBe(0);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(200, 0, 0, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(null);\n
    expect(visibleCalc.endRow).toBe(null);\n
  });\n
\n
  it("should set null values if total rows is 0 (with overrideFn provided)", function () {\n
    var overrideFn = function (myCalc) {\n
      myCalc.startRow = 0;\n
      myCalc.endRow = 0;\n
    };\n
\n
    var calc = new WalkontableViewportRowsCalculator(200, 0, 0, allRows20, overrideFn);\n
    expect(calc.startRow).toBe(null);\n
    expect(calc.startPosition).toBe(null);\n
    expect(calc.endRow).toBe(null);\n
    expect(calc.count).toBe(0);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(200, 0, 0, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(null);\n
    expect(visibleCalc.endRow).toBe(null);\n
  });\n
\n
  it("should scroll backwards if total rows is reached", function () {\n
    var calc = new WalkontableViewportRowsCalculator(190, 350, 20, allRows20);\n
    expect(calc.startRow).toBe(10);\n
    expect(calc.startPosition).toBe(200);\n
    expect(calc.endRow).toBe(19);\n
    expect(calc.count).toBe(10);\n
\n
    var visibleCalc = new WalkontableViewportRowsCalculator(190, 350, 20, allRows20, null, true);\n
    expect(visibleCalc.startRow).toBe(11);\n
    expect(visibleCalc.endRow).toBe(19);\n
  });\n
});\n
</string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>5024</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>viewportRows.spec.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
