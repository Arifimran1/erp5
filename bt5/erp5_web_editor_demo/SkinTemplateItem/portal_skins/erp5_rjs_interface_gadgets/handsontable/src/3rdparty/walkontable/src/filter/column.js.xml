<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41272610.5</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>column.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string>\n
/**\n
 * @class WalkontableColumnFilter\n
 */\n
class WalkontableColumnFilter {\n
  /**\n
   * @param {Number} offset\n
   * @param {Number} total\n
   * @param {Number} countTH\n
   */\n
  constructor(offset, total, countTH) {\n
    this.offset = offset;\n
    this.total = total;\n
    this.countTH = countTH;\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  offsetted(index) {\n
    return index + this.offset;\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  unOffsetted(index) {\n
    return index - this.offset;\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  renderedToSource(index) {\n
    return this.offsetted(index);\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  sourceToRendered(index) {\n
    return this.unOffsetted(index);\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  offsettedTH(index) {\n
    return index - this.countTH;\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  unOffsettedTH(index) {\n
    return index + this.countTH;\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  visibleRowHeadedColumnToSourceColumn(index) {\n
    return this.renderedToSource(this.offsettedTH(index));\n
  }\n
\n
  /**\n
   * @param index\n
   * @returns {Number}\n
   */\n
  sourceColumnToVisibleRowHeadedColumn(index) {\n
    return this.unOffsettedTH(this.sourceToRendered(index));\n
  }\n
}\n
\n
export {WalkontableColumnFilter};\n
\n
window.WalkontableColumnFilter = WalkontableColumnFilter;\n
</string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>1417</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>column.js</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
