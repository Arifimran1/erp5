<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41272451.78</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>beforeKeyDown.html</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<!doctype html>\n
<html>\n
<head>\n
  <meta charset=\'utf-8\'>\n
  <title>beforeKeyDown callback - Handsontable</title>\n
\n
  <!--\n
  Loading Handsontable (full distribution that includes all dependencies)\n
  -->\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="../dist/handsontable.css">\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="../dist/pikaday/pikaday.css">\n
  <script data-jsfiddle="common" src="../dist/pikaday/pikaday.js"></script>\n
  <script data-jsfiddle="common" src="../dist/moment/moment.js"></script>\n
  <script data-jsfiddle="common" src="../dist/zeroclipboard/ZeroClipboard.js"></script>\n
  <script data-jsfiddle="common" src="../dist/handsontable.js"></script>\n
\n
  <!--\n
  Loading demo dependencies. They are used here only to enhance the examples on this page\n
  -->\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="css/samples.css?20140331">\n
  <script src="js/samples.js"></script>\n
  <script src="js/highlight/highlight.pack.js"></script>\n
  <link rel="stylesheet" media="screen" href="js/highlight/styles/github.css">\n
  <link rel="stylesheet" href="css/font-awesome/css/font-awesome.min.css">\n
\n
  <!--\n
  Facebook open graph. Don\'t copy this to your project :)\n
  -->\n
  <meta property="og:title" content="beforeKeyDown callbacks">\n
  <meta property="og:description"\n
        content="">\n
  <meta property="og:url" content="http://handsontable.com/demo/beforeKeyDown.html">\n
  <meta property="og:image" content="http://handsontable.com/demo/image/og-image.png">\n
  <meta property="og:image:type" content="image/png">\n
  <meta property="og:image:width" content="409">\n
  <meta property="og:image:height" content="164">\n
  <link rel="canonical" href="http://handsontable.com/demo/beforeKeyDown.html">\n
\n
  <!--\n
  Google Analytics for GitHub Page. Don\'t copy this to your project :)\n
  -->\n
  <script src="js/ga.js"></script>\n
\n
</head>\n
\n
<body>\n
\n
\n
<div class="wrapper">\n
  <div class="wrapper-row">\n
    <div id="global-menu-clone">\n
      <h1><a href="../index.html">Handsontable</a></h1>\n
\n
    </div>\n
\n
    <div id="container">\n
      <div class="columnLayout">\n
\n
        <div class="rowLayout">\n
      <div class="descLayout">\n
        <div class="pad" data-jsfiddle="example1">\n
          <a name="lazy"></a>\n
\n
          <h2>beforeKeyDown callback</h2>\n
\n
          <p>The following demo uses <code>beforeKeyDown</code> callback to modify some key bindings:</p>\n
\n
          <ul>\n
            <li>Pressing DELETE or BACKSPACE on a cell deletes the cell and shifts all cells beneath it in the column up\n
              resulting in the cursor (which doesn\'t move) having the value previously beneath it, now in the current\n
              cell.\n
            </li>\n
            <li>Pressing ENTER in a cell (not changing the value) results in pushing all the cells in the column beneath\n
              this cell down one row (including current cell) resulting in a blank cell under the cursor (which hasn\'t\n
              moved)\n
            </li>\n
          </ul>\n
\n
          <div id="example1"></div>\n
\n
          <p>\n
            <button name="dump" data-dump="#example1" data-instance="hot" title="Prints current data source to Firebug/Chrome Dev Tools">\n
              Dump data to console\n
            </button>\n
          </p>\n
        </div>\n
      </div>\n
\n
      <div class="codeLayout">\n
        <div class="pad">\n
          <div class="jsFiddle">\n
            <button class="jsFiddleLink" data-runfiddle="example1">Edit in jsFiddle</button>\n
          </div>\n
\n
          <script data-jsfiddle="example1">\n
            var data = [\n
                [\'Nissan\', 2009, \'black\', \'black\'],\n
                [\'Nissan\', 2006, \'blue\', \'blue\'],\n
                [\'Chrysler\', 2004, \'yellow\', \'black\'],\n
                [\'Volvo\', 2012, \'yellow\', \'gray\']\n
              ],\n
              container = document.getElementById("example1"),\n
              lastChange = null,\n
              hot;\n
\n
            hot = new Handsontable(container, {\n
              data: data,\n
              colHeaders: true,\n
              rowHeaders: true,\n
              minSpareRows: 1,\n
              beforeChange: function (changes, source) {\n
                lastChange = changes;\n
              }\n
            });\n
\n
            hot.updateSettings({\n
                beforeKeyDown: function (e) {\n
                  var selection = hot.getSelected();\n
\n
                  // BACKSPACE or DELETE\n
                  if (e.keyCode === 8 || e.keyCode === 46) {\n
                    Handsontable.dom.stopImmediatePropagation(e);\n
                    // remove data at cell, shift up\n
                    hot.spliceCol(selection[1], selection[0], 1);\n
                    e.preventDefault();\n
                  }\n
                  // ENTER\n
                  else if (e.keyCode === 13) {\n
                    // if last change affected a single cell and did not change it\'s values\n
                    if (lastChange && lastChange.length === 1 && lastChange[0][2] == lastChange[0][3]) {\n
                      Handsontable.dom.stopImmediatePropagation(e);\n
                      hot.spliceCol(selection[1], selection[0], 0, \'\'); // add new cell\n
                      hot.selectCell(selection[0], selection[1]); // select new cell\n
                    }\n
                  }\n
\n
                  lastChange = null;\n
                }\n
              }\n
            );\n
          </script>\n
        </div>\n
      </div>\n
    </div>\n
\n
        <div class="footer-text">\n
        </div>\n
      </div>\n
\n
    </div>\n
\n
  </div>\n
</div>\n
\n
<div id="outside-links-wrapper"></div>\n
\n
</body>\n
</html>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>5508</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>beforeKeyDown.html</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
