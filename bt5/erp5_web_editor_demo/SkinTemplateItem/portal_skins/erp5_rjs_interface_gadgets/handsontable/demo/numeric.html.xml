<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41272418.46</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>numeric.html</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<!doctype html>\n
<html>\n
<head>\n
  <meta charset=\'utf-8\'>\n
  <title>Numeric cell type - Handsontable</title>\n
\n
  <!--\n
  Loading Handsontable (full distribution that includes all dependencies)\n
  -->\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="../dist/handsontable.css">\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="../dist/pikaday/pikaday.css">\n
  <script data-jsfiddle="common" src="../dist/pikaday/pikaday.js"></script>\n
  <script data-jsfiddle="common" src="../dist/moment/moment.js"></script>\n
  <script data-jsfiddle="common" src="../dist/zeroclipboard/ZeroClipboard.js"></script>\n
  <script data-jsfiddle="common" src="../dist/handsontable.js"></script>\n
  <script data-jsfiddle="common" src="js/numeral.de-de.js"></script>\n
\n
  <!--\n
  Loading demo dependencies. They are used here only to enhance the examples on this page\n
  -->\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="css/samples.css?20140331">\n
  <script src="js/samples.js"></script>\n
  <script src="js/highlight/highlight.pack.js"></script>\n
  <link rel="stylesheet" media="screen" href="js/highlight/styles/github.css">\n
  <link rel="stylesheet" href="css/font-awesome/css/font-awesome.min.css">\n
\n
  <!--\n
  Facebook open graph. Don\'t copy this to your project :)\n
  -->\n
  <meta property="og:title" content="Numeric cell type">\n
  <meta property="og:description"\n
        content="Numeric cell type uses Numeral.js as the formatting library.">\n
  <meta property="og:url" content="http://handsontable.com/demo/numeric.html">\n
  <meta property="og:image" content="http://handsontable.com/demo/image/og-image.png">\n
  <meta property="og:image:type" content="image/png">\n
  <meta property="og:image:width" content="409">\n
  <meta property="og:image:height" content="164">\n
  <link rel="canonical" href="http://handsontable.com/demo/numeric.html">\n
\n
  <!--\n
  Google Analytics for GitHub Page. Don\'t copy this to your project :)\n
  -->\n
  <script src="js/ga.js"></script>\n
\n
  <script data-jsfiddle="common">\n
    function getCarData() {\n
      return [\n
        {car: "Mercedes A 160", year: 2006, price_usd: 6999.99, price_eur: 6999.99},\n
        {car: "Citroen C4 Coupe", year: 2008, price_usd: 8330, price_eur: 8330},\n
        {car: "Audi A4 Avant", year: 2011, price_usd: 33900, price_eur: 33900},\n
        {car: "Opel Astra", year: 2004, price_usd: 7000, price_eur: 7000},\n
        {car: "BMW 320i Coupe", year: 2011, price_usd: 30500, price_eur: 30500}\n
      ];\n
    }\n
  </script>\n
</head>\n
\n
<body>\n
\n
\n
<div class="wrapper">\n
  <div class="wrapper-row">\n
    <div id="global-menu-clone">\n
      <h1><a href="../index.html">Handsontable</a></h1>\n
\n
    </div>\n
\n
    <div id="container">\n
      <div class="columnLayout">\n
\n
        <div class="rowLayout">\n
      <div class="descLayout">\n
        <div class="pad" data-jsfiddle="example1">\n
          <a name="lazy"></a>\n
\n
          <h2>Numeric cell type</h2>\n
\n
          <p>By default, Handsontable treats all cell values as <code>string</code> type. This is because <code>&lt;textarea&gt;</code>\n
            returns a string as its value.</p>\n
\n
          <p>In many cases you will prefer cell values to be treated as <code>number</code> type. This allows to format\n
            numbers nicely and sort them correctly.</p>\n
\n
          <p>To trigger the Numeric cell type, use the option <code>type: \'numeric\'</code> in <code>columns</code> array\n
            or\n
            <code>cells</code> function.</p>\n
\n
          <p>Numeric cell type uses <a href="http://numeraljs.com/">Numeral.js</a> as the formatting library. Head over\n
            to\n
            their website to learn about the formatting syntax.</p>\n
\n
          <p>To use number formatting style valid for your language (i18n), load language definition to Numeral.js. See\n
            "Languages" section in <a href="http://numeraljs.com/">Numeral.js docs</a> for more info.</p>\n
\n
          <div id="example1"></div>\n
\n
          <p>\n
            <button name="dump" data-dump="#example1" data-instance="hot" title="Prints current data source to Firebug/Chrome Dev Tools">\n
              Dump\n
              data to console\n
            </button>\n
          </p>\n
        </div>\n
      </div>\n
\n
      <div class="codeLayout">\n
        <div class="pad">\n
          <div class="jsFiddle">\n
            <button class="jsFiddleLink" data-runfiddle="example1">Edit in jsFiddle</button>\n
          </div>\n
\n
          <script data-jsfiddle="example1">\n
            var container = document.getElementById(\'example1\'),\n
              hot;\n
\n
            hot = new Handsontable(container, {\n
              data: getCarData(),\n
              startRows: 7,\n
              startCols: 4,\n
              colHeaders: [\'Car\', \'Year\', \'Price ($)\', \'Price (â‚¬)\'],\n
              columnSorting: true,\n
              columns: [\n
                {\n
                  data: \'car\'\n
                  // 1nd column is simple text, no special options here\n
                },\n
                {\n
                  data: \'year\',\n
                  type: \'numeric\'\n
                },\n
                {\n
                  data: \'price_usd\',\n
                  type: \'numeric\',\n
                  format: \'$0,0.00\',\n
                  language: \'en\' // this is the default locale, set up for USD\n
                },\n
                {\n
                  data: \'price_eur\',\n
                  type: \'numeric\',\n
                  format: \'0,0.00 $\',\n
                  language: \'de\' // i18n: use this for EUR (German)\n
                  // more locales available on numeraljs.com\n
                }\n
              ]\n
            });\n
          </script>\n
        </div>\n
      </div>\n
    </div>\n
\n
        <div class="footer-text">\n
        </div>\n
      </div>\n
\n
    </div>\n
\n
  </div>\n
</div>\n
\n
<div id="outside-links-wrapper"></div>\n
\n
</body>\n
</html>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>5752</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>numeric.html</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
