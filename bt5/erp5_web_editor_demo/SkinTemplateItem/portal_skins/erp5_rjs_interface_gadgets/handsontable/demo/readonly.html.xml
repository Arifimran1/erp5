<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41272450.1</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>readonly.html</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<!doctype html>\n
<html>\n
<head>\n
  <meta charset=\'utf-8\'>\n
  <title>Read-only cells - Handsontable</title>\n
\n
  <!--\n
  Loading Handsontable (full distribution that includes all dependencies apart from jQuery)\n
  -->\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="../dist/handsontable.css">\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="../dist/pikaday/pikaday.css">\n
  <script data-jsfiddle="common" src="../dist/pikaday/pikaday.js"></script>\n
  <script data-jsfiddle="common" src="../dist/moment/moment.js"></script>\n
  <script data-jsfiddle="common" src="../dist/zeroclipboard/ZeroClipboard.js"></script>\n
  <script data-jsfiddle="common" src="../dist/handsontable.js"></script>\n
\n
  <!--\n
  Loading demo dependencies. They are used here only to enhance the examples on this page\n
  -->\n
  <link data-jsfiddle="common" rel="stylesheet" media="screen" href="css/samples.css?20140331">\n
  <script src="js/samples.js"></script>\n
  <script src="js/highlight/highlight.pack.js"></script>\n
  <link rel="stylesheet" media="screen" href="js/highlight/styles/github.css">\n
  <link rel="stylesheet" href="css/font-awesome/css/font-awesome.min.css">\n
\n
  <!--\n
  Facebook open graph. Don\'t copy this to your project :)\n
  -->\n
  <meta property="og:title" content="Read-only cells">\n
  <meta property="og:description"\n
        content="This example shows how to set up read-only cells">\n
  <meta property="og:url" content="http://handsontable.com/demo/autocomplete.html">\n
  <meta property="og:image" content="http://handsontable.com/demo/image/og-image.png">\n
  <meta property="og:image:type" content="image/png">\n
  <meta property="og:image:width" content="409">\n
  <meta property="og:image:height" content="164">\n
  <link rel="canonical" href="http://handsontable.com/demo/autocomplete.html">\n
\n
  <!--\n
  Google Analytics for GitHub Page. Don\'t copy this to your project :)\n
  -->\n
  <script src="js/ga.js"></script>\n
\n
  <script data-jsfiddle="common">\n
    function getCarData() {\n
      return [\n
        {car: \'Nissan\', year: 2009, chassis: \'black\', bumper: \'black\'},\n
        {car: \'Nissan\', year: 2006, chassis: \'blue\', bumper: \'blue\'},\n
        {car: \'Chrysler\', year: 2004, chassis: \'yellow\', bumper: \'black\'},\n
        {car: \'Volvo\', year: 2012, chassis: \'white\', bumper: \'gray\'}\n
      ];\n
    }\n
  </script>\n
</head>\n
\n
<body>\n
\n
\n
<div class="wrapper">\n
  <div class="wrapper-row">\n
    <div id="global-menu-clone">\n
      <h1><a href="../index.html">Handsontable</a></h1>\n
\n
    </div>\n
\n
    <div id="container">\n
      <div class="columnLayout">\n
\n
        <div class="rowLayout">\n
      <div class="descLayout">\n
        <div class="pad">\n
          <h2>Read-only cells</h2>\n
\n
          <p>This page shows ways to configure columns or cells to be read only:</p>\n
\n
          <ul>\n
            <li><a href="#columns">Read-only columns</a></li>\n
            <li><a href="#cells">Read-only specific cells</a></li>\n
          </ul>\n
        </div>\n
      </div>\n
    </div>\n
\n
    <div class="rowLayout">\n
      <div class="descLayout">\n
        <div class="pad" data-jsfiddle="example1">\n
          <a name="columns"></a>\n
\n
          <h2>Read-only columns</h2>\n
\n
          <p>In many usage cases, you will need to configure a certain column to be read only. This column will be\n
            available for keyboard navigation and CTRL+C. Only editing and pasting data will be disabled.</p>\n
\n
          <p>To make a column read-only, declare it in the <code>columns</code> setting. You can also define a special\n
            renderer function that will dim the read-only values.</p>\n
\n
          <div id="example1"></div>\n
\n
          <p>\n
            <button name="dump" data-dump="#example1" data-instance="hot1" title="Prints current data source to Firebug/Chrome Dev Tools">\n
              Dump data to console\n
            </button>\n
          </p>\n
        </div>\n
      </div>\n
\n
      <div class="codeLayout">\n
        <div class="pad">\n
          <div class="jsFiddle">\n
            <button class="jsFiddleLink" data-runfiddle="example1">Edit in jsFiddle</button>\n
          </div>\n
\n
          <script data-jsfiddle="example1">\n
            var container1 = document.getElementById(\'example1\'),\n
              hot1;\n
\n
            hot1 = new Handsontable(container1, {\n
                data: getCarData(),\n
                minSpareRows: 1,\n
                colHeaders: [\'Car\', \'Year\', \'Chassis color\', \'Bumper color\'],\n
                columns: [\n
                  {\n
                    data: \'car\',\n
                    readOnly: true\n
                  },\n
                  {\n
                    data: \'year\'\n
                  },\n
                  {\n
                    data: \'chassis\'\n
                  },\n
                  {\n
                    data: \'bumper\'\n
                  }\n
                ]\n
              });\n
          </script>\n
        </div>\n
      </div>\n
    </div>\n
\n
    <div class="rowLayout">\n
      <div class="descLayout">\n
        <div class="pad" data-jsfiddle="example2">\n
          <a name="cells"></a>\n
\n
          <h2>Read-only specific cells</h2>\n
\n
          <p>This example makes cells that contain the word "Nissan" read only.</p>\n
\n
          <p>It forces all cells to be rendered by <code>myReadonlyRenderer</code>, which will decide wheather a cell is\n
            really read only by checking its <code>readOnly</code> property.</p>\n
\n
          <div id="example2"></div>\n
\n
          <p>\n
            <button name="dump" data-dump="#example2" data-instance="hot2" title="Prints current data source to Firebug/Chrome Dev Tools">\n
              Dump data to console\n
            </button>\n
          </p>\n
        </div>\n
      </div>\n
\n
      <div class="codeLayout">\n
        <div class="pad">\n
          <div class="jsFiddle">\n
            <button class="jsFiddleLink" data-runfiddle="example2">Edit in jsFiddle</button>\n
          </div>\n
\n
          <script data-jsfiddle="example2">\n
            var container2 = document.getElementById(\'example2\'),\n
              hot2;\n
\n
            hot2 = new Handsontable(container2, {\n
              data: getCarData(),\n
              minSpareRows: 1,\n
              colHeaders: [\'Car\', \'Year\', \'Chassis color\', \'Bumper color\']\n
\n
            });\n
            hot2.updateSettings({\n
              cells: function (row, col, prop) {\n
                var cellProperties = {};\n
\n
                if (hot2.getData()[row][prop] === \'Nissan\') {\n
                  cellProperties.readOnly = true;\n
                }\n
\n
                return cellProperties;\n
              }\n
            })\n
          </script>\n
        </div>\n
      </div>\n
    </div>\n
\n
        <div class="footer-text">\n
        </div>\n
      </div>\n
\n
    </div>\n
\n
  </div>\n
</div>\n
\n
<div id="outside-links-wrapper"></div>\n
\n
</body>\n
</html>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>6664</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>readonly.html</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
