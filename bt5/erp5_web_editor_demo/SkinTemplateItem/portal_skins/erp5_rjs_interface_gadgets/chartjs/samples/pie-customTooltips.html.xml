<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts41271271.42</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>pie-customTooltips.html</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<!doctype html>\n
<html>\n
\n
<head>\n
    <title>Pie Chart with Custom Tooltips</title>\n
    <script src="../Chart.js"></script>\n
    <script src="http://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>\n
\n
    <style>\n
    #canvas-holder {\n
        width: 100%;\n
        margin-top: 50px;\n
        text-align: center;\n
    }\n
    #chartjs-tooltip {\n
        opacity: 1;\n
        position: absolute;\n
        background: rgba(0, 0, 0, .7);\n
        color: white;\n
        padding: 3px;\n
        border-radius: 3px;\n
        -webkit-transition: all .1s ease;\n
        transition: all .1s ease;\n
        pointer-events: none;\n
        -webkit-transform: translate(-50%, 0);\n
        transform: translate(-50%, 0);\n
    }\n
    #chartjs-tooltip.below {\n
        -webkit-transform: translate(-50%, 0);\n
        transform: translate(-50%, 0);\n
    }\n
    #chartjs-tooltip.below:before {\n
        border: solid;\n
        border-color: #111 transparent;\n
        border-color: rgba(0, 0, 0, .8) transparent;\n
        border-width: 0 8px 8px 8px;\n
        bottom: 1em;\n
        content: "";\n
        display: block;\n
        left: 50%;\n
        position: absolute;\n
        z-index: 99;\n
        -webkit-transform: translate(-50%, -100%);\n
        transform: translate(-50%, -100%);\n
    }\n
    #chartjs-tooltip.above {\n
        -webkit-transform: translate(-50%, -100%);\n
        transform: translate(-50%, -100%);\n
    }\n
    #chartjs-tooltip.above:before {\n
        border: solid;\n
        border-color: #111 transparent;\n
        border-color: rgba(0, 0, 0, .8) transparent;\n
        border-width: 8px 8px 0 8px;\n
        bottom: 1em;\n
        content: "";\n
        display: block;\n
        left: 50%;\n
        top: 100%;\n
        position: absolute;\n
        z-index: 99;\n
        -webkit-transform: translate(-50%, 0);\n
        transform: translate(-50%, 0);\n
    }\n
    </style>\n
</head>\n
\n
<body>\n
    <div id="canvas-holder">\n
        <canvas id="chart-area1" width="50" height="50" />\n
    </div>\n
    <div id="canvas-holder">\n
        <canvas id="chart-area2" width="300" height="300" />\n
    </div>\n
\n
    <div id="chartjs-tooltip"></div>\n
\n
\n
    <script>\n
    Chart.defaults.global.customTooltips = function(tooltip) {\n
\n
    \t// Tooltip Element\n
        var tooltipEl = $(\'#chartjs-tooltip\');\n
\n
        // Hide if no tooltip\n
        if (!tooltip) {\n
            tooltipEl.css({\n
                opacity: 0\n
            });\n
            return;\n
        }\n
\n
        // Set caret Position\n
        tooltipEl.removeClass(\'above below\');\n
        tooltipEl.addClass(tooltip.yAlign);\n
\n
        // Set Text\n
        tooltipEl.html(tooltip.text);\n
\n
        // Find Y Location on page\n
        var top;\n
        if (tooltip.yAlign == \'above\') {\n
            top = tooltip.y - tooltip.caretHeight - tooltip.caretPadding;\n
        } else {\n
            top = tooltip.y + tooltip.caretHeight + tooltip.caretPadding;\n
        }\n
\n
        // Display, position, and set styles for font\n
        tooltipEl.css({\n
            opacity: 1,\n
            left: tooltip.chart.canvas.offsetLeft + tooltip.x + \'px\',\n
            top: tooltip.chart.canvas.offsetTop + top + \'px\',\n
            fontFamily: tooltip.fontFamily,\n
            fontSize: tooltip.fontSize,\n
            fontStyle: tooltip.fontStyle,\n
        });\n
    };\n
\n
    var pieData = [{\n
        value: 300,\n
        color: "#F7464A",\n
        highlight: "#FF5A5E",\n
        label: "Red"\n
    }, {\n
        value: 50,\n
        color: "#46BFBD",\n
        highlight: "#5AD3D1",\n
        label: "Green"\n
    }, {\n
        value: 100,\n
        color: "#FDB45C",\n
        highlight: "#FFC870",\n
        label: "Yellow"\n
    }, {\n
        value: 40,\n
        color: "#949FB1",\n
        highlight: "#A8B3C5",\n
        label: "Grey"\n
    }, {\n
        value: 120,\n
        color: "#4D5360",\n
        highlight: "#616774",\n
        label: "Dark Grey"\n
    }];\n
\n
    window.onload = function() {\n
        var ctx1 = document.getElementById("chart-area1").getContext("2d");\n
        window.myPie = new Chart(ctx1).Pie(pieData);\n
\n
        var ctx2 = document.getElementById("chart-area2").getContext("2d");\n
        window.myPie = new Chart(ctx2).Pie(pieData);\n
    };\n
    </script>\n
</body>\n
\n
</html>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>4110</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string>pie-customTooltips.html</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
