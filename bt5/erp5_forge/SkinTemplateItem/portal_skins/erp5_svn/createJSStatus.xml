<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">bfINCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

if "files" in context.REQUEST.keys():\n
  files=context.REQUEST["files"]\n
else:\n
  files=None\n
\n
if "checked" in context.REQUEST.keys():\n
  checked = context.REQUEST["checked"]\n
else:\n
  checked=files\n
\n
print \'\'\'<script>var tree = null;\n
        var business_template;\n
        var is_expanded=false;\n
\n
        // This script is intended for use with a minimum of Netscape 4 or IE 4.\n
        if(document.getElementById) {\n
\t  var upLevel = true;\n
\t} else if(document.layers) {\n
\t  var ns4 = true;\n
\t} else if(document.all) {\n
\t  var ie4 = true;\n
\t}\n
\n
\tfunction preLoadImages(){\n
\t\tvar imSrcAr = new \n
                Array(\'document.png\',\'iconCheckAll.gif\',\'line2.gif\',\'minus2.gif\',\'minus5.gif\',\'plus2.gif\',\'plus5.gif\',\'folder_open.png\',\'iconCheckGray.gif\',\'line3.gif\',\'minus3.gif\',\'minus_ar.gif\',\'plus3.gif\',\'plus_ar.gif\',\'folder.png\',\'line1.gif\',\'line4.gif\',\'minus4.gif\',\'minus.gif\',\'plus4.gif\',\'plus.gif\',\'iconUnCheckAll.gif\', \'blank.gif\')\n
\t\tvar imAr = new Array(0);\n
\t\tfor(var i=0;i<imSrcAr.length;i++){\n
\t\t\timAr[imAr.length] = new Image();\n
\t\t\timAr[imAr.length-1].src = \'imgs/\'+imSrcAr[i]\n
\t\t}\n
\t}\n
\n
\tfunction doOnLoad(){\n
\t\tpreLoadImages();\n
\t\t//tree\n
\t\ttree=new dhtmlXTreeObject(document.getElementById(\'treebox1\'),\'100%%\',\'100%%\',0);\n
\t\ttree.setImagePath(\'imgs/\');\n
\t\ttree.setDragHandler();\n
\t\ttree.enableCheckBoxes(true)\n
\t\ttree.enableThreeStateCheckboxes(true);\n
\t\ttree.enableDragAndDrop(false)\n
                tree.loadXML(\'tree.xml?bt_id=%s\', hideObject)\n
                //tree.setOnClickHandler(clickHandler)\n
                tree.setOnClickHandler(showMenu)\n
                //business_template=getget(\'bt_name\')\n
        }\n
        \n
        function expandCollapse(){\n
          if(! is_expanded){\n
            tree.openAllItems(0);\n
            is_expanded=true;\n
          }else{\n
            tree.closeAllItems(0);\n
            is_expanded=false;\n
          }\n
        }\n
\n
function getget(name) {\n
  var q = document.location.search;\n
  var i = q.indexOf(name + \'=\');\n
\n
  if (i == -1) {\n
    return false;\n
  }\n
\n
  var r = q.substr(i + name.length + 1, q.length - i - name.length - 1);\n
\n
  i = r.indexOf(\'&\');\n
\n
  if (i != -1) {\n
    r = r.substr(0, i);\n
  }\n
\n
  return r.replace(/\\+/g, \' \');\n
}\n
\n
        \n
        function commit(popup){\n
          if(popup == 1){\n
            //hide popup\n
            document.getElementById(\'menudiv\').style.display = "none";\n
            filesToCommit = tree.getSelectedItemId();\n
            partialToCommit = tree.getAllParentId(filesToCommit);\n
            sub=tree.getAllSubItems(filesToCommit);\n
            if(sub!=\'\'){\n
              filesToCommit = filesToCommit+\',\'+sub;\n
            }\n
          }else{\n
            filesToCommit=tree.getAllChecked();\n
            partialToCommit=tree.getAllPartiallyChecked();\n
          }\n
          if (filesToCommit == \'\') {\n
            alert("Nothing to commit !");\n
          } else {\n
            if(partialToCommit == \'\') {\n
              to_commit=filesToCommit\n
            }else{\n
              to_commit=partialToCommit+\',\'+filesToCommit\n
            }\n
            //Commit Files\n
            open(\'%s/svn_commit?files=\'+escape(to_commit)+\'&checked=\'+escape(tree.getAllChecked()), \'_self\');\n
          }\n
        }\n
        \n
         function clickHandler(item_id){\n
          if (tree.isItemChecked(item_id) == 0) {\n
            tree.setCheck(item_id, 1);\n
          }else{\n
            tree.setCheck(item_id, 0);\n
          }\n
         }\n
\n
        function viewDiff(popup){\n
          nbModified=0;\n
          nbAdded=0;\n
          nbRemoved=0;\n
          FilesRemovedArray=[]\n
          FilesAddedArray=[]\n
          FilesModifiedArray=[]\n
          if(popup == 1){\n
            //hide popup\n
            document.getElementById(\'menudiv\').style.display = "none";\n
            filesCheckedArray = [tree.getSelectedItemId()];\n
            filesCheckedArray=filesCheckedArray.concat(tree.getAllSubItems(filesCheckedArray[0]).split(\',\'));\n
          }else{\n
            filesCheckedArray=tree.getAllChecked().split(\',\');\n
          }\n
          for(i=0;i<filesCheckedArray.length; ++i){\n
            if(tree.getItemColor(filesCheckedArray[i])==\'red\'){\n
              FilesRemovedArray[nbRemoved++]=filesCheckedArray[i];\n
            }else{\n
              if(tree.getItemColor(filesCheckedArray[i])==\'green\'){\n
                FilesAddedArray[nbAdded++]=filesCheckedArray[i];\n
              }else\n
              if(tree.getItemColor(filesCheckedArray[i])==\'orange\'){\n
                FilesModifiedArray[nbModified++]=filesCheckedArray[i];\n
              }\n
            }\n
          }\n
          if(nbModified!=0){\n
            filesModified=FilesModifiedArray.join(\',\');\n
          }else{\n
            filesModified=\'none\'\n
          }\n
          if(nbAdded!=0){\n
            filesAdded=FilesAddedArray.join(\',\');\n
          }else{\n
            filesAdded=\'none\'\n
          }\n
          if(nbRemoved!=0){\n
            filesRemoved=FilesRemovedArray.join(\',\');\n
          }else{\n
            filesRemoved=\'none\'\n
          }\n
          \n
          if (nbRemoved==0 && nbAdded==0 && nbModified==0) {\n
            alert(\'Nothing to diff !\');\n
          } else {\n
            open(\'%s/BusinessTemplate_viewSvnDiff?modified=\'+escape(filesModified)+\'&added=\'+escape(filesAdded)+\'&removed=\'+escape(filesRemoved), \'_self\');\n
          }\n
        }\n
\n
var ie  = document.all\n
var ns6 = document.getElementById&&!document.all\n
var isMenu  = false ;\n
var menuSelObj = null ;\n
var overpopupmenu = false;\n
function mouseSelect(e)\n
{\n
  var obj = ns6 ? e.target.parentNode : event.srcElement.parentElement;\n
  if( isMenu )\n
  {\n
    if( overpopupmenu == false )\n
    {\n
      isMenu = false ;\n
      overpopupmenu = false;\n
      document.getElementById(\'menudiv\').style.display = "none" ;\n
      return true ;\n
    }\n
    return true ;\n
  }\n
  return false;\n
}\n
\n
// POP UP MENU\n
function  ItemSelMenu(e)\n
{\n
  var obj = ns6 ? e.target.parentNode : event.srcElement.parentElement; \n
      menuSelObj = obj ;\n
  if (ns6)\n
  {\n
    document.getElementById(\'menudiv\').style.left = e.clientX+document.body.scrollLeft+\'px\';\n
    document.getElementById(\'menudiv\').style.top = e.clientY+document.body.scrollTop+\'px\';\n
  } else\n
  {\n
    document.getElementById(\'menudiv\').style.pixelLeft = e.clientX+document.body.scrollLeft+\'px\';\n
    document.getElementById(\'menudiv\').style.pixelTop = e.clientY+document.body.scrollTop+\'px\';\n
  }\n
  document.getElementById(\'menudiv\').style.display = "";\n
  document.getElementById(\'item1\').style.backgroundColor=\'#FFFFFF\';\n
  document.getElementById(\'item2\').style.backgroundColor=\'#FFFFFF\';\n
  document.getElementById(\'item3\').style.backgroundColor=\'#FFFFFF\';\n
  isMenu = true;\n
  return false ;\n
}\n
function  showMenu()\n
{\n
  document.getElementById(\'menudiv\').style.left = mouseX;\n
  document.getElementById(\'menudiv\').style.top = mouseY;\n
  document.getElementById(\'menudiv\').style.display = "";\n
  document.getElementById(\'item1\').style.backgroundColor=\'#FFFFFF\';\n
  document.getElementById(\'item2\').style.backgroundColor=\'#FFFFFF\';\n
  document.getElementById(\'item3\').style.backgroundColor=\'#FFFFFF\';\n
  isMenu = true;\n
  return false ;\n
}\n
\n
function getMouse(e)\n
{\n
  if(overpopupmenu){\n
    document.body.style.cursor = \'default\';\n
  }\n
  if (ns6)\n
  {\n
    mouseX = e.clientX+window.pageXOffset+\'px\';\n
    mouseY = e.clientY+window.pageYOffset+\'px\';\n
  } else\n
  {\n
    mouseX = event.clientX+document.body.scrollLeft+\'px\';\n
    mouseY = event.clientY+document.body.scrollTop+\'px\';\n
  }\n
}\n
\n
document.onmousedown  = mouseSelect;\n
document.onmousemove = getMouse;\n
//document.oncontextmenu  = ItemSelMenu;\n
\n
        function revert(popup){\n
          if(popup==1){\n
            //hide popup\n
            document.getElementById(\'menudiv\').style.display = "none";\n
            to_revert = tree.getSelectedItemId();\n
            sub = tree.getAllSubItems(to_revert);\n
            if(sub != \'\'){\n
              to_revert = to_revert + \',\' + sub;\n
            }\n
          }else{\n
            to_revert = tree.getAllChecked();\n
          }\n
          if (to_revert == \'\') {\n
            alert("Nothing to revert !");\n
          } else {\n
            if(confirm(\'Are you sure you want to revert changes?\')){\n
              //Revert changes\n
              open(\'%s/svn_revert?files=\'+escape(to_revert), \'_self\');\n
            }\n
          }\n
        }\n
\n
        function update(){\n
          open(\'%s/svn_update\', \'_self\');\n
        }\n
\n
        function infos(){\n
          open(\'%s/svn_info\', \'_self\');\n
        }\n
\n
        function cleanup(){\n
          open(\'%s/svn_cleanup\', \'_self\');\n
        }\n
\n
        function log(){\n
          //hide popup\n
          document.getElementById(\'menudiv\').style.display = "none";\n
          open(\'%s/svn_log?file=\'+tree.getSelectedItemId(), \'_self\');\n
        }\n
\n
        function ls(){\n
          //hide popup\n
          document.getElementById(\'menudiv\').style.display = "none";\n
          open(\'%s/svn_ls?file=\'+tree.getSelectedItemId(), \'_self\');\n
        }\n
\n
\'\'\'% (context.getId(), context.absolute_url(), context.absolute_url(), context.absolute_url(), context.absolute_url(), context.absolute_url(), context.absolute_url(), context.absolute_url(), context.absolute_url())\n
\n
if checked:\n
  print \'\'\'\n
  function checkBoxes(){\n
    files_array=\\\'%s\\\'.split(\',\')\n
    for(i=0;i<files_array.length;++i){\n
      tree.setCheck(files_array[i], 1);\n
    }\n
  }\'\'\'%checked\n
else:\n
  print \'function checkBoxes(){}\'\n
print \'</script>\'\n
\n
return printed\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/erp5/portal_skins/erp5_svn/createJSStatus</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>_print_</string>
                            <string>_print</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>_getitem_</string>
                            <string>files</string>
                            <string>None</string>
                            <string>checked</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>createJSStatus</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
