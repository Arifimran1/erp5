<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">bfINCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

from ZODB.POSException import ConflictError\n
from DateTime import DateTime\n
\n
def strip_punctuation(text):\n
  mapping = string.maketrans(text, text)\n
  return text.translate(mapping,\n
                        string.punctuation+string.whitespace)\n
\n
mail_message = None\n
# Get some headers\n
headers = theMail[\'headers\']\n
id = strip_punctuation(theMail[\'headers\'][\'message-id\'])\n
\n
# Generate portal type\n
message_portal_type = \'Mail Message\'\n
# Create content\n
mail_message = context.event_module.newContent(\n
                         portal_type=message_portal_type,\n
                         id=id)\n
mail_message.edit(\n
  title = headers.get(\'subject\'),\n
  start_date = DateTime(headers.get(\'date\')),\n
  to = headers.get(\'to\'),\n
  sender = headers.get(\'from\'),\n
#   reply_to = headers.get(\'replyto\'),\n
  body = theMail[\'body\'],\n
  original = theMail[\'__original__\'],\n
)\n
\n
# Save attachments\n
attachment_list = theMail[\'attachment_list\']\n
for attachment_id, attachment_type, attachment_data in attachment_list:\n
  # Choose the portal type\n
#   if attachment_type.startswith(\'image/\'):\n
#     portal_type = \'Image\'\n
#   else:\n
#     portal_type = \'File\'\n
  portal_type = \'File\'\n
  if attachment_id is not None:\n
    id = attachment_id.replace(\'/\', \'_\')\n
    new_file = mail_message.newContent(portal_type=portal_type,\n
                                       id=id,\n
                                       file=attachment_data,\n
                                       description=attachment_type)\n
  else:\n
    new_file = mail_message.newContent(portal_type=portal_type,\n
                                       file=attachment_data,\n
                                       description=attachment_type)\n
\n
# # We should now try to guess the user who sent it\n
# # Guess the mail address:\n
# mail_from = headers.get(\'from\')\n
# at_place = mail_from.find(\'@\')\n
# mail_address = None\n
# if at_place != -1:\n
#   begin = max(mail_from.rfind(\'<\',0,at_place),mail_from.rfind(\' \',0,at_place))\n
#   end = min(mail_from.rfind(\'>\',at_place),mail_from.rfind(\' \',at_place),len(mail_from))\n
#   mail_address = mail_from[begin+1:end]\n
# # find the person with this mail\n
# if mail_address is not None:\n
#   kw = {\'portal_type\':\'Email\',\n
#         \'query\':"SearchableText LIKE \'%%%s%%\'" % mail_address }\n
#   result = context.portal_catalog.searchResults(**kw)\n
#   for object in result:\n
#     object = object.getObject()\n
#     parent = object.aq_parent\n
#     if parent.getPortalType() == \'Person\':\n
#       organisation = parent.getSubordinationValue()\n
#       if organisation is None:\n
#         mail_message.setSourceValue(parent)\n
#       else:\n
#         mail_message.setSourceValueList([parent, organisation])\n
#     elif parent.getPortalType() == \'Organisation\':\n
#       mail_message.setSourceValue(parent)\n
#     break\n
\n
# # We should look if there\'s already a sale opportunity\n
# # or a support which can corresponds to this email\n
# subject = mail_message.getTitle()\n
# if subject != \'\' and subject is not None:\n
#   if subject.find(\'Re: \')==0:\n
#     subject = subject[len(\'Re: \'):]\n
#   kw = {\'portal_type\':\'Sale Opportunity\',\n
#         \'query\':"SearchableText LIKE \'%%%s%%\'" % subject }\n
#   result = context.portal_catalog.searchResults(**kw)\n
#   for object in result:\n
#     object = object.getObject()\n
#     # Check if this sale opportunity corresponds to this client\n
#     # If so, then we can assign this mail to the sale opportunity\n
#     if mail_message.getSourceValue() in object.getClientValueList():\n
#       mail_message.setFollowUpValue(object)\n
#       mail_message.assign()\n
\n
return None\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/erp5/portal_skins/erp5_crm/EventModule_createEventFromMail</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>theMail</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>theMail</string>
                            <string>ZODB.POSException</string>
                            <string>ConflictError</string>
                            <string>DateTime</string>
                            <string>strip_punctuation</string>
                            <string>None</string>
                            <string>mail_message</string>
                            <string>_getitem_</string>
                            <string>headers</string>
                            <string>id</string>
                            <string>message_portal_type</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>attachment_list</string>
                            <string>_getiter_</string>
                            <string>attachment_id</string>
                            <string>attachment_type</string>
                            <string>attachment_data</string>
                            <string>portal_type</string>
                            <string>new_file</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>EventModule_createEventFromMail</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
