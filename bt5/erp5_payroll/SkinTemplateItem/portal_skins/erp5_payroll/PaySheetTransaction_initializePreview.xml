<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>"""\n
  This script create the data structure of the pay sheet preview (= the PaySheetTransaction_viewPreview fast input).\n
  Then it fill this data structure with rates and amounts of money from the localized pre calculation script.\n
"""\n
\n
import random\n
from Products.ERP5Type.Document import newTempBase\n
from string import zfill\n
\n
\n
\n
##########################\n
# This part of the script create the data structure designed to hold the result of pre calculation.\n
##########################\n
\n
# \'d\' is the dict which contain the default values of the Pay Sheet fast input\n
# TODO: Bad name ! Find something more explicit.\n
d = {}\n
\n
# During 06/2005 service module has been renamed service_module\n
# both names are supported\n
# XXX This should definitly use portal_catalog !!!\n
# XXX The following code will be deprecated when the Payroll Service portal type will be used.\n
erp5site = context.portal_url.getPortalObject()\n
if hasattr(erp5site, \'payroll_service_module\'):\n
  service_module = erp5site.payroll_service_module\n
elif hasattr(erp5site, \'service_module\'):\n
  service_module = erp5site.service_module\n
else:\n
  service_module = erp5site.service\n
\n
# Get all services related to pay sheet transaction\n
# TODO: Only choose services of the current localisation.\n
paysheet_services = []\n
for service in service_module.objectValues():\n
  # Check service validity\n
  # TODO: Use a validation workflow on Payroll Service and check the validity of a Service there\n
  base_categories = service.getVariationBaseCategoryList()\n
  if \'salary_range\' in base_categories and \'tax_category\' in base_categories:\n
    # XXX add "and service.getId() != \'labour\':" ??\n
    paysheet_services.append(service)\n
\n
# Create the pre-calculation data structure\n
for service in paysheet_services:\n
  # XXX Is there a better way to get categorylist ? Something like getCategoryList(base=\'tax_category\')\n
  #     will be nice to have.\n
  service_categories = service.getCategoryList()\n
  tax_categories          = []\n
  salary_range_categories = []\n
  for category in service_categories:\n
    if   category.startswith(\'tax_category/\'): tax_categories.append(category)\n
    elif category.startswith(\'salary_range/\'): salary_range_categories.append(category)\n
  # Create a preview line for each salary_range of the service.\n
  # This method is valid as long as we assume each line is composed of a base, an employee share\n
  #   and an employer share only.\n
  for salary_range in salary_range_categories:\n
    salary_range_object = context.portal_categories.resolveCategory(salary_range)\n
    if salary_range_object is None:\n
      context.log( "PaySheetTransaction_initializePreview"\n
                 , "WARNING! Category not found: %s" % salary_range\n
                 )\n
    else:\n
      preview_line_uid = "%s/%s" % (service.getId(), salary_range_object.getId())\n
      d[preview_line_uid] = { \'service\'       : service\n
                            , \'tax_categories\': tax_categories\n
                            , \'salary_range\'  : salary_range\n
                            , \'employer_share\': None\n
                            , \'employee_share\': None\n
                            , \'base\'          : None\n
                            }\n
\n
\n
\n
#########################################\n
# This part of the script select the right localized version of PaySheetTransaction_preCalculation_l10n script.\n
# TODO: implement here a generic method to get the right precalculation script automaticcaly.\n
#########################################\n
\n
# Force which script to use - BAD\n
country = \'fr\'\n
year    = \'2006\'\n
\n
script_name = \'_\'.join([ "PaySheetTransaction_preCalculation_l10n"\n
                       , country\n
                       , year\n
                       ])\n
calculation_method = getattr(context, script_name)\n
\n
pre_calculation = calculation_method()\n
\n
# Merge pre_calculation and preview line dict\n
preview_line_keys = d.items()[0][1].keys()\n
for k in pre_calculation.keys():\n
  if k in d.keys():\n
    for required_key in preview_line_keys:\n
      if not pre_calculation[k].has_key(required_key):\n
        pre_calculation[k][required_key] = d[k][required_key]\n
  else:\n
    context.log( "PaySheetTransaction_initializePreview"\n
               , "Preview line key \'%s\' not found in default services" % k\n
               )\n
    # Remove line\n
    del pre_calculation[k]\n
\n
# Because all rates in the localized file are written in percents, we must convert them in pure floats.\n
for preview_line_uid in pre_calculation.keys():\n
  # Only \'Fixed\' (or \'Forfait\' in french) base are expressed in percents\n
  # TODO: base this test on "/forfait" string is bad. A more generic way must be found.\n
  preview_line = pre_calculation[preview_line_uid]\n
  if not preview_line_uid.endswith(\'/forfait\'):\n
    # Fix percents\n
    for share_type in [\'employer_share\', \'employee_share\']:\n
      share_value = preview_line[share_type]\n
      if share_value not in (\'\', None):\n
        preview_line[share_type] = share_value / 100.0\n
  # Normalize the value of \'Fixed\' (or \'Forfait\' in french) base to 1.0\n
  else:\n
    preview_line[\'base\'] = 1.0\n
  pre_calculation[preview_line_uid] = preview_line\n
\n
# Create a preview line for every salary_range value of the service\n
portal_object = context.getPortalObject()\n
preview_line_list = []\n
num = 0\n
INT_LEN = 3\n
for (preview_line_id, preview_line_item) in pre_calculation.items():\n
  num += 1\n
  context.log("Kev dfsdfsdfsdff", repr((preview_line_id, preview_line_item)))\n
  service      = preview_line_item[\'service\']\n
  salary_range = preview_line_item[\'salary_range\']\n
  service_id   = service.getId()\n
  o = newTempBase(portal_object, service_id)\n
  o.setUid(  \'new_%s\' % zfill(num, INT_LEN)) # XXX There is a security issue here\n
  o.edit(uid=\'new_%s\' % zfill(num, INT_LEN)) # XXX There is a security issue here\n
  o.edit( id                 = service_id\n
        , base               = preview_line_item[\'base\']\n
        , employer_share     = preview_line_item[\'employer_share\']\n
        , employee_share     = preview_line_item[\'employee_share\']\n
        , service_title      = service.getTitleOrId()\n
        , service_id         = service_id\n
        , salary_range       = salary_range\n
        , salary_range_title = context.portal_categories.resolveCategory(salary_range).getTitleOrId()\n
        , tax_category       = preview_line_item[\'tax_categories\']\n
        )\n
  preview_line_list.append(o)\n
\n
# return the list of preview lines\n
return preview_line_list\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>**kw</string> </value>
        </item>
        <item>
            <key> <string>_proxy_roles</string> </key>
            <value>
              <tuple>
                <string>Manager</string>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>kw</string>
                            <string>random</string>
                            <string>Products.ERP5Type.Document</string>
                            <string>newTempBase</string>
                            <string>string</string>
                            <string>zfill</string>
                            <string>d</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>erp5site</string>
                            <string>hasattr</string>
                            <string>service_module</string>
                            <string>paysheet_services</string>
                            <string>_getiter_</string>
                            <string>service</string>
                            <string>base_categories</string>
                            <string>service_categories</string>
                            <string>tax_categories</string>
                            <string>salary_range_categories</string>
                            <string>category</string>
                            <string>salary_range</string>
                            <string>salary_range_object</string>
                            <string>None</string>
                            <string>preview_line_uid</string>
                            <string>_write_</string>
                            <string>country</string>
                            <string>year</string>
                            <string>script_name</string>
                            <string>getattr</string>
                            <string>calculation_method</string>
                            <string>pre_calculation</string>
                            <string>_getitem_</string>
                            <string>preview_line_keys</string>
                            <string>k</string>
                            <string>required_key</string>
                            <string>preview_line</string>
                            <string>share_type</string>
                            <string>share_value</string>
                            <string>portal_object</string>
                            <string>preview_line_list</string>
                            <string>num</string>
                            <string>INT_LEN</string>
                            <string>preview_line_id</string>
                            <string>preview_line_item</string>
                            <string>repr</string>
                            <string>service_id</string>
                            <string>o</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>PaySheetTransaction_initializePreview</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
