<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

YEAR = \'2005\'\n
STATE_LIST = [ \'confirmed\'\n
             #, \'cancelled\'\n
             #, \'delivered\'\n
             , \'planned\'\n
             , \'stopped\'\n
             #, \'draft\'\n
]\n
AUTO_UPDATE = False\n
\n
\n
print """<html>\n
<head>\n
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>\n
<style>\n
body, h1, h2 {\n
  font-size: 70%;\n
}\n
</style>\n
</head>\n
<body>\n
<h1>PaySheets Consistency Checking</h1>"""\n
\n
\n
for pay_sheet in context.accounting_module.objectValues(portal_type = [\'Pay Sheet Transaction\']):\n
\n
  ps_state = pay_sheet.getSimulationState()\n
\n
  if ps_state in STATE_LIST:\n
    if str(pay_sheet.getStartDate()).split(\'/\')[0] == YEAR:\n
\n
      print "<br/>"\n
      print "<h2><a href=\'%s\'>%s - %s</a> [%s]</h2>" % ( pay_sheet.absolute_url()\n
                                                       , pay_sheet.getTitle()\n
                                                       , pay_sheet.getStartDate()\n
                                                       , pay_sheet.getSimulationState()\n
                                                       )\n
\n
      ### Test the consistency of paysheet properties\n
      # Test the presence of a Transaction Reference number\n
      #if ps_state in [\'confirmed\', \'stopped\', \'delivered\']:\n
\n
\n
      ### Test the validity of Pay Sheet Lines (invoice lines of social service)\n
      for pay_sheet_line in pay_sheet.objectValues(portal_type = [\'Pay Sheet Line\']):\n
        social_service = pay_sheet_line.getResourceValue()\n
        supplier = social_service.getSourceValue()\n
        ps_destination = pay_sheet_line.getDestinationValue()\n
        ps_destination_section = pay_sheet_line.getDestinationSectionValue()\n
\n
        # Test the supplier\n
        if supplier == None:\n
          if social_service.getId() != \'labour\':\n
            print "<font color=\'#f00\'><a href=\'%s\'>%s [%s]</a> Supplier is None !</font><br/>" % ( pay_sheet_line.absolute_url()\n
              , pay_sheet_line.getPath()\n
              , pay_sheet_line.getTitle()\n
              )\n
\n
        else:\n
          # Test the destination\n
          if supplier != ps_destination:\n
            print "<font color=\'#f00\'><a href=\'%s\'>%s [%s]</a> has bad destination (%s instead of %s).</font><br/>" % ( pay_sheet_line.absolute_url()\n
              , pay_sheet_line.getPath()\n
              , pay_sheet_line.getTitle()\n
              , repr(ps_destination).replace(\'>\', \']\').replace(\'<\', \'[\')\n
              , repr(supplier).replace(\'>\', \']\').replace(\'<\', \'[\')\n
              )\n
            if AUTO_UPDATE == True:\n
              pay_sheet_line.setDestinationValue(supplier)\n
              print "<font color=\'#f90\'>destination_value updated.</font><br/>"\n
\n
          # Test the destination section\n
          if supplier != ps_destination_section:\n
            print "<font color=\'#f00\'><a href=\'%s\'>%s [%s]</a> has bad destination_section (%s instead of %s)</font><br/>" % ( pay_sheet_line.absolute_url()\n
              , pay_sheet_line.getPath()\n
              , pay_sheet_line.getTitle()\n
              , repr(ps_destination_section).replace(\'>\', \']\').replace(\'<\', \'[\')\n
              , repr(supplier).replace(\'>\', \']\').replace(\'<\', \'[\')\n
              )\n
            if AUTO_UPDATE == True:\n
              pay_sheet_line.setDestinationSectionValue(supplier)\n
              print "<font color=\'#f90\'>destination_section_value updated.</font><br/>"\n
\n
        # Test the social service\n
        if social_service == None:\n
          print "<font color=\'#f00\'>Social service is None on line <a href=\'%s\'>%s [%s]</a>!</font><br/>" % ( pay_sheet_line.absolute_url()\n
            , pay_sheet_line.getPath()\n
            , pay_sheet_line.getTitle()\n
            )\n
\n
        else:\n
          # Test categories\n
          service_variations = social_service.getVariationCategoryList()\n
          line_variations = pay_sheet_line.getVariationCategoryList()\n
          for variation in line_variations:\n
            if variation not in service_variations:\n
              print "<font color=\'#f00\'>\'%s\' not available on <a href=\'%s\'>%s</a> social service !</font><br/>" % ( variation\n
                , social_service.absolute_url()\n
                , social_service.getTitle()\n
                )\n
\n
      ### Test the validity of Pay Sheet Transaction Line (accounting part of paysheets)\n
      for accounting_line in pay_sheet.objectValues(portal_type = [\'Pay Sheet Transaction Line\']):\n
        source      = accounting_line.getSourceValue()\n
        source_path = accounting_line.getSource()\n
        dest_sect      = accounting_line.getDestinationSectionValue()\n
        dest_sect_path = accounting_line.getDestinationSection()\n
\n
        if dest_sect_path == \'organisation_module/urssaf\' and \\\n
            source_path    == \'account_module/dettes_sociales\':\n
          expected_source = context.account_module[\'securite_sociale\']\n
          print "<font color=\'#f00\'>Source on <a href=\'%s\'>%s</a> must be %s instead of %s</font><br/>" % ( accounting_line.absolute_url()\n
            , accounting_line.getPath()\n
            , expected_source.getPath()\n
            , source_path\n
            )\n
          if AUTO_UPDATE == True:\n
            accounting_line.setSourceValue(expected_source)\n
\n
        if dest_sect_path == \'organisation_module/henner\' and \\\n
            source_path    == \'account_module/charges_securite_sociale\':\n
          expected_source = context.account_module[\'mutuelle\']\n
          print "<font color=\'#f00\'>Source on <a href=\'%s\'>%s</a> must be %s instead of %s</font><br/>" % ( accounting_line.absolute_url()\n
            , accounting_line.getPath()\n
            , expected_source.getPath()\n
            , source_path\n
            )\n
          if AUTO_UPDATE == True:\n
            accounting_line.setSourceValue(expected_source)\n
\n
\n
print "</body></html>"\n
return printed\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/nexedi/portal_skins/erp5_payroll/AccountingModule_checkPaySheetConsistency</string> </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>_print_</string>
                            <string>_print</string>
                            <string>YEAR</string>
                            <string>STATE_LIST</string>
                            <string>False</string>
                            <string>AUTO_UPDATE</string>
                            <string>_getiter_</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>pay_sheet</string>
                            <string>ps_state</string>
                            <string>_getitem_</string>
                            <string>str</string>
                            <string>pay_sheet_line</string>
                            <string>social_service</string>
                            <string>supplier</string>
                            <string>ps_destination</string>
                            <string>ps_destination_section</string>
                            <string>None</string>
                            <string>repr</string>
                            <string>True</string>
                            <string>service_variations</string>
                            <string>line_variations</string>
                            <string>variation</string>
                            <string>accounting_line</string>
                            <string>source</string>
                            <string>source_path</string>
                            <string>dest_sect</string>
                            <string>dest_sect_path</string>
                            <string>expected_source</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>AccountingModule_checkPaySheetConsistency</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
