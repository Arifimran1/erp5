<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

True  = 1\n
False = 0\n
\n
global paysheet\n
paysheet      = context.getObject()\n
paysheet_type = paysheet.getPortalType()\n
\n
employee        = paysheet.getDestinationSection()\n
employee_object = paysheet.getDestinationSectionValue()\n
employer        = paysheet.getSourceSection()\n
employer_object = paysheet.getSourceSectionValue()\n
\n
\n
gross_salary = abs(paysheet.getGrossSalary())\n
\n
# each year, look at http://www.urssaf.fr to complete the table\n
ceiling_salary_list = { 2003 : 2432.0\n
                      , 2004 : 2476.0\n
                      , 2005 : 2516.0\n
                      }\n
# the default ceiling salary is the last one\n
paysheet_year = paysheet.getStartDate().year()\n
ceiling_salary_available_years = ceiling_salary_list.keys()\n
if paysheet_year not in ceiling_salary_available_years:\n
  paysheet_year = ceiling_salary_available_years[-1]\n
ceiling_salary = ceiling_salary_list[paysheet_year]\n
\n
# limited salary = salaire plafonn\xc3\xa9\n
if gross_salary < ceiling_salary:\n
  limited_salary = gross_salary\n
else:\n
  limited_salary = ceiling_salary\n
\n
# check if the employee is executive or not\n
if employee_object.getCareerGrade().split(\'/\')[-1:][0] in (\'engineer\'):\n
  executive = True\n
else:\n
  executive = False\n
\n
company_birth = employer_object.getCreationDate()\n
\n
employer_region = employer_object.getDefaultAddress().getZipCode()[:2]\n
\n
# get the number of person which are employed by the company ,\n
# sub_list = employer_object.getSubordinationRelatedValueList()\n
# company_size = 0\n
# for person in sub_list:\n
#   if person.getPortalType() == \'Person\': # add condition: if current role == internal and defaultCareerEnd and defaultCareerStart fit in the current year\n
#     #print repr(person) + repr(person.getTitle())\n
#     company_size += 1\n
#\n
# print repr(company_size)\n
#\n
# return printed\n
\n
company_size = 3\n
\n
\n
# "Char" slice type\n
slice_a_value = ceiling_salary\n
slice_b_value = ceiling_salary * 4\n
slice_c_value = ceiling_salary * 8\n
char_slices = {}\n
if gross_salary < slice_a_value:\n
  char_slices[\'A\'] = gross_salary\n
else:\n
  char_slices[\'A\'] = slice_a_value\n
  if gross_salary < slice_b_value:\n
    char_slices[\'B\'] = float(gross_salary) - float(slice_a_value)\n
  else:\n
    char_slices[\'B\'] = slice_b_value\n
    if gross_salary < slice_c_value:\n
      char_slices[\'C\'] = float(gross_salary) - float(slice_b_value)\n
    else:\n
      char_slices[\'C\'] = slice_c_value\n
\n
# "Number" slice type\n
slice_1_value = ceiling_salary\n
slice_2_value = ceiling_salary * 3\n
num_slices = {}\n
if gross_salary < slice_1_value:\n
  char_slices[\'1\'] = gross_salary\n
else:\n
  char_slices[\'1\'] = slice_1_value\n
  if gross_salary < slice_2_value:\n
    char_slices[\'2\'] = gross_salary - slice_1_value\n
  else:\n
    char_slices[\'2\'] = slice_2_value\n
\n
# age-slice of the company\n
old_limit = DateTime(1997, 1, 1)\n
if company_birth < old_limit:\n
  comp_type = \'old\'\n
else:\n
  comp_type = \'new\'\n
\n
\n
#################\n
# This script will fill the PaySheetTransaction_preview with default values for base salary calculation, employer and employee share\n
#################\n
\n
default = {}\n
# initialize all variables to None\n
paysheet_services = []\n
erp5site = context.portal_url.getPortalObject()\n
# during 06/2005 service module has been renamed service_module\n
# both names are supported\n
if hasattr(erp5site, \'service_module\') : \n
  service_module = erp5site.service_module\n
else : \n
  service_module = erp5site.service\n
for service in service_module.objectValues():\n
  base_cat = service.getVariationRangeBaseCategoryList()\n
  if \'tax_category\' in base_cat and \'salary_range\' in base_cat:\n
    paysheet_services.append(service)\n
for serv in paysheet_services:\n
  cat_list = serv.getCategoryList()\n
  tax_cat = []\n
  range_cat = []\n
  for cat in cat_list:\n
    if str(cat).find(\'tax_category\') != -1:\n
      tax_cat.append(cat)\n
    if str(cat).find(\'salary_range\') != -1:\n
      range_cat.append(cat)\n
  for base in range_cat:\n
    new_name = serv.getId() + \'/\' + context.portal_categories.resolveCategory(base).getId()\n
    default[new_name] = {\'employer_rate\':None,\'employee_rate\':None,\'base\':None}\n
\n
# sickness insurance\n
if employer_region in (\'57\', \'67\', \'68\'):\n
  er = 1.70\n
else:\n
  er = 0.75\n
default[\'sickness_insurance/salaire_brut\'] = \\\n
{ \'employer_rate\' : 12.80\n
, \'employee_rate\' : er\n
, \'base\'          : gross_salary\n
}\n
\n
# old-age insurance\n
default[\'oldage_insurance/salaire_brut\'] = \\\n
{ \'employer_rate\' : 1.60\n
, \'employee_rate\' : None\n
, \'base\'          : gross_salary\n
}\n
default[\'oldage_insurance/salaire_plafonne\'] = \\\n
{ \'employer_rate\' : 8.20\n
, \'employee_rate\' : 6.55\n
, \'base\'          : limited_salary\n
}\n
\n
# widowhood insurance\n
default[\'widowhood_insurance/salaire_brut\'] = \\\n
{ \'employer_rate\' : None\n
, \'employee_rate\' : 0.10\n
, \'base\'          : gross_salary\n
}\n
\n
# family benefits\n
default[\'family_benefits/salaire_brut\'] = \\\n
{ \'employer_rate\' : 5.40\n
, \'employee_rate\' : None\n
, \'base\'          : gross_salary\n
}\n
\n
# industrial accident\n
# industrial_accident_rate is a parameter of this script, because rate depending of company size, department & trade (1.10 is for Nexedi, 1.0 is the default value)\n
if industrial_accident_rate in (\'\', 0, None):\n
  industrial_accident_rate = 1.0\n
default[\'industrial_accident/salaire_brut\'] = \\\n
{ \'employer_rate\' : industrial_accident_rate\n
, \'employee_rate\' : None\n
, \'base\'          : gross_salary\n
}\n
\n
# lodging helps\n
if company_size > 9:\n
  default[\'lodging_helps/salaire_brut\'] = \\\n
  { \'employer_rate\' : 0.40\n
  , \'employee_rate\' : None\n
  , \'base\'          : gross_salary\n
  }\n
else:\n
  default[\'lodging_helps/salaire_plafonne\'] = \\\n
  { \'employer_rate\' : 0.10\n
  , \'employee_rate\' : None\n
  , \'base\'          : limited_salary\n
  }\n
\n
# transport payment\n
# TODO: rate depending of the town, 1.80 is the \'default\' value (when the town isn\'t referenced by laws)\n
if transport_payment_rate in (\'\', 0, None):\n
  transport_payment_rate = 1.80\n
if company_size > 9:\n
  default[\'transport_payment/salaire_brut\'] = \\\n
  { \'employer_rate\' : transport_payment_rate\n
  , \'employee_rate\' : None\n
  , \'base\'          : gross_salary\n
  }\n
\n
# CSG\n
default[\'csg_deductible/salaire_brut_csg\'] = \\\n
{ \'employer_rate\' : None\n
, \'employee_rate\' : 5.10\n
, \'base\'          : 0.95 * gross_salary\n
}\n
default[\'csg_non_deductible/salaire_brut_csg\'] = \\\n
{ \'employer_rate\' : None\n
, \'employee_rate\' : 2.4\n
, \'base\'          : 0.95 * gross_salary\n
}\n
\n
# CRDS\n
default[\'crds/salaire_brut_crds\'] = \\\n
{ \'employer_rate\' : None\n
, \'employee_rate\' : 0.50\n
, \'base\'          : 0.95 * gross_salary\n
}\n
\n
# unemployment insurance\n
if char_slices.has_key(\'A\'):\n
  default[\'unemployment_insurance/tranche_a\'] = \\\n
  { \'employer_rate\' : 4.0\n
  , \'employee_rate\' : 2.4\n
  , \'base\'          : char_slices[\'A\']\n
  }\n
if char_slices.has_key(\'B\'):\n
  default[\'unemployment_insurance/tranche_b\'] = \\\n
  { \'employer_rate\' : 4.0\n
  , \'employee_rate\' : 2.4\n
  , \'base\'          : char_slices[\'B\']\n
  }\n
\n
# AGS\n
# ags_rate is a parameter of this script, 0.35% was the default value, now it\'s 0.45%\n
if ags_rate in (\'\', 0, None):\n
  ags_rate = 0.45\n
if char_slices.has_key(\'A\'):\n
  default[\'ags/tranche_a\'] = \\\n
  { \'employer_rate\' : ags_rate\n
  , \'employee_rate\' : None\n
  , \'base\'          : char_slices[\'A\']\n
  }\n
if char_slices.has_key(\'B\'):\n
  default[\'ags/tranche_b\'] = \\\n
  { \'employer_rate\' : ags_rate\n
  , \'employee_rate\' : None\n
  , \'base\'          : char_slices[\'B\']\n
  }\n
\n
# ARRCO\n
if executive == False:\n
  if num_slices.has_key(\'1\'):\n
    default[\'arrco/tranche_1\'] = \\\n
    { \'employer_rate\' : 4.5\n
    , \'employee_rate\' : 3.0\n
    , \'base\'          : num_slices[\'1\']\n
    }\n
  if num_slices.has_key(\'2\'):\n
    if comp_type == \'old\':\n
      employee_share_rate = 6.0\n
      employer_share_rate = 9.0\n
    else:\n
      employee_share_rate = 8.0\n
      employer_share_rate = 12.0\n
\n
    default[\'arrco/tranche_2\'] = \\\n
    { \'employer_rate\' : employer_share_rate\n
    , \'employee_rate\' : employee_share_rate\n
    , \'base\'          : num_slices[\'2\']\n
    }\n
elif char_slices.has_key(\'A\'):\n
  default[\'arrco/tranche_a\'] = \\\n
  { \'employer_rate\' : 4.5\n
  , \'employee_rate\' : 3.0\n
  , \'base\'          : char_slices[\'A\']\n
  }\n
\n
# AGFF\n
if executive == True:\n
  if char_slices.has_key(\'A\'):\n
    default[\'agff/tranche_a\'] = \\\n
    { \'employer_rate\' : 1.20\n
    , \'employee_rate\' : 0.80\n
    , \'base\'          : char_slices[\'A\']\n
    }\n
  if char_slices.has_key(\'B\'):\n
    default[\'agff/tranche_b\'] = \\\n
    { \'employer_rate\' : 1.30\n
    , \'employee_rate\' : 0.90\n
    , \'base\'          : char_slices[\'B\']\n
    }\n
else:\n
  if num_slices.has_key(\'1\'):\n
    default[\'agff/tranche_1\'] = \\\n
    { \'employer_rate\' : 1.20\n
    , \'employee_rate\' : 0.80\n
    , \'base\'          : num_slices[\'1\']\n
    }\n
  if num_slices.has_key(\'2\'):\n
    default[\'agff/tranche_2\'] = \\\n
    { \'employer_rate\' : 1.30\n
    , \'employee_rate\' : 0.90\n
    , \'base\'          : num_slices[\'2\']\n
    }\n
\n
# AGIRC\n
# TODO: fix the repartition of share rate in case of slice C\n
if executive == True:\n
  if char_slices.has_key(\'B\'):\n
    default[\'agirc/tranche_b\'] = \\\n
    { \'employer_rate\' : 12.50\n
    , \'employee_rate\' : 7.50\n
    , \'base\'          : char_slices[\'B\']\n
    }\n
  if char_slices.has_key(\'C\'):\n
    # free repartition (20% to share between employee & employer)\n
    default[\'agirc/tranche_c\'] = \\\n
    { \'employer_rate\' : 10.00\n
    , \'employee_rate\' : 10.00\n
    , \'base\'          : char_slices[\'C\']\n
    }\n
\n
# CET\n
if executive == True:\n
  if char_slices.has_key(\'A\'):\n
    default[\'cet/tranche_a\'] = \\\n
    { \'employer_rate\' : 0.22\n
    , \'employee_rate\' : 0.13\n
    , \'base\'          : char_slices[\'A\']\n
    }\n
  if char_slices.has_key(\'B\'):\n
    default[\'cet/tranche_b\'] = \\\n
    { \'employer_rate\' : 0.22\n
    , \'employee_rate\' : 0.13\n
    , \'base\'          : char_slices[\'B\']\n
    }\n
  if char_slices.has_key(\'C\'):\n
    default[\'cet/tranche_c\'] = \\\n
    { \'employer_rate\' : 0.22\n
    , \'employee_rate\' : 0.13\n
    , \'base\'          : char_slices[\'C\']\n
    }\n
\n
# life insurance\n
if executive == True and char_slices.has_key(\'A\'):\n
  default[\'life_insurance/tranche_a\'] = \\\n
  { \'employer_rate\' : 1.5\n
  , \'employee_rate\' : None\n
  , \'base\'          : char_slices[\'A\']\n
  }\n
\n
# APEC\n
if char_slices.has_key(\'B\'):\n
  default[\'apec/tranche_b\'] = \\\n
  { \'employer_rate\' : 0.036\n
  , \'employee_rate\' : 0.024\n
  , \'base\'          : char_slices[\'B\']\n
  }\n
\n
# construction tax\n
if company_size > 9:\n
  default[\'construction_tax/salaire_brut\'] = \\\n
  { \'employer_rate\' : 0.45\n
  , \'employee_rate\' : None\n
  , \'base\'          : gross_salary\n
  }\n
\n
# training tax\n
default[\'training_tax/salaire_brut\'] = \\\n
{ \'employer_rate\' : 0.50\n
, \'employee_rate\' : None\n
, \'base\'          : gross_salary\n
}\n
\n
# courses tax\n
if company_size < 10:\n
  rate = 0.15\n
else:\n
  rate = 1.5\n
default[\'courses_tax/salaire_brut\'] = \\\n
{ \'employer_rate\' : rate\n
, \'employee_rate\' : None\n
, \'base\'          : gross_salary\n
}\n
\n
# Syntec convention\n
if \'syntec\' in employee_object.getCareerCollectiveAgreementTitle().lower():\n
  # set the syntec rate according to the employee marital status\n
  syntec_rate = 0.915\n
  if employee_object.getMaritalStatusId() == \'married\':\n
    syntec_rate *= 2\n
  default[\'syntec_insurance/salaire_plafonne_syntec\'] = \\\n
  { \'employer_rate\' : syntec_rate\n
  , \'employee_rate\' : syntec_rate\n
  , \'base\'          : ceiling_salary\n
  }\n
\n
return default\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value> <string encoding="base64">YwAAAAAAAAAABAAAAEAAAABzFgAAAGUAAGUAAGUAAGQBAIQDAFoBAGQAAFMoAgAAAE5jAwAAADsA
AAB6AAAAQwAAAHMnDwAAZAEAfQMAZAIAfQQAdAIAdAMAZAMAgwIAgwAAYQQAdAIAdAQAZAQAgwIA
gwAAfQgAdAIAdAQAZAUAgwIAgwAAfQkAdAIAdAQAZAYAgwIAgwAAfQoAdAIAdAQAZAcAgwIAgwAA
fQsAdAIAdAQAZAgAgwIAgwAAfQwAdAoAdAIAdAQAZAkAgwIAgwAAgwEAfQ4AaAAABGQKAGQLAAM8
BGQMAGQNAAM8BGQOAGQPAAM8fQ8AdAIAdAIAdAQAZBAAgwIAgwAAZBEAgwIAgwAAfRAAdAIAfA8A
ZBIAgwIAgwAAfREAfBAAfBEAagcAbxQAAXQPAHwRAGQBAAuDAgB9EABuAQABdA8AfA8AfBAAgwIA
fRMAfA4AfBMAagAAbwoAAXwOAH0UAG4HAAF8EwB9FAB0DwB0DwB0AgB0AgB8CgBkEwCDAgCDAABk
FACDAgBkFQCDAQBkAQALZAAAhQIAgwIAZAIAgwIAZBYAagYAbwoAAXwDAH0VAG4HAAF8BAB9FQB0
AgB8DABkFwCDAgCDAAB9FgB0DwB0AgB0AgB8DABkGACDAgCDAABkGQCDAgCDAABkAABkGgCFAgCD
AgB9FwBkGwB9GAB8EwB9GQB8EwBkHAAUfRoAfBMAZB0AFH0bAGgAAH0cAHwOAHwZAGoAAG8UAAF8
DgB0GgB8HACDAQBkHgA8bpMAAXwZAHQaAHwcAIMBAGQeADx8DgB8GgBqAABvJAABdBsAfA4AgwEA
dBsAfBkAgwEAGHQaAHwcAIMBAGQfADxuUgABfBoAdBoAfBwAgwEAZB8APHwOAHwbAGoAAG8kAAF0
GwB8DgCDAQB0GwB8GgCDAQAYdBoAfBwAgwEAZCAAPG4RAAF8GwB0GgB8HACDAQBkIAA8fBMAfR8A
fBMAZBsAFH0gAGgAAH0hAHwOAHwfAGoAAG8UAAF8DgB0GgB8HACDAQBkIQA8bkYAAXwfAHQaAHwc
AIMBAGQhADx8DgB8IABqAABvGAABfA4AfB8AGHQaAHwcAIMBAGQiADxuEQABfCAAdBoAfBwAgwEA
ZCIAPHQfAGQjAGQBAGQBAIMDAH0jAHwWAHwjAGoAAG8KAAFkJAB9JABuBwABZCUAfSQAaAAAfSUA
ZwAAfSYAdAIAdAIAdAMAZCYAgwIAZCcAgwIAgwAAfScAdCUAfCcAZCgAgwIAbxMAAXQCAHwnAGQo
AIMCAH0pAG4QAAF0AgB8JwBkKQCDAgB9KQB4YwB0JwB0AgB8KQBkKgCDAgCDAACDAQBEXUkAfSsA
dAIAfCsAZCsAgwIAgwAAfSwAZCwAfCwAagYAbwoAAWQtAHwsAGoGAG8XAAF0AgB8JgBkLgCDAgB8
KwCDAQABcbQDAXG0A1d4PQF0JwB8JgCDAQBEXS8BfS0AdAIAfC0AZC8AgwIAgwAAfS4AZwAAfS8A
ZwAAfTAAeIgAdCcAfC4AgwEARF16AH0xAHQCAHQvAHwxAIMBAGQwAIMCAGQsAIMBAGQBAAtqAwBv
FwABdAIAfC8AZC4AgwIAfDEAgwEAAW4BAAF0AgB0LwB8MQCDAQBkMACDAgBkLQCDAQBkAQALagMA
bxcAAXQCAHwwAGQuAIMCAHwxAIMBAAFxPwQBcT8EV3h9AHQnAHwwAIMBAERdbwB9MwB0AgB8LQBk
MQCDAgCDAABkFQAXdAIAdAIAdAIAdAMAZDIAgwIAZDMAgwIAfDMAgwEAZDEAgwIAgwAAF300AGgA
AARkNAB0MgADPARkNQB0MgADPARkNgB0MgADPHQaAHwlAIMBAHw0ADxxygRXcQ4EV3wXAGQ3AGQ4
AGQ5AGYDAGoGAG8KAAFkOgB9NgBuBwABZDsAfTYAaAAABGQ0AGQ8AAM8BGQ1AHw2AAM8BGQ2AHwO
AAM8dBoAfCUAgwEAZD0APGgAAARkNABkPgADPARkNQB0MgADPARkNgB8DgADPHQaAHwlAIMBAGQ/
ADxoAAAEZDQAZEAAAzwEZDUAZEEAAzwEZDYAfBQAAzx0GgB8JQCDAQBkQgA8aAAABGQ0AHQyAAM8
BGQ1AGRDAAM8BGQ2AHwOAAM8dBoAfCUAgwEAZEQAPGgAAARkNABkRQADPARkNQB0MgADPARkNgB8
DgADPHQaAHwlAIMBAGRGADx8AQBkRwBkAgB0MgBmAwBqBgBvCgABZEgAfQEAbgEAAWgAAARkNAB8
AQADPARkNQB0MgADPARkNgB8DgADPHQaAHwlAIMBAGRJADx8GABkSgBqBABvLwABaAAABGQ0AGRL
AAM8BGQ1AHQyAAM8BGQ2AHwOAAM8dBoAfCUAgwEAZEwAPG4sAAFoAAAEZDQAZEMAAzwEZDUAdDIA
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
by8AAWgAAARkNABkWwADPARkNQB0MgADPARkNgB8DgADPHQaAHwlAIMBAGR+ADxuAQABaAAABGQ0
AGRVAAM8BGQ1AHQyAAM8BGQ2AHwOAAM8dBoAfCUAgwEAZH8APHwYAGSAAGoAAG8KAAFkgQB9OQBu
BwABZHkAfTkAaAAABGQ0AHw5AAM8BGQ1AHQyAAM8BGQ2AHwOAAM8dBoAfCUAgwEAZIIAPGSDAHQC
AHQCAHwKAGSEAIMCAIMAAGSFAIMCAIMAAGoGAG9cAAFkhgB9OgB0AgB8CgBkhwCDAgCDAABkiABq
AgBvDgABfDoAZBoAOX06AG4BAAFoAAAEZDQAfDoAAzwEZDUAfDoAAzwEZDYAfBMAAzx0GgB8JQCD
AQBkiQA8bgEAAXwlAFNkAABTKIoAAABOaQEAAABpAAAAAHMJAAAAZ2V0T2JqZWN0cw0AAABnZXRQ
b3J0YWxUeXBlcxUAAABnZXREZXN0aW5hdGlvblNlY3Rpb25zGgAAAGdldERlc3RpbmF0aW9uU2Vj
dGlvblZhbHVlcxAAAABnZXRTb3VyY2VTZWN0aW9ucxUAAABnZXRTb3VyY2VTZWN0aW9uVmFsdWVz
DgAAAGdldEdyb3NzU2FsYXJ5adMHAABmBjI0MzIuMGnUBwAAZgYyNDc2LjBp1QcAAGYGMjUxNi4w
cwwAAABnZXRTdGFydERhdGVzBAAAAHllYXJzBAAAAGtleXNzDgAAAGdldENhcmVlckdyYWRlcwUA
AABzcGxpdHMBAAAAL3MIAAAAZW5naW5lZXJzDwAAAGdldENyZWF0aW9uRGF0ZXMRAAAAZ2V0RGVm
YXVsdEFkZHJlc3NzCgAAAGdldFppcENvZGVpAgAAAGkDAAAAaQQAAABpCAAAAHMBAAAAQXMBAAAA
QnMBAAAAQ3MBAAAAMXMBAAAAMmnNBwAAcwMAAABvbGRzAwAAAG5ld3MKAAAAcG9ydGFsX3VybHMP
AAAAZ2V0UG9ydGFsT2JqZWN0cw4AAABzZXJ2aWNlX21vZHVsZXMHAAAAc2VydmljZXMMAAAAb2Jq
ZWN0VmFsdWVzcyEAAABnZXRWYXJpYXRpb25SYW5nZUJhc2VDYXRlZ29yeUxpc3RzDAAAAHRheF9j
YXRlZ29yeXMMAAAAc2FsYXJ5X3JhbmdlcwYAAABhcHBlbmRzDwAAAGdldENhdGVnb3J5TGlzdHME
AAAAZmluZHMFAAAAZ2V0SWRzEQAAAHBvcnRhbF9jYXRlZ29yaWVzcw8AAAByZXNvbHZlQ2F0ZWdv
cnlzDQAAAGVtcGxveWVyX3JhdGVzDQAAAGVtcGxveWVlX3JhdGVzBAAAAGJhc2VzAgAAADU3cwIA
AAA2N3MCAAAANjhmAzEuN2YEMC43NWYSMTIuODAwMDAwMDAwMDAwMDAxcx8AAABzaWNrbmVzc19p
bnN1cmFuY2Uvc2FsYWlyZV9icnV0ZhIxLjYwMDAwMDAwMDAwMDAwMDFzHQAAAG9sZGFnZV9pbnN1
cmFuY2Uvc2FsYWlyZV9icnV0ZhI4LjE5OTk5OTk5OTk5OTk5OTNmEjYuNTQ5OTk5OTk5OTk5OTk5
OHMhAAAAb2xkYWdlX2luc3VyYW5jZS9zYWxhaXJlX3BsYWZvbm5lZhMwLjEwMDAwMDAwMDAwMDAw
MDAxcyAAAAB3aWRvd2hvb2RfaW5zdXJhbmNlL3NhbGFpcmVfYnJ1dGYSNS40MDAwMDAwMDAwMDAw
MDA0cxwAAABmYW1pbHlfYmVuZWZpdHMvc2FsYWlyZV9icnV0cwAAAABmAzEuMHMgAAAAaW5kdXN0
cmlhbF9hY2NpZGVudC9zYWxhaXJlX2JydXRpCQAAAGYTMC40MDAwMDAwMDAwMDAwMDAwMnMaAAAA
bG9kZ2luZ19oZWxwcy9zYWxhaXJlX2JydXRzHgAAAGxvZGdpbmdfaGVscHMvc2FsYWlyZV9wbGFm
b25uZWYDMS44cx4AAAB0cmFuc3BvcnRfcGF5bWVudC9zYWxhaXJlX2JydXRmEjUuMDk5OTk5OTk5
OTk5OTk5NmYTMC45NDk5OTk5OTk5OTk5OTk5NnMfAAAAY3NnX2RlZHVjdGlibGUvc2FsYWlyZV9i
cnV0X2NzZ2YSMi4zOTk5OTk5OTk5OTk5OTk5cyMAAABjc2dfbm9uX2RlZHVjdGlibGUvc2FsYWly
ZV9icnV0X2NzZ2YDMC41cxYAAABjcmRzL3NhbGFpcmVfYnJ1dF9jcmRzcwcAAABoYXNfa2V5ZgM0
LjBzIAAAAHVuZW1wbG95bWVudF9pbnN1cmFuY2UvdHJhbmNoZV9hcyAAAAB1bmVtcGxveW1lbnRf
aW5zdXJhbmNlL3RyYW5jaGVfYmYTMC40NTAwMDAwMDAwMDAwMDAwMXMNAAAAYWdzL3RyYW5jaGVf
YXMNAAAAYWdzL3RyYW5jaGVfYmYDNC41ZgMzLjBzDwAAAGFycmNvL3RyYW5jaGVfMWYDNi4wZgM5
LjBmAzguMGYEMTIuMHMPAAAAYXJyY28vdHJhbmNoZV8ycw8AAABhcnJjby90cmFuY2hlX2FmAzEu
MmYTMC44MDAwMDAwMDAwMDAwMDAwNHMOAAAAYWdmZi90cmFuY2hlX2FmAzEuM2YTMC45MDAwMDAw
MDAwMDAwMDAwMnMOAAAAYWdmZi90cmFuY2hlX2JzDgAAAGFnZmYvdHJhbmNoZV8xcw4AAABhZ2Zm
L3RyYW5jaGVfMmYEMTIuNWYDNy41cw8AAABhZ2lyYy90cmFuY2hlX2JmBDEwLjBzDwAAAGFnaXJj
L3RyYW5jaGVfY2YEMC4yMmYEMC4xM3MNAAAAY2V0L3RyYW5jaGVfYXMNAAAAY2V0L3RyYW5jaGVf
YnMNAAAAY2V0L3RyYW5jaGVfY2YDMS41cxgAAABsaWZlX2luc3VyYW5jZS90cmFuY2hlX2FmFDAu
MDM1OTk5OTk5OTk5OTk5OTk3ZgUwLjAyNHMOAAAAYXBlYy90cmFuY2hlX2JzHQAAAGNvbnN0cnVj
dGlvbl90YXgvc2FsYWlyZV9icnV0cxkAAAB0cmFpbmluZ190YXgvc2FsYWlyZV9icnV0aQoAAABm
EzAuMTQ5OTk5OTk5OTk5OTk5OTlzGAAAAGNvdXJzZXNfdGF4L3NhbGFpcmVfYnJ1dHMGAAAAc3lu
dGVjcyEAAABnZXRDYXJlZXJDb2xsZWN0aXZlQWdyZWVtZW50VGl0bGVzBQAAAGxvd2VyZhMwLjkx
NTAwMDAwMDAwMDAwMDA0cxIAAABnZXRNYXJpdGFsU3RhdHVzSWRzBwAAAG1hcnJpZWRzKAAAAHN5
bnRlY19pbnN1cmFuY2Uvc2FsYWlyZV9wbGFmb25uZV9zeW50ZWMoOwAAAHMEAAAAVHJ1ZXMFAAAA
RmFsc2VzCQAAAF9nZXRhdHRyX3MHAAAAY29udGV4dHMIAAAAcGF5c2hlZXRzDQAAAHBheXNoZWV0
X3R5cGVzCAAAAGVtcGxveWVlcw8AAABlbXBsb3llZV9vYmplY3RzCAAAAGVtcGxveWVycw8AAABl
bXBsb3llcl9vYmplY3RzAwAAAGFic3MMAAAAZ3Jvc3Nfc2FsYXJ5cxMAAABjZWlsaW5nX3NhbGFy
eV9saXN0cw0AAABwYXlzaGVldF95ZWFycx4AAABjZWlsaW5nX3NhbGFyeV9hdmFpbGFibGVfeWVh
cnNzCQAAAF9nZXRpdGVtX3MOAAAAY2VpbGluZ19zYWxhcnlzDgAAAGxpbWl0ZWRfc2FsYXJ5cwkA
AABleGVjdXRpdmVzDQAAAGNvbXBhbnlfYmlydGhzDwAAAGVtcGxveWVyX3JlZ2lvbnMMAAAAY29t
cGFueV9zaXplcw0AAABzbGljZV9hX3ZhbHVlcw0AAABzbGljZV9iX3ZhbHVlcw0AAABzbGljZV9j
X3ZhbHVlcwsAAABjaGFyX3NsaWNlc3MHAAAAX3dyaXRlX3MFAAAAZmxvYXRzDQAAAHNsaWNlXzFf
dmFsdWVzDQAAAHNsaWNlXzJfdmFsdWVzCgAAAG51bV9zbGljZXNzCAAAAERhdGVUaW1lcwkAAABv
bGRfbGltaXRzCQAAAGNvbXBfdHlwZXMHAAAAZGVmYXVsdHMRAAAAcGF5c2hlZXRfc2VydmljZXNz
CAAAAGVycDVzaXRlcwcAAABoYXNhdHRycw4AAABzZXJ2aWNlX21vZHVsZXMJAAAAX2dldGl0ZXJf
cwcAAABzZXJ2aWNlcwgAAABiYXNlX2NhdHMEAAAAc2VydnMIAAAAY2F0X2xpc3RzBwAAAHRheF9j
YXRzCQAAAHJhbmdlX2NhdHMDAAAAY2F0cwMAAABzdHJzBAAAAGJhc2VzCAAAAG5ld19uYW1lcwQA
AABOb25lcwIAAABlcnMYAAAAaW5kdXN0cmlhbF9hY2NpZGVudF9yYXRlcxYAAAB0cmFuc3BvcnRf
cGF5bWVudF9yYXRlcwgAAABhZ3NfcmF0ZXMTAAAAZW1wbG95ZWVfc2hhcmVfcmF0ZXMTAAAAZW1w
bG95ZXJfc2hhcmVfcmF0ZXMEAAAAcmF0ZXMLAAAAc3ludGVjX3JhdGUoOwAAAHMIAAAAYWdzX3Jh
dGVzGAAAAGluZHVzdHJpYWxfYWNjaWRlbnRfcmF0ZXMWAAAAdHJhbnNwb3J0X3BheW1lbnRfcmF0
ZXMEAAAAVHJ1ZXMFAAAARmFsc2VzCQAAAF9nZXRhdHRyX3MHAAAAY29udGV4dHMIAAAAcGF5c2hl
ZXRzDQAAAHBheXNoZWV0X3R5cGVzCAAAAGVtcGxveWVlcw8AAABlbXBsb3llZV9vYmplY3RzCAAA
AGVtcGxveWVycw8AAABlbXBsb3llcl9vYmplY3RzAwAAAGFic3MMAAAAZ3Jvc3Nfc2FsYXJ5cxMA
AABjZWlsaW5nX3NhbGFyeV9saXN0cw0AAABwYXlzaGVldF95ZWFycx4AAABjZWlsaW5nX3NhbGFy
eV9hdmFpbGFibGVfeWVhcnNzCQAAAF9nZXRpdGVtX3MOAAAAY2VpbGluZ19zYWxhcnlzDgAAAGxp
bWl0ZWRfc2FsYXJ5cwkAAABleGVjdXRpdmVzDQAAAGNvbXBhbnlfYmlydGhzDwAAAGVtcGxveWVy
X3JlZ2lvbnMMAAAAY29tcGFueV9zaXplcw0AAABzbGljZV9hX3ZhbHVlcw0AAABzbGljZV9iX3Zh
bHVlcw0AAABzbGljZV9jX3ZhbHVlcwsAAABjaGFyX3NsaWNlc3MHAAAAX3dyaXRlX3MFAAAAZmxv
YXRzDQAAAHNsaWNlXzFfdmFsdWVzDQAAAHNsaWNlXzJfdmFsdWVzCgAAAG51bV9zbGljZXNzCAAA
AERhdGVUaW1lcwkAAABvbGRfbGltaXRzCQAAAGNvbXBfdHlwZXMHAAAAZGVmYXVsdHMRAAAAcGF5
c2hlZXRfc2VydmljZXNzCAAAAGVycDVzaXRlcwcAAABoYXNhdHRycw4AAABzZXJ2aWNlX21vZHVs
ZXMJAAAAX2dldGl0ZXJfcwcAAABzZXJ2aWNlcwgAAABiYXNlX2NhdHMEAAAAc2VydnMIAAAAY2F0
X2xpc3RzBwAAAHRheF9jYXRzCQAAAHJhbmdlX2NhdHMDAAAAY2F0cwMAAABzdHJzBAAAAGJhc2Vz
CAAAAG5ld19uYW1lcwQAAABOb25lcwIAAABlcnMTAAAAZW1wbG95ZWVfc2hhcmVfcmF0ZXMTAAAA
ZW1wbG95ZXJfc2hhcmVfcmF0ZXMEAAAAcmF0ZXMLAAAAc3ludGVjX3JhdGUoAAAAACgAAAAAcw8A
AABTY3JpcHQgKFB5dGhvbilzIgAAAFBheVNoZWV0VHJhbnNhY3Rpb25fcHJlQ2FsY3VsYXRpb24B
AAAAc94BAAAGAQYDEgESAhIBEgESARIDGAMhBR4BEgENARQBDwMNAQoCBgNBAQoCBgISAi0OBgQG
AQoBCgEGAQ0BFAIQAQ0BJAIQAQ0BJAIQAwYBCgEGAQ0BFAIQAQ0BGAIQAxIBDQEKAgYHBgIGARsD
EAETAg8BGQAGARUBGgEYAQ0ABgESAQYBBgENAAYBJgEUASYBGAENAAYBPgEzAxYBCgIGAQABEAEJ
ARIEAAEQAQkBEgIAARkCEgQAARkCEgQAARABCQESBRYBCgEAARABCQESBA0BAAEQAQkBFgMAARAB
CQESBRYBCgENAQABEAEJARYEAAEcAhMCAAEcAhMEAAEcAhYEEwEAARwCHwITAQABHAIcBRYBDQET
AQABEAEMAR8CEwEAARABDAEcBBABEwEAARwCHwITAQ0BBgEKAgYBBgIAARABDAEjAhMBAAEcAhwE
EAETAQABHAIfAhMBAAEcAiMDEwEAARwCHwITAQABHAIcBRABEwEAARwCHwITAgABHAIgBBABEwEA
ARwCHwITAQABHAIfAhMBAAEcAiAEIwEAARABDAEfBBMBAAEcAhwEDQEAARABCQEWBAABEAEJARIE
DQEKAgYBAAEQAQkBEgQlAgYBGQEOAQABEAEJARYDKAIAAABzBAAAAE5vbmVzIgAAAFBheVNoZWV0
VHJhbnNhY3Rpb25fcHJlQ2FsY3VsYXRpb24oAgAAAHMEAAAATm9uZXMiAAAAUGF5U2hlZXRUcmFu
c2FjdGlvbl9wcmVDYWxjdWxhdGlvbigAAAAAKAAAAABzDwAAAFNjcmlwdCAoUHl0aG9uKXMIAAAA
PG1vZHVsZT4BAAAAcwAAAAA=</string> </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/nexedi/portal_skins/erp5_payroll/PaySheetTransaction_preCalculation</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>ags_rate=None, industrial_accident_rate=None, transport_payment_rate=None</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>3</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>ags_rate</string>
                            <string>industrial_accident_rate</string>
                            <string>transport_payment_rate</string>
                            <string>True</string>
                            <string>False</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>paysheet</string>
                            <string>paysheet_type</string>
                            <string>employee</string>
                            <string>employee_object</string>
                            <string>employer</string>
                            <string>employer_object</string>
                            <string>abs</string>
                            <string>gross_salary</string>
                            <string>ceiling_salary_list</string>
                            <string>paysheet_year</string>
                            <string>ceiling_salary_available_years</string>
                            <string>_getitem_</string>
                            <string>ceiling_salary</string>
                            <string>limited_salary</string>
                            <string>executive</string>
                            <string>company_birth</string>
                            <string>employer_region</string>
                            <string>company_size</string>
                            <string>slice_a_value</string>
                            <string>slice_b_value</string>
                            <string>slice_c_value</string>
                            <string>char_slices</string>
                            <string>_write_</string>
                            <string>float</string>
                            <string>slice_1_value</string>
                            <string>slice_2_value</string>
                            <string>num_slices</string>
                            <string>DateTime</string>
                            <string>old_limit</string>
                            <string>comp_type</string>
                            <string>default</string>
                            <string>paysheet_services</string>
                            <string>erp5site</string>
                            <string>hasattr</string>
                            <string>service_module</string>
                            <string>_getiter_</string>
                            <string>service</string>
                            <string>base_cat</string>
                            <string>serv</string>
                            <string>cat_list</string>
                            <string>tax_cat</string>
                            <string>range_cat</string>
                            <string>cat</string>
                            <string>str</string>
                            <string>base</string>
                            <string>new_name</string>
                            <string>None</string>
                            <string>er</string>
                            <string>employee_share_rate</string>
                            <string>employer_share_rate</string>
                            <string>rate</string>
                            <string>syntec_rate</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <none/>
                <none/>
                <none/>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>PaySheetTransaction_preCalculation</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
