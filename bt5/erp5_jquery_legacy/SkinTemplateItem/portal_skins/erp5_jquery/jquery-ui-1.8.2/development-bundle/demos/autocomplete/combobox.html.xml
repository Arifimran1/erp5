<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<!DOCTYPE html>\n
<html lang="en">\n
<head>\n
\t<meta charset="UTF-8" />\n
\t<title>jQuery UI Autocomplete Combobox Demo</title>\n
\t<link type="text/css" href="../../themes/base/jquery.ui.all.css" rel="stylesheet" />\n
\t<script type="text/javascript" src="../../jquery-1.4.2.js"></script>\n
\t<script type="text/javascript" src="../../ui/jquery.ui.core.js"></script>\n
\t<script type="text/javascript" src="../../ui/jquery.ui.widget.js"></script>\n
\t<script type="text/javascript" src="../../ui/jquery.ui.button.js"></script>\n
\t<script type="text/javascript" src="../../ui/jquery.ui.position.js"></script>\n
\t<script type="text/javascript" src="../../ui/jquery.ui.autocomplete.js"></script>\n
\t<link type="text/css" href="../demos.css" rel="stylesheet" />\n
\t<style type="text/css">\n
\t\t/* TODO shouldn\'t be necessary */\n
\t\t.ui-button { margin-left: -1px; }\n
\t\t.ui-button-icon-only .ui-button-text { padding: 0.35em; } \n
\t\t.ui-autocomplete-input { margin: 0; padding: 0.48em 0 0.47em 0.45em; }\n
\t</style>\n
\t<script type="text/javascript">\n
\t(function($) {\n
\t\t$.widget("ui.combobox", {\n
\t\t\t_create: function() {\n
\t\t\t\tvar self = this;\n
\t\t\t\tvar select = this.element.hide();\n
\t\t\t\tvar input = $("<input>")\n
\t\t\t\t\t.insertAfter(select)\n
\t\t\t\t\t.autocomplete({\n
\t\t\t\t\t\tsource: function(request, response) {\n
\t\t\t\t\t\t\tvar matcher = new RegExp(request.term, "i");\n
\t\t\t\t\t\t\tresponse(select.children("option").map(function() {\n
\t\t\t\t\t\t\t\tvar text = $(this).text();\n
\t\t\t\t\t\t\t\tif (this.value && (!request.term || matcher.test(text)))\n
\t\t\t\t\t\t\t\t\treturn {\n
\t\t\t\t\t\t\t\t\t\tid: this.value,\n
\t\t\t\t\t\t\t\t\t\tlabel: text.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + $.ui.autocomplete.escapeRegex(request.term) + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>"),\n
\t\t\t\t\t\t\t\t\t\tvalue: text\n
\t\t\t\t\t\t\t\t\t};\n
\t\t\t\t\t\t\t}));\n
\t\t\t\t\t\t},\n
\t\t\t\t\t\tdelay: 0,\n
\t\t\t\t\t\tchange: function(event, ui) {\n
\t\t\t\t\t\t\tif (!ui.item) {\n
\t\t\t\t\t\t\t\t// remove invalid value, as it didn\'t match anything\n
\t\t\t\t\t\t\t\t$(this).val("");\n
\t\t\t\t\t\t\t\treturn false;\n
\t\t\t\t\t\t\t}\n
\t\t\t\t\t\t\tselect.val(ui.item.id);\n
\t\t\t\t\t\t\tself._trigger("selected", event, {\n
\t\t\t\t\t\t\t\titem: select.find("[value=\'" + ui.item.id + "\']")\n
\t\t\t\t\t\t\t});\n
\t\t\t\t\t\t\t\n
\t\t\t\t\t\t},\n
\t\t\t\t\t\tminLength: 0\n
\t\t\t\t\t})\n
\t\t\t\t\t.addClass("ui-widget ui-widget-content ui-corner-left");\n
\t\t\t\t$("<button>&nbsp;</button>")\n
\t\t\t\t.attr("tabIndex", -1)\n
\t\t\t\t.attr("title", "Show All Items")\n
\t\t\t\t.insertAfter(input)\n
\t\t\t\t.button({\n
\t\t\t\t\ticons: {\n
\t\t\t\t\t\tprimary: "ui-icon-triangle-1-s"\n
\t\t\t\t\t},\n
\t\t\t\t\ttext: false\n
\t\t\t\t}).removeClass("ui-corner-all")\n
\t\t\t\t.addClass("ui-corner-right ui-button-icon")\n
\t\t\t\t.click(function() {\n
\t\t\t\t\t// close if already visible\n
\t\t\t\t\tif (input.autocomplete("widget").is(":visible")) {\n
\t\t\t\t\t\tinput.autocomplete("close");\n
\t\t\t\t\t\treturn;\n
\t\t\t\t\t}\n
\t\t\t\t\t// pass empty string as value to search for, displaying all results\n
\t\t\t\t\tinput.autocomplete("search", "");\n
\t\t\t\t\tinput.focus();\n
\t\t\t\t});\n
\t\t\t}\n
\t\t});\n
\n
\t})(jQuery);\n
\t\t\n
\t$(function() {\n
\t\t$("#combobox").combobox();\n
\t\t$("#toggle").click(function() {\n
\t\t\t$("#combobox").toggle();\n
\t\t});\n
\t});\n
\t</script>\n
</head>\n
<body>\n
\t\n
<div class="demo">\n
\n
<div class="ui-widget">\n
\t<label>Your preferred programming language: </label>\n
\t<select id="combobox">\n
\t\t<option value="">Select one...</option>\n
\t\t<option value="a">asp</option>\n
        <option value="c">c</option>\n
        <option value="cpp">c++</option>\n
        <option value="cf">coldfusion</option>\n
        <option value="g">groovy</option>\n
        <option value="h">haskell</option>\n
        <option value="j">java</option>\n
        <option value="js">javascript</option>\n
        <option value="p1">perl</option>\n
        <option value="p2">php</option>\n
        <option value="p3">python</option>\n
        <option value="r">ruby</option>\n
        <option value="s">scala</option>\n
\t</select>\n
</div>\n
<button id="toggle">Show underlying select</button>\n
\n
</div><!-- End demo -->\n
\n
<div class="demo-description">\n
<p>\n
A custom widget built by composition of Autocomplete and Button. You can either type something into the field to get filtered suggestions based on your input, or use the button to get the full list of selections.\n
</p>\n
<p>\n
The input is read from an existing select-element for progressive enhancement, passed to Autocomplete with a customized source-option.\n
</p>\n
</div><!-- End demo-description -->\n
\n
</body>\n
</html>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>combobox.html</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
