<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<!doctype html>\n
\n
<title>CodeMirror: Vim bindings demo</title>\n
<meta charset="utf-8"/>\n
<link rel=stylesheet href="../doc/docs.css">\n
\n
<link rel="stylesheet" href="../lib/codemirror.css">\n
<link rel="stylesheet" href="../addon/dialog/dialog.css">\n
<script src="../lib/codemirror.js"></script>\n
<script src="../addon/dialog/dialog.js"></script>\n
<script src="../addon/search/searchcursor.js"></script>\n
<script src="../mode/clike/clike.js"></script>\n
<script src="../addon/edit/matchbrackets.js"></script>\n
<script src="../keymap/vim.js"></script>\n
<style type="text/css">\n
      .CodeMirror {border-top: 1px solid #eee; border-bottom: 1px solid #eee;}\n
    </style>\n
<div id=nav>\n
  <a href="http://codemirror.net"><h1>CodeMirror</h1><img id=logo src="../doc/logo.png"></a>\n
\n
  <ul>\n
    <li><a href="../index.html">Home</a>\n
    <li><a href="../doc/manual.html">Manual</a>\n
    <li><a href="https://github.com/codemirror/codemirror">Code</a>\n
  </ul>\n
  <ul>\n
    <li><a class=active href="#">Vim bindings</a>\n
  </ul>\n
</div>\n
\n
<article>\n
<h2>Vim bindings demo</h2>\n
<form><textarea id="code" name="code">\n
#include "syscalls.h"\n
/* getchar:  simple buffered version */\n
int getchar(void)\n
{\n
  static char buf[BUFSIZ];\n
  static char *bufp = buf;\n
  static int n = 0;\n
  if (n == 0) {  /* buffer is empty */\n
    n = read(0, buf, sizeof buf);\n
    bufp = buf;\n
  }\n
  return (--n >= 0) ? (unsigned char) *bufp++ : EOF;\n
}\n
</textarea></form>\n
<div style="font-size: 13px; width: 300px; height: 30px;">Key buffer: <span id="command-display"></span></div>\n
\n
<p>The vim keybindings are enabled by\n
including <a href="../keymap/vim.js">keymap/vim.js</a> and setting\n
the <code>vimMode</code> option to <code>true</code>. This will also\n
automatically change the <code>keyMap</code> option to <code>"vim"</code>.</p>\n
\n
<p><strong>Features</strong></p>\n
\n
<ul>\n
  <li>All common motions and operators, including text objects</li>\n
  <li>Operator motion orthogonality</li>\n
  <li>Visual mode - characterwise, linewise, partial support for blockwise</li>\n
  <li>Full macro support (q, @)</li>\n
  <li>Incremental highlighted search (/, ?, #, *, g#, g*)</li>\n
  <li>Search/replace with confirm (:substitute, :%s)</li>\n
  <li>Search history</li>\n
  <li>Jump lists (Ctrl-o, Ctrl-i)</li>\n
  <li>Key/command mapping with API (:map, :nmap, :vmap)</li>\n
  <li>Sort (:sort)</li>\n
  <li>Marks (`, \')</li>\n
  <li>:global</li>\n
  <li>Insert mode behaves identical to base CodeMirror</li>\n
  <li>Cross-buffer yank/paste</li>\n
</ul>\n
\n
<p>Note that while the vim mode tries to emulate the most useful features of\n
vim as faithfully as possible, it does not strive to become a complete vim\n
implementation</p>\n
\n
    <script>\n
      CodeMirror.commands.save = function(){ alert("Saving"); };\n
      var editor = CodeMirror.fromTextArea(document.getElementById("code"), {\n
        lineNumbers: true,\n
        mode: "text/x-csrc",\n
        keyMap: "vim",\n
        matchBrackets: true,\n
        showCursorWhenSelecting: true\n
      });\n
      var commandDisplay = document.getElementById(\'command-display\');\n
      var keys = \'\';\n
      CodeMirror.on(editor, \'vim-keypress\', function(key) {\n
        keys = keys + key;\n
        commandDisplay.innerHTML = keys;\n
      });\n
      CodeMirror.on(editor, \'vim-command-done\', function(e) {\n
        keys = \'\';\n
        commandDisplay.innerHTML = keys;\n
      });\n
    </script>\n
\n
  </article>

]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>vim.html</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>iso-8859-15</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
