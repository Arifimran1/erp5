<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>from string import zfill\n
\n
##################################################\n
#### About the transformation_rules structure ####\n
# a key indicate that input of that level having the same value must be grouped together\n
# the key has the value of one \'input_data_name\' of the corresponding level\n
# a key is unique and required (in this version)\n
##################################################\n
\n
# some analysis of transformation rules\n
# get all input data names\n
input_data_names = []\n
for level_rule in transformation_rules:\n
  for data_item in level_rule[\'data\']:\n
    input_data_names.append(data_item[\'input_data_name\'])\n
# get a level-ordered list of key\n
data_keys = []\n
for level_rule in transformation_rules:\n
  data_keys.append(level_rule[\'data_key\'])\n
# get a level-ordered list of input/output name pairs\n
io_names = []\n
for level_rule in transformation_rules:\n
  new_io_names_level = []\n
  for data_item in level_rule[\'data\']:\n
    new_io_names_level.append([data_item[\'input_data_name\'], data_item[\'output_property\']])\n
  io_names.append(new_io_names_level)\n
# get a level-ordered list of portal_types\n
level_portal_types = []\n
for level_rule in transformation_rules:\n
  level_portal_types.append(level_rule[\'portal_type\'])\n
\n
# this list contain all fast input lines\n
fast_input_lines = []\n
\n
# get the fast input form datas\n
for inputline in listbox:\n
  if inputline.has_key(\'listbox_key\'):\n
    line = {}\n
    line[\'id\'] = int(inputline[\'listbox_key\'])\n
    for data_name in input_data_names:\n
      line[data_name] = inputline[data_name]\n
    fast_input_lines.append(line)\n
\n
# sort the list by id to have the same order of the user\n
fast_input_lines.sort(lambda x, y: cmp(x[\'id\'], y[\'id\']))\n
\n
structured_input_data = {}\n
has_1st_level = False\n
has_2nd_level = False\n
new_1st_level_sub_items = None\n
\n
# scan every fast input line to create a structured and comprehensive list of items\n
for line in fast_input_lines:\n
  # the line has first level informations\n
  if line[data_keys[0]] not in (\'\', None):\n
    has_1st_level = True\n
    new_1st_level_sub_items = []\n
    new_1st_level_properties = {}\n
    new_1st_level_key = line[data_keys[0]]\n
    for io_name_pair in io_names[0]:\n
      new_1st_level_properties[io_name_pair[1]] = line[io_name_pair[0]]\n
  else:\n
    has_1st_level = False\n
\n
  # the line has second level informations, so built the second level\n
  if line[data_keys[1]] not in (\'\', None):\n
    has_2nd_level = True\n
    new_2nd_level_item = {}\n
    for io_name_pair in io_names[1]:\n
      new_2nd_level_item[io_name_pair[1]] = line[io_name_pair[0]]\n
  else:\n
    has_2nd_level = False\n
\n
  if has_2nd_level == True and new_1st_level_sub_items != None:\n
    new_1st_level_sub_items.append(new_2nd_level_item)\n
\n
  if has_1st_level == True:\n
    if structured_input_data.has_key(new_1st_level_key):\n
      new_1st_level_sub_items = structured_input_data[new_1st_level_key][1] + new_1st_level_sub_items\n
    else:\n
      structured_input_data[new_1st_level_key] = [None, None]\n
      structured_input_data[new_1st_level_key][0] = new_1st_level_properties\n
    structured_input_data[new_1st_level_key][1] = new_1st_level_sub_items\n
\n
# create items objects and sub-objects\n
for upper_level_key in structured_input_data:\n
  first_level = structured_input_data[upper_level_key][0]\n
  new_1st_level_obj = destination.newContent(portal_type = level_portal_types[0])\n
  for property_title in first_level.keys():\n
    new_1st_level_obj.setProperty(property_title, first_level[property_title])\n
  second_level_id = 0\n
  for second_level in structured_input_data[upper_level_key][1]:\n
    second_level_id += 10\n
    new_2nd_level_obj = new_1st_level_obj.newContent( portal_type = level_portal_types[1]\n
                                                    , id          = zfill(second_level_id, 4)\n
                                                    )\n
    for property_title in second_level.keys():\n
      new_2nd_level_obj.setProperty(property_title, second_level[property_title])\n
\n
# return to the module\n
return context.REQUEST.RESPONSE.redirect(destination.absolute_url() + \'?portal_status_message=\' + level_portal_types[0].replace(\' \', \'+\') + \'(s)+added.\')\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value> <string encoding="base64">YwAAAAAAAAAABAAAAEAAAABzFgAAAGcAAGcAAGUAAGQBAIQDAFoBAGQAAFMoAgAAAE5jAwAAACkA
AAAmAAAASwAAAHPABQAAZAEAawAAbAEAfQUAAWcAAH0GAHhQAHQDAHwAAIMBAERdQgB9CAB4OQB0
AwB0BgB8CABkAgCDAgCDAQBEXSIAfQoAdAgAfAYAZAMAgwIAdAYAfAoAZAQAgwIAgwEAAXE8AFdx
IABXZwAAfQwAeDAAdAMAfAAAgwEARF0iAH0IAHQIAHwMAGQDAIMCAHQGAHwIAGQFAIMCAIMBAAFx
eQBXZwAAfQ0AeHgAdAMAfAAAgwEARF1qAH0IAGcAAH0OAHhIAHQDAHQGAHwIAGQCAIMCAIMBAERd
MQB9CgB0CAB8DgBkAwCDAgB0BgB8CgBkBACDAgB0BgB8CgBkBgCDAgBnAgCDAQABcdQAV3QIAHwN
AGQDAIMCAHwOAIMBAAFxsgBXZwAAfQ8AeDAAdAMAfAAAgwEARF0iAH0IAHQIAHwPAGQDAIMCAHQG
AHwIAGQHAIMCAIMBAAFxMwFXZwAAfRAAeJYAdAMAfAEAgwEARF2IAH0RAHQIAHwRAGQIAIMCAGQJ
AIMBAG9sAAFoAAB9EgB0EQB0BgB8EQBkCQCDAgCDAQB0EgB8EgCDAQBkCgA8eC0AdAMAfAYAgwEA
RF0fAH0VAHQGAHwRAHwVAIMCAHQSAHwSAIMBAHwVADxxugFXdAgAfBAAZAMAgwIAfBIAgwEAAXFs
AQFxbAFXdAgAfBAAZAsAgwIAZAwAhAAAgwEAAWgAAH0WAHQVAH0YAHQVAH0ZAHQYAH0bAHj+AXQD
AHwQAIMBAERd8AF9EgB0BgB8EgB0BgB8DABkDQCDAgCDAgBkDgB0GABmAgBqBwBveQABdBoAfRgA
ZwAAfRsAaAAAfR0AdAYAfBIAdAYAfAwAZA0AgwIAgwIAfR4AeFIAdAMAdAYAfA0AZA0AgwIAgwEA
RF0xAH0fAHQGAHwSAHQGAHwfAGQNAIMCAIMCAHQSAHwdAIMBAHQGAHwfAGQPAIMCADxxngJXbgcA
AXQVAH0YAHQGAHwSAHQGAHwMAGQPAIMCAIMCAGQOAHQYAGYCAGoHAG9bAAF0GgB9GQBoAAB9IAB4
UgB0AwB0BgB8DQBkDwCDAgCDAQBEXTEAfR8AdAYAfBIAdAYAfB8AZA0AgwIAgwIAdBIAfCAAgwEA
dAYAfB8AZA8AgwIAPHEkA1duBwABdBUAfRkAfBkAdBoAagIAbwoAAXwbAHQYAGoDAG8XAAF0CAB8
GwBkAwCDAgB8IACDAQABbgEAAXwYAHQaAGoCAG+CAAF0CAB8FgBkCACDAgB8HgCDAQBvIAABdAYA
dAYAfBYAfB4AgwIAZA8AgwIAfBsAF30bAG4wAAF0GAB0GABnAgB0EgB8FgCDAQB8HgA8fB0AdBIA
dAYAfBYAfB4AgwIAgwEAZA0APHwbAHQSAHQGAHwWAHweAIMCAIMBAGQPADxxMwIBcTMCV3g6AXQD
AHwWAIMBAERdLAF9IQB0BgB0BgB8FgB8IQCDAgBkDQCDAgB9IgB0CAB8AgBkEACDAgBkBwB0BgB8
DwBkDQCDAgCDAAF9IwB4PwB0AwB0CAB8IgBkEQCDAgCDAACDAQBEXSUAfSQAdAgAfCMAZBIAgwIA
fCQAdAYAfCIAfCQAgwIAgwIAAXGMBFdkDQB9JQB4ogB0AwB0BgB0BgB8FgB8IQCDAgBkDwCDAgCD
AQBEXYIAfSYAfCUAZBMAN30lAHQIAHwjAGQQAIMCAGQHAHQGAHwPAGQPAIMCAGQKAHwFAHwlAGQU
AIMCAIMAAn0nAHg/AHQDAHQIAHwmAGQRAIMCAIMAAIMBAERdJQB9JAB0CAB8JwBkEgCDAgB8JAB0
BgB8JgB8JACDAgCDAgABcTMFV3HaBFdxNARXdAgAdAgAdAgAdCcAZBUAgwIAZBYAgwIAZBcAgwIA
dAgAfAIAZBgAgwIAgwAAZBkAF3QIAHQGAHwPAGQNAIMCAGQaAIMCAGQbAGQcAIMCABdkHQAXgwEA
U2QAAFMoHgAAAE4oAQAAAHMFAAAAemZpbGxzBAAAAGRhdGFzBgAAAGFwcGVuZHMPAAAAaW5wdXRf
ZGF0YV9uYW1lcwgAAABkYXRhX2tleXMPAAAAb3V0cHV0X3Byb3BlcnR5cwsAAABwb3J0YWxfdHlw
ZXMHAAAAaGFzX2tleXMLAAAAbGlzdGJveF9rZXlzAgAAAGlkcwQAAABzb3J0YwIAAAAEAAAABQAA
AEMAAABzHwAAAHQAAHQBAHwAAGQBAIMCAHQBAHwBAGQBAIMCAIMCAFMoAgAAAE5zAgAAAGlkKAQA
AABzAwAAAGNtcHMJAAAAX2dldGl0ZW1fcwEAAAB4cwEAAAB5KAQAAABzAQAAAHhzAQAAAHlzAwAA
AGNtcHMJAAAAX2dldGl0ZW1fKAAAAAAoAAAAAHMPAAAAU2NyaXB0IChQeXRob24pcwsAAAA8bGFt
YmRhLjEzPi0AAABzAAAAAGkAAAAAcwAAAABpAQAAAHMKAAAAbmV3Q29udGVudHMEAAAAa2V5c3ML
AAAAc2V0UHJvcGVydHlpCgAAAGkEAAAAcwcAAABSRVFVRVNUcwgAAABSRVNQT05TRXMIAAAAcmVk
aXJlY3RzDAAAAGFic29sdXRlX3VybHMXAAAAP3BvcnRhbF9zdGF0dXNfbWVzc2FnZT1zBwAAAHJl
cGxhY2VzAQAAACBzAQAAACtzCgAAAChzKSthZGRlZC4oKAAAAHMGAAAAc3RyaW5ncwUAAAB6Zmls
bHMQAAAAaW5wdXRfZGF0YV9uYW1lc3MJAAAAX2dldGl0ZXJfcxQAAAB0cmFuc2Zvcm1hdGlvbl9y
dWxlc3MKAAAAbGV2ZWxfcnVsZXMJAAAAX2dldGl0ZW1fcwkAAABkYXRhX2l0ZW1zCQAAAF9nZXRh
dHRyX3MJAAAAZGF0YV9rZXlzcwgAAABpb19uYW1lc3MSAAAAbmV3X2lvX25hbWVzX2xldmVscxIA
AABsZXZlbF9wb3J0YWxfdHlwZXNzEAAAAGZhc3RfaW5wdXRfbGluZXNzBwAAAGxpc3Rib3hzCQAA
AGlucHV0bGluZXMEAAAAbGluZXMDAAAAaW50cwcAAABfd3JpdGVfcwkAAABkYXRhX25hbWVzFQAA
AHN0cnVjdHVyZWRfaW5wdXRfZGF0YXMFAAAARmFsc2VzDQAAAGhhc18xc3RfbGV2ZWxzDQAAAGhh
c18ybmRfbGV2ZWxzBAAAAE5vbmVzFwAAAG5ld18xc3RfbGV2ZWxfc3ViX2l0ZW1zcwQAAABUcnVl
cxgAAABuZXdfMXN0X2xldmVsX3Byb3BlcnRpZXNzEQAAAG5ld18xc3RfbGV2ZWxfa2V5cwwAAABp
b19uYW1lX3BhaXJzEgAAAG5ld18ybmRfbGV2ZWxfaXRlbXMPAAAAdXBwZXJfbGV2ZWxfa2V5cwsA
AABmaXJzdF9sZXZlbHMLAAAAZGVzdGluYXRpb25zEQAAAG5ld18xc3RfbGV2ZWxfb2Jqcw4AAABw
cm9wZXJ0eV90aXRsZXMPAAAAc2Vjb25kX2xldmVsX2lkcwwAAABzZWNvbmRfbGV2ZWxzEQAAAG5l
d18ybmRfbGV2ZWxfb2JqcwcAAABjb250ZXh0KCkAAABzFAAAAHRyYW5zZm9ybWF0aW9uX3J1bGVz
cwcAAABsaXN0Ym94cwsAAABkZXN0aW5hdGlvbnMCAAAAa3dzBgAAAHN0cmluZ3MFAAAAemZpbGxz
EAAAAGlucHV0X2RhdGFfbmFtZXNzCQAAAF9nZXRpdGVyX3MKAAAAbGV2ZWxfcnVsZXMJAAAAX2dl
dGl0ZW1fcwkAAABkYXRhX2l0ZW1zCQAAAF9nZXRhdHRyX3MJAAAAZGF0YV9rZXlzcwgAAABpb19u
YW1lc3MSAAAAbmV3X2lvX25hbWVzX2xldmVscxIAAABsZXZlbF9wb3J0YWxfdHlwZXNzEAAAAGZh
c3RfaW5wdXRfbGluZXNzCQAAAGlucHV0bGluZXMEAAAAbGluZXMDAAAAaW50cwcAAABfd3JpdGVf
cwkAAABkYXRhX25hbWVzFQAAAHN0cnVjdHVyZWRfaW5wdXRfZGF0YXMFAAAARmFsc2VzDQAAAGhh
c18xc3RfbGV2ZWxzDQAAAGhhc18ybmRfbGV2ZWxzBAAAAE5vbmVzFwAAAG5ld18xc3RfbGV2ZWxf
c3ViX2l0ZW1zcwQAAABUcnVlcxgAAABuZXdfMXN0X2xldmVsX3Byb3BlcnRpZXNzEQAAAG5ld18x
c3RfbGV2ZWxfa2V5cwwAAABpb19uYW1lX3BhaXJzEgAAAG5ld18ybmRfbGV2ZWxfaXRlbXMPAAAA
dXBwZXJfbGV2ZWxfa2V5cwsAAABmaXJzdF9sZXZlbHMRAAAAbmV3XzFzdF9sZXZlbF9vYmpzDgAA
AHByb3BlcnR5X3RpdGxlcw8AAABzZWNvbmRfbGV2ZWxfaWRzDAAAAHNlY29uZF9sZXZlbHMRAAAA
bmV3XzJuZF9sZXZlbF9vYmpzBwAAAGNvbnRleHQoAAAAACgAAAAAcw8AAABTY3JpcHQgKFB5dGhv
bilzKQAAAEZhc3RJbnB1dF9nZW5lcmF0ZVR3b0xldmVsT2JqZWN0U3RydWN0dXJlAQAAAHOgAAAA
DQsGAQ0ABgEWAAkBIQIGAQ0ACQEdAgYBDQAGAQYBFgAJAS8BFAIGAQ0ACQEdAwYDDQAJARMBBgEf
AQ0ABgEgARsDEwIGAQYBBgEGAw0ABgIlAQYBBgEGARgBFgAGATMCBgMlAQYBBgEWAAYBMwIGAh0B
FAIQARMBIAIWARkBIQMNAAYBGAEhARkACQEgAQYBHwAGAQoBHgESAhkACQEoAygCAAAAcwQAAABO
b25lcykAAABGYXN0SW5wdXRfZ2VuZXJhdGVUd29MZXZlbE9iamVjdFN0cnVjdHVyZSgCAAAAcwQA
AABOb25lcykAAABGYXN0SW5wdXRfZ2VuZXJhdGVUd29MZXZlbE9iamVjdFN0cnVjdHVyZSgAAAAA
KAAAAABzDwAAAFNjcmlwdCAoUHl0aG9uKXMIAAAAPG1vZHVsZT4BAAAAcwAAAAA=</string> </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/nexedi/portal_skins/erp5_consulting/FastInput_generateTwoLevelObjectStructure</string> </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>transformation_rules=[], listbox=[], destination=None, **kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>3</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>transformation_rules</string>
                            <string>listbox</string>
                            <string>destination</string>
                            <string>kw</string>
                            <string>string</string>
                            <string>zfill</string>
                            <string>input_data_names</string>
                            <string>_getiter_</string>
                            <string>level_rule</string>
                            <string>_getitem_</string>
                            <string>data_item</string>
                            <string>_getattr_</string>
                            <string>data_keys</string>
                            <string>io_names</string>
                            <string>new_io_names_level</string>
                            <string>level_portal_types</string>
                            <string>fast_input_lines</string>
                            <string>inputline</string>
                            <string>line</string>
                            <string>int</string>
                            <string>_write_</string>
                            <string>data_name</string>
                            <string>structured_input_data</string>
                            <string>False</string>
                            <string>has_1st_level</string>
                            <string>has_2nd_level</string>
                            <string>None</string>
                            <string>new_1st_level_sub_items</string>
                            <string>True</string>
                            <string>new_1st_level_properties</string>
                            <string>new_1st_level_key</string>
                            <string>io_name_pair</string>
                            <string>new_2nd_level_item</string>
                            <string>upper_level_key</string>
                            <string>first_level</string>
                            <string>new_1st_level_obj</string>
                            <string>property_title</string>
                            <string>second_level_id</string>
                            <string>second_level</string>
                            <string>new_2nd_level_obj</string>
                            <string>context</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <list/>
                <list/>
                <none/>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>FastInput_generateTwoLevelObjectStructure</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
