<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="DTMLMethod" module="OFS.DTMLMethod"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_Cacheable__manager_id</string> </key>
            <value> <string>http_cache</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>ung_calendar.js</string> </value>
        </item>
        <item>
            <key> <string>_vars</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
        <item>
            <key> <string>globals</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
        <item>
            <key> <string>raw</string> </key>
            <value> <string encoding="cdata"><![CDATA[

function callBeforeRequest(type){\n
  switch(type){\n
    case 1:\n
      message = "Loading Events...";\n
      break;\n
    case 2:\n
      message = "Adding Event...";\n
      break;\n
    case 3:\n
      message = "Removing Event...";\n
      break;\n
    case 4:\n
      message = "The request is being processed ...";\n
      break;\n
  }\n
  $("#errorpannel").hide();\n
  $("#loadingpannel").html(message).show();\n
}\n
\n
function callAfterRequest(type){\n
  switch(type){\n
    default:\n
      $("#loadingpannel").hide();\n
      break;\n
  }\n
}\n
\n
function callOnError(type, data){\n
  $("#errorpannel").show();\n
}\n
\n
function Edit(data){\n
  var url ="WebSection_newEvent";\n
  $("div#new_event_dialog").dialog({\n
    title: "Update Event",\n
    buttons: {\n
      "Save": function(){\n
         data = $("form#create_new_event").serializeArray();\n
         var dataHash = {};\n
         for (var i=0; i<data.length; i++)\n
           dataHash[data[i].name] = data[i].value;\n
         start_date = dataHash.start_date_month + "/" + \n
                      dataHash.start_date_day + "/" + \n
                      dataHash.start_date_year + " " + \n
                      dataHash.start_date_hour + ":" + \n
                      dataHash.start_date_minute;\n
\n
         stop_date = dataHash.stop_date_month + "/" + \n
                     dataHash.stop_date_day + "/" + \n
                     dataHash.stop_date_year + " " + \n
                     dataHash.stop_date_hour + ":" + \n
                     dataHash.stop_date_minute;\n
\n
         var paramList = [{name : \'CalendarEndTime\', \'value\': stop_date},\n
                      {name : \'CalendarStartTime\', \'value\': start_date},\n
                      {name : \'title\', \'value\': dataHash.title},\n
                      {name : \'request_type\', \'value\': \'update\'},\n
                      {name : \'event_id\', \'value\': $("input#event_id").attr("value")}]\n
\n
         $.post("Base_updateCalendarEventList", paramList, function(){\n
           $("div#new_event_dialog").dialog("close");\n
           $("div#showreflashbtn.fbutton").click();\n
         });\n
      },\n
    },\n
  });\n
  $("div#new_event_dialog").load(url, {}, function(){\n
    $("form#create_new_event").append("<input type=\'hidden\' id=\'event_id\'/>");\n
    $("input#event_id").attr("value", data[9]);\n
    $("form#create_new_event select").val(data[10]);\n
    $("textarea[name=\'event_text_content\']").val(data[11]);\n
    $("input[name=\'title\']").attr("value", data[1]);\n
    $("input.start_date_field[name=\'start_date_year\']").attr("value", data[2].getFullYear());\n
    $("input.start_date_field[name=\'start_date_month\']").attr("value", (parseInt(data[2].getMonth()) + 1));\n
    $("input.start_date_field[name=\'start_date_day\']").attr("value", data[2].getDate());\n
    $("input.start_date_field[name=\'start_date_hour\']").attr("value", data[2].getHours());\n
    $("input.start_date_field[name=\'start_date_minute\']").attr("value", data[2].getMinutes());\n
\n
    $("input.stop_date_field[name=\'stop_date_year\']").attr("value", data[3].getFullYear());\n
    $("input.stop_date_field[name=\'stop_date_month\']").attr("value", (parseInt(data[3].getMonth()) + 1));\n
    $("input.stop_date_field[name=\'stop_date_day\']").attr("value", data[3].getDate());\n
    $("input.stop_date_field[name=\'stop_date_hour\']").attr("value", data[3].getHours());\n
    $("input.stop_date_field[name=\'stop_date_minute\']").attr("value", data[3].getMinutes());\n
  });\n
  $("div#new_event_dialog").dialog(\'open\');\n
}\n
\n
function View(data){\n
  var str = "";\n
  $.each(data, function(i, item){\n
    str += "[" + i + "]: " + item + "\\n";\n
  });\n
  alert(str);\n
}\n
function Delete(data, callback){\n
  hiConfirm("Are You Sure to Delete this Event", \'Confirm\', function(r){ r && callback(0);});\n
}\n
\n
function wtd(p){\n
  if (p && p.datestrshow) {\n
    $("#txtdatetimeshow").text(p.datestrshow);\n
  }\n
  $("#caltoolbar div.fcurrent").each(function() {\n
    $(this).removeClass("fcurrent");\n
  })\n
  $("#showdaybtn").addClass("fcurrent");\n
}\n
\n
i18n.xgcalendar.content = "Title"\n
i18n.xgcalendar.location = "Event Id"\n
i18n.xgcalendar.participant = "Event Type"\n
i18n.xgcalendar.repeat_event = "Description"\n
i18n.xgcalendar.event = "Title"\n
\n
$(document).ready(function() {     \n
  var DATA_FEED_URL = "Base_updateCalendarEventList";\n
  var op = {\n
    view: "week",\n
    showday: new Date(),\n
    EditCmdhandler:Edit,\n
    DeleteCmdhandler:Delete,\n
    weekstartday: 0,\n
    ViewCmdhandler:View,\n
    onWeekOrMonthToDay:wtd,\n
    onBeforeRequestData: callBeforeRequest,\n
    onAfterRequestData: callAfterRequest,\n
    onRequestDataError: callOnError,\n
    autoload:true,\n
    url: DATA_FEED_URL + "?request_type=list",\n
    quickAddUrl: DATA_FEED_URL + "?request_type=add",\n
    quickUpdateUrl: DATA_FEED_URL + "?request_type=update",\n
    quickDeleteUrl: DATA_FEED_URL + "?request_type=remove",\n
  };\n
  var $dv = $("#calhead");\n
  var _MH = document.documentElement.clientHeight;\n
  var dvH = $dv.height() + 2;\n
  op.height = _MH - dvH;\n
  op.eventItems =[];\n
  var p = $("#gridcontainer").bcalendar(op).BcalGetOp();\n
  if (p && p.datestrshow) {\n
    $("#txtdatetimeshow").text(p.datestrshow);\n
  }\n
  $("#caltoolbar").noSelect();\n
  //to show day view\n
  $("#showdaybtn").click(function(e) {\n
    //document.location.href="#day";\n
    $("#caltoolbar div.fcurrent").each(function() {\n
      $(this).removeClass("fcurrent");\n
    })\n
    $(this).addClass("fcurrent");\n
    var p = $("#gridcontainer").swtichView("day").BcalGetOp();\n
    if (p && p.datestrshow) {\n
      $("#txtdatetimeshow").text(p.datestrshow);\n
    }\n
  });\n
  //to show week view\n
  $("#showweekbtn").click(function(e) {\n
    //document.location.href="#week";\n
    $("#caltoolbar div.fcurrent").each(function() {\n
      $(this).removeClass("fcurrent");\n
    })\n
    $(this).addClass("fcurrent");\n
    var p = $("#gridcontainer").swtichView("week").BcalGetOp();\n
    if (p && p.datestrshow){\n
      $("#txtdatetimeshow").text(p.datestrshow);\n
    }\n
  });\n
  //to show month view\n
  $("#showmonthbtn").click(function(e) {\n
    //document.location.href="#month";\n
    $("#caltoolbar div.fcurrent").each(function() {\n
      $(this).removeClass("fcurrent");\n
    })\n
    $(this).addClass("fcurrent");\n
    var p = $("#gridcontainer").swtichView("month").BcalGetOp();\n
    if (p && p.datestrshow) {\n
      $("#txtdatetimeshow").text(p.datestrshow);\n
    }\n
  });\n
  $("#showreflashbtn").click(function(e){\n
    $("#gridcontainer").reload();\n
  });          \n
  //Add a new event\n
  $("#faddbtn").click(function() {\n
    $("div#new_event_dialog").dialog({\n
      title: "Create New Event",\n
      buttons: {\n
        "Create": function(){\n
          $.post("EventModule_createNewEvent",\n
            $("form#create_new_event").serialize(),\n
            function(){\n
              $("div#new_event_dialog").dialog("close");\n
              $("div#showreflashbtn.fbutton").click();\n
          });\n
        }\n
      },\n
    });\n
    var url ="WebSection_newEvent";\n
    var date = new Date();\n
    $("div#new_event_dialog").load(url, {}, function(){\n
      $("input.start_date_field[name=\'start_date_month\'], input.stop_date_field[name=\'stop_date_month\']").attr("value", ""+date.getMonth()+1);\n
      $("input.start_date_field[name=\'start_date_day\'], input.stop_date_field[name=\'stop_date_day\']").attr("value", date.getDate());\n
      $("input.start_date_field[name=\'start_date_hour\'], input.stop_date_field[name=\'stop_date_hour\']").attr("value", date.getHours());\n
      $("input.start_date_field[name=\'start_date_minute\'], input.stop_date_field[name=\'stop_date_minute\']").attr("value", date.getMinutes());\n
    });\n
    $("div#new_event_dialog").dialog("open");\n
  });\n
  //go to today\n
  $("#showtodaybtn").click(function() {\n
    var p = $("#gridcontainer").gotoDate().BcalGetOp();\n
    if (p && p.datestrshow) {\n
      $("#txtdatetimeshow").text(p.datestrshow);\n
    }\n
  });\n
  //previous date range\n
  $("#sfprevbtn").click(function() {\n
    var p = $("#gridcontainer").previousRange().BcalGetOp();\n
    if (p && p.datestrshow) {\n
      $("#txtdatetimeshow").text(p.datestrshow);\n
    }\n
  });\n
  //next date range\n
  $("#sfnextbtn").click(function() {\n
    var p = $("#gridcontainer").nextRange().BcalGetOp();\n
    if (p && p.datestrshow) {\n
      $("#txtdatetimeshow").text(p.datestrshow);\n
    }\n
  });\n
  $("div#new_event_dialog").dialog({\n
    autoOpen: false,\n
    height: 255,\n
    width: 410,\n
    modal: true,\n
  });\n
  $( "#datepicker" ).datepicker({\n
    onSelect: function(dateText, inst){\n
      var dateList = dateText.split("/");\n
      var month = dateList[0] - 1;\n
      var day = dateList[1];\n
      var year = dateList[2];\n
      var p = $("#gridcontainer").gotoDate(new Date(year, month, day)).BcalGetOp();\n
      if (p && p.datestrshow) {\n
        $("#txtdatetimeshow").text(p.datestrshow);\n
      }\n
     }\n
  });\n
});

]]></string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
