<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>from Products.ERP5Type.Log import log\n
order = state_change[\'object\']\n
portal = order.getPortalObject()\n
\n
### STEP 1: does this order have a client-specific Trade Condition\n
trade_condition = order.getSpecialiseValue(portal_type="Sale Trade Condition")\n
custom_trade_condition = None\n
if trade_condition is not None:\n
  if trade_condition.getDestinationSection() == order.getDestinationSection():\n
    # The client in this trade condition is the client of the order\n
    custom_trade_condition = trade_condition\n
\n
if custom_trade_condition is None:\n
  # If no trade condition or generic trade condition\n
  # try to find existing trade condition\n
  trade_condition_list = portal.sale_trade_condition_module.searchFolder(destination_section_uid=order.getDestinationSectionUid(),\n
                                                                         validation_state="validated")\n
  if len(trade_condition_list):\n
    custom_trade_condition = trade_condition_list[0].getObject()\n
else:\n
  log(repr(custom_trade_condition.getRelativeUrl()))\n
\n
if custom_trade_condition is None:\n
  # nothing found then create a new custom trade condition\n
  if trade_condition is None:\n
    trade_condition = \'sale_trade_condition_module/vifib_trade_condition\'\n
  custom_trade_condition = portal.sale_trade_condition_module.newContent(specialise_value=trade_condition,\n
                                                                    destination_section_uid=order.getDestinationSectionUid(),\n
                                                                    title="ViFiB Custom Conditions")\n
  custom_trade_condition.validate()\n
else:\n
  log(repr(custom_trade_condition.getRelativeUrl()))\n
\n
order.setSpecialiseValue(custom_trade_condition, portal_type="Sale Trade Condition")\n
log(repr(custom_trade_condition.getRelativeUrl()))\n
log(repr(order.getSpecialise()))\n
\n
### STEP 2: does this order have a client-specific Open Order\n
open_order_list = portal.open_sale_order_module.searchFolder(destination_section_uid=order.getDestinationSectionUid(),\n
                                                             simulation_state="started")\n
if not len(open_order_list):\n
  # Maybe the Open Order has not been indexed yet. Fortunately we have a workflow on Person for that. We check its state,\n
  # and if Person is in a open_order_created state, we fetch its linked Open Order. Else, we create the Open Order and change this state.\n
  person = order.getDestinationSectionValue()\n
  person_slap_interface_state = person.getSlapState()\n
  if person_slap_interface_state in \'open_order_created\':\n
    open_order_url = context.portal_workflow.getInfoFor(ob=person, name=\'open_order_url\', wf_id=\'person_slap_interface_workflow\')\n
    open_order = portal.restrictedTraverse(open_order_url)\n
  else:\n
    open_order = portal.open_sale_order_module.newContent(destination_section_uid=order.getDestinationSectionUid(),\n
          title="ViFiB Open Order")\n
    person.createOpenOrder(open_order_url=open_order.getRelativeUrl())\n
    open_order.order()\n
    open_order.start()\n
else:\n
  open_order = open_order_list[0]\n
\n
return open_order\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>state_change, **kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>state_change</string>
                            <string>kw</string>
                            <string>Products.ERP5Type.Log</string>
                            <string>log</string>
                            <string>_getitem_</string>
                            <string>order</string>
                            <string>_getattr_</string>
                            <string>portal</string>
                            <string>trade_condition</string>
                            <string>None</string>
                            <string>custom_trade_condition</string>
                            <string>trade_condition_list</string>
                            <string>len</string>
                            <string>repr</string>
                            <string>open_order_list</string>
                            <string>person</string>
                            <string>person_slap_interface_state</string>
                            <string>context</string>
                            <string>open_order_url</string>
                            <string>open_order</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Delivery_assertCustomTradeConditionAndOpenOrder</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
