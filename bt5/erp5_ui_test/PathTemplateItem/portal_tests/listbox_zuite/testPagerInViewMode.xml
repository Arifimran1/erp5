<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <string encoding="cdata"><![CDATA[

<html xmlns:tal="http://xml.zope.org/namespaces/tal"\n
      xmlns:metal="http://xml.zope.org/namespaces/metal">\n
<head>\n
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n
<title>Test Pager in View Mode</title>\n
</head>\n
<body>\n
<table cellpadding="1" cellspacing="1" border="1">\n
<thead>\n
<tr><td rowspan="1" colspan="3">Test Pager in View Mode</td></tr>\n
</thead><tbody>\n
<tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/init" />\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/foo_module/FooModule_createObjects?num:int=1</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Created Successfully.</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/foo_module/Zuite_waitForActivities</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Done.</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/ListBoxZuite_resetReportSelections</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>assertTextPresent</td>\n
  <td>Done.</td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>open</td>\n
  <td>${base_url}/foo_module/0/Foo_viewListBoxInReportMode</td>\n
  <td></td>\n
</tr>\n
\n
<tal:block tal:define="prefix string:x0_listbox; \n
                       set_page python:1;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
\n
<tal:block tal:repeat="prefix python:range(3)">\n
<tr>\n
  <td>verifyElementPresent</td>\n
  <td tal:content="string: //button[@class=&quot;listbox_next_page x${prefix}_listbox_next_page&quot;]"></td>\n
  <td></td>\n
</tr>\n
<tr>\n
  <td>verifyElementNotPresent</td>\n
  <td tal:content="string: //button[@class=&quot;listbox_previous_page x${prefix}_listbox_previous_page&quot;]"></td>\n
  <td></td>\n
</tr>\n
</tal:block>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>//button[@class="listbox_next_page x0_listbox_next_page"]</td>\n
  <td></td>\n
</tr>\n
<tal:block tal:define="prefix string:x0_listbox; \n
                       set_page python:2;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tal:block tal:define="prefix string:x1_listbox; \n
                       set_page python:1;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tal:block tal:define="prefix string:x2_listbox; \n
                       set_page python:1;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tal:block tal:condition="python: context.TestTool_getSkinName()!=\'Mobile\'">\n
<tr>\n
  <td>type</td>\n
  <td>//input[@class="listbox_set_page x1_listbox_set_page"]</td>\n
  <td>5</td>\n
</tr>\n
<tr>\n
  <td>keyPressAndWait</td>\n
  <td>//input[@class="listbox_set_page x1_listbox_set_page"]</td>\n
  <td>\\13</td>\n
</tr>\n
</tal:block>\n
<tal:block tal:condition="python: context.TestTool_getSkinName()==\'Mobile\'">\n
<tr>\n
  <td>select</td>\n
  <td>id=listbox_page_selection</td>\n
  <td>5 of 10</td>\n
</tr>\n
</tal:block>\n
\n
<tal:block tal:define="prefix string:x0_listbox; \n
                       set_page python:2;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tal:block tal:define="prefix string:x1_listbox; \n
                       set_page python:5;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tal:block tal:define="prefix string:x2_listbox; \n
                       set_page python:1;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>//button[@class="listbox_previous_page x1_listbox_previous_page"]</td>\n
  <td></td>\n
</tr>\n
\n
<tal:block tal:define="prefix string:x0_listbox; \n
                       set_page python:2;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tal:block tal:define="prefix string:x1_listbox; \n
                       set_page python:4;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tal:block tal:define="prefix string:x2_listbox; \n
                       set_page python:1;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>//button[@class="listbox_last_page x1_listbox_last_page"]</td>\n
  <td></td>\n
</tr>\n
\n
<tal:block tal:define="prefix string:x0_listbox; \n
                       set_page python:2;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
\n
<tr>\n
  <td>clickAndWait</td>\n
  <td>//button[@class="listbox_first_page x1_listbox_first_page"]</td>\n
  <td></td>\n
</tr>\n
<tal:block tal:define="prefix string:x0_listbox;\n
                       set_page python:2;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
<tal:block tal:define="prefix string:x1_listbox;\n
                       set_page python:1;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
<tal:block tal:define="prefix string:x2_listbox;\n
                       set_page python:1;\n
                       lines_per_pages python:3">\n
  <tal:block metal:use-macro="here/ListBoxZuite_CommonTemplate/macros/checkCurrentPage" />\n
</tal:block>\n
</tbody></table>\n
</body>\n
</html>\n


]]></string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>testPagerInViewMode</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
