<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>account = context.getDestination()\n
line_list = context.getAggregateRelatedValueList()\n
accounting_transaction_line_type_list = \\\n
      context.getPortalAccountingMovementTypeList()\n
groupped_line_set = {}\n
for this_line in line_list:\n
  line_transaction = this_line.getParentValue()\n
  for transaction in line_transaction\\\n
     .AccountingTransaction_getCausalityGroupedAccountingTransactionList():\n
    is_source = transaction.AccountingTransaction_isSourceView()\n
    for line in transaction.getMovementList(\n
                      portal_type=accounting_transaction_line_type_list):\n
\n
      if transaction.getOriginId() != transaction.getPortalType():\n
        accounting_reference = "%s %s %05d" % (\n
                                  transaction.getStartDate().year(),\n
                                  transaction.getOriginId(),\n
                                  transaction.getIntIndex(0))\n
      else:\n
       causality = transaction.getCausalityValue()\n
       if causality is not None:\n
         accounting_reference = "%s %s %05d" % (\n
                                  causality.getStartDate().year(),\n
                                  causality.getOriginId() or \'??\',\n
                                  causality.getIntIndex(0))\n
       else:\n
         accounting_reference = \'\'\n
\n
      if is_source:\n
        if line.getSource() == account:\n
          debit = max(-(line.getSourceInventoriatedTotalAssetPrice() or 0), 0)\n
          credit = max(line.getSourceInventoriatedTotalAssetPrice(), 0)\n
          groupped_line_set[line] = line.asContext(\n
                      absolute_url=lambda:transaction.absolute_url(),\n
                      specific_reference=transaction.getSourceReference(),\n
                      accounting_reference=accounting_reference,\n
                      node_relative_url=line.getSource(),\n
                      debit=debit, credit=credit)\n
      elif line.getDestination() == account:\n
        debit = max(-(line.getDestinationInventoriatedTotalAssetPrice()\n
                            or 0), 0)\n
        credit = max(line.getDestinationInventoriatedTotalAssetPrice(), 0)\n
        groupped_line_set[line] = line.asContext(\n
                      absolute_url=lambda:transaction.absolute_url(),\n
                      specific_reference=transaction.getDestinationReference(),\n
                      accounting_reference=accounting_reference,\n
                      node_relative_url=line.getDestination(),\n
                      debit=debit, credit=credit)\n
\n
return groupped_line_set.values()\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>**kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>kw</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>account</string>
                            <string>line_list</string>
                            <string>accounting_transaction_line_type_list</string>
                            <string>groupped_line_set</string>
                            <string>_getiter_</string>
                            <string>this_line</string>
                            <string>line_transaction</string>
                            <string>transaction</string>
                            <string>is_source</string>
                            <string>line</string>
                            <string>accounting_reference</string>
                            <string>causality</string>
                            <string>None</string>
                            <string>max</string>
                            <string>debit</string>
                            <string>credit</string>
                            <string>_write_</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Opposition_getAccountingTransactionLineList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
