<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>"""Called when an Accounting Transaction is validated.\n
"""\n
from AccessControl import getSecurityManager\n
from DateTime import DateTime\n
now = DateTime()\n
transaction = sci[\'object\']\n
portal = transaction.getPortalObject()\n
\n
# set grouping references for lines\n
grouped_line_list = transaction.AccountingTransaction_guessGroupedLines()\n
if grouped_line_list:\n
  invoice_type_list = portal.getPortalInvoiceTypeList()\n
  if transaction.getPortalType() not in invoice_type_list:\n
    invoice = transaction.getCausalityValue(\n
            portal_type=list(invoice_type_list) + [\'Accounting Transaction\',\n
                                                   \'Balance Transaction\'])\n
    if invoice is not None and invoice.getSimulationState() != \'delivered\':\n
      invoice = None\n
    if invoice is not None and \\\n
            invoice.getPortalType() == \'Accounting Transaction\' and \\\n
            invoice.getOriginId() != \'RV\':\n
      invoice = None\n
  else:\n
    invoice = transaction\n
  # if all [recievable|payable] lines were grouped, we can mark the invoice\n
  # as payed.\n
  cleared = 1\n
  if invoice is not None:\n
    for line in invoice.getMovementList(\n
                    portal_type=portal.getPortalAccountingMovementTypeList()):\n
      if invoice.AccountingTransaction_isSourceView():\n
        account = line.getSourceValue(portal_type=\'Account\')\n
      else:\n
        account = line.getDestinationValue(portal_type=\'Account\')\n
      if account is not None and account.getAccountTypeId() in ( \'payable\',\n
                                                                 \'receivable\' ):\n
        if line.getRelativeUrl() not in grouped_line_list:\n
          cleared = 0\n
    if cleared and invoice.getPaymentState() != \'cleared\':\n
      if transaction.AccountingTransaction_isSourceView():\n
        date = transaction.getStartDate()\n
      else:\n
        date = transaction.getStopDate()\n
      portal.portal_workflow.doActionFor(invoice, \'clear_action\',\n
                                         payment_date=date)\n
\n
# set recovery_status to R0 by default.\n
if transaction.getPortalType() in ( \'Balance Transaction\',\n
                                    \'Accounting Transaction\',\n
                                    \'Sale Invoice Transaction\' ):\n
  if transaction.getOriginId():\n
    transaction.Invoice_setRecoveryStatus(\'R0\')\n
\n
\n
if transaction.getPortalType() == \'Balance Transaction\':\n
  # The above is not necessary for Balance Transactions\n
  # (at least in the initial import of transactions)\n
  return\n
\n
# check if we completly consumed an opposition with this transaction.\n
for line in transaction.getMovementList(\n
                 portal_type=portal.getPortalAccountingMovementTypeList()):\n
  if line.getAggregate(portal_type=\'Opposition\'):\n
     line.getAggregateValue(portal_type=\'Opposition\').activate(\n
                            after_path=[line.getPath()]).consume()\n
\n
# delete empty lines\n
transaction.AccountingTransaction_deleteEmptyLines(redirect=0)\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>sci</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>sci</string>
                            <string>AccessControl</string>
                            <string>getSecurityManager</string>
                            <string>DateTime</string>
                            <string>now</string>
                            <string>_getitem_</string>
                            <string>transaction</string>
                            <string>_getattr_</string>
                            <string>portal</string>
                            <string>grouped_line_list</string>
                            <string>invoice_type_list</string>
                            <string>list</string>
                            <string>invoice</string>
                            <string>None</string>
                            <string>cleared</string>
                            <string>_getiter_</string>
                            <string>line</string>
                            <string>account</string>
                            <string>date</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>afterValidation</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
