<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

# A mapping base_application -> total_price\n
base_application_dict = dict()\n
\n
portal = context.getPortalObject()\n
\n
# skip tax movement, because they will be added later\n
valid_movement_type_list = [t for t in portal.getPortalMovementTypeList()\n
                                if t != \'Tax Line\']\n
\n
def getRelatedPath(parent, child):\n
  """returns child\'s relative path in parent, as a tuple that can later be used\n
  as an argument to parent.restrictedTraverse to find back the child.\n
  """\n
  parent_path_length = len(parent.getPhysicalPath())\n
  child_path = child.getPhysicalPath()\n
  context.log((child, child_path, child_path[parent_path_length:]))\n
  return child_path[parent_path_length:]\n
\n
def sorted(seq, comp):\n
  seq = seq[::]\n
  seq.sort(comp)\n
  return seq\n
\n
# now update tax lines for each base_application\n
for tax_line in sorted(\n
        context.contentValues(portal_type=\'Tax Line\'),\n
        lambda a, b: cmp(a.getFloatIndex(0), b.getFloatIndex(0))):\n
  applicable_movement_list = dict()\n
  quantity = 0\n
  for base_application in tax_line.getBaseApplicationList():\n
    quantity += base_application_dict.get(base_application, 0)\n
    for movement in context.getMovementList(portal_type=valid_movement_type_list):\n
      base_contribution_list = movement.getBaseContributionList()\n
      for base_contribution in movement.getBaseContributionList():\n
        # XXX non optimal loops, may needs optimisation\n
        if base_contribution == base_application:\n
          applicable_movement_list[getRelatedPath(context, movement)] = movement\n
  \n
  for movement in applicable_movement_list.values():\n
    movement_price = movement.getTotalPrice(fast=0) or 0\n
    if tax_line.getProperty(\'calculation_script_id\'):\n
      raise NotImplementedError\n
    # if tax_line.getQuantity() # XXX how to do static price ???\n
\n
    quantity += movement_price\n
\n
  tax_line.edit(quantity=quantity)\n
\n
  # we add for the next tax ( to support for example tax on tax )\n
  for base_amount in tax_line.getBaseContributionList():\n
    base_application_dict[base_amount] =\\\n
      base_application_dict.get(base_amount, 0) + tax_line.getTotalPrice(fast=0)\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>dict</string>
                            <string>base_application_dict</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>portal</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>_getiter_</string>
                            <string>t</string>
                            <string>valid_movement_type_list</string>
                            <string>getRelatedPath</string>
                            <string>sorted</string>
                            <string>tax_line</string>
                            <string>applicable_movement_list</string>
                            <string>quantity</string>
                            <string>base_application</string>
                            <string>_inplacevar_</string>
                            <string>movement</string>
                            <string>base_contribution_list</string>
                            <string>base_contribution</string>
                            <string>_write_</string>
                            <string>movement_price</string>
                            <string>NotImplementedError</string>
                            <string>base_amount</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Delivery_updateTaxLineList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
