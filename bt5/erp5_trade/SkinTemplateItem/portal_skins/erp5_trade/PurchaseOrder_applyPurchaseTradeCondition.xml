<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

# This script search a trade condition matching to the order\n
# and try to complete some fields\n
order = context\n
trade_condition_list = []\n
\n
trade_condition_portal_type = \'Purchase Trade Condition\'\n
trade_condition_list = order.getSpecialiseValueList(portal_type=(\n
                                             trade_condition_portal_type,))\n
\n
if len(trade_condition_list)==0:\n
  # Search a matching Trade Condition\n
  trade_condition_list = context.portal_domains.searchPredicateList(order,portal_type=(\'Purchase Trade Condition\',),test=0)\n
  \n
# Results\n
if len(trade_condition_list ) == 0 :\n
  redirect_url = \'%s/%s?%s\' % ( context.absolute_url(), form_id\n
                                  , \'portal_status_message=No+Trade+Condition.\')\n
elif len(trade_condition_list ) > 1 :\n
  redirect_url = \'%s/%s?%s\' % ( context.absolute_url(), form_id\n
                                  , \'portal_status_message=Too+many+Trade+Condition.\')\n
else : \n
  trade_condition=trade_condition_list[0].getObject()\n
\n
  # Update Order Profile\n
  categories = order.getCategoryList()\n
  # Destination\n
  if order.getDestinationValue() == None and trade_condition.getDestinationValue() is not None :\n
    categories += (\'destination/\'+trade_condition.getDestinationRelativeUrl(),)\n
  # destination_decision\n
  if (order.getDestinationDecisionValue() is None) and \\\n
     (trade_condition.getDestinationDecisionValue() is not None) :\n
    categories += (\'destination_decision/\'+trade_condition.getDestinationDecisionRelativeUrl(),)\n
  # destination_administration\n
  if (order.getDestinationAdministrationValue() is None) and \\\n
     (trade_condition.getDestinationAdministrationValue() is not None) :\n
    categories += (\'destination_administration/\'+trade_condition.getDestinationAdministrationRelativeUrl(),)\n
  # destination_payment\n
  if (order.getDestinationPaymentValue() is None) and \\\n
     (trade_condition.getDestinationPaymentValue() is not None) :\n
    categories += (\'destination_payment/\'+trade_condition.getDestinationPaymentRelativeUrl(),)\n
\n
  # SOURCE_section\n
  if order.getSourceSectionValue() is None :\n
    # if source_section is not defined on TradeCondition, use Order source\n
    if trade_condition.getSourceSectionValue() is not None :\n
      categories += (\'source_section/\'+trade_condition.getSourceSectionRelativeUrl(),)\n
    elif trade_condition.getSourceValue() is not None:\n
      categories += (\'source_section/\'+order.getSourceRelativeUrl(),)\n
#     else :\n
#       categories += (\'source_section/\'+order.getSourceRelativeUrl(),)\n
  # source_decision\n
  if order.getSourceDecisionValue(portal_type=\'Organisation\') is None :\n
    # if source_decision is not defined on TradeCondition, use Order source\n
    if trade_condition.getSourceDecisionValue(portal_type=\'Organisation\')\\\n
       is not None :\n
      categories += (\'source_decision/\'+trade_condition.getSourceDecisionValue(portal_type=\'Organisation\').getRelativeUrl(),)\n
#     else :\n
#       categories += (\'source_decision/\'+order.getSourceValue().getRelativeUrl(),)\n
    elif order.getSourceValue() is not None:\n
      categories += (\'source_decision/\'+order.getSourceRelativeUrl(),)\n
  # source_administration\n
  if order.getSourceAdministrationValue() is None :\n
    # if source_administration is not defined on TradeCondition, use Order source\n
    if trade_condition.getSourceAdministrationValue() is not None :\n
      categories += (\'source_administration/\'+trade_condition.getSourceAdministrationValue().getRelativeUrl(),)\n
#     else :\n
#       categories += (\'source_administration/\'+order.getSourceRelativeUrl(),)\n
    elif order.getSourceValue() is not None:\n
      categories += (\'source_administration/\'+order.getSourceRelativeUrl(),)\n
  # source_payment\n
  if order.getSourcePaymentValue() is None :\n
    # if source_payment is not defined on TradeCondition, use Order source\n
    if trade_condition.getSourcePaymentValue() is not None :\n
      categories += (\'source_payment/\'+trade_condition.getSourcePaymentRelativeUrl(),)\n
#     else :\n
    elif order.getSourceValue() is not None:\n
      categories += (\'source_payment/\'+order.getSourceRelativeUrl(),)\n
\n
  # Copy of devise\n
  if (order.getResourceValue() is None) and \\\n
     (trade_condition.getResourceValue() is not None) :\n
    categories += (\'resource/\'+trade_condition.getResourceRelativeUrl(),)\n
\n
  # Update Order Payment\n
#   payment_term=\'\'\n
#   if order.hasPaymentTerm() :\n
#     payment_term = order.getPaymentTerm()\n
#   elif trade_condition.hasPaymentTerm() :\n
#     payment_term = trade_condition.getPaymentTerm()\n
# \n
#   payment_end_of_month=\'\'\n
#   if order.hasPaymentEndOfMonth() :\n
#     payment_end_of_month = order.getPaymentEndOfMonth()\n
#   elif trade_condition.hasPaymentTerm() :\n
#     payment_end_of_month = trade_condition.getPaymentEndOfMonth()\n
# \n
#   payment_additional_term=\'\'\n
#   if order.hasPaymentAdditionalTerm() :\n
#     payment_additional_term = order.getPaymentAdditionalTerm()\n
#   elif trade_condition.hasPaymentAdditionalTerm() :\n
#     payment_additional_term = trade_condition.getPaymentAdditionalTerm()\n
# \n
#   if (order.getPaymentModeValue() is None) and \\\n
#      (trade_condition.getPaymentModeValue() is not None) :\n
#     categories += (trade_condition.getPaymentModeValue().getRelativeUrl(),)\n
# \n
#   if (order.getTradeDateValue() is None) and \\\n
#      (trade_condition.getTradeDateValue() is not None) :\n
#     categories += (trade_condition.getTradeDateValue().getRelativeUrl(),)\n
\n
  # Copy Incoterm\n
  if (order.getIncotermValue() is None) and \\\n
     (trade_condition.getIncotermValue() is not None) :\n
    categories += (trade_condition.getIncotermValue().getRelativeUrl(),)\n
\n
  if (order.getDeliveryModeValue() is None) and \\\n
     (trade_condition.getDeliveryModeValue() is not None) :\n
    categories += (trade_condition.getDeliveryModeValue().getRelativeUrl(),)\n
\n
  destination_decision_source_reference = \'\'\n
  if order.hasDestinationDecisionSourceReference() :\n
    destination_decision_source_reference = order.getDestinationDecisionSourceReference()\n
  elif trade_condition.hasDestinationDecisionSourceReference() :\n
    destination_decision_source_reference = trade_condition.getDestinationDecisionSourceReference()\n
\n
  # copy PaymentCondition if no one is defined on Order\n
  payment_condition_portal_type = \'Payment Condition\'\n
  if len(order.contentIds(filter={\'portal_type\':payment_condition_portal_type})) == 0 :\n
    to_copy=[]\n
    to_copy=trade_condition.contentIds(filter={\'portal_type\':payment_condition_portal_type})\n
    if len(to_copy)>0 :\n
     copy_data = trade_condition.manage_copyObjects(ids=to_copy)\n
     new_id_list = order.manage_pasteObjects(copy_data)\n
\n
  # copy Discount if no one is defined on Order\n
  discount_portal_type = \'Discount\'\n
  if len(order.contentIds(filter={\'portal_type\':discount_portal_type})) == 0 :\n
    to_copy=[]\n
    to_copy=trade_condition.contentIds(filter={\'portal_type\':discount_portal_type})\n
    if len(to_copy)>0 :\n
     copy_data = trade_condition.manage_copyObjects(ids=to_copy)\n
     new_id_list = order.manage_pasteObjects(copy_data)\n
\n
  # Update specialise value of Order\n
  final_categories = ()\n
  for category_item in categories :\n
    if category_item.find(\'specialise/\') == (-1):\n
      final_categories += (category_item,)\n
\n
  final_categories += (\'specialise/\'+trade_condition.getRelativeUrl(),)\n
\n
  order.edit(categories=final_categories, # payment_term=payment_term,\n
#              payment_end_of_month=payment_end_of_month,\n
#              payment_additional_term=payment_additional_term,\n
             destination_decision_source_reference = destination_decision_source_reference)\n
\n
  redirect_url = \'%s/%s?%s\' % (context.absolute_url(), form_id,\n
                               \'portal_status_message=Order+updated.\')\n
\n
if batch_mode:\n
  return None\n
else:\n
  context.REQUEST[ \'RESPONSE\' ].redirect( redirect_url )\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/erp5/portal_skins/erp5_trade/PurchaseOrder_applyPurchaseTradeCondition</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>form_id,batch_mode=0</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>2</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>form_id</string>
                            <string>batch_mode</string>
                            <string>context</string>
                            <string>order</string>
                            <string>trade_condition_list</string>
                            <string>trade_condition_portal_type</string>
                            <string>_getattr_</string>
                            <string>len</string>
                            <string>redirect_url</string>
                            <string>_getitem_</string>
                            <string>trade_condition</string>
                            <string>categories</string>
                            <string>None</string>
                            <string>destination_decision_source_reference</string>
                            <string>payment_condition_portal_type</string>
                            <string>to_copy</string>
                            <string>copy_data</string>
                            <string>new_id_list</string>
                            <string>discount_portal_type</string>
                            <string>final_categories</string>
                            <string>_getiter_</string>
                            <string>category_item</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <int>0</int>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>PurchaseOrder_applyPurchaseTradeCondition</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
