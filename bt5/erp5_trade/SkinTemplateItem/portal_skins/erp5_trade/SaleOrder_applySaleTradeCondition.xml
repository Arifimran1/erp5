<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value> <string encoding="base64">O/INCg==</string> </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

# Look if there is a corresponding trade conditions and then copy all values\n
\n
order = context\n
trade_condition_list = []\n
\n
trade_condition_portal_type = \'Sale Trade Condition\'\n
trade_condition_list = order.getSpecialiseValueList(portal_type=(trade_condition_portal_type,))\n
\n
if len(trade_condition_list) == 0 :\n
  trade_condition_list = context.portal_domains.searchPredicateList(order,portal_type=(trade_condition_portal_type,),test=0)\n
  context.log(\'trade_condition_list,\',trade_condition_list)\n
# Results\n
if len(trade_condition_list ) == 0 :\n
  redirect_url = \'%s/%s?%s\' % ( context.absolute_url(), form_id\n
                                  , \'portal_status_message=No+Trade+Condition.\')\n
elif len(trade_condition_list ) > 1 :\n
  redirect_url = \'%s/%s?%s\' % ( context.absolute_url(), form_id\n
                                  , \'portal_status_message=Too+many+Trade+Condition.\')\n
else : \n
  trade_condition=trade_condition_list[0].getObject()\n
\n
  # Update Order Profile\n
  categories = order.getCategoryList()\n
  # Date\n
  if order.getReceivedDate() is None :\n
    context.setReceivedDate(DateTime())\n
\n
  # Source\n
  if ((order.getSourceValue() == None) or force == 1) and trade_condition.getSourceValue() is not None :\n
    order.setSourceList((trade_condition.getSourceRelativeUrl(),))\n
  # source_section\n
  if ((order.getSourceSectionValue() is None) or force == 1) and \\\n
     (trade_condition.getSourceSectionValue() is not None) :\n
    order.setSourceSectionList((trade_condition.getSourceSectionRelativeUrl(),))\n
  # source_decision\n
  if ((order.getSourceDecisionValue() is None) or force == 1) and \\\n
     (trade_condition.getSourceDecisionValue() is not None) :\n
    order.setSourceDecisionList( (trade_condition.getSourceDecisionRelativeUrl(),))\n
  # source_administration\n
  if ((order.getSourceAdministrationValue() is None) or force == 1) and \\\n
     (trade_condition.getSourceAdministrationValue() is not None) :\n
    order.setSourceAdministrationList((trade_condition.getSourceAdministrationRelativeUrl(),))\n
  # source_payment\n
  if ((order.getSourcePaymentValue() is None) or force == 1) and \\\n
     (trade_condition.getSourcePaymentValue() is not None) :\n
    order.setSourcePaymentList(trade_condition.getSourcePaymentRelativeUrl(),)\n
\n
  # DESTINATION_section\n
  if (order.getDestinationSectionValue() is None) or force == 1 :\n
    # if destination_section is not defined on TradeCondition, use Order destination\n
    if trade_condition.getDestinationSectionValue() is not None :\n
      order.setDestinationSectionList((trade_condition.getDestinationSectionRelativeUrl(),))\n
    elif trade_condition.getDestinationValue() is not None :\n
      order.setDestinationSectionList((order.getDestinationRelativeUrl(),))\n
  # Destination\n
  if (order.getDestinationValue() is None) or force == 1 :\n
    # if destination is not defined on TradeCondition, use Order destination_section\n
    if trade_condition.getDestinationValue() is not None :\n
      order.setDestinationList( (trade_condition.getDestinationRelativeUrl(),))\n
    elif order.getDestinationSectionValue() is not None:\n
      order.setDestinationList((order.getDestinationRelativeUrl(),))\n
  # destination_decision\n
  if (len(order.getDestinationDecisionValueList()) == 0) or force == 1 :\n
    # if destination_decision is not defined on TradeCondition, use Order destination\n
    if len(trade_condition.getDestinationDecisionValueList()) >0 :\n
      for object in trade_condition.getDestinationDecisionValueList():\n
        order.setDestinationDecisionList( (object.getRelativeUrl(),))\n
    elif order.getDestinationValue() is not None:\n
      order.setDestinationDecisionList((order.getDestinationRelativeUrl(),))\n
  # destination_administration\n
  if (order.getDestinationAdministrationValue() is None) or force == 1 :\n
    # if destination_administration is not defined on TradeCondition, use Order destination\n
    if trade_condition.getDestinationAdministrationValue() is not None :\n
      order.setDestinationAdministrationList((trade_condition.getDestinationAdministrationValue().getRelativeUrl(),))\n
    elif order.getDestinationValue() is not None:\n
      order.setDestinationAdministrationList( (order.getDestinationRelativeUrl(),))\n
  # destination_payment\n
  if (order.getDestinationPaymentValue() is None) or force == 1 :\n
    # if destination_payment is not defined on TradeCondition, use Order destination\n
    if trade_condition.getDestinationPaymentValue() is not None :\n
      order.setDestinationPaymentList((trade_condition.getDestinationPaymentRelativeUrl(),))\n
    elif order.getDestinationValue() is not None:\n
      order.setDestinationPaymentList((order.getDestinationRelativeUrl(),))\n
\n
  # Devise\n
  if ((order.getPriceCurrencyValue() is None) or force == 1) and \\\n
     (trade_condition.getPriceCurrencyValue() is not None) :\n
    order.setPriceCurrencyList((trade_condition.getPriceCurrencyValue().getRelativeUrl(),))\n
\n
\n
  if ((order.getDeliveryModeValue() is None) or force == 1) and \\\n
     (trade_condition.getDeliveryModeValue() is not None) :\n
    order.setDeliveryModeList((trade_condition.getDeliveryModeValue().getRelativeUrl(),))\n
\n
  # copy PaymentCondition if no one is defined on Order\n
  payment_condition_portal_type = \'Payment Condition\'\n
  if (len(order.contentIds(filter={\'portal_type\':payment_condition_portal_type})) == 0) or force == 1 :\n
    if force ==1:\n
      to_delete=order.contentIds(filter={\'portal_type\':payment_condition_portal_type})\n
      order.manage_delObjects(to_delete)\n
    to_copy=[]\n
    to_copy=trade_condition.contentIds(filter={\'portal_type\':payment_condition_portal_type})\n
    if len(to_copy)>0 :\n
     copy_data = trade_condition.manage_copyObjects(ids=to_copy)\n
     new_id_list = order.manage_pasteObjects(copy_data)\n
\n
  # Incoterm\n
  if ((order.getIncotermValue() is None) or force == 1) and \\\n
     (trade_condition.getIncotermValue() is not None) :\n
    order.setIncotermList( (trade_condition.getIncotermValue().getRelativeUrl(),))\n
\n
  # copy Discount if no one is defined on Order\n
  discount_portal_type = \'Discount\'\n
  if (len(order.contentIds(filter={\'portal_type\':discount_portal_type})) == 0) or force == 1 :\n
    if force ==1:\n
      to_delete=order.contentIds(filter={\'portal_type\':discount_portal_type})\n
      order.manage_delObjects(to_delete)\n
    to_copy=[]\n
    to_copy=trade_condition.contentIds(filter={\'portal_type\':discount_portal_type})\n
    if len(to_copy)>0 :\n
     copy_data = trade_condition.manage_copyObjects(ids=to_copy)\n
     new_id_list = order.manage_pasteObjects(copy_data)\n
\n
  # Update specialise value of Order\n
  order.setSpecialiseList((trade_condition.getRelativeUrl(),))\n
  order.recursiveReindexObject()\n
\n
  redirect_url = \'%s/%s?%s\' % (context.absolute_url(), form_id, \n
                               \'portal_status_message=Order+updated.\')\n
\n
if batch_mode:\n
  return None\n
else:\n
  context.REQUEST[ \'RESPONSE\' ].redirect( redirect_url )\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_dav_writelocks</string> </key>
            <value>
              <persistent> <string encoding="base64">AAAAAAAAAAI=</string> </persistent>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value> <string>Script (Python):/erp5/portal_skins/erp5_trade/SaleOrder_applySaleTradeCondition</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>form_id,batch_mode=0,force=1</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>3</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>form_id</string>
                            <string>batch_mode</string>
                            <string>force</string>
                            <string>context</string>
                            <string>order</string>
                            <string>trade_condition_list</string>
                            <string>trade_condition_portal_type</string>
                            <string>_getattr_</string>
                            <string>len</string>
                            <string>redirect_url</string>
                            <string>_getitem_</string>
                            <string>trade_condition</string>
                            <string>categories</string>
                            <string>None</string>
                            <string>DateTime</string>
                            <string>_getiter_</string>
                            <string>object</string>
                            <string>payment_condition_portal_type</string>
                            <string>to_delete</string>
                            <string>to_copy</string>
                            <string>copy_data</string>
                            <string>new_id_list</string>
                            <string>discount_portal_type</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <int>0</int>
                <int>1</int>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>SaleOrder_applySaleTradeCondition</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
  <record id="2" aka="AAAAAAAAAAI=">
    <pickle>
      <tuple>
        <tuple>
          <string>Persistence</string>
          <string>PersistentMapping</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_container</string> </key>
            <value>
              <dictionary/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
