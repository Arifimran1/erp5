<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

# check that we don\'t have both incoming and outgoing line on the document\n
from Products.DCWorkflow.DCWorkflow import ValidationFailed\n
from Products.ERP5Type.Message import Message\n
\n
transaction = state_change[\'object\']\n
date = transaction.getStartDate()\n
\n
if transaction.getResourceValue() is None:\n
  raise ValidationFailed, Message(domain="ui", message="No resource defined.")\n
\n
user_id = transaction.portal_membership.getAuthenticatedMember().getUserName()\n
site_list = context.Baobab_getUserAssignedSiteList(user_id=user_id)\n
# context.log(\'validateVaultBalance site_list\',site_list)\n
source = transaction.getSource()\n
baobab_source = None\n
for site in site_list:\n
  site_value = context.portal_categories.getCategoryValue(site)\n
  if site_value.getVaultType().endswith(\'guichet\') and source in site:\n
    baobab_source = site + \'/encaisse_des_billets_et_monnaies/entrante\'\n
    break\n
source = baobab_source\n
source_object = context.portal_categories.getCategoryValue(source)\n
\n
# check again that we are in the good accounting date\n
if not transaction.Baobab_checkCounterDateOpen(site=source_object, date=date):\n
  msg = Message(domain = "ui", message="Transaction not in the good accounting date")\n
  raise ValidationFailed, (msg,)\n
\n
\n
in_list = transaction.objectValues(portal_type=\'Incoming Account Incident Line\')\n
out_list = transaction.objectValues(portal_type=\'Outgoing Account Incident Line\')\n
vault = "%s/surface/caisse_courante/encaisse_des_billets_et_monnaies" %(transaction.getSource(),)\n
price = transaction.getSourceTotalAssetPrice()\n
in_price = transaction.getTotalPrice(portal_type=[\'Incoming Account Incident Line\',\'Cash Delivery Cell\'],fast=0)\n
out_price = transaction.getTotalPrice(portal_type=[\'Outgoing Account Incident Line\',\'Cash Delivery Cell\'],fast=0)\n
\n
if len(in_list) != 0 and len(out_list) != 0:\n
  msg = Message(domain = "ui", message="You can\'t have excess and deficit on the document.")\n
  raise ValidationFailed, (msg,)\n
elif len(in_list) == 0 and len(out_list) == 0:\n
  msg = Message(domain = "ui", message="No resource.")\n
  raise ValidationFailed, (msg,)\n
elif len(out_list) !=0:\n
  #resource = transaction.CashDelivery_checkCounterInventory(source=vault, portal_type=\'Outgoing Account Incident Line\')\n
  resource = transaction.CashDelivery_checkCounterInventory(source=vault, portal_type=\'Outgoing Account Incident Line\')\n
  if resource <> 0 :\n
    msg = Message(domain="ui", message="Insufficient Balance.")\n
    raise ValidationFailed, (msg,)\n
elif (in_price != 0 and in_price != price) or (out_price != 0 and out_price != price):\n
  msg = Message(domain = "ui", message="Price differs between document and resource.")\n
  raise ValidationFailed, (msg,)\n
\n
# Now we will validate the accounting position\n
transaction = state_change[\'object\']\n
bank_account = transaction.getDestinationPaymentValue()\n
price = transaction.ERP5Banking_getExchangeValue()\n
line = transaction.get(\'movement\')\n
\n
in_list = transaction.objectValues(portal_type=\'Incoming Account Incident Line\')\n
out_list = transaction.objectValues(portal_type=\'Outgoing Account Incident Line\')\n
\n
debit=0\n
if (len(in_list)!= 0):  \n
  line.setSourceCredit(price)\n
\n
elif (len(out_list) != 0) :\n
  debit=1\n
  line.setSourceDebit(price)\n
\n
# this prevents multiple transactions from being committed at the same time for this bank account.\n
bank_account.serialize()\n
\n
# Make sure there are no other operations pending for this account\n
if transaction.BankAccount_isMessagePending(bank_account):\n
  msg = Message(domain=\'ui\', message="There are operations pending for this account that prevent form calculating its position. Please try again later.")\n
  raise ValidationFailed, (msg,)\n
\n
# Index the banking operation line so it impacts account position\n
transaction.BankingOperationLine_index(line)\n
\n
if debit:\n
  # Test if the account balance is sufficient.\n
  error = transaction.BankAccount_checkAvailableBalance(bank_account.getRelativeUrl(), price)\n
  if error[\'error_code\'] == 1:\n
    msg = Message(domain=\'ui\', message="Bank account is not sufficient.")\n
    raise ValidationFailed, (msg,)\n
  elif error[\'error_code\'] == 2:\n
    msg = Message(domain=\'ui\', message="Bank account is not valid.")\n
    raise ValidationFailed, (msg,)\n
  elif error[\'error_code\'] != 0:\n
    msg = Message(domain=\'ui\', message="Unknown error code.")\n
    raise ValidationFailed, (msg,)\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>state_change</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>1</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>state_change</string>
                            <string>Products.DCWorkflow.DCWorkflow</string>
                            <string>ValidationFailed</string>
                            <string>Products.ERP5Type.Message</string>
                            <string>Message</string>
                            <string>_getitem_</string>
                            <string>transaction</string>
                            <string>_getattr_</string>
                            <string>date</string>
                            <string>None</string>
                            <string>user_id</string>
                            <string>context</string>
                            <string>site_list</string>
                            <string>source</string>
                            <string>baobab_source</string>
                            <string>_getiter_</string>
                            <string>site</string>
                            <string>site_value</string>
                            <string>source_object</string>
                            <string>msg</string>
                            <string>in_list</string>
                            <string>out_list</string>
                            <string>vault</string>
                            <string>price</string>
                            <string>in_price</string>
                            <string>out_price</string>
                            <string>len</string>
                            <string>resource</string>
                            <string>bank_account</string>
                            <string>line</string>
                            <string>debit</string>
                            <string>error</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>checkConsistencyAndValidatePositionAccounting</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
