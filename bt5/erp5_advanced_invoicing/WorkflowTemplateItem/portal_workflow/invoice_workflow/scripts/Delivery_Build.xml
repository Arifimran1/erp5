<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>"""\n
  Builds the delivery.\n
"""\n
from Products.ERP5Type.Log import log\n
delivery = sci[\'object\']\n
delivery_portal_type = delivery.getPortalType()\n
portal_deliveries = sci.getPortal().portal_deliveries\n
\n
builder_by_ptype = {\n
  \'Sale Invoice\' : \'advanced_sale_invoice_transaction_builder\',\n
  \'Purchase Invoice\' : \'advanced_purchase_invoice_transaction_builder\',\n
}\n
\n
if builder_by_ptype.has_key(delivery_portal_type) :\n
  builder = getattr(portal_deliveries, builder_by_ptype[delivery_portal_type], None)\n
  if builder is None :\n
    log(\'erp5_advanced_invoicing\',\n
        \'unable to build : no builder in %s\' % builder_by_ptype[delivery_portal_type])\n
    return\n
\n
  # build accounting lines\n
  method_id_list = (\'expand\', \'edit\', \'updateAppliedRule\', \'Delivery_updateAppliedRule\',\n
                    \'immediateReindexObject\', \'recursiveImmediateReindexObject\')\n
\n
  explanation_uid_list = [delivery.getUid(), ]\n
  packing_list = delivery.getCausalityValue(\n
                             portal_type=(\'Sale Packing List\',\n
                                          \'Purchase Packing List\'))\n
  if packing_list is not None:\n
    explanation_uid_list.append(packing_list.getUid())\n
    order = packing_list.getCausalityValue(\n
                             portal_type=(\'Sale Order\',\n
                                          \'Purchase Order\'))\n
    if order is not None:\n
      explanation_uid_list.append(order.getUid())\n
\n
\n
  tag = \'invoice_transaction_build_%s\' % delivery.getRelativeUrl()\n
  builder.activate(\n
      activity=\'SQLQueue\',\n
      after_method_id=method_id_list,\n
      tag=tag,\n
      activate_kw=dict(tag=tag)).build(activate_kw=dict(tag=tag),\n
                                       explanation_uid=explanation_uid_list)\n
\n
  # build related payment transactions\n
  portal_deliveries.payment_transaction_builder.activate(\n
                              activity=\'SQLQueue\',\n
                              after_method_id=method_id_list).build(explanation_uid=explanation_uid_list)\n
\n
  # set the object in building state.\n
  delivery.startBuilding()\n
  delivery.activate(after_tag=tag).updateCausalityState()\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>sci</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Delivery_Build</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
