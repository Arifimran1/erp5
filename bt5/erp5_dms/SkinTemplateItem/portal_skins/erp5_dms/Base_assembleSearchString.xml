<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>"""\n
This script receives a request from advanced search form and \n
puts together a search string in a search syntax, depending on\n
parameters received. It is the reverse of Base_parseSearchString external\n
method.\n
"""\n
req = context.REQUEST\n
\n
search_straight = req.get(\'searchabletext\', \'\')\n
if search_straight != \'\':\n
  return search_straight\n
\n
# words to search in \'any of the words\' form - left intact\n
search_string = req.get(\'searchabletext_any\',\'\')\n
\n
# exact phrase to search for - double-quoted\n
search_phrase = req.get(\'searchabletext_phrase\',\'\')\n
if search_phrase != "":\n
  search_string += \' "\' + search_phrase + \'"\'\n
\n
# search "with all of the words" - each word prefixed by "+"\n
search_all = req.get(\'searchabletext_all\',\'\')\n
if search_all != "":\n
  search_string += \' \' + \' \'.join(\'+\' + word for word in search_all.split(\' \'))\n
\n
# search without these words - every word prefixed by "-"\n
search_without = req.get(\'searchabletext_without\',\'\')\n
if search_without!="":\n
  search_string += \' \' + \' \'.join(\'-\' + word for word in search_without.split(\' \'))\n
\n
# search limited to a certain date range - add "created:xxx"\n
daterange = req.get(\'created_within\',\'\')\n
if daterange!=\'\':\n
  search_string += \' created:\' + daterange\n
\n
# only given portal_types - add "type:Type" or type:(Type1,Type2...)\n
portal_type_list = req.get(\'search_portal_type\')\n
if portal_type_list == \'all\':\n
  portal_type_list=None\n
if isinstance(portal_type_list,str):\n
  portal_type_list=[portal_type_list]\n
if portal_type_list:\n
  if len(portal_type_list)==1:\n
    search_string += \' type:"%s"\' % portal_type_list[0]\n
  else:\n
    search_string += \' type:(%s)\' % \',\'.join(portal_type_list)\n
\n
# search by reference\n
ref = req.get(\'reference\')\n
if ref:\n
  search_string += \' reference:%s\' % ref\n
\n
# search by version\n
ver = req.get(\'version\')\n
if ver:\n
  search_string += \' version:%s\' % ver\n
\n
# search by language\n
lng=req.get(\'language\')\n
if lng and lng != \'0\':\n
  search_string += \' language:%s\' % lng\n
\n
# category search\n
for category in (\'group\', \'site\', \'function\', \'publication_section\', \'classification\'):\n
  category_value = req.get(\'subfield_field_your_category_list_\' + category)\n
  if category_value:\n
    search_string += \' %s:%s\' % (category, category_value)\n
\n
# Category title search\n
for category in (\'contributor_title\', ):\n
  category_value = req.get(category)\n
  if category_value:\n
    search_string += \' %s:%s\' % (category, category_value)\n
\n
\n
#only my docs\n
mine = req.get(\'mine\')\n
if mine:\n
  search_string += \' mine:yes\'\n
\n
# only newest versions\n
newest = req.get(\'newest\')\n
if newest:\n
  search_string += \' newest:yes\'\n
\n
# search mode\n
search_mode = req.get(\'search_mode\')\n
search_mode_map={\'in_boolean_mode\':\'boolean\',\'with_query_expansion\':\'expanded\'}\n
if search_mode and search_mode_map.has_key(search_mode):\n
  search_string += \' mode:%s\' % search_mode_map[search_mode]\n
\n
return search_string\n
</string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>*a,**kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>a</string>
                            <string>kw</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>req</string>
                            <string>search_straight</string>
                            <string>search_string</string>
                            <string>search_phrase</string>
                            <string>_inplacevar_</string>
                            <string>search_all</string>
                            <string>_getiter_</string>
                            <string>search_without</string>
                            <string>daterange</string>
                            <string>portal_type_list</string>
                            <string>None</string>
                            <string>isinstance</string>
                            <string>str</string>
                            <string>len</string>
                            <string>_getitem_</string>
                            <string>ref</string>
                            <string>ver</string>
                            <string>lng</string>
                            <string>category</string>
                            <string>category_value</string>
                            <string>mine</string>
                            <string>newest</string>
                            <string>search_mode</string>
                            <string>search_mode_map</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Base_assembleSearchString</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
