<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

"""\n
  This script is used in listbox allowing when switching \'table\' --> \'search\' mode.\n
  It will try to generate parts of the document\'s text \n
  containing searched words as well highlighting the searched \n
  words in the text itself.\n
"""\n
# convert object to text (if possible)\n
document_text = \'\'\n
if hasattr(context, \'asText\'):\n
  document_text = context.asText()\n
\n
# get search words from listbox selection\n
argument_names = (\'advanced_search_text\', \n
                  \'title\',\n
                  \'reference\',\n
                  \'SearchableText\', \n
                  \'SearchableText_any\',\n
                  \'SearchableText_all\', \n
                  \'SearchableText_phrase\',)\n
if selection is not None:\n
  params = selection.getParams()\n
else:\n
  params = context.portal_selections.getSelectionParamsFor(\'web_search_result_selection\')\n
\n
params = [params.get(name, \'\') for name in argument_names]\n
params = [(hasattr(par, \'sort\') and \'\'.join(par) or par) for par in params]\n
search_string = \' \'.join(params)\n
\n
if not search_string:\n
  # if the searched text is empty \n
  # (e.g. because the listbox uses its own method)\n
  return document_text[:300]\n
\n
search_argument_list = context.parseSearchString(search_string)\n
search_words = search_argument_list.get(\'SearchableText\')\n
\n
if search_words in (\'\', None,):\n
  # the searched words are empty (e.g. because we used only parameters \n
  # without pure searchable text)\n
  result = \'\'\n
  if document_text not in (\'\', None):\n
    if not isinstance(document_text, str): \n
      document_text = str(document_text)\n
    # try to get somewhat arbitrary choice of searchable attrs\n
    result = document_text[min(len(document_text) - 300, 200) : 1500]\n
  return result\n
\n
# get fragments of text containing searched words\n
found_text_fragments = context.cutFound(context, \n
                                        document_text, \n
                                        search_words, \n
                                        tags = (\'<div style="font-weight:bold;display:inline;">\', \'</div>\'), \n
                                        trail = 5, \n
                                        maxlines = 5)\n
return \' \'.join(map(str, found_text_fragments))\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_owner</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>brain, selection=None</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>2</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>brain</string>
                            <string>selection</string>
                            <string>document_text</string>
                            <string>hasattr</string>
                            <string>context</string>
                            <string>_getattr_</string>
                            <string>argument_names</string>
                            <string>None</string>
                            <string>params</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>_getiter_</string>
                            <string>name</string>
                            <string>par</string>
                            <string>search_string</string>
                            <string>_getitem_</string>
                            <string>search_argument_list</string>
                            <string>search_words</string>
                            <string>result</string>
                            <string>isinstance</string>
                            <string>str</string>
                            <string>min</string>
                            <string>len</string>
                            <string>found_text_fragments</string>
                            <string>map</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <tuple>
                <none/>
              </tuple>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Base_showFoundText</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
