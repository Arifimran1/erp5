<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <tuple>
          <string>Products.PythonScripts.PythonScript</string>
          <string>PythonScript</string>
        </tuple>
        <none/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Python_magic</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>__ac_local_roles__</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

"""\n
  Used by email ingestor (Document_ingestEmail) to notify the user\n
  about ingestion of a document (can also be used by other ingestion channels).\n
  Checks consistency and lets the user know if everything is ok (this is a bit of a duplication\n
  because consistency is checked also upon an attempt to validate).\n
\n
  Preferences decide if the notification is sent always, only if something is wrong or never.\n
\n
  Notifcation contains url of the document, so that one can click and do something.\n
"""\n
\n
# check if we send or not email at all\n
original_email = kw.get(\'original_email\', None)\n
portal = context.getPortalObject()\n
portal_preferences = portal.portal_preferences\n
portal_catalog = portal.portal_catalog\n
pref = portal_preferences.getPreferredDocumentIngestionEmailNotification()\n
if pref is not None and len(pref) != 0:\n
  pref=pref[0]\n
  if pref == \'never\':\n
    # do not send any email notifications at all \n
    return\n
  \n
if event in (\'ingestion_success\',):\n
  # successful ingestion socheck if ingested document is consistent\n
  if doc.getPortalType() == \'Memo\': \n
    # we don\'t check constistency for Memo XXX use type groups, or what?\n
    isObjectConsistent = True\n
  else:\n
    consistency_result = doc.checkConsistency()\n
    consistency_result = [x for x in consistency_result if x[1] == \'DocumentCoordinatesConstraint inconsistency\']\n
    isObjectConsistent = len(consistency_result) == 0\n
  if not isObjectConsistent:\n
    error_msg = \'<br/>\'.join(str(x[3]) for x in consistency_result)\n
    subject_template =  \'[DMS] Failure ingestion %(name)s\'\n
    email_template = """Your document "%(name)s" was not successfuly ingested.\n
  \n
  The following problems were detected:\n
\n
  %(error_msg)s\n
  \n
  click here: %(url)s/view to proceed and fix the problems.\n
  """\n
  else:\n
    error_msg = \'\'\n
    subject_template = \'[DMS] Successful ingestion for %(name)s\'\n
    email_template = """Your document "%(name)s" was successfully ingested.\n
\n
click here: %(url)s/view to proceed with your work."""\n
elif event in (\'ingestion_failure\',):\n
  # there was an error during ingestion process, inform user to try again\n
  error_msg = kw.get(\'message\', \'Failure during ingestion.\') \n
  subject_template =  \'[DMS] Unsuccessful ingestion\'\n
  email_template = """Your document was not successfuly ingested.\n
  \n
The following problems were detected:\n
\n
  %(error_msg)s\n
  \n
Please try again after some time. \n
We applogize for inconvinience."""\n
  \n
  \n
# compose email\n
email_from = portal_preferences.getPreferredDocumentEmailIngestionAddress()\n
email_kw = dict(error_msg = error_msg)\n
\n
# not always we have ingested document passed (i.e when failure happens)\n
if getattr(doc, \'getSourceReference\', None) is not None:\n
  subject = subject_template % {\'name\': doc.getSourceReference()}\n
  email_kw[\'name\'] = doc.getSourceReference()\n
  email_kw[\'url\'] = doc.absolute_url()\n
else:\n
  subject = subject_template\n
\n
# get original email text\n
original_email_text = None\n
if original_email is not None:\n
  original_email_text = \'Subject:%s\\n\\nBody:\\n%s\'  %(original_email[\'headers\'][\'subject\'], \n
                                                     original_email[\'body\'])\n
email_text = email_template % email_kw\n
# add part of original email if failure happens\n
if event in (\'ingestion_failure\',) and original_email_text is not None:\n
  email_text = \'%s\\n\\n%s\\nOriginal email text (see below):\\n\\n%s\' %(email_text, \n
                                                                  \'=\'*80, \n
                                                                  original_email_text)\n
# send email\n
context.MailHost.send(email_text, \n
                      email_to, \n
                      email_from, \n
                      subject)\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_filepath</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>email_to, event, doc, **kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>3</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>email_to</string>
                            <string>event</string>
                            <string>doc</string>
                            <string>kw</string>
                            <string>_getattr_</string>
                            <string>None</string>
                            <string>original_email</string>
                            <string>context</string>
                            <string>portal</string>
                            <string>portal_preferences</string>
                            <string>portal_catalog</string>
                            <string>pref</string>
                            <string>len</string>
                            <string>_getitem_</string>
                            <string>True</string>
                            <string>isObjectConsistent</string>
                            <string>consistency_result</string>
                            <string>append</string>
                            <string>$append0</string>
                            <string>_getiter_</string>
                            <string>x</string>
                            <string>error_msg</string>
                            <string>subject_template</string>
                            <string>email_template</string>
                            <string>email_from</string>
                            <string>dict</string>
                            <string>email_kw</string>
                            <string>getattr</string>
                            <string>subject</string>
                            <string>_write_</string>
                            <string>original_email_text</string>
                            <string>email_text</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Document_notifyByEmail</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
