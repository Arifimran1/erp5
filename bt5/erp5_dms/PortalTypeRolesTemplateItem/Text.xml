<type_roles>
  <role id='Associate'>
   <property id='title'>Project Assignees</property>
   <property id='description'>Policy: personal/project
Rule: all project members have a right to access document once it has been shared or released</property>
   <property id='condition'>python:object.getSourceProject() and object.isMemberOf('classification/personal/project')</property>
   <property id='priority'>10</property>
   <property id='base_category_script'>ERP5Type_getSecurityCategoryFromArrow</property>
   <multi_property id='category'></multi_property>
   <multi_property id='base_category'>source_project</multi_property>
  </role>
  <role id='Assignor'>
   <property id='title'>P/P - Project Director</property>
   <property id='description'>Policy: personal/project
Rule: project director is an Assignor (has management rights to the doc - can review it, release, publish, add local roles)</property>
   <property id='condition'>python:object.getSourceProject() and object.isMemberOf('classification/personal/project')</property>
   <property id='priority'>10</property>
   <property id='base_category_script'>ERP5Type_getSecurityCategoryFromArrow</property>
   <multi_property id='category'>function/project/director</multi_property>
   <multi_property id='base_category'>source_project</multi_property>
   <multi_property id='base_category'>function</multi_property>
  </role>
  <role id='Assignee'>
   <property id='title'>P/P - Project Owner</property>
   <property id='description'>Policy: personal/project
Rule: the creator is Assignee - can edit the doc and share it with the team</property>
   <property id='condition'>python:object.getSourceProject() and object.isMemberOf('classification/personal/project')</property>
   <property id='priority'>10</property>
   <property id='base_category_script'>ERP5Type_getSecurityCategoryFromUser</property>
   <multi_property id='category'></multi_property>
   <multi_property id='base_category'>reference</multi_property>
  </role>
  <role id='Auditor'>
   <property id='title'>P/P - Organisation members</property>
   <property id='description'>Policy: personal/project
Rule: all people working for the same organisation are Auditors (we identify the organisation by the first part of the "group" path)</property>
   <property id='condition'>python:object.getSourceProject() and object.isMemberOf('classification/personal/project')</property>
   <property id='priority'>10</property>
   <property id='base_category_script'>ERP5Type_getSecurityCategoryRoot</property>
   <multi_property id='category'></multi_property>
   <multi_property id='base_category'>group</multi_property>
  </role>
</type_roles>