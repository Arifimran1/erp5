<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string>setters = []\n
if hasattr(line, \'setter\'):\n
  setter = getattr(line, \'setter\')\n
  if setter != \'\':\n
     setters.append((setter, line.DocumentationHelper_getSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'list_setter\'):\n
  list_setter = getattr(line, \'list_setter\')\n
  if list_setter != \'\':\n
     setters.append((list_setter, line.DocumentationHelper_getListSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'set_setter\'):\n
  set_setter = getattr(line, \'set_setter\')\n
  if set_setter != \'\':\n
     setters.append((set_setter, line.DocumentationHelper_getSetSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'default_setter\'):\n
  default_setter = getattr(line, \'default_setter\')\n
  if default_setter != \'\':\n
     setters.append((default_setter, line.DocumentationHelper_getDefaultSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_setter\'):\n
  private_setter = getattr(line, \'private_setter\')\n
  if private_setter != \'\':\n
     setters.append((private_setter, line.DocumentationHelper_getPrivateSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_base_setter\'):\n
  private_base_setter = getattr(line, \'private_base_setter\')\n
  if private_base_setter != \'\':\n
     setters.append((private_base_setter, line.DocumentationHelper_getPrivateBaseSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_base_list_setter\'):\n
  private_base_list_setter = getattr(line, \'private_base_list_setter\')\n
  if private_base_list_setter != \'\':\n
     setters.append((private_base_list_setter, line.DocumentationHelper_getPrivateBaseListSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_base_set_setter\'):\n
  private_base_set_setter = getattr(line, \'private_base_set_setter\')\n
  if private_base_set_setter != \'\':\n
     setters.append((private_base_set_setter, line.DocumentationHelper_getPrivateBaseSetSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_base_default_setter\'):\n
  private_base_default_setter = getattr(line, \'private_base_default_setter\')\n
  if private_base_default_setter != \'\':\n
     setters.append((private_base_default_setter, line.DocumentationHelper_getPrivateBaseDefaultSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_default_setter\'):\n
  private_default_setter = getattr(line, \'private_default_setter\')\n
  if private_default_setter != \'\':\n
     setters.append((private_default_setter, line.DocumentationHelper_getPrivateDefaultSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_list_setter\'):\n
  private_list_setter = getattr(line, \'private_list_setter\')\n
  if private_list_setter != \'\':\n
     setters.append((private_list_setter, line.DocumentationHelper_getPrivateListSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'private_set_setter\'):\n
  private_set_setter = getattr(line, \'private_set_setter\')\n
  if private_set_setter != \'\':\n
     setters.append((private_set_setter, line.DocumentationHelper_getPrivateSetSetterAccessorMethodUrl(line)))\n
if hasattr(line, \'tester\'):\n
  tester = getattr(line, \'tester\')\n
  if tester != \'\':\n
     setters.append((tester, line.DocumentationHelper_getTesterAccessorMethodUrl(line)))\n
return setters\n
</string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>line</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>PortalTypeDocumentationHelper_getSetterList</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
