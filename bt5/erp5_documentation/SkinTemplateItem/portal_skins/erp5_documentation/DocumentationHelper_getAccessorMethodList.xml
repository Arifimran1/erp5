<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <tuple>
        <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
        <tuple/>
      </tuple>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

from Products.ERP5Type.Utils import convertToUpperCase\n
\n
property_id_list = context.getStandardPropertyIdList() + context.getContentPropertyIdList()\n
property_id_dict = {}\n
category_id_list = context.getPortalObject().portal_categories.objectIds()\n
category_id_dict = {}\n
\n
for property_id in property_id_list:\n
  property_id_dict[convertToUpperCase(property_id)] = property_id\n
\n
for category_id in category_id_list:\n
  category_id_dict[convertToUpperCase(category_id)] = category_id\n
\n
#return property_id_dict.keys()\n
\n
\n
def normalise(s):\n
  suffix = \'\'\n
  accessor_type = \'unknown\'\n
  property_type = None\n
  prefix_type = \'\'\n
  postfix_type = \'\'\n
  while s[0] == \'_\':\n
    s = s[1:]\n
    suffix = \'private_\'\n
  if s.startswith(\'base\') or s.startswith(\'category\'):\n
    suffix += \'base_\'\n
    if s.startswith(\'base\'):\n
      s = s[4:]\n
      property_type = \'Property\'\n
    else:\n
      s = s[8:]\n
      property_type = \'Category\'\n
  if s.endswith(\'Ids\'):\n
    s = s[:-3]\n
    suffix = \'deprecated_ids\'\n
  elif s.endswith(\'Values\'):\n
    s = s[:-3]\n
    suffix = \'deprecated_values\'\n
  elif s.startswith(\'is\') or s.startswith(\'Is\'):\n
    s = s[2:]\n
    accessor_type = \'boolean_getter\'\n
  elif s.startswith(\'get\') or s.startswith(\'Get\'):\n
    s = s[3:]\n
    if s.endswith(\'List\'):\n
      s = s[:-4]\n
      accessor_type = \'list_getter\'\n
    elif s.endswith(\'Set\'):\n
      s = s[:-3]\n
      accessor_type = \'set_getter\'\n
    elif s.startswith(\'Default\'):\n
      s = s[7:]\n
      accessor_type = \'default_getter\'\n
    else:\n
      accessor_type = \'getter\'\n
  elif s.startswith(\'set\') or s.startswith(\'Set\'):\n
    s = s[3:]\n
    if s.endswith(\'List\'):\n
      s = s[:-4]\n
      accessor_type = \'list_setter\'\n
    elif s.endswith(\'Set\'):\n
      s = s[:-3]\n
      accessor_type = \'set_setter\'\n
    elif s.startswith(\'Default\'):\n
      s = s[7:]\n
      accessor_type = \'default_setter\'\n
    else:\n
      accessor_type = \'setter\'\n
  finished = 0\n
  key_list = property_id_dict.keys()\n
  while not finished and s not in property_id_dict and s not in category_id_dict:\n
    new_s = \'\'\n
    for key in key_list:\n
      if s.startswith(key):\n
        # Only consider the longest possible key\n
        if len(key) > len(new_s):\n
          new_s = key\n
          finished = 1\n
    if finished:\n
      postfix_type = s[len(new_s):] + postfix_type\n
      s = new_s\n
      break\n
    if s.startswith(\'Translated\'):\n
      prefix_type = prefix_type + \'Translated\'\n
      s = s[10:]\n
    elif s.startswith(\'Default\'):\n
      prefix_type = prefix_type + \'Default\'\n
      s = s[7:]\n
    elif s.endswith(\'LogicalPath\'):\n
      postfix_type = \'LogicalPath\' + postfix_type\n
      s = s[:-11]\n
    elif s.endswith(\'FreeText\'):\n
      postfix_type = \'FreeText\' + postfix_type\n
      s = s[:-8]\n
    elif s.endswith(\'Item\'):\n
      postfix_type = \'Item\' + postfix_type\n
      s = s[:-4]\n
    elif s.endswith(\'TitleOrId\'):\n
      postfix_type = \'TitleOrId\' + postfix_type\n
      s = s[:-9]\n
    elif s.endswith(\'Value\'):\n
      postfix_type = \'Value\' + postfix_type\n
      s = s[:-5]\n
    elif s.endswith(\'Reference\'):\n
      postfix_type = \'Reference\' + postfix_type\n
      s = s[:-9]\n
    elif s.endswith(\'Property\'):\n
      postfix_type = \'Property\' + postfix_type\n
      s = s[:-8]\n
    elif s.endswith(\'TranslatedTitle\'):\n
      postfix_type = \'TranslatedTitle\' + postfix_type\n
      s = s[:-15]\n
    elif s.endswith(\'Title\'):\n
      postfix_type = \'Title\' + postfix_type\n
      s = s[:-5]\n
    elif s.endswith(\'TranslationDomain\'):\n
      postfix_type = \'TranslationDomain\' + postfix_type\n
      s = s[:-17]\n
    elif s.endswith(\'Id\'):\n
      postfix_type = \'Id\' + postfix_type\n
      s = s[:-2]\n
    elif s.endswith(\'Uid\'):\n
      postfix_type = \'Uid\' + postfix_type\n
      s = s[:-3]\n
    else:\n
      finished = 1\n
  if s in property_id_dict:\n
    s = property_id_dict[s]\n
    property_type = \'Property\'\n
  elif s in category_id_dict:\n
    s = category_id_dict[s]\n
    property_type = \'Category\'\n
  return s, suffix + accessor_type, property_type, prefix_type, postfix_type\n
\n
def compareId(a, b):\n
  return cmp((a.id, a.postfix_type, a.prefix_type),\n
             (b.id, b.postfix_type, b.prefix_type))\n
\n
method_list = context.getAccessorMethodIdList()\n
result_dict = {}\n
for method_id in method_list:\n
  id, accessor_type, property_type, prefix_type, postfix_type = normalise(method_id)\n
  if not accessor_type.startswith(\'deprecated\'):\n
    key = (id, prefix_type, postfix_type)\n
    result_dict.setdefault(key, {})[accessor_type] = method_id\n
    if property_type:\n
      result_dict.setdefault(key, {})[\'type\'] = property_type\n
\n
request = context.REQUEST\n
base_uri = request.get(\'uri\', None)\n
if base_uri is None:\n
  base_uri = request.get(\'field_your_uri\')\n
\n
\n
result = map(\n
  lambda key: context.asContext(base_uri=base_uri, id=key[0], prefix_type=key[1], postfix_type=key[2], **result_dict[key]),\n
  result_dict.keys()\n
)\n
result.sort(compareId)\n
return result\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_code</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>**kw</string> </value>
        </item>
        <item>
            <key> <string>errors</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
        <item>
            <key> <string>func_code</string> </key>
            <value>
              <object>
                <klass>
                  <global name="FuncCode" module="Shared.DC.Scripts.Signature"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>co_argcount</string> </key>
                        <value> <int>0</int> </value>
                    </item>
                    <item>
                        <key> <string>co_varnames</string> </key>
                        <value>
                          <tuple>
                            <string>kw</string>
                            <string>Products.ERP5Type.Utils</string>
                            <string>convertToUpperCase</string>
                            <string>_getattr_</string>
                            <string>context</string>
                            <string>property_id_list</string>
                            <string>property_id_dict</string>
                            <string>category_id_list</string>
                            <string>category_id_dict</string>
                            <string>_getiter_</string>
                            <string>property_id</string>
                            <string>_write_</string>
                            <string>category_id</string>
                            <string>normalise</string>
                            <string>compareId</string>
                            <string>method_list</string>
                            <string>result_dict</string>
                            <string>method_id</string>
                            <string>id</string>
                            <string>accessor_type</string>
                            <string>property_type</string>
                            <string>prefix_type</string>
                            <string>postfix_type</string>
                            <string>key</string>
                            <string>request</string>
                            <string>None</string>
                            <string>base_uri</string>
                            <string>map</string>
                            <string>result</string>
                          </tuple>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>func_defaults</string> </key>
            <value>
              <none/>
            </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>DocumentationHelper_getAccessorMethodList</string> </value>
        </item>
        <item>
            <key> <string>warnings</string> </key>
            <value>
              <tuple/>
            </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
