<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts40515059.46</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>config-sample.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string>// DO NOT EDIT THIS FILE!\r\n
// THIS FILE IS JUST A SAMPLE; TO APPLY, YOU MUST\r\n
//   CREATE A NEW FILE config.js AND ADD CONTENTS\r\n
//   SUCH AS SHOWN BELOW INTO THAT FILE.\r\n
\r\n
/*globals svgEditor*/\r\n
/*\r\n
The config.js file is intended for the setting of configuration or\r\n
  preferences which must run early on; if this is not needed, it is\r\n
  recommended that you create an extension instead (for greater\r\n
  reusability and modularity).\r\n
*/\r\n
\r\n
// CONFIG AND EXTENSION SETTING\r\n
/*\r\n
See defaultConfig and defaultExtensions in svg-editor.js for a list\r\n
  of possible configuration settings.\r\n
\r\n
See svg-editor.js for documentation on using setConfig().\r\n
*/\r\n
\r\n
// URL OVERRIDE CONFIG\r\n
svgEditor.setConfig({\r\n
\t/**\r\n
\tTo override the ability for URLs to set URL-based SVG content,\r\n
\t    uncomment the following:\r\n
\t*/\r\n
\t// preventURLContentLoading: true,\r\n
\t/**\r\n
\tTo override the ability for URLs to set other configuration (including\r\n
\t    extensions), uncomment the following:\r\n
\t*/\r\n
\t// preventAllURLConfig: true,\r\n
\t/**\r\n
\tTo override the ability for URLs to set their own extensions,\r\n
\t  uncomment the following (note that if setConfig() is used in\r\n
\t  extension code, it will still be additive to extensions,\r\n
\t  however):\r\n
\t*/\r\n
\t// lockExtensions: true,\r\n
});\r\n
\r\n
svgEditor.setConfig({\r\n
\t/*\r\n
\tProvide default values here which differ from that of the editor but\r\n
\t\twhich the URL can override\r\n
\t*/\r\n
}, {allowInitialUserOverride: true});\r\n
\r\n
// EXTENSION CONFIG\r\n
svgEditor.setConfig({\r\n
\textensions: [\r\n
\t\t// \'ext-overview_window.js\', \'ext-markers.js\', \'ext-connector.js\', \'ext-eyedropper.js\', \'ext-shapes.js\', \'ext-imagelib.js\', \'ext-grid.js\', \'ext-polygon.js\', \'ext-star.js\', \'ext-panning.js\', \'ext-storage.js\'\r\n
\t]\r\n
\t// , noDefaultExtensions: false, // noDefaultExtensions can only be meaningfully used in config.js or in the URL\r\n
});\r\n
\r\n
// OTHER CONFIG\r\n
svgEditor.setConfig({\t\r\n
\t// canvasName: \'default\',\r\n
\t// canvas_expansion: 3,\r\n
\t// initFill: {\r\n
\t\t// color: \'FF0000\', // solid red\r\n
\t\t// opacity: 1\r\n
\t// },\r\n
\t// initStroke: {\r\n
\t\t// width: 5,\r\n
\t\t// color: \'000000\', // solid black\r\n
\t\t// opacity: 1\r\n
\t// },\r\n
\t// initOpacity: 1,\r\n
\t// colorPickerCSS: null,\r\n
\t// initTool: \'select\',\r\n
\t// wireframe: false,\r\n
\t// showlayers: false,\r\n
\t// no_save_warning: false,\r\n
\t// PATH CONFIGURATION\r\n
\t// imgPath: \'images/\',\r\n
\t// langPath: \'locale/\',\r\n
\t// extPath: \'extensions/\',\r\n
\t// jGraduatePath: \'jgraduate/images/\',\r\n
\t/*\r\n
\tUncomment the following to allow at least same domain (embedded) access,\r\n
\tincluding file:// access.\r\n
\tSetting as `[\'*\']` would allow any domain to access but would be unsafe to\r\n
\tdata privacy and integrity.\r\n
\t*/\r\n
\t// allowedOrigins: [window.location.origin || \'null\'], // May be \'null\' (as a string) when used as a file:// URL\r\n
\t// DOCUMENT PROPERTIES\r\n
\t// dimensions: [640, 480],\r\n
\t// EDITOR OPTIONS\r\n
\t// gridSnapping: false,\r\n
\t// gridColor: \'#000\',\r\n
\t// baseUnit: \'px\',\r\n
\t// snappingStep: 10,\r\n
\t// showRulers: true,\r\n
\t// EXTENSION-RELATED (GRID)\r\n
\t// showGrid: false, // Set by ext-grid.js\r\n
\t// EXTENSION-RELATED (STORAGE)\r\n
\t// noStorageOnLoad: false, // Some interaction with ext-storage.js; prevent even the loading of previously saved local storage\r\n
\t// forceStorage: false, // Some interaction with ext-storage.js; strongly discouraged from modification as it bypasses user privacy by preventing them from choosing whether to keep local storage or not\r\n
\t// emptyStorageOnDecline: true, // Used by ext-storage.js; empty any prior storage if the user declines to store\r\n
});\r\n
\r\n
// PREF CHANGES\r\n
/**\r\n
setConfig() can also be used to set preferences in addition to\r\n
  configuration (see defaultPrefs in svg-editor.js for a list of\r\n
  possible settings), but at least if you are using ext-storage.js\r\n
  to store preferences, it will probably be better to let your\r\n
  users control these.\r\n
As with configuration, one may use allowInitialUserOverride, but\r\n
  in the case of preferences, any previously stored preferences\r\n
  will also thereby be enabled to override this setting (and at a\r\n
  higher priority than any URL preference setting overrides).\r\n
  Failing to use allowInitialUserOverride will ensure preferences\r\n
  are hard-coded here regardless of URL or prior user storage setting.\r\n
*/\r\n
svgEditor.setConfig(\r\n
\t{\r\n
\t\t// lang: \'\', // Set dynamically within locale.js if not previously set\r\n
\t\t// iconsize: \'\', // Will default to \'s\' if the window height is smaller than the minimum height and \'m\' otherwise\r\n
\t\t/**\r\n
\t\t* When showing the preferences dialog, svg-editor.js currently relies\r\n
\t\t* on curPrefs instead of $.pref, so allowing an override for bkgd_color\r\n
\t\t* means that this value won\'t have priority over block auto-detection as\r\n
\t\t* far as determining which color shows initially in the preferences\r\n
\t\t* dialog (though it can be changed and saved).\r\n
\t\t*/\r\n
\t\t// bkgd_color: \'#FFF\',\r\n
\t\t// bkgd_url: \'\',\r\n
\t\t// img_save: \'embed\',\r\n
\t\t// Only shows in UI as far as alert notices\r\n
\t\t// save_notice_done: false,\r\n
\t\t// export_notice_done: false\r\n
\t}\r\n
);\r\n
svgEditor.setConfig(\r\n
\t{\r\n
\t\t// Indicate pref settings here if you wish to allow user storage or URL settings\r\n
\t\t//   to be able to override your default preferences (unless other config options\r\n
\t\t//   have already explicitly prevented one or the other)\r\n
\t},\r\n
\t{allowInitialUserOverride: true}\r\n
);\r\n
</string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>5251</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
