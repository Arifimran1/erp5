<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="ZopePageTemplate" module="Products.PageTemplates.ZopePageTemplate"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_text</string> </key>
            <value> <unicode encoding="cdata"><![CDATA[

<tal:block  \n
  tal:define="mode python: options.get(\'mode\', \'erp5_front\');\n
              default_pad_group python: options.get(\'default_pad_group\', \'\');\n
              knowledge_pads python:  here.ERP5Site_getKnowledgePadListForUser(mode=mode);\n
              struct python: here.ERP5Site_getActiveKnowledgePadForUser(knowledge_pads);\n
              global active_knowledge_pad python: struct[0];\n
              knowledge_pads python: struct[1];\n
              columns python: options.get(\'columns\', 3);\n
              hasUserActivity python:  here.ERP5Site_hasUserActivity(active_knowledge_pad,\n
                                                    mode=mode,\n
                                                    default_pad_group=default_pad_group);\n
              isAnon python: here.portal_membership.isAnonymousUser();\n
              createDefaultPadForUser  python: len(knowledge_pads)==0 and\n
                                               not hasUserActivity;\n
              waitForActivitiesOnServer python: active_knowledge_pad is None and\n
                                                hasUserActivity;\n
              isUserAllowedToCreateKnowledgePads\n
                       context/Base_isUserAllowedToUseKnowledgePad;\n
              isKnowledgePadTemplateUsed python:\n
                       request.get(\'is_knowledge_pad_template_used\', 0);\n
              isAnonymousKnowledgePadUsed python: request.get(\'use_anonymous_knowledge_pad\', False);\n
              cancel_url here/absolute_url;">\n
\n
  <div id="gadget_area_wrapper">\n
\n
    <tal:block tal:condition="python: not createDefaultPadForUser and \n
                                      not waitForActivitiesOnServer and\n
                                      active_knowledge_pad is not None">\n
\n
      <!-- Pad navigation -->\n
      <span metal:use-macro="container/Base_viewKnowledgePadMacroLibrary/macros/navigation"/>\n
\n
    <tal:block tal:condition="not: isAnon"> \n
      <span metal:use-macro="container/Base_viewKnowledgePadMacroLibrary/macros/knowledge_pad_security_check"/> \n
      <span metal:use-macro="container/Base_viewKnowledgePadMacroLibrary/macros/disable_server_integration"/>\n
      <span metal:use-macro="container/Base_viewKnowledgePadMacroLibrary/macros/disable_server_integration"/> \n
    </tal:block>\n
\n
      <!-- Render active Knowledge pad -->\n
      <span tal:condition="active_knowledge_pad"\n
            tal:replace="structure python: active_knowledge_pad.KnowledgePad_viewDashboardWidget(\n
                                                                  columns=columns,\n
                                                                  real_context=here,\n
                                                                  cancel_url=cancel_url)"/>\n
      \n
      <!-- Hidden dialogs -->\n
      <span metal:use-macro="container/Base_viewKnowledgePadMacroLibrary/macros/hidden_dialogs"/>\n
      \n
    </tal:block>\n
     \n
    <!-- Show message that default pad is being prepared. -->\n
    <div tal:condition="python: waitForActivitiesOnServer and \n
                                isUserAllowedToCreateKnowledgePads">\n
      <div class="wait_block">\n
        <h2 i18n:translate="" i18n:domain="ui"> \n
          Please wait until your home is being updated.</h2>\n
        <p i18n:translate="" i18n:domain="ui"> You\'ll be automatically redirected.</p>\n
        <script type="text/javascript" \n
                tal:content="string: checkForActivitiesOnServer(5000, \'view\', \'${mode}\', \'\');"/>\n
        </div>\n
    </div>\n
\n
    <!-- Create (asynch) default pad. -->\n
    <div tal:condition="python: not waitForActivitiesOnServer and \n
                                isUserAllowedToCreateKnowledgePads and\n
                                createDefaultPadForUser">\n
      <div class="wait_block">\n
        <h2 i18n:translate="" i18n:domain="ui"> \n
          Please wait until your tab is being prepared.\n
        </h2>\n
        <p i18n:translate="" i18n:domain="ui"> You\'ll be automatically redirected.</p>\n
        <script type="text/javascript"\n
                tal:content="string: createDefaultPadOnServer(5000, \'ERP5Site_createDefaultKnowledgePadListForUser\',\n
                                                              \'\', \'view\', \'${mode}\');"/>\n
      </div>\n
  </div>\n
\n
  </div>\n
  \n
</tal:block>\n


]]></unicode> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>text/html</string> </value>
        </item>
        <item>
            <key> <string>expand</string> </key>
            <value> <int>0</int> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>ERP5Site_viewHomeAreaRenderer</string> </value>
        </item>
        <item>
            <key> <string>output_encoding</string> </key>
            <value> <string>utf-8</string> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <unicode></unicode> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
