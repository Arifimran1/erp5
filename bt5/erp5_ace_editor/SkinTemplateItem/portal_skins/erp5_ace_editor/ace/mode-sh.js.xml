<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts83646621.24</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>mode-sh.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* ***** BEGIN LICENSE BLOCK *****\n
 * Distributed under the BSD license:\n
 *\n
 * Copyright (c) 2010, Ajax.org B.V.\n
 * All rights reserved.\n
 * \n
 * Redistribution and use in source and binary forms, with or without\n
 * modification, are permitted provided that the following conditions are met:\n
 *     * Redistributions of source code must retain the above copyright\n
 *       notice, this list of conditions and the following disclaimer.\n
 *     * Redistributions in binary form must reproduce the above copyright\n
 *       notice, this list of conditions and the following disclaimer in the\n
 *       documentation and/or other materials provided with the distribution.\n
 *     * Neither the name of Ajax.org B.V. nor the\n
 *       names of its contributors may be used to endorse or promote products\n
 *       derived from this software without specific prior written permission.\n
 * \n
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\n
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n
 *\n
 * ***** END LICENSE BLOCK ***** */\n
\n
define(\'ace/mode/sh\', [\'require\', \'exports\', \'module\' , \'ace/lib/oop\', \'ace/mode/text\', \'ace/tokenizer\', \'ace/mode/sh_highlight_rules\', \'ace/range\'], function(require, exports, module) {\n
\n
\n
var oop = require("../lib/oop");\n
var TextMode = require("./text").Mode;\n
var Tokenizer = require("../tokenizer").Tokenizer;\n
var ShHighlightRules = require("./sh_highlight_rules").ShHighlightRules;\n
var Range = require("../range").Range;\n
\n
var Mode = function() {\n
    this.HighlightRules = ShHighlightRules;\n
};\n
oop.inherits(Mode, TextMode);\n
\n
(function() {\n
\n
   \n
    this.lineCommentStart = "#";\n
\n
    this.getNextLineIndent = function(state, line, tab) {\n
        var indent = this.$getIndent(line);\n
\n
        var tokenizedLine = this.getTokenizer().getLineTokens(line, state);\n
        var tokens = tokenizedLine.tokens;\n
\n
        if (tokens.length && tokens[tokens.length-1].type == "comment") {\n
            return indent;\n
        }\n
\n
        if (state == "start") {\n
            var match = line.match(/^.*[\\{\\(\\[\\:]\\s*$/);\n
            if (match) {\n
                indent += tab;\n
            }\n
        }\n
\n
        return indent;\n
    };\n
\n
    var outdents = {\n
        "pass": 1,\n
        "return": 1,\n
        "raise": 1,\n
        "break": 1,\n
        "continue": 1\n
    };\n
\n
    this.checkOutdent = function(state, line, input) {\n
        if (input !== "\\r\\n" && input !== "\\r" && input !== "\\n")\n
            return false;\n
\n
        var tokens = this.getTokenizer().getLineTokens(line.trim(), state).tokens;\n
\n
        if (!tokens)\n
            return false;\n
        do {\n
            var last = tokens.pop();\n
        } while (last && (last.type == "comment" || (last.type == "text" && last.value.match(/^\\s+$/))));\n
\n
        if (!last)\n
            return false;\n
\n
        return (last.type == "keyword" && outdents[last.value]);\n
    };\n
\n
    this.autoOutdent = function(state, doc, row) {\n
\n
        row += 1;\n
        var indent = this.$getIndent(doc.getLine(row));\n
        var tab = doc.getTabString();\n
        if (indent.slice(-tab.length) == tab)\n
            doc.remove(new Range(row, indent.length-tab.length, row, indent.length));\n
    };\n
\n
}).call(Mode.prototype);\n
\n
exports.Mode = Mode;\n
});\n
\n
define(\'ace/mode/sh_highlight_rules\', [\'require\', \'exports\', \'module\' , \'ace/lib/oop\', \'ace/mode/text_highlight_rules\'], function(require, exports, module) {\n
\n
\n
var oop = require("../lib/oop");\n
var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;\n
\n
var reservedKeywords = exports.reservedKeywords = (\n
        \'!|{|}|case|do|done|elif|else|\'+\n
        \'esac|fi|for|if|in|then|until|while|\'+\n
        \'&|;|export|local|read|typeset|unset|\'+\n
        \'elif|select|set\'\n
    );\n
\n
var languageConstructs = exports.languageConstructs = (\n
    \'[|]|alias|bg|bind|break|builtin|\'+\n
     \'cd|command|compgen|complete|continue|\'+\n
     \'dirs|disown|echo|enable|eval|exec|\'+\n
     \'exit|fc|fg|getopts|hash|help|history|\'+\n
     \'jobs|kill|let|logout|popd|printf|pushd|\'+\n
     \'pwd|return|set|shift|shopt|source|\'+\n
     \'suspend|test|times|trap|type|ulimit|\'+\n
     \'umask|unalias|wait\'\n
);\n
\n
var ShHighlightRules = function() {\n
    var keywordMapper = this.createKeywordMapper({\n
        "keyword": reservedKeywords,\n
        "support.function.builtin": languageConstructs,\n
        "invalid.deprecated": "debugger"\n
    }, "identifier");\n
\n
    var integer = "(?:(?:[1-9]\\\\d*)|(?:0))";\n
\n
    var fraction = "(?:\\\\.\\\\d+)";\n
    var intPart = "(?:\\\\d+)";\n
    var pointFloat = "(?:(?:" + intPart + "?" + fraction + ")|(?:" + intPart + "\\\\.))";\n
    var exponentFloat = "(?:(?:" + pointFloat + "|" +  intPart + ")" + ")";\n
    var floatNumber = "(?:" + exponentFloat + "|" + pointFloat + ")";\n
    var fileDescriptor = "(?:&" + intPart + ")";\n
\n
    var variableName = "[a-zA-Z][a-zA-Z0-9_]*";\n
    var variable = "(?:(?:\\\\$" + variableName + ")|(?:" + variableName + "=))";\n
\n
    var builtinVariable = "(?:\\\\$(?:SHLVL|\\\\$|\\\\!|\\\\?))";\n
\n
    var func = "(?:" + variableName + "\\\\s*\\\\(\\\\))";\n
\n
    this.$rules = {\n
        "start" : [{\n
            token : "constant",\n
            regex : /\\\\./\n
        }, {\n
            token : ["text", "comment"],\n
            regex : /(^|\\s)(#.*)$/\n
        }, {\n
            token : "string",\n
            regex : \'"\',\n
            push : [{\n
                token : "constant.language.escape",\n
                regex : /\\\\(?:[$abeEfnrtv\\\\\'"]|x[a-fA-F\\d]{1,2}|u[a-fA-F\\d]{4}([a-fA-F\\d]{4})?|c.|\\d{1,3})/\n
            }, {\n
                token : "constant",\n
                regex : /\\$\\w+/\n
            }, {\n
                token : "string",\n
                regex : \'"\',\n
                next: "pop"\n
            }, {\n
                defaultToken: "string"\n
            }]\n
        }, {\n
            token : "variable.language",\n
            regex : builtinVariable\n
        }, {\n
            token : "variable",\n
            regex : variable\n
        }, {\n
            token : "support.function",\n
            regex : func\n
        }, {\n
            token : "support.function",\n
            regex : fileDescriptor\n
        }, {\n
            token : "string",           // \' string\n
            start : "\'", end : "\'"\n
        }, {\n
            token : "constant.numeric", // float\n
            regex : floatNumber\n
        }, {\n
            token : "constant.numeric", // integer\n
            regex : integer + "\\\\b"\n
        }, {\n
            token : keywordMapper,\n
            regex : "[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b"\n
        }, {\n
            token : "keyword.operator",\n
            regex : "\\\\+|\\\\-|\\\\*|\\\\*\\\\*|\\\\/|\\\\/\\\\/|~|<|>|<=|=>|=|!="\n
        }, {\n
            token : "paren.lparen",\n
            regex : "[\\\\[\\\\(\\\\{]"\n
        }, {\n
            token : "paren.rparen",\n
            regex : "[\\\\]\\\\)\\\\}]"\n
        } ]\n
    };\n
    \n
    this.normalizeRules();\n
};\n
\n
oop.inherits(ShHighlightRules, TextHighlightRules);\n
\n
exports.ShHighlightRules = ShHighlightRules;\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>7477</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
