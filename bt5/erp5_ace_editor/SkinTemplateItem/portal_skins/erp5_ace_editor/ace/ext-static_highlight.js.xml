<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts83646622.63</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>ext-static_highlight.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* ***** BEGIN LICENSE BLOCK *****\n
 * Distributed under the BSD license:\n
 *\n
 * Copyright (c) 2010, Ajax.org B.V.\n
 * All rights reserved.\n
 *\n
 * Redistribution and use in source and binary forms, with or without\n
 * modification, are permitted provided that the following conditions are met:\n
 *     * Redistributions of source code must retain the above copyright\n
 *       notice, this list of conditions and the following disclaimer.\n
 *     * Redistributions in binary form must reproduce the above copyright\n
 *       notice, this list of conditions and the following disclaimer in the\n
 *       documentation and/or other materials provided with the distribution.\n
 *     * Neither the name of Ajax.org B.V. nor the\n
 *       names of its contributors may be used to endorse or promote products\n
 *       derived from this software without specific prior written permission.\n
 *\n
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\n
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\n
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n
 *\n
 * ***** END LICENSE BLOCK ***** */\n
\n
define(\'ace/ext/static_highlight\', [\'require\', \'exports\', \'module\' , \'ace/edit_session\', \'ace/layer/text\', \'ace/config\', \'ace/lib/dom\'], function(require, exports, module) {\n
\n
\n
var EditSession = require("../edit_session").EditSession;\n
var TextLayer = require("../layer/text").Text;\n
var baseStyles = ".ace_static_highlight {\\\n
font-family: \'Monaco\', \'Menlo\', \'Ubuntu Mono\', \'Consolas\', \'source-code-pro\', \'Droid Sans Mono\', monospace;\\\n
font-size: 12px;\\\n
}\\\n
.ace_static_highlight .ace_gutter {\\\n
width: 25px !important;\\\n
display: block;\\\n
float: left;\\\n
text-align: right;\\\n
padding: 0 3px 0 0;\\\n
margin-right: 3px;\\\n
position: static !important;\\\n
}\\\n
.ace_static_highlight .ace_line { clear: both; }\\\n
.ace_static_highlight .ace_gutter-cell {\\\n
-moz-user-select: -moz-none;\\\n
-khtml-user-select: none;\\\n
-webkit-user-select: none;\\\n
user-select: none;\\\n
}";\n
var config = require("../config");\n
var dom = require("../lib/dom");\n
\n
exports.render = function(input, mode, theme, lineStart, disableGutter, callback) {\n
    var waiting = 0;\n
    var modeCache = EditSession.prototype.$modes;\n
    if (typeof theme == "string") {\n
        waiting++;\n
        config.loadModule([\'theme\', theme], function(m) {\n
            theme = m;\n
            --waiting || done();\n
        });\n
    }\n
\n
    if (typeof mode == "string") {\n
        waiting++;\n
        config.loadModule([\'mode\', mode], function(m) {\n
            if (!modeCache[mode]) modeCache[mode] = new m.Mode();\n
            mode = modeCache[mode];\n
            --waiting || done();\n
        });\n
    }\n
    function done() {\n
        var result = exports.renderSync(input, mode, theme, lineStart, disableGutter);\n
        return callback ? callback(result) : result;\n
    }\n
    return waiting || done();\n
};\n
\n
exports.renderSync = function(input, mode, theme, lineStart, disableGutter) {\n
    lineStart = parseInt(lineStart || 1, 10);\n
\n
    var session = new EditSession("");\n
    session.setUseWorker(false);\n
    session.setMode(mode);\n
\n
    var textLayer = new TextLayer(document.createElement("div"));\n
    textLayer.setSession(session);\n
    textLayer.config = {\n
        characterWidth: 10,\n
        lineHeight: 20\n
    };\n
\n
    session.setValue(input);\n
\n
    var stringBuilder = [];\n
    var length =  session.getLength();\n
\n
    for(var ix = 0; ix < length; ix++) {\n
        stringBuilder.push("<div class=\'ace_line\'>");\n
        if (!disableGutter)\n
            stringBuilder.push("<span class=\'ace_gutter ace_gutter-cell\' unselectable=\'on\'>" + (ix + lineStart) + "</span>");\n
        textLayer.$renderLine(stringBuilder, ix, true, false);\n
        stringBuilder.push("</div>");\n
    }\n
    var html = "<div class=\'" + theme.cssClass + "\'>" +\n
        "<div class=\'ace_static_highlight\'>" +\n
            stringBuilder.join("") +\n
        "</div>" +\n
    "</div>";\n
\n
    textLayer.destroy();\n
\n
    return {\n
        css: baseStyles + theme.cssText,\n
        html: html\n
    };\n
};\n
\n
\n
\n
exports.highlight = function(el, opts, callback) {\n
    var m = el.className.match(/lang-(\\w+)/);\n
    var mode = opts.mode || m && ("ace/mode/" + m[1]);\n
    if (!mode)\n
        return false;\n
    var theme = opts.theme || "ace/theme/textmate";\n
    \n
    var data = "";\n
    var nodes = [];\n
\n
    if (el.firstElementChild) {\n
        var textLen = 0;\n
        for (var i = 0; i < el.childNodes.length; i++) {\n
            var ch = el.childNodes[i];\n
            if (ch.nodeType == 3) {\n
                textLen += ch.data.length;\n
                data += ch.data;\n
            } else {\n
                nodes.push(textLen, ch);\n
            }\n
        }\n
    } else {\n
        data = dom.getInnerText(el);\n
    }\n
    \n
    exports.render(data, mode, theme, 1, true, function (highlighted) {\n
        dom.importCssString(highlighted.css, "ace_highlight");\n
        el.innerHTML = highlighted.html;\n
        var container = el.firstChild.firstChild\n
        for (var i = 0; i < nodes.length; i += 2) {\n
            var pos = highlighted.session.doc.indexToPosition(nodes[i])\n
            var node = nodes[i + 1];\n
            var lineEl = container.children[pos.row];\n
            lineEl && lineEl.appendChild(nodes[i+1]);\n
        }\n
        callback && callback();\n
    });\n
};\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>5794</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
