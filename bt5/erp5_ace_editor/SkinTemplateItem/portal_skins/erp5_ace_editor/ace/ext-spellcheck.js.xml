<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts83646622.64</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>ext-spellcheck.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string>define(\'ace/ext/spellcheck\', [\'require\', \'exports\', \'module\' , \'ace/lib/event\', \'ace/editor\', \'ace/config\'], function(require, exports, module) {\n
\n
var event = require("../lib/event");\n
\n
exports.contextMenuHandler = function(e){\n
    var host = e.target;\n
    var text = host.textInput.getElement();\n
    if (!host.selection.isEmpty())\n
        return;\n
    var c = host.getCursorPosition();\n
    var r = host.session.getWordRange(c.row, c.column);\n
    var w = host.session.getTextRange(r);\n
\n
    host.session.tokenRe.lastIndex = 0;\n
    if (!host.session.tokenRe.test(w))\n
        return;\n
    var PLACEHOLDER = "\\x01\\x01";\n
    var value = w + " " + PLACEHOLDER;\n
    text.value = value;\n
    text.setSelectionRange(w.length, w.length + 1);\n
    text.setSelectionRange(0, 0);\n
    text.setSelectionRange(0, w.length);\n
\n
    var afterKeydown = false;\n
    event.addListener(text, "keydown", function onKeydown() {\n
        event.removeListener(text, "keydown", onKeydown);\n
        afterKeydown = true;\n
    });\n
\n
    host.textInput.setInputHandler(function(newVal) {\n
        console.log(newVal , value, text.selectionStart, text.selectionEnd)\n
        if (newVal == value)\n
            return \'\';\n
        if (newVal.lastIndexOf(value, 0) === 0)\n
            return newVal.slice(value.length);\n
        if (newVal.substr(text.selectionEnd) == value)\n
            return newVal.slice(0, -value.length);\n
        if (newVal.slice(-2) == PLACEHOLDER) {\n
            var val = newVal.slice(0, -2);\n
            if (val.slice(-1) == " ") {\n
                if (afterKeydown)\n
                    return val.substring(0, text.selectionEnd);\n
                val = val.slice(0, -1);\n
                host.session.replace(r, val);\n
                return "";\n
            }\n
        }\n
\n
        return newVal;\n
    });\n
};\n
var Editor = require("../editor").Editor;\n
require("../config").defineOptions(Editor.prototype, "editor", {\n
    spellcheck: {\n
        set: function(val) {\n
            var text = this.textInput.getElement();\n
            text.spellcheck = !!val;\n
            if (!val)\n
                this.removeListener("nativecontextmenu", exports.contextMenuHandler);\n
            else\n
                this.on("nativecontextmenu", exports.contextMenuHandler);\n
        },\n
        value: true\n
    }\n
});\n
\n
});\n
\n
</string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>2264</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
