<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="File" module="OFS.Image"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>_EtagSupport__etag</string> </key>
            <value> <string>ts83646620.18</string> </value>
        </item>
        <item>
            <key> <string>__name__</string> </key>
            <value> <string>mode-vhdl.js</string> </value>
        </item>
        <item>
            <key> <string>content_type</string> </key>
            <value> <string>application/javascript</string> </value>
        </item>
        <item>
            <key> <string>data</string> </key>
            <value> <string encoding="cdata"><![CDATA[

/* ***** BEGIN LICENSE BLOCK *****\r\n
 * Distributed under the BSD license:\r\n
 *\r\n
 * Copyright (c) 2013, Ajax.org B.V.\r\n
 * All rights reserved.\r\n
 * \r\n
 * Redistribution and use in source and binary forms, with or without\r\n
 * modification, are permitted provided that the following conditions are met:\r\n
 *     * Redistributions of source code must retain the above copyright\r\n
 *       notice, this list of conditions and the following disclaimer.\r\n
 *     * Redistributions in binary form must reproduce the above copyright\r\n
 *       notice, this list of conditions and the following disclaimer in the\r\n
 *       documentation and/or other materials provided with the distribution.\r\n
 *     * Neither the name of Ajax.org B.V. nor the\r\n
 *       names of its contributors may be used to endorse or promote products\r\n
 *       derived from this software without specific prior written permission.\r\n
 * \r\n
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND\r\n
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n
 * DISCLAIMED. IN NO EVENT SHALL AJAX.ORG B.V. BE LIABLE FOR ANY\r\n
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\r\n
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\r\n
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n
 *\r\n
 * ***** END LICENSE BLOCK ***** */\r\n
define(\'ace/mode/vhdl\', [\'require\', \'exports\', \'module\' , \'ace/lib/oop\', \'ace/mode/text\', \'ace/tokenizer\', \'ace/mode/vhdl_highlight_rules\', \'ace/range\'], function(require, exports, module) {\r\n
\r\n
\r\n
var oop = require("../lib/oop");\r\n
var TextMode = require("./text").Mode;\r\n
var Tokenizer = require("../tokenizer").Tokenizer;\r\n
var VHDLHighlightRules = require("./vhdl_highlight_rules").VHDLHighlightRules;\r\n
var Range = require("../range").Range;\r\n
\r\n
var Mode = function() {\r\n
    this.HighlightRules = VHDLHighlightRules;\r\n
};\r\n
oop.inherits(Mode, TextMode);\r\n
\r\n
(function() {\r\n
\r\n
    this.lineCommentStart = "--";\r\n
\r\n
}).call(Mode.prototype);\r\n
\r\n
exports.Mode = Mode;\r\n
\r\n
});\n
define(\'ace/mode/vhdl_highlight_rules\', [\'require\', \'exports\', \'module\' , \'ace/lib/oop\', \'ace/mode/text_highlight_rules\'], function(require, exports, module) {\n
\n
\n
var oop = require("../lib/oop");\n
var TextHighlightRules = require("./text_highlight_rules").TextHighlightRules;\n
\n
var VHDLHighlightRules = function() {\n
\n
\n
    \n
    var keywords = "access|after|ailas|all|architecture|assert|attribute|"+\n
                   "begin|block|buffer|bus|case|component|configuration|"+\n
                   "disconnect|downto|else|elsif|end|entity|file|for|function|"+\n
                   "generate|generic|guarded|if|impure|in|inertial|inout|is|"+\n
                   "label|linkage|literal|loop|mapnew|next|of|on|open|"+\n
                   "others|out|port|process|pure|range|record|reject|"+\n
                   "report|return|select|shared|subtype|then|to|transport|"+\n
                   "type|unaffected|united|until|wait|when|while|with";\n
    \n
    var storageType = "bit|bit_vector|boolean|character|integer|line|natural|"+\n
                      "positive|real|register|severity|signal|signed|"+\n
                      "std_logic|std_logic_vector|string||text|time|unsigned|"+\n
                      "variable";\n
    \n
    var storageModifiers = "array|constant";\n
    \n
    var keywordOperators = "abs|and|mod|nand|nor|not|rem|rol|ror|sla|sll|sra"+\n
                           "srl|xnor|xor";\n
    \n
    var builtinConstants = (\n
        "true|false|null"\n
    );\n
\n
\n
    var keywordMapper = this.createKeywordMapper({\n
        "keyword.operator": keywordOperators,\n
        "keyword": keywords,\n
        "constant.language": builtinConstants,\n
        "storage.modifier": storageModifiers,\n
        "storage.type": storageType\n
    }, "identifier", true);\n
\n
    this.$rules = {\n
        "start" : [ {\n
            token : "comment",\n
            regex : "--.*$"\n
        }, {\n
            token : "string",           // " string\n
            regex : \'".*?"\'\n
        }, {\n
            token : "string",           // \' string\n
            regex : "\'.*?\'"\n
        }, {\n
            token : "constant.numeric", // float\n
            regex : "[+-]?\\\\d+(?:(?:\\\\.\\\\d*)?(?:[eE][+-]?\\\\d+)?)?\\\\b"\n
        }, {\n
            token : "keyword", // pre-compiler directives\n
            regex : "\\\\s*(?:library|package|use)\\\\b",\n
        }, {\n
            token : keywordMapper,\n
            regex : "[a-zA-Z_$][a-zA-Z0-9_$]*\\\\b"\n
        }, {\n
            token : "keyword.operator",\n
            regex : "&|\\\\*|\\\\+|\\\\-|\\\\/|<|=|>|\\\\||=>|\\\\*\\\\*|:=|\\\\/=|>=|<=|<>" \n
        }, {\n
              token : "punctuation.operator",\n
              regex : "\\\\\'|\\\\:|\\\\,|\\\\;|\\\\."\n
        },{\n
            token : "paren.lparen",\n
            regex : "[[(]"\n
        }, {\n
            token : "paren.rparen",\n
            regex : "[\\\\])]"\n
        }, {\n
            token : "text",\n
            regex : "\\\\s+"\n
        } ],\n
\n
       \n
    };\n
};\n
\n
oop.inherits(VHDLHighlightRules, TextHighlightRules);\n
\n
exports.VHDLHighlightRules = VHDLHighlightRules;\n
});\n


]]></string> </value>
        </item>
        <item>
            <key> <string>precondition</string> </key>
            <value> <string></string> </value>
        </item>
        <item>
            <key> <string>size</string> </key>
            <value> <int>5333</int> </value>
        </item>
        <item>
            <key> <string>title</string> </key>
            <value> <string></string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
